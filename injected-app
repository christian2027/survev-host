import { i as s, $ as j, C as f, T as x, S as y, G as r, a as Z, b as q, R as M, c as E, P as h, d as R, B as P, e as i, f as S, g as B, s as u, A as V } from "./vendor-modules-CL-NS4Gd.js";
import { G as w, a as L, u as t, m as e, v, C as m, c as T, P as C, E as l, b as d, I as D, d as G, M as a, e as X0, f as X1, O as X2, g as X3, h as X4, i as X5, j as X6, B as X7, k as X8, l as X9, A as XX, n as Xp, H as Xb, o as XI, T as Xj, R as Xf, S as Xx, p as Xy, D as Xg, q as XQ, J as XZ, r as Xq, s as XM, t as XE, W as XN, w as Xn, x as Xh, y as XR, z as XP, F as XA, K as XJ, U as XS, L as XB, N as Xc, Q as Xu, V as XV, X as Xz, Y as Xo, Z as Xw, _ as XO, $ as XL, a0 as Xv, a1 as XK, a2 as Xm } from "./shared-Xqn1Vbd_.js";
(function () {
  const p = document.createElement("link").relList;
  if (p && p.supports && p.supports("modulepreload")) {
    return;
  }
  for (const XY of document.querySelectorAll("link[rel=\"modulepreload\"]")) {
    XT(XY);
  }
  new MutationObserver(XC => {
    for (const Xl of XC) {
      if (Xl.type === "childList") {
        for (const Xd of Xl.addedNodes) {
          if (Xd.tagName === "LINK" && Xd.rel === "modulepreload") {
            XT(Xd);
          }
        }
      }
    }
  }).observe(document, {
    childList: true,
    subtree: true
  });
  function b(XC) {
    const Xl = {};
    if (XC.integrity) {
      Xl.integrity = XC.integrity;
    }
    if (XC.referrerPolicy) {
      Xl.referrerPolicy = XC.referrerPolicy;
    }
    if (XC.crossOrigin === "use-credentials") {
      Xl.credentials = "include";
    } else if (XC.crossOrigin === "anonymous") {
      Xl.credentials = "omit";
    } else {
      Xl.credentials = "same-origin";
    }
    return Xl;
  }
  function XT(XC) {
    if (XC.ep) {
      return;
    }
    XC.ep = true;
    const Xl = b(XC);
    fetch(XC.href, Xl);
  }
})();
function Or() {
  return new URLSearchParams(self.location.search).has("crazygames");
}
async function Br() {
  return new Promise(function (p, b) {
    const XT = document.createElement("script");
    XT.src = "https://sdk.crazygames.com/crazygames-sdk-v3.js";
    document.head.appendChild(XT);
    if (s.phone) {
      document.getElementById("btn-hamburger").style.display = "none";
    }
    document.getElementById("crazygamesDiscord").style.display = "block";
    XT.addEventListener("load", async function () {
      await window.CrazyGames.SDK.init();
      It("survev-io_728x90", 728, 90);
      setInterval(() => {
        const XY = document.getElementById("start-menu-wrapper");
        if (getComputedStyle(XY).display != "none") {
          It("survev-io_728x90", 728, 90);
        }
      }, 60000);
      p();
    });
    XT.addEventListener("error", function () {
      console.log("CrazyGames SDK load error");
      b();
    });
  });
}
async function It(p, b, XT) {
  return new Promise(async function (XY, XC) {
    try {
      await window.CrazyGames.SDK.banner.requestBanner({
        id: p,
        width: b,
        height: XT
      });
      XY();
    } catch (Xl) {
      console.log("Banner request error", Xl);
      XC();
    }
  });
}
function rt(p) {
  const b = {
    adFinished: p,
    adError: p,
    adStarted: () => console.log("Start midgame ad")
  };
  window.CrazyGames.SDK.ad.requestAd("midgame", b);
}
function Oi(p) {
  let b = p.target;
  while (b && b !== document.body) {
    const XT = getComputedStyle(b).overflowY;
    if (XT === "auto" || XT === "scroll") {
      return;
    }
    b = b.parentElement;
  }
  p.preventDefault();
}
window.addEventListener("wheel", Oi, {
  passive: false
});
window.addEventListener("touchmove", Oi, {
  passive: false
});
document.addEventListener("keydown", p => {
  if (["ArrowUp", "ArrowDown", "ArrowLeft", "ArrowRight", " "].includes(p.key)) {
    const b = p.target;
    const XT = ["INPUT", "TEXTAREA", "SELECT", "BUTTON"];
    if (p.key === " " && (XT.includes(b.tagName) || b.isContentEditable)) {
      return;
    }
    p.preventDefault();
  }
});
let lt;
async function qr() {
  return new Promise(function (p) {
    const b = document.createElement("script");
    b.src = "https://api.gamemonetize.com/sdk.js";
    b.id = "gamemonetize-sdk";
    document.head.appendChild(b);
    document.getElementById("crazygamesDiscord").style.display = "block";
    window.SDK_OPTIONS = {
      gameId: "q9xrmuceu30pey8llzop5cr0p1p2fbx9",
      onEvent: function (XT) {
        switch (XT.name) {
          case "SDK_GAME_PAUSE":
            break;
          case "SDK_GAME_START":
            if (lt) {
              lt();
            }
            break;
          case "SDK_READY":
            console.log("Successfully loaded GameMonetize SDK");
            break;
        }
      }
    };
    p();
  });
}
function at(p) {
  lt = p;
  if (window.sdk && window.sdk.showBanner) {
    window.sdk.showBanner();
  } else {
    lt();
  }
}
function jr() {
  if (window !== window.parent) {
    if (new URL(document.referrer).origin.includes("gamemonetize")) {
      return true;
    }
  } else if (window.location.href.includes("gamemonetize")) {
    return true;
  }
  return false;
}
async function Fr() {
  return new Promise(function (p) {
    const b = document.createElement("script");
    b.src = "https://game-cdn.poki.com/scripts/v2/poki-sdk.js";
    document.head.appendChild(b);
    document.getElementById("crazygamesDiscord").style.display = "block";
    b.addEventListener("load", async function () {
      window.PokiSDK.init().then(() => {
        console.log("Poki SDK successfully initialized");
      }).catch(() => {
        console.log("Initialized, something went wrong, load you game anyway");
      });
      p();
    });
  });
}
function st(p) {
  window.PokiSDK.commercialBreak(() => {}).then(() => {
    p();
  });
}
function Gr() {
  return window !== window.parent && !!new URL(document.referrer).origin.includes("poki");
}
const Vr = "https://surviv.mathsiscoolfun.com";
const Qe = {
  resolveUrl: function (p) {
    return Vr + p;
  },
  resolveRoomHost: function () {
    return "surviv.mathsiscoolfun.com";
  }
};
const Re = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function (p) {
  return typeof p;
} : function (p) {
  if (p && typeof Symbol == "function" && p.constructor === Symbol && p !== Symbol.prototype) {
    return "symbol";
  } else {
    return typeof p;
  }
};
const Yt = Array.prototype.slice;
const Jt = Object.keys;
const Ur = function () {
  return Object.prototype.toString.call(arguments);
}() == "[object Arguments]";
function Hr(p) {
  return Object.prototype.toString.call(p) == "[object Arguments]";
}
function Wr(p) {
  return p && (typeof p === "undefined" ? "undefined" : Re(p)) == "object" && typeof p.length == "number" && Object.prototype.hasOwnProperty.call(p, "callee") && !Object.prototype.propertyIsEnumerable.call(p, "callee") || false;
}
const Kt = Ur ? Hr : Wr;
const Mt = function (p, b, XT) {
  XT ||= {};
  if (p === b) {
    return true;
  } else if (p instanceof Date && b instanceof Date) {
    return p.getTime() === b.getTime();
  } else if (!p || !b || (typeof p === "undefined" ? "undefined" : Re(p)) != "object" && (typeof b === "undefined" ? "undefined" : Re(b)) != "object") {
    if (XT.strict) {
      return p === b;
    } else {
      return p == b;
    }
  } else {
    return $r(p, b, XT);
  }
};
function Xt(p) {
  return p == null;
}
function ei(p) {
  return !!p && (typeof p === "undefined" ? "undefined" : Re(p)) === "object" && typeof p.length == "number" && typeof p.copy == "function" && typeof p.slice == "function" && (!(p.length > 0) || typeof p[0] == "number");
}
function $r(p, b, XT) {
  let XY;
  let XC;
  if (Xt(p) || Xt(b) || p.prototype !== b.prototype) {
    return false;
  }
  if (Kt(p)) {
    if (Kt(b)) {
      p = Yt.call(p);
      b = Yt.call(b);
      return Mt(p, b, XT);
    } else {
      return false;
    }
  }
  if (ei(p)) {
    if (!ei(b) || p.length !== b.length) {
      return false;
    }
    for (XY = 0; XY < p.length; XY++) {
      if (p[XY] !== b[XY]) {
        return false;
      }
    }
    return true;
  }
  let Xl;
  let Xd;
  try {
    Xl = Jt(p);
    Xd = Jt(b);
  } catch {
    return false;
  }
  if (Xl.length != Xd.length) {
    return false;
  }
  Xl.sort();
  Xd.sort();
  XY = Xl.length - 1;
  for (; XY >= 0; XY--) {
    if (Xl[XY] != Xd[XY]) {
      return false;
    }
  }
  for (XY = Xl.length - 1; XY >= 0; XY--) {
    XC = Xl[XY];
    if (!Mt(p[XC], b[XC], XT)) {
      return false;
    }
  }
  return (typeof p === "undefined" ? "undefined" : Re(p)) === (typeof b === "undefined" ? "undefined" : Re(b));
}
var Bi = (p => {
  p[p.New = 0] = "New";
  p[p.Confirmed = 1] = "Confirmed";
  p[p.Ackd = 2] = "Ackd";
  return p;
})(Bi || {});
const le = {
  ItemStatus: Bi,
  validate: function (p) {
    const b = function (Xd, Xk, XU) {
      const XW = w[Xk];
      if (XW && XW.type == Xd) {
        return Xk;
      } else {
        return XU;
      }
    };
    const XT = function (Xd, Xk) {
      const XU = parseFloat(Xd);
      if (Number.isNaN(XU)) {
        return Xk;
      } else {
        return XU;
      }
    };
    const XY = {
      crosshair: {
        type: "",
        color: 16777215,
        size: 1,
        stroke: 0
      },
      emotes: [],
      ...p
    };
    const XC = {
      outfit: b("outfit", XY.outfit, "outfitBase"),
      melee: b("melee", XY.melee, "fists"),
      heal: b("heal_effect", XY.heal, "heal_basic"),
      boost: b("boost_effect", XY.boost, "boost_basic"),
      player_icon: b("emote", XY.player_icon, ""),
      crosshair: {
        type: b("crosshair", XY.crosshair.type, "crosshair_default"),
        color: parseInt(XY.crosshair.color) || 16777215,
        size: XT(XY.crosshair.size, 1).toFixed(2),
        stroke: XT(XY.crosshair.stroke, 0).toFixed(2)
      },
      emotes: []
    };
    const Xl = L.defaultEmoteLoadout.slice();
    for (let Xd = 0; Xd < L.EmoteSlot.Count; Xd++) {
      const Xk = Xd < XY.emotes.length ? XY.emotes[Xd] : "";
      XC.emotes.push(b("emote", Xk, Xl[Xd]));
    }
    return XC;
  },
  defaultLoadout: function () {
    return le.validate({});
  },
  modified: function (p, b) {
    return !Mt(p, b);
  },
  getUserAvailableItems: function (p) {
    const b = [];
    const XT = w.unlock_default;
    for (let XY = 0; XY < XT.unlocks.length; XY++) {
      const XC = XT.unlocks[XY];
      b.push({
        type: XC,
        source: "unlock_default",
        timeAcquired: 0,
        ackd: le.ItemStatus.Ackd
      });
    }
    for (let Xl = 0; Xl < p.length; Xl++) {
      b.push(p[Xl]);
    }
    return b;
  }
};
function Qr(p, b, XT) {
  if (typeof b == "function") {
    XT = b;
    b = null;
  }
  const XY = {
    url: Qe.resolveUrl(p),
    type: "POST",
    timeout: 10000,
    headers: {
      "X-Requested-With": "XMLHttpRequest"
    }
  };
  if (b) {
    XY.contentType = "application/json; charset=utf-8";
    XY.data = JSON.stringify(b);
  }
  j.ajax(XY).done(XC => {
    XT(null, XC);
  }).fail(XC => {
    XT(XC);
  });
}
class Zr {
  constructor(p) {
    this.config = p;
    window.login = () => {
      this.login();
    };
    window.deleteAccount = () => {
      this.deleteAccount();
    };
    window.deleteItems = () => {
      this.ajaxRequest("/api/user/delete_items", {}, (b, XT) => {
        this.loadProfile();
      });
    };
    window.unlock = b => {
      console.log("Unlocking " + b);
      this.unlock(b);
    };
    window.setQuest = (b, XT = 0) => {
      this.ajaxRequest("/api/user/set_quest", {
        questType: b,
        idx: XT
      }, (XY, XC) => {
        this.getPass();
      });
    };
    window.refreshQuest = b => {
      this.refreshQuest(b);
    };
    window.setPassUnlock = b => {
      this.setPassUnlock(b);
    };
  }
  events = {};
  requestsInFlight = 0;
  loggingIn = false;
  loggedIn = false;
  profile = {
    linkedTwitch: false,
    linkedDiscord: false,
    usernameSet: false,
    username: "",
    slug: "",
    usernameChangeTime: 0
  };
  loadout = le.defaultLoadout();
  loadoutPriv = "";
  items = [];
  quests = [];
  questPriv = "";
  pass = {};
  ajaxRequest(p, b, XT) {
    if (typeof b == "function") {
      XT = b;
      b = null;
    }
    this.requestsInFlight++;
    this.emit("request", this);
    Qr(p, b, (XY, XC) => {
      XT(XY, XC);
      this.requestsInFlight--;
      this.emit("request", this);
      if (this.requestsInFlight == 0) {
        this.emit("requestsComplete");
      }
    });
  }
  addEventListener(p, b) {
    this.events[p] = this.events[p] || [];
    this.events[p].push(b);
  }
  removeEventListener(p, b) {
    const XT = this.events[p] || [];
    for (let XY = XT.length - 1; XY >= 0; XY--) {
      if (XT[XY] == b) {
        XT.splice(XY, 1);
      }
    }
  }
  emit(p, ...b) {
    const XT = (this.events[p] || []).slice(0);
    for (let XY = 0; XY < XT.length; XY++) {
      XT[XY](...b);
    }
  }
  init() {
    if (this.config.get("sessionCookie")) {
      this.setSessionCookies();
    }
    this.login();
  }
  setSessionCookies() {
    this.clearSessionCookies();
    document.cookie = this.config.get("sessionCookie");
    document.cookie = "app-data=" + Date.now();
  }
  clearSessionCookies() {
    document.cookie = "app-sid=;expires=Thu, 01 Jan 1970 00:00:01 GMT;";
    document.cookie = "app-data=;expires=Thu, 01 Jan 1970 00:00:01 GMT;";
  }
  loginWithAccessToken(p, b, XT) {
    b((XY, XC) => {
      if (XY) {
        this.emit("error", "login_failed");
        return;
      }
      const Xl = XT(XC);
      this.ajaxRequest(p + "?access_token=" + Xl, (Xd, Xk) => {
        if (Xd) {
          this.emit("error", "login_failed");
        } else {
          this.config.set("sessionCookie", Xk.cookie);
          this.setSessionCookies();
          this.login();
        }
      });
    });
  }
  login() {
    this.loadProfile();
    this.getPass(true);
  }
  logout() {
    this.config.set("profile", null);
    this.config.set("sessionCookie", null);
    this.ajaxRequest("/api/user/logout", (p, b) => {
      window.location.reload();
    });
  }
  loadProfile() {
    this.loggingIn = !this.loggedIn;
    this.ajaxRequest("/api/user/profile", (b, XT) => {
      const XY = this.loggingIn;
      this.loggingIn = false;
      this.loggedIn = false;
      this.profile = {};
      this.loadoutPriv = "";
      this.items = [];
      if (b) {
        console.error("account", "load_profile_error");
      } else if (XT.banned) {
        this.emit("error", "account_banned", XT.reason);
      } else if (XT.success) {
        this.loggedIn = true;
        this.profile = XT.profile;
        this.loadoutPriv = XT.loadoutPriv;
        this.items = XT.items;
        const XC = this.config.get("profile") || {
          slug: ""
        };
        XC.slug = XT.profile.slug;
        this.config.set("profile", XC);
      }
      if (!this.loggedIn) {
        this.config.set("sessionCookie", null);
      }
      if (XY && this.loggedIn) {
        this.emit("login", this);
      }
      this.emit("items", this.items);
    });
    const p = this.config.get("loadout");
    this.loadout = t.mergeDeep({}, le.defaultLoadout(), p);
    this.emit("loadout", this.loadout);
  }
  resetStats() {
    this.ajaxRequest("/api/user/reset_stats", (p, b) => {
      if (p) {
        console.error("account", "reset_stats_error");
        this.emit("error", "server_error");
      }
    });
  }
  deleteAccount() {
    this.ajaxRequest("/api/user/delete", (p, b) => {
      if (p) {
        console.error("account", "delete_error");
        this.emit("error", "server_error");
        return;
      }
      this.config.set("profile", null);
      this.config.set("sessionCookie", null);
      window.location.reload();
    });
  }
  setUsername(p, b) {
    this.ajaxRequest("/api/user/username", {
      username: p
    }, (XT, XY) => {
      if (XT) {
        console.error("account", "set_username_error");
        b(XT);
        return;
      }
      if (XY.result == "success") {
        this.loadProfile();
        b();
      } else {
        b(XY.result);
      }
    });
  }
  setLoadout(p) {
    this.loadout;
    this.loadout = p;
    this.emit("loadout", this.loadout);
    this.config.set("loadout", p);
  }
  setItemStatus(p, b) {
    if (b.length != 0) {
      for (let XT = 0; XT < b.length; XT++) {
        const XY = this.items.find(XC => XC.type == b[XT]);
        if (XY) {
          XY.status = Math.max(XY.status, p);
        }
      }
      this.emit("items", this.items);
      this.ajaxRequest("/api/user/set_item_status", {
        status: p,
        itemTypes: b
      }, (XC, Xl) => {
        if (XC) {
          console.error("account", "set_item_status_error");
        }
      });
    }
  }
  unlock(p) {
    this.ajaxRequest("/api/user/unlock", {
      unlockType: p
    }, (b, XT) => {
      if (b || !XT.success) {
        console.error("account", "unlock_error");
        this.emit("error", "server_error");
        return;
      }
      this.items = XT.items;
      this.emit("items", this.items);
    });
  }
  getPass(p) {}
  setPassUnlock(p) {
    this.ajaxRequest("/api/user/set_pass_unlock", {
      unlockType: p
    }, (b, XT) => {
      if (b || !XT.success) {
        console.error("account", "set_pass_unlock_error");
      } else {
        this.getPass(false);
      }
    });
  }
  refreshQuest(p) {
    this.ajaxRequest("/api/user/refresh_quest", {
      idx: p
    }, (b, XT) => {
      if (b) {
        console.error("account", "refresh_quest_error");
        return;
      }
      if (XT.success) {
        this.getPass(false);
      } else {
        this.emit("pass", this.pass, this.quests, false);
      }
    });
  }
}
class Yr {
  introMusic = true;
  soundUpdateThrottle = 0;
  tracks;
  trackToIdx;
  initTime;
  constructor() {
    this.tracks = [];
    this.trackToIdx = {};
    const p = (b, XT, XY, XC) => {
      this.tracks.push({
        name: b,
        sound: XT,
        channel: XY,
        immediateMode: XC,
        inst: null,
        instSound: "",
        filter: "",
        weight: 0,
        volume: 0
      });
      this.trackToIdx[b] = this.tracks.length - 1;
    };
    p("music", "menu_music", "music", false);
    p("wind", "ambient_wind_01", "ambient", false);
    p("river", "ambient_stream_01", "ambient", false);
    p("waves", "ambient_waves_01", "ambient", false);
    p("interior_0", "", "ambient", true);
    p("interior_1", "", "ambient", true);
    this.initTime = Date.now();
  }
  getTrack(p) {
    return this.tracks[this.trackToIdx[p]];
  }
  onGameStart() {
    this.introMusic = false;
    for (let p = 0; p < this.tracks.length; p++) {
      this.tracks[p].weight = 0;
    }
    this.getTrack("wind").weight = 1;
    this.soundUpdateThrottle = 0;
  }
  onGameComplete(p) {
    for (let b = 0; b < this.tracks.length; b++) {
      const XT = this.tracks[b];
      if (XT.immediateMode) {
        XT.weight = 0;
      }
    }
    this.getTrack("river").weight = 0;
  }
  update(p, b, XT) {
    let XY = false;
    this.soundUpdateThrottle -= p;
    if (this.soundUpdateThrottle <= 0) {
      this.soundUpdateThrottle = 0.2;
      XY = true;
    }
    let XC = 0;
    for (let Xl = this.tracks.length - 1; Xl >= 0; Xl--) {
      const Xd = this.tracks[Xl];
      if (!Xd.inst && Xd.sound && b.isSoundLoaded(Xd.sound, Xd.channel)) {
        console.log("Start track", Xd.sound, Xd.channel);
        Xd.inst = b.playSound(Xd.sound, {
          channel: Xd.channel,
          startSilent: true,
          loop: Xd.channel == "ambient",
          forceStart: true,
          filter: Xd.filter,
          forceFilter: true
        });
        Xd.instSound = Xd.sound;
        if (Xl == 0) {
          console.log("Play delay", Date.now() - this.initTime);
        }
      }
      if (Xd.inst && XY) {
        const Xk = Xd.weight * (1 - XC);
        XC += Xk;
        Xd.volume = Xk;
        const XU = b.getSoundDefVolume(Xd.sound, Xd.channel);
        b.setVolume(Xd.inst, Xk * XU, Xd.channel);
      }
      if (Xd.inst && (!Xd.sound && e.eqAbs(b.getVolume(Xd.inst), 0) || Xd.sound && Xd.sound != Xd.instSound)) {
        console.log("Stop track", Xd.name, Xd.channel);
        b.stopSound(Xd.inst);
        Xd.inst = null;
        Xd.instSound = "";
      }
      if (Xd.immediateMode) {
        Xd.sound = "";
        Xd.weight = 0;
      }
    }
    if (this.introMusic) {
      const XW = this.getTrack("music");
      if (XW.inst) {
        XW.weight = e.min(XW.weight + p, 1);
      }
      const XD = this.getTrack("wind");
      if (XW.inst && !b.isSoundPlaying(XW.inst)) {
        XD.weight = e.min(XD.weight + p, 1);
      }
    }
  }
}
const Ve = window.navigator.userAgent.includes("iPod") || window.navigator.userAgent.includes("iPhone") || window.navigator.userAgent.includes("iPad");
let qi = null;
let ji = false;
function Jr(p) {
  try {
    p.createGain().disconnect(p.destination);
    return false;
  } catch {
    return true;
  }
}
const De = 128;
class ti {
  constructor(p) {
    this.ctx = p;
    this.volumeOld = this.volume;
    this.panOld = this.pan;
    this.gainNode = this.ctx.createGain();
    this.pannerNode = this.ctx.createPanner();
    this.pannerNode.panningModel = "equalpower";
    this.gainNode.connect(this.pannerNode);
  }
  sound = null;
  id = 0;
  volume = 1;
  volumeOld;
  pan = 0;
  panOld;
  ambient;
  sourceNode = null;
  destination = null;
  paramEvents = 0;
  gainNode;
  pannerNode;
  stopTime = 0;
  stopping = false;
  playState = "playFinished";
  setGain(p) {
    if (!this.stopping) {
      if (Ve) {
        this.gainNode.gain.value = p;
      } else {
        this.gainNode.gain.setTargetAtTime(p, this.ctx.currentTime, 0.02);
        ++this.paramEvents;
      }
    }
  }
  setPan(p) {
    if (!this.stopping) {
      this.pannerNode.setPosition(p, 0, -0.5);
      this.paramEvents += 3;
    }
  }
  start(p, b, XT, XY, XC, Xl, Xd, Xk, XU) {
    this.volume = this.volumeOld = XT;
    this.pan = this.panOld = XY;
    this.ambient = Xk;
    this.stopping = false;
    this.destination = p;
    this.sourceNode = this.ctx.createBufferSource();
    this.sourceNode.buffer = b;
    this.sourceNode.connect(this.gainNode);
    this.pannerNode.connect(this.destination);
    this.sourceNode.loop = XC;
    if (Ve) {
      this.gainNode.gain.value = XT;
    } else {
      this.gainNode.gain.setValueAtTime(XT, this.ctx.currentTime);
      ++this.paramEvents;
    }
    this.setPan(XY);
    if (this.sourceNode.detune) {
      this.sourceNode.detune.value = XU;
    }
    this.sourceNode.start(this.ctx.currentTime + Xl, Xd);
    this.stopTime = XC ? 1e+100 : this.ctx.currentTime + Xl + b.duration - Xd;
    this.playState = "playSucceeded";
  }
  stop() {
    if (!this.stopping) {
      this.setGain(0);
      this.stopTime = this.ctx.currentTime + 0.1;
      this.stopping = true;
      this.playState = "playInterrupted";
    }
  }
  disconnect() {
    this.sound?.instances.splice(this.sound?.instances.indexOf(this), 1);
    this.sound = null;
    this.sourceNode?.stop(0);
    this.sourceNode?.disconnect(this.gainNode);
    this.pannerNode?.disconnect(this.destination);
    if (Ve) {
      try {
        this.sourceNode.buffer = qi;
      } catch {}
    }
    this.destination = null;
    this.sourceNode = null;
    this.playState = "playFinished";
  }
  reallocNodes() {
    this.gainNode.disconnect(this.pannerNode);
    this.gainNode = this.ctx.createGain();
    this.pannerNode = this.ctx.createPanner();
    this.pannerNode.panningModel = "equalpower";
    this.gainNode.connect(this.pannerNode);
    this.paramEvents = 0;
  }
}
let mt = null;
class ii {
  constructor(p) {
    this.instance = p;
    this.id = p.id;
  }
  id;
  check(p) {
    if (this.id != this.instance.id) {
      this.instance = mt;
      this.id = mt?.id;
    }
  }
  stop() {
    this.check();
    this.instance.stop();
  }
  get volume() {
    this.check();
    return this.instance.volume;
  }
  set volume(p) {
    this.check(true);
    this.instance.volume = p;
  }
  get pan() {
    this.check();
    return this.instance.pan;
  }
  set pan(p) {
    this.check(true);
    this.instance.pan = p;
  }
  get playState() {
    this.check();
    return this.instance.playState;
  }
}
let Ie = null;
class Kr {
  constructor(p, b, XT, XY, XC) {
    this.ctx = p;
    this.inNode = b;
    this.outNode = XT;
    this.name = XY;
    this.params = XC;
    this.volume = XC.volume ?? 1;
    this.echoVolume = XC.echoVolume || 0;
    this.echoDelay = XC.echoDelay || 0;
    this.echoLowPass = XC.echoLowPass || 3000;
    this.stereoSpread = XC.stereoSpread || 0;
    if (!ji) {
      const Xl = this.ctx.createGain();
      this.inNode.connect(Xl);
      this.inNode = Xl;
    }
    this.convolverNode = this.ctx.createConvolver();
    if (this.echoVolume) {
      this.echoLowPassNode = this.ctx.createBiquadFilter();
      this.echoLowPassNode.type = "lowpass";
      this.echoLowPassNode.frequency.setValueAtTime(this.echoLowPass, 0);
      this.echoLowPassNode.Q.setValueAtTime(-3.0102999566398125, 0);
      this.echoDelayNode = this.ctx.createDelay(this.echoDelay || 0.01);
      this.echoDelayNode.delayTime.setValueAtTime(this.echoDelay, 0);
    }
    if (this.stereoSpread) {
      this.stereoDelayNode = this.ctx.createDelay(this.stereoSpread);
      this.stereoDelayNode.delayTime.setValueAtTime(this.stereoSpread, 0);
      this.mergerNode = this.ctx.createChannelMerger(2);
    }
  }
  volume;
  echoVolume;
  echoDelay;
  echoLowPass;
  stereoSpread;
  gainNode = null;
  convolverNode = null;
  echoGainNode = null;
  echoLowPassNode = null;
  echoDelayNode = null;
  stereoDelayNode = null;
  mergerNode = null;
  targetLevel = 0;
  gain = 0;
  drainEndTime = 0;
  active = false;
  isConnected() {
    return this.gainNode != null;
  }
  connect() {
    this.gainNode = this.ctx.createGain();
    this.gainNode.channelCount = 1;
    this.gainNode.channelCountMode = "explicit";
    this.gainNode.gain.setValueAtTime(0, 0);
    if (this.echoVolume) {
      this.echoGainNode = this.ctx.createGain();
      this.echoGainNode.channelCount = 1;
      this.echoGainNode.channelCountMode = "explicit";
      this.echoGainNode.gain.setValueAtTime(this.echoVolume, 0);
    }
    this.inNode.connect(this.gainNode);
    this.gainNode.connect(this.convolverNode);
    if (this.echoVolume) {
      this.convolverNode?.connect(this.echoGainNode);
      this.echoGainNode?.connect(this.echoLowPassNode);
      this.echoLowPassNode?.connect(this.echoDelayNode);
      this.echoDelayNode?.connect(this.convolverNode);
    }
    if (this.stereoSpread) {
      const {
        buffer: p
      } = this.convolverNode;
      if (p && p.numberOfChannels != 1) {
        console.error("stereoSpread can only be applied to mono IRs");
      }
      this.convolverNode?.connect(this.stereoDelayNode);
      this.convolverNode?.connect(this.mergerNode, 0, 0);
      this.stereoDelayNode?.connect(this.mergerNode, 0, 1);
      this.mergerNode?.connect(this.outNode);
    } else {
      this.convolverNode?.connect(this.outNode);
    }
  }
  disconnect() {
    this.inNode.disconnect(this.gainNode);
    this.gainNode?.disconnect(this.convolverNode);
    if (this.echoVolume) {
      this.convolverNode?.disconnect(this.echoGainNode);
      this.echoGainNode?.disconnect(this.echoLowPassNode);
      this.echoLowPassNode?.disconnect(this.echoDelayNode);
      this.echoDelayNode?.disconnect(this.convolverNode);
    }
    if (this.stereoSpread) {
      this.convolverNode?.disconnect(this.stereoDelayNode);
      this.convolverNode?.disconnect(this.mergerNode, 0, 0);
      this.stereoDelayNode?.disconnect(this.mergerNode, 0, 1);
      this.mergerNode?.disconnect(this.outNode);
    } else {
      this.convolverNode?.disconnect(this.outNode);
    }
    this.gainNode = null;
    this.echoGainNode = null;
  }
  setGain(p, b, XT) {
    p *= this.volume;
    if (this.gain != p) {
      if (p != 0 && !this.gainNode) {
        this.connect();
      }
      if (p == 0) {
        if (this.echoGainNode) {
          this.echoGainNode.gain.setValueAtTime(0, XT);
        }
        const {
          buffer: XY
        } = this.convolverNode;
        const XC = XY ? XY.duration : 0;
        this.drainEndTime = XT + XC + this.echoDelay + this.stereoSpread;
      }
      if (this.gain == 0 && this.echoGainNode) {
        this.echoGainNode.gain.setValueAtTime(this.echoVolume, b);
      }
      this.gainNode?.gain.setValueAtTime(this.gain, b);
      this.gainNode?.gain.linearRampToValueAtTime(p, XT);
      this.gain = p;
    }
  }
}
class Xr {
  ctx = new (window.AudioContext || window.webkitAudioContext)();
  masterGainNode;
  compressorNode;
  reverbNode;
  eqNodes = {};
  files = {};
  sounds = {};
  instances = [];
  instanceId = 0;
  playingInstances = [];
  reverbs = {};
  activeReverbs = [];
  reverbFadeEndTime = 0;
  volume = 1;
  volumeOld;
  muted = false;
  mutedOld;
  runningOfflineTest;
  offlineCtx;
  startTime;
  onfileload = function (...p) {};
  PLAY_INITED = "playInited";
  PLAY_SUCCEEDED = "playSucceeded";
  PLAY_INTERRUPTED = "playInterrupted";
  PLAY_FINISHED = "playFinished";
  PLAY_FAILED = "playFailed";
  constructor() {
    if (Ve) {
      const b = this.ctx.createBuffer(1, 1, 44100);
      const XT = this.ctx.createBufferSource();
      XT.buffer = b;
      XT.connect(this.ctx.destination);
      XT.start();
      XT.disconnect(this.ctx.destination);
      this.ctx.close();
      this.ctx = new (window.AudioContext || window.webkitAudioContext)();
    }
    ji = Jr(this.ctx);
    window.audioEngine = this;
    this.masterGainNode = this.ctx.createGain();
    this.compressorNode = this.ctx.createDynamicsCompressor();
    this.masterGainNode.connect(this.compressorNode);
    this.compressorNode.connect(this.ctx.destination);
    this.reverbNode = this.ctx.createGain();
    this.reverbNode.connect(this.masterGainNode);
    const p = {
      muffled: [[20, 2.8284 / 2, -6, "peaking"], [40, 2.8284 / 2, -7, "peaking"], [80, 2.8284 / 2, -10, "peaking"], [160, 2.8284 / 2, -13, "peaking"], [320, 2.8284 / 2, -22, "peaking"], [640, 2.8284 / 2, -18, "peaking"], [1280, 2.8284 / 2, -25, "peaking"], [2560, 2.8284 / 2, -10, "peaking"], [5120, 2.8284 / 2, -30, "peaking"], [10240, 2.8284 / 2, -25, "peaking"]],
      club: [[20, 2.8284 / 2, -6, "lowshelf"], [63, 2.8284 / 2, -3, "lowshelf"], [125, 2.8284 / 2, -3, "lowshelf"], [250, 2.8284 / 2, -6, "lowshelf"], [500, 2.8284 / 2, -18, "peaking"], [1000, 2.8284 / 2, -36, "peaking"], [2000, 2.8284 / 2, -48, "peaking"], [4000, 2.8284 / 2, -50, "highshelf"], [8000, 2.8284 / 2, -50, "highshelf"], [16000, 2.8284 / 2, -50, "highshelf"]]
    };
    Object.keys(p).forEach(XY => {
      const XC = this.ctx.createGain();
      XC.gain.setValueAtTime(16, 0);
      const Xl = p[XY];
      let Xd = XC;
      for (let Xk = 0; Xk < Xl.length; Xk++) {
        const XU = this.ctx.createBiquadFilter();
        Xd.connect(XU);
        Xd = XU;
        XU.frequency.setValueAtTime(Xl[Xk][0], 0);
        XU.Q.setValueAtTime(Xl[Xk][1], 0);
        XU.gain.setValueAtTime(Xl[Xk][2], 0);
        XU.type = Xl[Xk][3];
      }
      Xd.connect(this.reverbNode);
      this.eqNodes[XY] = XC;
    });
    for (let XY = 0; XY < De; XY++) {
      const XC = new ti(this.ctx);
      this.instances[XY] = XC;
    }
    mt = new ti(this.ctx);
    Ie = new ii(mt);
    this.volumeOld = this.volume;
    this.mutedOld = this.muted;
    if (this.ctx.state == "suspended") {
      const Xl = () => {
        this.ctx.resume();
        const Xd = this.ctx.createBufferSource();
        Xd.buffer = this.ctx.createBuffer(1, 1, 22050);
        Xd.connect(this.ctx.destination);
        Xd.start();
        setTimeout(() => {
          if (this.ctx.state == "running") {
            document.body.removeEventListener("mousedown", Xl, false);
            document.body.removeEventListener("touchend", Xl, false);
          }
        }, 0);
      };
      document.body.addEventListener("mousedown", Xl, false);
      document.body.addEventListener("touchend", Xl, false);
    }
    if (Ve) {
      qi = this.ctx.createBuffer(1, 1, 22050);
    }
  }
  loadFile(p, b) {
    if (this.files[p] != null) {
      b(p);
      return this.files[p];
    }
    this.files[p] = {
      buffer: null
    };
    const XT = new XMLHttpRequest();
    XT.open("GET", p);
    XT.responseType = "arraybuffer";
    const XY = function (XC) {
      console.error("Failed loading sound file: " + p);
    };
    XT.addEventListener("load", XC => {
      const Xl = XT.response;
      if (!Xl) {
        XY();
        return;
      }
      this.ctx.decodeAudioData(Xl, Xd => {
        this.files[p].buffer = Xd;
        b(p);
      }, () => {
        console.error("Failed decoding sound: " + p);
      });
    });
    XT.addEventListener("abort", XY);
    XT.addEventListener("error", XY);
    XT.addEventListener("timeout", XY);
    XT.send();
    return this.files[p];
  }
  registerSound(p, b, XT) {
    const XY = {
      file: this.loadFile(p, this.onfileload.bind(this)),
      canCoalesce: !!XT.canCoalesce,
      maxInstances: XT.channels || 16,
      volume: XT.volume || 1,
      instances: []
    };
    this.sounds[b] = XY;
  }
  play(XT, XY) {
    const XC = this.sounds[XT];
    if (!XC) {
      console.error("No sound named: " + XT);
      return Ie;
    }
    const Xl = XY.filter || "none";
    let Xd = XY.volume ?? 1;
    Xd *= XC.volume;
    Xd = this.muted ? 0 : Xd;
    const Xk = XY.pan || 0;
    const XU = !!XY.loop;
    const XW = XY.delay ? XY.delay * 0.001 : 0;
    const XD = XY.offset ? XY.offset : 0;
    const XG = XY.ambient || false;
    const XF = XY.detune || 0;
    if (!XC.file.buffer || this.muted && !XY.loop) {
      return Ie;
    }
    if (Xl !== "none" && Xl !== "reverb" && Xl !== "muffled" && Xl !== "club") {
      console.error("Invalid filter: " + Xl + ". Only valid filters are 'none', 'reverb', 'muffled' and 'club'.");
      return Ie;
    }
    if (XC.canCoalesce) {
      const p3 = this.ctx.currentTime + XC.file.buffer.duration;
      for (let p4 = 0; p4 < XC.instances.length; p4++) {
        const p5 = XC.instances[p4];
        if (Math.abs(p3 - p5.stopTime) > 0.03) {
          continue;
        }
        const p6 = p5.volume * p5.volume + Xd * Xd;
        const p7 = p5.volume * p5.pan + Xd * Xk;
        const p8 = p5.volume + Xd;
        p5.volume = Math.sqrt(p6);
        p5.pan = p7 / Math.max(0.001, p8);
        return Ie;
      }
    }
    for (let p9 = 0; p9 < De && (++this.instanceId, !!this.instances[this.instanceId % De].sound); p9++);
    const XH = this.instances[this.instanceId % De];
    if (XH.sound) {
      console.error("All " + De + " sound instances in use. You are using way too many sounds!");
      return Ie;
    }
    XH.id = this.instanceId;
    const p0 = XH.paramEvents > 150;
    const p1 = XH.paramEvents > 20 && !(this.instanceId % 7);
    for ((p0 || p1) && XH.reallocNodes(); XC.instances.length >= XC.maxInstances;) {
      let pX = XC.instances[0];
      for (let pp = 1; pp < XC.instances.length; pp++) {
        if (pX.stopTime > XC.instances[pp].stopTime) {
          pX = XC.instances[pp];
        }
      }
      pX.disconnect();
    }
    XH.sound = XC;
    XC.instances.push(XH);
    const p2 = Xl === "none" ? this.masterGainNode : Xl === "reverb" ? this.reverbNode : this.eqNodes[Xl];
    XH.start(p2, XC.file.buffer, Xd, Xk, XU, XW, XD, XG, XF);
    if (!this.playingInstances.includes(XH)) {
      this.playingInstances.push(XH);
    }
    return new ii(XH);
  }
  registerReverb(p, b, XT) {
    const XY = new Kr(this.ctx, this.reverbNode, this.masterGainNode, b, XT);
    this.loadFile(p, XC => {
      XY.convolverNode.buffer = this.files[XC].buffer;
      this.onfileload(XC);
    });
    this.reverbs[b] = XY;
  }
  setReverbs(p) {
    for (let b = 0; b < this.activeReverbs.length; b++) {
      const XT = this.activeReverbs[b];
      if (!p[XT.name]) {
        XT.targetLevel = 0;
      }
    }
    for (const XY in p) {
      if (!p[XY]) {
        continue;
      }
      const XC = this.reverbs[XY];
      if (!XC) {
        console.error("No reverb named " + XY);
        continue;
      }
      if (!this.reverbs[XY].active) {
        this.activeReverbs.push(XC);
        XC.active = true;
      }
      XC.targetLevel = p[XY];
    }
  }
  stop(p = true) {
    for (let b = 0; b < De; b++) {
      const XT = this.instances[b];
      if (!p || !XT.ambient) {
        if (XT.sound) {
          XT.stop();
        }
      }
    }
  }
  update(p) {
    if (this.ctx.state == "suspended") {
      this.ctx.resume();
    }
    const b = this.muted ? 0 : this.volume;
    const XT = this.mutedOld ? 0 : this.volumeOld;
    this.volumeOld = this.volume;
    this.mutedOld = this.muted;
    if (b != XT) {
      this.masterGainNode.gain.setTargetAtTime(b, this.ctx.currentTime, 0.02);
    }
    for (let XY = this.playingInstances.length - 1; XY >= 0; XY--) {
      const XC = this.playingInstances[XY];
      if (XC.volumeOld != XC.volume) {
        XC.volumeOld = XC.volume;
        XC.setGain(XC.volume);
      }
      if (XC.panOld != XC.pan) {
        XC.panOld = XC.pan;
        XC.setPan(XC.pan);
      }
      if (XC.sound && this.ctx.currentTime > XC.stopTime) {
        XC.disconnect();
      }
      if (!XC.sound) {
        this.playingInstances.splice(XY, 1);
      }
    }
    if (this.ctx.currentTime > this.reverbFadeEndTime) {
      const Xl = this.ctx.currentTime + 0.006;
      const Xd = 0.025;
      this.reverbFadeEndTime = Xl + Xd;
      let Xk = 0;
      for (let XW = 0; XW < this.activeReverbs.length; XW++) {
        const XD = this.activeReverbs[XW];
        Xk += XD.targetLevel;
      }
      const XU = Xk > 1 ? 1 / Xk : 1;
      for (let XG = 0; XG < this.activeReverbs.length; XG++) {
        const XF = this.activeReverbs[XG];
        const XH = Math.sqrt(XU * XF.targetLevel);
        XF.setGain(XH, Xl, this.reverbFadeEndTime);
      }
      for (let p0 = this.activeReverbs.length - 1; p0 >= 0; p0--) {
        const p1 = this.activeReverbs[p0];
        const p2 = this.ctx.currentTime > p1.drainEndTime;
        if (p1.gain == 0 && p2) {
          if (p1.isConnected()) {
            p1.disconnect();
          }
          p1.active = false;
          this.activeReverbs.splice(p0, 1);
        }
      }
    }
  }
  setMute(p) {
    this.muted = p;
  }
  on(p, b, XT) {
    if (p != "fileload") {
      console.error("Only \"fileload\" event supported");
      return;
    }
    this.onfileload = b.bind(XT);
  }
  updatePerformanceTest() {
    this.runningOfflineTest = this.runningOfflineTest ?? false;
    if (this.runningOfflineTest) {
      return;
    }
    this.runningOfflineTest = true;
    const p = 10;
    this.offlineCtx = new OfflineAudioContext(2, p * this.ctx.sampleRate, this.ctx.sampleRate);
    const b = this.offlineCtx.createBuffer(2, p * this.ctx.sampleRate, this.ctx.sampleRate);
    for (let Xd = 0; Xd < b.numberOfChannels; Xd++) {
      const Xk = b.getChannelData(Xd);
      for (let XU = 0; XU < Xk.length; XU++) {
        Xk[XU] = Math.sin(XU / 2333) * Math.sin(XU / 5741) * 2 * Math.random() - 1;
      }
    }
    const XT = this.offlineCtx.createBufferSource();
    XT.buffer = b;
    const XY = this.offlineCtx.createConvolver();
    const XC = this.offlineCtx.createBuffer(1, this.ctx.sampleRate * 4, this.ctx.sampleRate);
    for (let XW = 0; XW < XC.numberOfChannels; XW++) {
      const XD = XC.getChannelData(XW);
      for (let XG = 0; XG < XD.length; XG++) {
        XD[XG] = Math.random() * 2 - 1;
      }
    }
    XY.buffer = XC;
    const Xl = {
      echoVolume: 0.5,
      echoLowPass: 800,
      echoDelay: 0.25,
      stereoSpread: 0.004
    };
    Xl.convolverNode = XY;
    Xl.echoLowPassNode = this.offlineCtx.createBiquadFilter();
    Xl.echoLowPassNode.type = "lowpass";
    Xl.echoLowPassNode.frequency.setValueAtTime(Xl.echoLowPass, 0);
    Xl.echoLowPassNode.Q.setValueAtTime(-3.0102999566398125, 0);
    Xl.echoDelayNode = this.offlineCtx.createDelay(Xl.echoDelay);
    Xl.echoDelayNode.delayTime.setValueAtTime(Xl.echoDelay, 0);
    Xl.stereoDelayNode = this.offlineCtx.createDelay(Xl.stereoSpread);
    Xl.stereoDelayNode.delayTime.setValueAtTime(Xl.stereoSpread, 0);
    Xl.mergerNode = this.offlineCtx.createChannelMerger(2);
    Xl.gainNode = this.offlineCtx.createGain();
    Xl.gainNode.channelCount = 1;
    Xl.gainNode.channelCountMode = "explicit";
    Xl.gainNode.gain.setValueAtTime(1, 0);
    Xl.echoGainNode = this.offlineCtx.createGain();
    Xl.echoGainNode.channelCount = 1;
    Xl.echoGainNode.channelCountMode = "explicit";
    Xl.echoGainNode.gain.setValueAtTime(Xl.echoVolume, 0);
    Xl.outNode = this.offlineCtx.createGain();
    Xl.gainNode.connect(Xl.convolverNode);
    {
      const {
        buffer: XF
      } = Xl.convolverNode;
      if (XF && XF.numberOfChannels != 1) {
        console.error("stereoSpread can only be applied to mono IRs");
      }
      Xl.convolverNode.connect(Xl.stereoDelayNode);
      Xl.convolverNode.connect(Xl.mergerNode, 0, 0);
      Xl.stereoDelayNode?.connect(Xl.mergerNode, 0, 1);
      Xl.mergerNode?.connect(Xl.outNode);
    }
    console.log("starting convolver");
    XT.connect(Xl.gainNode);
    Xl.outNode.connect(this.offlineCtx.destination);
    XT.start();
    this.startTime = performance.now();
    this.offlineCtx.oncomplete = XH => {
      const p0 = performance.now();
      console.log("Offline render time: ", p0 - this.startTime);
      this.runningOfflineTest = false;
    };
    this.offlineCtx.startRendering();
  }
}
const ye = {
  Sound: new Xr()
};
const ea = {
  players: {
    m9_01: {
      path: "audio/guns/m9_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    m9_reload_01: {
      path: "audio/guns/m9_reload_01.mp3",
      volume: 1
    },
    m9_reload_02: {
      path: "audio/guns/m9_reload_02.mp3",
      volume: 1
    },
    m9_switch_01: {
      path: "audio/guns/m9_switch_01.mp3",
      volume: 1
    },
    m93r_01: {
      path: "audio/guns/m93r_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    m93r_reload_01: {
      path: "audio/guns/m93r_reload_01.mp3",
      volume: 1
    },
    m93r_reload_02: {
      path: "audio/guns/m93r_reload_02.mp3",
      volume: 1
    },
    m93r_switch_01: {
      path: "audio/guns/m93r_switch_01.mp3",
      volume: 1
    },
    glock_01: {
      path: "audio/guns/glock_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    glock_reload_01: {
      path: "audio/guns/glock_reload_01.mp3",
      volume: 1
    },
    glock_reload_02: {
      path: "audio/guns/glock_reload_02.mp3",
      volume: 1
    },
    glock_switch_01: {
      path: "audio/guns/glock_switch_01.mp3",
      volume: 1
    },
    p30l_01: {
      path: "audio/guns/p30l_01.mp3",
      volume: 1.2,
      maxInstances: 5
    },
    p30l_reload_01: {
      path: "audio/guns/p30l_reload_01.mp3",
      volume: 1.4
    },
    p30l_reload_02: {
      path: "audio/guns/p30l_reload_02.mp3",
      volume: 1.4
    },
    p30l_switch_01: {
      path: "audio/guns/p30l_switch_01.mp3",
      volume: 1.5
    },
    m1911_01: {
      path: "audio/guns/m1911_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    m1911_reload_01: {
      path: "audio/guns/m1911_reload_01.mp3",
      volume: 1
    },
    m1911_reload_02: {
      path: "audio/guns/m1911_reload_02.mp3",
      volume: 1
    },
    m1911_switch_01: {
      path: "audio/guns/m1911_switch_01.mp3",
      volume: 1
    },
    ot38_01: {
      path: "audio/guns/ot38_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    ot38_reload_01: {
      path: "audio/guns/ot38_reload_01.mp3",
      volume: 1
    },
    ot38_reload_02: {
      path: "audio/guns/ot38_reload_02.mp3",
      volume: 1
    },
    ot38_switch_01: {
      path: "audio/guns/ot38_switch_01.mp3",
      volume: 1
    },
    ots38_01: {
      path: "audio/guns/ots38_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    colt45_01: {
      path: "audio/guns/colt45_01.mp3",
      volume: 1
    },
    colt45_reload_01: {
      path: "audio/guns/colt45_reload_01.mp3",
      volume: 1
    },
    colt45_reload_02: {
      path: "audio/guns/colt45_reload_02.mp3",
      volume: 1
    },
    colt45_switch_01: {
      path: "audio/guns/colt45_switch_01.mp3",
      volume: 1
    },
    deagle_01: {
      path: "audio/guns/deagle_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    deagle_reload_01: {
      path: "audio/guns/deagle_reload_01.mp3",
      volume: 1
    },
    deagle_reload_02: {
      path: "audio/guns/deagle_reload_02.mp3",
      volume: 1
    },
    deagle_switch_01: {
      path: "audio/guns/deagle_switch_01.mp3",
      volume: 1
    },
    flare_gun_01: {
      path: "audio/guns/flare_gun_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    flare_gun_reload_01: {
      path: "audio/guns/flare_gun_reload_01.mp3",
      volume: 1
    },
    flare_gun_reload_02: {
      path: "audio/guns/flare_gun_reload_02.mp3",
      volume: 1
    },
    ak47_01: {
      path: "audio/guns/ak47_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    ak47_reload_01: {
      path: "audio/guns/ak47_reload_01.mp3",
      volume: 1
    },
    ak47_switch_01: {
      path: "audio/guns/ak47_switch_01.mp3",
      volume: 1
    },
    an94_01: {
      path: "audio/guns/an94_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    an94_reload_01: {
      path: "audio/guns/an94_reload_01.mp3",
      volume: 1
    },
    an94_switch_01: {
      path: "audio/guns/an94_switch_01.mp3",
      volume: 1
    },
    groza_01: {
      path: "audio/guns/groza_01.mp3",
      volume: 0.95,
      maxInstances: 5
    },
    groza_reload_01: {
      path: "audio/guns/groza_reload_01.mp3",
      volume: 1.1
    },
    groza_switch_01: {
      path: "audio/guns/groza_switch_01.mp3",
      volume: 1.1
    },
    grozas_01: {
      path: "audio/guns/grozas_01.mp3",
      volume: 0.95,
      maxInstances: 5
    },
    scar_01: {
      path: "audio/guns/scar_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    scar_reload_01: {
      path: "audio/guns/scar_reload_01.mp3",
      volume: 1
    },
    scar_switch_01: {
      path: "audio/guns/scar_switch_01.mp3",
      volume: 1
    },
    scarssr_01: {
      path: "audio/guns/scarssr_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    dp28_01: {
      path: "audio/guns/dp28_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    dp28_reload_01: {
      path: "audio/guns/dp28_reload_01.mp3",
      volume: 1
    },
    dp28_switch_01: {
      path: "audio/guns/dp28_switch_01.mp3",
      volume: 1
    },
    bar_01: {
      path: "audio/guns/bar_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    bar_reload_01: {
      path: "audio/guns/bar_reload_01.mp3",
      volume: 1
    },
    bar_switch_01: {
      path: "audio/guns/bar_switch_01.mp3",
      volume: 1
    },
    pkp_01: {
      path: "audio/guns/pkp_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    pkp_reload_01: {
      path: "audio/guns/pkp_reload_01.mp3",
      volume: 1
    },
    pkp_switch_01: {
      path: "audio/guns/pkp_switch_01.mp3",
      volume: 1
    },
    m870_01: {
      path: "audio/guns/m870_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    m870_reload_01: {
      path: "audio/guns/m870_reload_01.mp3",
      volume: 1
    },
    m870_cycle_01: {
      path: "audio/guns/m870_cycle_01.mp3",
      volume: 1
    },
    m870_pull_01: {
      path: "audio/guns/m870_pull_01.mp3",
      volume: 1
    },
    spas12_01: {
      path: "audio/guns/spas12_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    spas12_reload_01: {
      path: "audio/guns/spas12_reload_01.mp3",
      volume: 1
    },
    spas12_cycle_01: {
      path: "audio/guns/spas12_cycle_01.mp3",
      volume: 1
    },
    spas12_pull_01: {
      path: "audio/guns/spas12_pull_01.mp3",
      volume: 1
    },
    mp220_01: {
      path: "audio/guns/mp220_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    mp220_reload_01: {
      path: "audio/guns/mp220_reload_01.mp3",
      volume: 1
    },
    mp220_deploy_01: {
      path: "audio/guns/mp220_deploy_01.mp3",
      volume: 1
    },
    saiga_01: {
      path: "audio/guns/saiga_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    saiga_reload_01: {
      path: "audio/guns/saiga_reload_01.mp3",
      volume: 1
    },
    saiga_switch_01: {
      path: "audio/guns/saiga_switch_01.mp3",
      volume: 1
    },
    usas_01: {
      path: "audio/guns/usas_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    usas_reload_01: {
      path: "audio/guns/usas_reload_01.mp3",
      volume: 1
    },
    usas_switch_01: {
      path: "audio/guns/usas_switch_01.mp3",
      volume: 1
    },
    m1100_01: {
      path: "audio/guns/m1100_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    m1100_reload_01: {
      path: "audio/guns/m1100_reload_01.mp3",
      volume: 1
    },
    m1100_deploy_01: {
      path: "audio/guns/m1100_deploy_01.mp3",
      volume: 1
    },
    m1014_01: {
      path: "audio/guns/m1014_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    m1014_reload_01: {
      path: "audio/guns/m1014_reload_01.mp3",
      volume: 1
    },
    m1014_deploy_01: {
      path: "audio/guns/m1014_deploy_01.mp3",
      volume: 1
    },
    m39_01: {
      path: "audio/guns/m39_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    m39_reload_01: {
      path: "audio/guns/m39_reload_01.mp3",
      volume: 1
    },
    m39_switch_01: {
      path: "audio/guns/m39_switch_01.mp3",
      volume: 1
    },
    svd_01: {
      path: "audio/guns/svd_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    svd_reload_01: {
      path: "audio/guns/svd_reload_01.mp3",
      volume: 1
    },
    svd_switch_01: {
      path: "audio/guns/svd_switch_01.mp3",
      volume: 1
    },
    garand_01: {
      path: "audio/guns/garand_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    garand_02: {
      path: "audio/guns/garand_02.mp3",
      volume: 1,
      maxInstances: 5
    },
    garand_reload_01: {
      path: "audio/guns/garand_reload_01.mp3",
      volume: 1
    },
    garand_switch_01: {
      path: "audio/guns/garand_switch_01.mp3",
      volume: 1
    },
    m1a1_01: {
      path: "audio/guns/m1a1_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    m1a1_reload_01: {
      path: "audio/guns/m1a1_reload_01.mp3",
      volume: 1
    },
    m1a1_switch_01: {
      path: "audio/guns/m1a1_switch_01.mp3",
      volume: 1
    },
    mp5_01: {
      path: "audio/guns/mp5_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    mp5_reload_01: {
      path: "audio/guns/mp5_reload_01.mp3",
      volume: 1
    },
    mp5_switch_01: {
      path: "audio/guns/mp5_switch_01.mp3",
      volume: 1
    },
    mac10_01: {
      path: "audio/guns/mac10_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    mac10_reload_01: {
      path: "audio/guns/mac10_reload_01.mp3",
      volume: 1
    },
    mac10_switch_01: {
      path: "audio/guns/mac10_switch_01.mp3",
      volume: 1
    },
    ump9_01: {
      path: "audio/guns/ump9_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    ump9_reload_01: {
      path: "audio/guns/ump9_reload_01.mp3",
      volume: 1
    },
    ump9_switch_01: {
      path: "audio/guns/ump9_switch_01.mp3",
      volume: 1
    },
    vector_01: {
      path: "audio/guns/vector_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    vector_02: {
      path: "audio/guns/vector_02.mp3",
      volume: 1,
      maxInstances: 5
    },
    vector_reload_01: {
      path: "audio/guns/vector_reload_01.mp3",
      volume: 1
    },
    vector_switch_01: {
      path: "audio/guns/vector_switch_01.mp3",
      volume: 1
    },
    scorpion_01: {
      path: "audio/guns/scorpion_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    scorpion_reload_01: {
      path: "audio/guns/scorpion_reload_01.mp3",
      volume: 1
    },
    scorpion_switch_01: {
      path: "audio/guns/scorpion_switch_01.mp3",
      volume: 1
    },
    vss_01: {
      path: "audio/guns/vss_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    vss_reload_01: {
      path: "audio/guns/vss_reload_01.mp3",
      volume: 1
    },
    vss_switch_01: {
      path: "audio/guns/vss_switch_01.mp3",
      volume: 1
    },
    famas_01: {
      path: "audio/guns/famas_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    famas_reload_01: {
      path: "audio/guns/famas_reload_01.mp3",
      volume: 1
    },
    famas_switch_01: {
      path: "audio/guns/famas_switch_01.mp3",
      volume: 1
    },
    hk416_01: {
      path: "audio/guns/hk416_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    hk416_reload_01: {
      path: "audio/guns/hk416_reload_01.mp3",
      volume: 1
    },
    hk416_switch_01: {
      path: "audio/guns/hk416_switch_01.mp3",
      volume: 1
    },
    m4a1_01: {
      path: "audio/guns/m4a1_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    m4a1_reload_01: {
      path: "audio/guns/m4a1_reload_01.mp3",
      volume: 1
    },
    m4a1_switch_01: {
      path: "audio/guns/m4a1_switch_01.mp3",
      volume: 1
    },
    mk12_01: {
      path: "audio/guns/mk12_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    mk12_reload_01: {
      path: "audio/guns/mk12_reload_01.mp3",
      volume: 1
    },
    mk12_switch_01: {
      path: "audio/guns/mk12_switch_01.mp3",
      volume: 1
    },
    l86_01: {
      path: "audio/guns/l86_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    l86_reload_01: {
      path: "audio/guns/l86_reload_01.mp3",
      volume: 1
    },
    l86_switch_01: {
      path: "audio/guns/l86_switch_01.mp3",
      volume: 1
    },
    m249_01: {
      path: "audio/guns/m249_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    m249_reload_01: {
      path: "audio/guns/m249_reload_01.mp3",
      volume: 1.5
    },
    m249_switch_01: {
      path: "audio/guns/m249_switch_01.mp3",
      volume: 1.5
    },
    qbb97_01: {
      path: "audio/guns/qbb97_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    qbb97_reload_01: {
      path: "audio/guns/qbb97_reload_01.mp3",
      volume: 1
    },
    qbb97_switch_01: {
      path: "audio/guns/qbb97_switch_01.mp3",
      volume: 1
    },
    scout_01: {
      path: "audio/guns/scout_01.mp3",
      volume: 2,
      maxInstances: 5
    },
    scout_reload_01: {
      path: "audio/guns/scout_reload_01.mp3",
      volume: 1.2
    },
    scout_cycle_01: {
      path: "audio/guns/scout_cycle_01.mp3",
      volume: 1.2
    },
    scout_pull_01: {
      path: "audio/guns/scout_pull_01.mp3",
      volume: 1.2
    },
    model94_01: {
      path: "audio/guns/model94_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    model94_reload_01: {
      path: "audio/guns/model94_reload_01.mp3",
      volume: 1
    },
    model94_cycle_01: {
      path: "audio/guns/model94_cycle_01.mp3",
      volume: 1
    },
    mkg45_01: {
      path: "audio/guns/mkg45_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    mkg45_reload_01: {
      path: "audio/guns/mkg45_reload_01.mp3",
      volume: 1.25
    },
    mkg45_switch_01: {
      path: "audio/guns/mkg45_switch_01.mp3",
      volume: 1.25
    },
    blr_01: {
      path: "audio/guns/blr_01.mp3",
      volume: 1.5,
      maxInstances: 5
    },
    blr_reload_01: {
      path: "audio/guns/blr_reload_01.mp3",
      volume: 1
    },
    blr_cycle_01: {
      path: "audio/guns/blr_cycle_01.mp3",
      volume: 1
    },
    mosin_01: {
      path: "audio/guns/mosin_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    mosin_reload_01: {
      path: "audio/guns/mosin_reload_01.mp3",
      volume: 1
    },
    mosin_reload_02: {
      path: "audio/guns/mosin_reload_02.mp3",
      volume: 1
    },
    mosin_cycle_01: {
      path: "audio/guns/mosin_cycle_01.mp3",
      volume: 1
    },
    mosin_pull_01: {
      path: "audio/guns/mosin_pull_01.mp3",
      volume: 1
    },
    sv98_01: {
      path: "audio/guns/sv98_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    sv98_reload_01: {
      path: "audio/guns/sv98_reload_01.mp3",
      volume: 1
    },
    sv98_cycle_01: {
      path: "audio/guns/sv98_cycle_01.mp3",
      volume: 1
    },
    sv98_pull_01: {
      path: "audio/guns/sv98_pull_01.mp3",
      volume: 1
    },
    awc_01: {
      path: "audio/guns/awc_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    awc_reload_01: {
      path: "audio/guns/awc_reload_01.mp3",
      volume: 1
    },
    awc_cycle_01: {
      path: "audio/guns/awc_cycle_01.mp3",
      volume: 1
    },
    awc_pull_01: {
      path: "audio/guns/awc_pull_01.mp3",
      volume: 1
    },
    potato_cannon_01: {
      path: "audio/guns/potato_cannon_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    potato_cannon_reload_01: {
      path: "audio/guns/potato_cannon_reload_01.mp3",
      volume: 1
    },
    potato_cannon_switch_01: {
      path: "audio/guns/potato_cannon_switch_01.mp3",
      volume: 1
    },
    potato_smg_01: {
      path: "audio/guns/potato_smg_01.mp3",
      volume: 1,
      maxInstances: 5
    },
    potato_smg_reload_01: {
      path: "audio/guns/potato_smg_reload_01.mp3",
      volume: 1
    },
    potato_smg_switch_01: {
      path: "audio/guns/potato_smg_switch_01.mp3",
      volume: 1
    },
    bugle_01: {
      path: "audio/guns/bugle_01.mp3",
      volume: 1.5,
      maxInstances: 3,
      preload: false
    },
    bugle_02: {
      path: "audio/guns/bugle_02.mp3",
      volume: 1.5,
      maxInstances: 3,
      preload: false
    },
    bugle_03: {
      path: "audio/guns/bugle_03.mp3",
      volume: 1.5,
      maxInstances: 3,
      preload: false
    },
    empty_fire_01: {
      path: "audio/guns/empty_fire_01.mp3",
      volume: 0.9
    },
    empty_fire_02: {
      path: "audio/guns/empty_fire_02.mp3",
      volume: 0.9
    },
    gun_switch_01: {
      path: "audio/guns/gun_switch_01.mp3",
      volume: 1
    },
    bandage_use_01: {
      path: "audio/ui/bandage_use_01.mp3",
      volume: 1
    },
    healthkit_use_01: {
      path: "audio/ui/healthkit_use_01.mp3",
      volume: 1
    },
    soda_use_01: {
      path: "audio/ui/soda_use_01.mp3",
      volume: 1
    },
    pills_use_01: {
      path: "audio/ui/pills_use_01.mp3",
      volume: 1
    },
    stow_weapon_01: {
      path: "audio/ui/stow_weapon_01.mp3",
      volume: 1
    }
  },
  hits: {
    stone_bullet_hit_01: {
      path: "audio/hits/stone_bullet_hit_01.mp3",
      volume: 1,
      canCoalesce: true,
      maxInstances: 3
    },
    wood_bullet_hit_01: {
      path: "audio/hits/wood_bullet_hit_01.mp3",
      volume: 1,
      canCoalesce: true,
      maxInstances: 3
    },
    wood_bullet_hit_02: {
      path: "audio/hits/wood_bullet_hit_02.mp3",
      volume: 1,
      canCoalesce: true,
      maxInstances: 3
    },
    wood_bullet_hit_03: {
      path: "audio/hits/wood_bullet_hit_03.mp3",
      volume: 1,
      canCoalesce: true,
      maxInstances: 3
    },
    wood_bullet_hit_04: {
      path: "audio/hits/wood_bullet_hit_04.mp3",
      volume: 1,
      canCoalesce: true,
      maxInstances: 3
    },
    bush_bullet_hit_01: {
      path: "audio/hits/bush_bullet_hit_01.mp3",
      volume: 1,
      canCoalesce: true,
      maxInstances: 3
    },
    metal_bullet_hit_01: {
      path: "audio/hits/metal_bullet_hit_01.mp3",
      volume: 1,
      canCoalesce: true,
      maxInstances: 3
    },
    metal_bullet_hit_02: {
      path: "audio/hits/metal_bullet_hit_02.mp3",
      volume: 1,
      canCoalesce: true,
      maxInstances: 3
    },
    metal_bullet_hit_03: {
      path: "audio/hits/metal_bullet_hit_03.mp3",
      volume: 1,
      canCoalesce: true,
      maxInstances: 3
    },
    metal_bullet_hit_04: {
      path: "audio/hits/metal_bullet_hit_04.mp3",
      volume: 1,
      canCoalesce: true,
      maxInstances: 6
    },
    pan_bullet_hit_01: {
      path: "audio/hits/pan_bullet_hit_01.mp3",
      volume: 1,
      canCoalesce: true,
      maxInstances: 6
    },
    brick_bullet_hit_01: {
      path: "audio/hits/brick_bullet_hit_01.mp3",
      volume: 1,
      canCoalesce: true,
      maxInstances: 3
    },
    punch_hit_01: {
      path: "audio/hits/punch_hit_01.mp3",
      volume: 1
    },
    knife_hit_01: {
      path: "audio/hits/knife_hit_01.mp3",
      volume: 1
    },
    pan_hit_01: {
      path: "audio/hits/pan_hit_01.mp3",
      volume: 1
    },
    axe_hit_01: {
      path: "audio/hits/axe_hit_01.mp3",
      volume: 1
    },
    hook_hit_01: {
      path: "audio/hits/hook_hit_01.mp3",
      volume: 1
    },
    saw_hit_01: {
      path: "audio/hits/saw_hit_01.mp3",
      volume: 2.5
    },
    crowbar_hit_01: {
      path: "audio/hits/crowbar_hit_01.mp3",
      volume: 1
    },
    spade_hit_01: {
      path: "audio/hits/spade_hit_01.mp3",
      volume: 1
    },
    hammer_hit_01: {
      path: "audio/hits/hammer_hit_01.mp3",
      volume: 1
    },
    metal_punch_hit_01: {
      path: "audio/hits/metal_punch_hit_01.mp3",
      volume: 1
    },
    metal_punch_hit_02: {
      path: "audio/hits/metal_punch_hit_02.mp3",
      volume: 1
    },
    player_bullet_hit_01: {
      path: "audio/hits/player_bullet_hit_01.mp3",
      volume: 1,
      canCoalesce: true,
      maxInstances: 3
    },
    player_bullet_hit_02: {
      path: "audio/hits/player_bullet_hit_02.mp3",
      volume: 1,
      canCoalesce: true
    },
    plastic_bullet_hit_01: {
      path: "audio/hits/plastic_bullet_hit_01.mp3",
      volume: 1,
      canCoalesce: true,
      maxInstances: 3
    },
    toilet_bullet_hit_01: {
      path: "audio/hits/toilet_bullet_hit_01.mp3",
      volume: 1,
      canCoalesce: true,
      maxInstances: 3
    },
    toilet_bullet_hit_02: {
      path: "audio/hits/toilet_bullet_hit_02.mp3",
      volume: 1,
      canCoalesce: true,
      maxInstances: 3
    },
    glass_bullet_hit_01: {
      path: "audio/hits/glass_bullet_hit_01.mp3",
      volume: 1,
      canCoalesce: true,
      maxInstances: 3
    },
    concrete_hit_01: {
      path: "audio/hits/concrete_hit_01.mp3",
      volume: 1,
      canCoalesce: true,
      maxInstances: 3
    },
    frag_grass_01: {
      path: "audio/hits/frag_grass_01.mp3",
      volume: 1,
      canCoalesce: true,
      maxInstances: 3
    },
    frag_sand_01: {
      path: "audio/hits/frag_sand_01.mp3",
      volume: 1,
      canCoalesce: true,
      maxInstances: 3
    },
    frag_water_01: {
      path: "audio/hits/frag_water_01.mp3",
      volume: 1,
      canCoalesce: true,
      maxInstances: 3
    },
    cloth_hit_01: {
      path: "audio/hits/cloth_hit_01.mp3",
      volume: 1,
      canCoalesce: true,
      maxInstances: 3
    },
    cloth_hit_02: {
      path: "audio/hits/cloth_hit_02.mp3",
      volume: 1,
      canCoalesce: true,
      maxInstances: 3
    },
    organic_hit_01: {
      path: "audio/hits/organic_hit_01.mp3",
      volume: 1,
      canCoalesce: true,
      maxInstances: 3
    },
    piano_hit_01: {
      path: "audio/hits/piano_hit_01.mp3",
      volume: 1,
      canCoalesce: true,
      maxInstances: 3
    },
    piano_hit_02: {
      path: "audio/hits/piano_hit_02.mp3",
      volume: 1,
      canCoalesce: true,
      maxInstances: 3
    }
  },
  sfx: {
    crate_break_01: {
      path: "audio/sfx/crate_break_01.mp3",
      volume: 1
    },
    crate_break_02: {
      path: "audio/sfx/crate_break_02.mp3",
      volume: 1
    },
    tree_break_01: {
      path: "audio/sfx/tree_break_01.mp3",
      volume: 1
    },
    bush_break_01: {
      path: "audio/sfx/bush_break_01.mp3",
      volume: 1
    },
    bush_enter_01: {
      path: "audio/sfx/bush_enter_01.mp3",
      volume: 1,
      canCoalesce: true
    },
    bush_enter_02: {
      path: "audio/sfx/bush_enter_02.mp3",
      volume: 1,
      canCoalesce: true
    },
    barrel_break_01: {
      path: "audio/sfx/barrel_break_01.mp3",
      volume: 1
    },
    barrel_break_02: {
      path: "audio/sfx/barrel_break_02.mp3",
      volume: 1
    },
    stone_break_01: {
      path: "audio/sfx/stone_break_01.mp3",
      volume: 1
    },
    wall_break_01: {
      path: "audio/sfx/wall_break_01.mp3",
      volume: 1
    },
    ceiling_break_01: {
      path: "audio/sfx/ceiling_break_01.mp3",
      volume: 1
    },
    ceiling_break_02: {
      path: "audio/sfx/ceiling_break_02.mp3",
      volume: 1
    },
    toilet_break_01: {
      path: "audio/sfx/toilet_break_01.mp3",
      volume: 1
    },
    toilet_break_02: {
      path: "audio/sfx/toilet_break_02.mp3",
      volume: 1
    },
    vending_break_01: {
      path: "audio/sfx/vending_break_01.mp3",
      volume: 1
    },
    window_break_01: {
      path: "audio/sfx/window_break_01.mp3",
      volume: 1
    },
    window_break_02: {
      path: "audio/sfx/window_break_02.mp3",
      volume: 1
    },
    drawers_break_01: {
      path: "audio/sfx/drawers_break_01.mp3",
      volume: 1
    },
    oven_break_01: {
      path: "audio/sfx/oven_break_01.mp3",
      volume: 1
    },
    deposit_box_break_01: {
      path: "audio/sfx/deposit_box_break_01.mp3",
      volume: 1
    },
    cloth_break_01: {
      path: "audio/sfx/cloth_break_01.mp3",
      volume: 1
    },
    screen_break_01: {
      path: "audio/sfx/screen_break_01.mp3",
      volume: 1
    },
    pumpkin_break_01: {
      path: "audio/sfx/pumpkin_break_01.mp3",
      volume: 1,
      preload: false
    },
    ceramic_break_01: {
      path: "audio/sfx/ceramic_break_01.mp3",
      volume: 1
    },
    footstep_grass_01: {
      path: "audio/sfx/footstep_grass_01.mp3",
      volume: 1
    },
    footstep_grass_02: {
      path: "audio/sfx/footstep_grass_02.mp3",
      volume: 1
    },
    footstep_metal_01: {
      path: "audio/sfx/footstep_metal_01.mp3",
      volume: 1
    },
    footstep_metal_02: {
      path: "audio/sfx/footstep_metal_02.mp3",
      volume: 1
    },
    footstep_metal_03: {
      path: "audio/sfx/footstep_metal_03.mp3",
      volume: 1
    },
    footstep_metal_04: {
      path: "audio/sfx/footstep_metal_04.mp3",
      volume: 1
    },
    footstep_metal_05: {
      path: "audio/sfx/footstep_metal_05.mp3",
      volume: 1
    },
    footstep_wood_01: {
      path: "audio/sfx/footstep_wood_01.mp3",
      volume: 1
    },
    footstep_wood_02: {
      path: "audio/sfx/footstep_wood_02.mp3",
      volume: 1
    },
    footstep_wood_03: {
      path: "audio/sfx/footstep_wood_03.mp3",
      volume: 1
    },
    footstep_sand_01: {
      path: "audio/sfx/footstep_sand_01.mp3",
      volume: 1
    },
    footstep_sand_02: {
      path: "audio/sfx/footstep_sand_02.mp3",
      volume: 1
    },
    footstep_water_01: {
      path: "audio/sfx/footstep_water_01.mp3",
      volume: 1
    },
    footstep_water_02: {
      path: "audio/sfx/footstep_water_02.mp3",
      volume: 1
    },
    footstep_tile_01: {
      path: "audio/sfx/footstep_tile_01.mp3",
      volume: 1
    },
    footstep_tile_02: {
      path: "audio/sfx/footstep_tile_02.mp3",
      volume: 1
    },
    footstep_asphalt_01: {
      path: "audio/sfx/footstep_asphalt_01.mp3",
      volume: 1
    },
    footstep_asphalt_02: {
      path: "audio/sfx/footstep_asphalt_02.mp3",
      volume: 1
    },
    footstep_brick_01: {
      path: "audio/sfx/footstep_brick_01.mp3",
      volume: 1
    },
    footstep_stone_01: {
      path: "audio/sfx/footstep_stone_01.mp3",
      volume: 0.8
    },
    footstep_carpet_01: {
      path: "audio/sfx/footstep_carpet_01.mp3",
      volume: 1
    },
    punch_swing_01: {
      path: "audio/sfx/punch_swing_01.mp3",
      volume: 1
    },
    knife_swing_01: {
      path: "audio/sfx/knife_swing_01.mp3",
      volume: 1
    },
    medium_swing_01: {
      path: "audio/sfx/medium_swing_01.mp3",
      volume: 1
    },
    heavy_swing_01: {
      path: "audio/sfx/heavy_swing_01.mp3",
      volume: 1
    },
    bullet_whiz_01: {
      path: "audio/sfx/bullet_whiz_01.mp3",
      volume: 1
    },
    bullet_whiz_02: {
      path: "audio/sfx/bullet_whiz_02.mp3",
      volume: 1
    },
    bullet_whiz_03: {
      path: "audio/sfx/bullet_whiz_03.mp3",
      volume: 1
    },
    frag_throw_01: {
      path: "audio/sfx/frag_throw_01.mp3",
      volume: 1
    },
    frag_pin_01: {
      path: "audio/sfx/frag_pin_01.mp3",
      volume: 1
    },
    frag_deploy_01: {
      path: "audio/ui/frag_pickup_01.mp3",
      volume: 1
    },
    frag_water_01: {
      path: "audio/hits/frag_water_01.mp3",
      volume: 1
    },
    strobe_click_01: {
      path: "audio/sfx/strobe_click_01.mp3",
      volume: 1
    },
    explosion_01: {
      path: "audio/sfx/explosion_01.mp3",
      volume: 1
    },
    explosion_02: {
      path: "audio/sfx/explosion_02.mp3",
      volume: 1
    },
    explosion_03: {
      path: "audio/sfx/explosion_03.mp3",
      volume: 1
    },
    explosion_04: {
      path: "audio/sfx/explosion_04.mp3",
      volume: 1,
      maxInstances: 4
    },
    explosion_05: {
      path: "audio/sfx/explosion_05.mp3",
      volume: 1
    },
    explosion_smoke_01: {
      path: "audio/sfx/explosion_smoke_01.mp3",
      volume: 1
    },
    snowball_01: {
      path: "audio/sfx/snowball_01.mp3",
      volume: 1,
      preload: false
    },
    snowball_02: {
      path: "audio/sfx/snowball_02.mp3",
      volume: 1,
      preload: false
    },
    potato_01: {
      path: "audio/sfx/potato_01.mp3",
      volume: 1,
      preload: false
    },
    potato_02: {
      path: "audio/sfx/potato_02.mp3",
      volume: 1,
      preload: false
    },
    stow_weapon_01: {
      path: "audio/ui/stow_weapon_01.mp3",
      volume: 1
    },
    knife_deploy_01: {
      path: "audio/ui/knife_deploy_01.mp3",
      volume: 1
    },
    pan_pickup_01: {
      path: "audio/ui/pan_pickup_01.mp3",
      volume: 1
    },
    knuckles_deploy_01: {
      path: "audio/ui/knuckles_deploy_01.mp3",
      volume: 1
    },
    door_open_01: {
      path: "audio/sfx/door_open_01.mp3",
      volume: 1
    },
    door_close_01: {
      path: "audio/sfx/door_close_01.mp3",
      volume: 1
    },
    door_open_02: {
      path: "audio/sfx/door_open_02.mp3",
      volume: 1
    },
    door_close_02: {
      path: "audio/sfx/door_close_02.mp3",
      volume: 1
    },
    door_open_03: {
      path: "audio/sfx/door_open_03.mp3",
      volume: 1
    },
    door_close_03: {
      path: "audio/sfx/door_close_03.mp3",
      volume: 1
    },
    door_open_04: {
      path: "audio/sfx/door_open_04.mp3",
      volume: 0.8
    },
    door_error_01: {
      path: "audio/sfx/door_error_01.mp3",
      volume: 1
    },
    vault_change_01: {
      path: "audio/sfx/vault_change_01.mp3",
      volume: 1
    },
    vault_change_02: {
      path: "audio/sfx/vault_change_02.mp3",
      volume: 1,
      preload: false
    },
    vault_change_03: {
      path: "audio/sfx/vault_change_03.mp3",
      volume: 1,
      preload: false
    },
    cell_control_01: {
      path: "audio/sfx/cell_control_01.mp3",
      volume: 1
    },
    cell_control_02: {
      path: "audio/sfx/cell_control_02.mp3",
      volume: 1
    },
    plane_01: {
      path: "audio/sfx/plane_01.mp3",
      volume: 1
    },
    plane_02: {
      path: "audio/sfx/plane_02.mp3",
      volume: 1,
      preload: false
    },
    fighter_01: {
      path: "audio/sfx/fighter_01.mp3",
      volume: 1
    },
    airdrop_chute_01: {
      path: "audio/sfx/airdrop_chute_01.mp3",
      volume: 1
    },
    airdrop_fall_01: {
      path: "audio/sfx/airdrop_fall_01.mp3",
      volume: 1
    },
    airdrop_crash_01: {
      path: "audio/sfx/airdrop_crash_01.mp3",
      volume: 1
    },
    airdrop_crash_02: {
      path: "audio/sfx/airdrop_crash_02.mp3",
      volume: 1
    },
    airdrop_open_01: {
      path: "audio/sfx/airdrop_open_01.mp3",
      volume: 1
    },
    airdrop_open_02: {
      path: "audio/sfx/airdrop_open_02.mp3",
      volume: 1
    },
    button_press_01: {
      path: "audio/sfx/button_press_01.mp3",
      volume: 1,
      maxInstances: 3
    },
    watering_01: {
      path: "audio/sfx/watering_01.mp3",
      volume: 1,
      maxInstances: 3,
      preload: false
    },
    piano_02: {
      path: "audio/sfx/piano_02.mp3",
      volume: 1,
      preload: false
    },
    footstep_08: {
      path: "audio/sfx/footstep_08.mp3",
      volume: 1,
      preload: false
    },
    footstep_09: {
      path: "audio/sfx/footstep_09.mp3",
      volume: 1,
      preload: false
    },
    howl_01: {
      path: "audio/sfx/howl_01.mp3",
      volume: 1,
      preload: false
    },
    wheel_control_01: {
      path: "audio/sfx/wheel_control_01.mp3",
      volume: 1,
      preload: false
    },
    log_01: {
      path: "audio/sfx/log_01.mp3",
      volume: 1,
      preload: false
    },
    log_02: {
      path: "audio/sfx/log_02.mp3",
      volume: 1,
      preload: false
    },
    log_03: {
      path: "audio/sfx/log_03.mp3",
      volume: 1,
      preload: false
    },
    log_04: {
      path: "audio/sfx/log_04.mp3",
      volume: 1,
      preload: false
    },
    log_05: {
      path: "audio/sfx/log_05.mp3",
      volume: 1,
      preload: false
    },
    log_06: {
      path: "audio/sfx/log_06.mp3",
      volume: 1,
      preload: false
    },
    log_11: {
      path: "audio/sfx/log_11.mp3",
      volume: 4,
      preload: false
    },
    log_12: {
      path: "audio/sfx/log_12.mp3",
      volume: 4,
      preload: false
    },
    log_13: {
      path: "audio/sfx/log_13.mp3",
      volume: 2,
      preload: false
    },
    log_14: {
      path: "audio/sfx/log_14.mp3",
      volume: 2,
      preload: false
    },
    ability_stim_01: {
      path: "audio/sfx/ability_stim_01.mp3",
      volume: 4
    },
    xp_drop_01: {
      path: "audio/sfx/xp_drop_01.mp3",
      volume: 1.25,
      preload: false
    },
    xp_drop_02: {
      path: "audio/sfx/xp_drop_02.mp3",
      volume: 1.25,
      preload: false
    },
    cluck_01: {
      path: "audio/sfx/cluck_01.mp3",
      volume: 1,
      preload: false
    },
    cluck_02: {
      path: "audio/sfx/cluck_02.mp3",
      volume: 1,
      preload: false
    },
    feather_01: {
      path: "audio/sfx/feather_01.mp3",
      volume: 1,
      preload: false
    }
  },
  ambient: {
    ambient_wind_01: {
      path: "audio/ambient/ambient_wind_01.mp3",
      volume: 1,
      loadPriority: 1
    },
    ambient_waves_01: {
      path: "audio/ambient/ambient_waves_01.mp3",
      volume: 1,
      loadPriority: 1
    },
    ambient_stream_01: {
      path: "audio/ambient/ambient_stream_01.mp3",
      volume: 1,
      loadPriority: 1
    },
    piano_music_01: {
      path: "audio/ambient/piano_music_01.mp3",
      volume: 1,
      preload: false
    },
    ambient_wind_02: {
      path: "audio/ambient/ambient_wind_02.mp3",
      volume: 1,
      preload: false
    },
    ambient_steam_01: {
      path: "audio/ambient/ambient_steam_01.mp3",
      volume: 1,
      preload: false
    },
    club_music_01: {
      path: "audio/ambient/club_music_01.mp3",
      volume: 1,
      preload: false
    },
    club_music_02: {
      path: "audio/ambient/club_music_02.mp3",
      volume: 1,
      preload: false
    },
    ambient_lab_01: {
      path: "audio/ambient/ambient_lab_01.mp3",
      volume: 0.2,
      preload: false
    }
  },
  ui: {
    ammo_pickup_01: {
      path: "audio/ui/ammo_pickup_01.mp3",
      volume: 1
    },
    clothes_pickup_01: {
      path: "audio/ui/clothes_pickup_01.mp3",
      volume: 1
    },
    bells_01: {
      path: "audio/sfx/plane_02.mp3",
      volume: 1,
      preload: false
    },
    helmet_pickup_01: {
      path: "audio/ui/helmet_pickup_01.mp3",
      volume: 1
    },
    chest_pickup_01: {
      path: "audio/ui/chest_pickup_01.mp3",
      volume: 1
    },
    gun_pickup_01: {
      path: "audio/ui/gun_pickup_01.mp3",
      volume: 1
    },
    scope_pickup_01: {
      path: "audio/ui/scope_pickup_01.mp3",
      volume: 1
    },
    pack_pickup_01: {
      path: "audio/ui/pack_pickup_01.mp3",
      volume: 1
    },
    soda_pickup_01: {
      path: "audio/ui/soda_pickup_01.mp3",
      volume: 1
    },
    pills_pickup_01: {
      path: "audio/ui/pills_pickup_01.mp3",
      volume: 1
    },
    bandage_pickup_01: {
      path: "audio/ui/bandage_pickup_01.mp3",
      volume: 1
    },
    healthkit_pickup_01: {
      path: "audio/ui/healthkit_pickup_01.mp3",
      volume: 1
    },
    frag_pickup_01: {
      path: "audio/ui/frag_pickup_01.mp3",
      volume: 1
    },
    snowball_pickup_01: {
      path: "audio/ui/snowball_pickup_01.mp3",
      volume: 1,
      preload: false
    },
    potato_pickup_01: {
      path: "audio/ui/potato_pickup_01.mp3",
      volume: 1,
      preload: false
    },
    heavy_pickup_01: {
      path: "audio/ui/heavy_pickup_01.mp3",
      volume: 1
    },
    pan_pickup_01: {
      path: "audio/ui/pan_pickup_01.mp3",
      volume: 1
    },
    perk_pickup_01: {
      path: "audio/ui/perk_pickup_01.mp3",
      volume: 1
    },
    xp_pickup_01: {
      path: "audio/ui/xp_pickup_01.mp3",
      volume: 1.5,
      preload: false
    },
    xp_pickup_02: {
      path: "audio/ui/xp_pickup_02.mp3",
      volume: 1.5,
      preload: false
    },
    ping_danger_01: {
      path: "audio/ui/ping_danger_01.mp3",
      volume: 1
    },
    ping_coming_01: {
      path: "audio/ui/ping_coming_01.mp3",
      volume: 1
    },
    ping_help_01: {
      path: "audio/ui/ping_help_01.mp3",
      volume: 1
    },
    ping_leader_01: {
      path: "audio/ui/ping_leader_01.mp3",
      volume: 1,
      preload: false
    },
    ping_airdrop_01: {
      path: "audio/ui/ping_airdrop_01.mp3",
      volume: 1
    },
    ping_airstrike_01: {
      path: "audio/ui/ping_airstrike_01.mp3",
      volume: 1
    },
    ping_unlock_01: {
      path: "audio/ui/ping_unlock_01.mp3",
      volume: 1,
      preload: false
    },
    emote_01: {
      path: "audio/ui/emote_01.mp3",
      volume: 1
    },
    trick_01: {
      path: "audio/ui/trick_01.mp3",
      volume: 1.5,
      preload: false
    },
    trick_02: {
      path: "audio/ui/trick_02.mp3",
      volume: 1.5,
      preload: false
    },
    trick_03: {
      path: "audio/ui/trick_03.mp3",
      volume: 1.5,
      preload: false
    },
    treat_01: {
      path: "audio/ui/treat_01.mp3",
      volume: 1,
      preload: false
    },
    loot_drop_01: {
      path: "audio/ui/loot_drop_01.mp3",
      volume: 1
    },
    notification_start_01: {
      path: "audio/ui/notification_start_01.mp3",
      volume: 1
    },
    notification_join_01: {
      path: "audio/ui/notification_join_01.mp3",
      volume: 1
    },
    leader_assigned_01: {
      path: "audio/ui/leader_assigned_01.mp3",
      volume: 1,
      maxInstances: 1
    },
    leader_dead_01: {
      path: "audio/ui/leader_dead_01.mp3",
      volume: 1.75,
      maxInstances: 1
    },
    lt_assigned_01: {
      path: "audio/ui/lt_assigned_01.mp3",
      volume: 1,
      preload: false,
      maxInstances: 1
    },
    medic_assigned_01: {
      path: "audio/ui/medic_assigned_01.mp3",
      volume: 2,
      preload: false,
      maxInstances: 1
    },
    marksman_assigned_01: {
      path: "audio/ui/marksman_assigned_01.mp3",
      volume: 2,
      preload: false,
      maxInstances: 1
    },
    recon_assigned_01: {
      path: "audio/ui/recon_assigned_01.mp3",
      volume: 1.5,
      preload: false,
      maxInstances: 1
    },
    grenadier_assigned_01: {
      path: "audio/ui/grenadier_assigned_01.mp3",
      volume: 2.5,
      preload: false,
      maxInstances: 1
    },
    bugler_assigned_01: {
      path: "audio/ui/bugler_assigned_01.mp3",
      volume: 2.5,
      preload: false,
      maxInstances: 1
    },
    last_man_assigned_01: {
      path: "audio/ui/last_man_assigned_01.mp3",
      volume: 1.75,
      preload: false,
      maxInstances: 1
    },
    helmet03_forest_pickup_01: {
      path: "audio/ui/helmet03_forest_pickup_01.mp3",
      volume: 1,
      maxInstances: 1,
      preload: false
    },
    kill_leader_assigned_01: {
      path: "audio/ui/kill_leader_assigned_01.mp3",
      volume: 1.5,
      maxInstances: 1,
      preload: false
    },
    kill_leader_assigned_02: {
      path: "audio/ui/kill_leader_assigned_02.mp3",
      volume: 1.5,
      maxInstances: 1,
      preload: false
    },
    kill_leader_dead_01: {
      path: "audio/ui/kill_leader_dead_01.mp3",
      volume: 1.5,
      maxInstances: 1,
      preload: false
    },
    kill_leader_dead_02: {
      path: "audio/ui/kill_leader_dead_02.mp3",
      volume: 1.5,
      maxInstances: 1,
      preload: false
    },
    spawn_01: {
      path: "audio/ui/spawn_01.mp3",
      volume: 3,
      preload: false
    }
  },
  music: {
    menu_music: {
      path: "audio/ambient/menu_music_01.mp3",
      volume: 1,
      loadPriority: 2
    }
  }
};
const ta = {
  footstep_grass: {
    channel: "sfx",
    sounds: ["footstep_grass_01", "footstep_grass_02"]
  },
  footstep_container: {
    channel: "sfx",
    sounds: ["footstep_metal_03"]
  },
  footstep_warehouse: {
    channel: "sfx",
    sounds: ["footstep_metal_01", "footstep_metal_02"]
  },
  footstep_house: {
    channel: "sfx",
    sounds: ["footstep_wood_02", "footstep_wood_03"]
  },
  footstep_shack: {
    channel: "sfx",
    sounds: ["footstep_wood_01"]
  },
  footstep_sand: {
    channel: "sfx",
    sounds: ["footstep_sand_01", "footstep_sand_02"]
  },
  footstep_water: {
    channel: "sfx",
    sounds: ["footstep_water_01", "footstep_water_02"]
  },
  footstep_tile: {
    channel: "sfx",
    sounds: ["footstep_tile_01", "footstep_tile_02"]
  },
  footstep_asphalt: {
    channel: "sfx",
    sounds: ["footstep_asphalt_01", "footstep_asphalt_02"]
  },
  footstep_brick: {
    channel: "sfx",
    sounds: ["footstep_brick_01"]
  },
  footstep_bunker: {
    channel: "sfx",
    sounds: ["footstep_metal_04", "footstep_metal_05"]
  },
  footstep_stone: {
    channel: "sfx",
    sounds: ["footstep_stone_01"]
  },
  footstep_carpet: {
    channel: "sfx",
    sounds: ["footstep_carpet_01"]
  },
  player_bullet_hit: {
    channel: "hits",
    sounds: ["player_bullet_hit_01"]
  },
  metal_punch: {
    channel: "hits",
    sounds: ["metal_punch_hit_01", "metal_punch_hit_02"]
  },
  cloth_punch: {
    channel: "hits",
    sounds: ["cloth_hit_01"]
  },
  cloth_bullet: {
    channel: "hits",
    sounds: ["cloth_hit_02"]
  },
  organic_hit: {
    channel: "hits",
    sounds: ["organic_hit_01"]
  },
  piano_hit: {
    channel: "hits",
    sounds: ["piano_hit_01", "piano_hit_02"]
  },
  wall_bullet: {
    channel: "hits",
    sounds: ["metal_bullet_hit_01"]
  },
  wall_wood_bullet: {
    channel: "hits",
    sounds: ["wood_bullet_hit_02"]
  },
  wall_brick_bullet: {
    channel: "hits",
    sounds: ["brick_bullet_hit_01"]
  },
  stone_bullet: {
    channel: "hits",
    sounds: ["stone_bullet_hit_01"]
  },
  barrel_bullet: {
    channel: "hits",
    sounds: ["metal_bullet_hit_03"]
  },
  pan_bullet: {
    channel: "hits",
    sounds: ["pan_bullet_hit_01"]
  },
  silo_bullet: {
    channel: "hits",
    sounds: ["metal_bullet_hit_04"]
  },
  toilet_porc_bullet: {
    channel: "hits",
    sounds: ["toilet_bullet_hit_01"]
  },
  toilet_metal_bullet: {
    channel: "hits",
    sounds: ["toilet_bullet_hit_02"]
  },
  glass_bullet: {
    channel: "hits",
    sounds: ["glass_bullet_hit_01"]
  },
  cobalt_bullet: {
    channel: "hits",
    sounds: ["metal_bullet_hit_02"]
  },
  concrete_hit: {
    channel: "hits",
    sounds: ["concrete_hit_01"]
  },
  wood_prop_bullet: {
    channel: "hits",
    sounds: ["wood_bullet_hit_03"]
  },
  wood_crate_bullet: {
    channel: "hits",
    sounds: ["wood_bullet_hit_04"]
  },
  ammo_crate_bullet: {
    channel: "hits",
    sounds: ["plastic_bullet_hit_01"]
  },
  bush_bullet: {
    channel: "hits",
    sounds: ["bush_bullet_hit_01"]
  },
  tree_bullet: {
    channel: "hits",
    sounds: ["wood_bullet_hit_01"]
  },
  player_bullet_grunt: {
    channel: "hits",
    sounds: ["player_bullet_hit_02"]
  },
  bullet_whiz: {
    channel: "sfx",
    sounds: ["bullet_whiz_01", "bullet_whiz_02", "bullet_whiz_03"]
  },
  frag_grass: {
    channel: "hits",
    sounds: ["frag_grass_01"]
  },
  frag_sand: {
    channel: "hits",
    sounds: ["frag_sand_01"]
  },
  frag_water: {
    channel: "hits",
    sounds: ["frag_water_01"]
  },
  kill_leader_assigned: {
    channel: "ui",
    sounds: ["kill_leader_assigned_01", "kill_leader_assigned_02"]
  },
  kill_leader_dead: {
    channel: "ui",
    sounds: ["kill_leader_dead_01", "kill_leader_dead_02"]
  },
  cluck: {
    channel: "sfx",
    sounds: ["cluck_01", "cluck_02"]
  }
};
const ia = {
  activePlayer: {
    volume: 0.5,
    maxRange: 48,
    list: "players",
    type: "sound"
  },
  otherPlayers: {
    volume: 0.5,
    maxRange: 48,
    list: "players",
    type: "sound"
  },
  hits: {
    volume: 0.4,
    maxRange: 48,
    list: "hits",
    type: "sound"
  },
  sfx: {
    volume: 1,
    maxRange: 48,
    list: "sfx",
    type: "sound"
  },
  ambient: {
    volume: 1,
    maxRange: 1,
    list: "ambient",
    type: "sound"
  },
  ui: {
    volume: 0.75,
    maxRange: 48,
    list: "ui",
    type: "sound"
  },
  music: {
    volume: 1,
    maxRange: 1,
    list: "music",
    type: "music"
  }
};
const ra = {
  cathedral: {
    path: "audio/reverb/cathedral_01.mp3",
    volume: 0.7,
    stereoSpread: 0.004
  },
  cave: {
    path: "audio/reverb/cave_mono_01.mp3",
    volume: 0.7,
    echoVolume: 0.5,
    echoDelay: 0.25,
    echoLowPass: 800,
    stereoSpread: 0.004
  }
};
const fe = {
  Sounds: ea,
  Groups: ta,
  Channels: ia,
  Reverbs: ra
};
const ri = 0.003;
const pt = 0.5;
class aa {
  mute = false;
  masterVolume = 1;
  soundVolume = 1;
  musicVolume = 1;
  baseVolume = 0.5;
  sounds = {};
  loadedFiles = {};
  preloadedSounds = false;
  cameraPos = v.create(0, 0);
  activeLayer = 0;
  underground = false;
  soundInstances = [];
  constructor(p) {
    ye.Sound.volume = 0.5;
    ye.Sound.on("fileload", this.loadHandler, this);
  }
  preloadSounds() {
    if (!this.preloadedSounds) {
      this.preloadedSounds = true;
      const b = {};
      const XT = Object.keys(fe.Sounds);
      for (let Xk = 0; Xk < XT.length; Xk++) {
        const XU = XT[Xk];
        const XW = fe.Sounds[XU];
        const XD = Object.keys(XW);
        for (let XG = 0; XG < XD.length; XG++) {
          const XF = XD[XG];
          if (b[XF] !== undefined) {
            console.log("Sound " + XF + " defined multiple times!");
          }
          b[XF] = true;
        }
      }
      const XY = [];
      const XC = Object.keys(fe.Channels);
      for (let XH = 0; XH < XC.length; XH++) {
        const p0 = XC[XH];
        const p1 = fe.Channels[p0];
        const p2 = fe.Sounds[p1.list];
        const p3 = Object.keys(p2);
        for (let p4 = 0; p4 < p3.length; p4++) {
          const p5 = p3[p4];
          const p6 = p2[p5];
          if (p6.preload === undefined || p6.preload) {
            const p7 = {
              canCoalesce: p6.canCoalesce,
              channels: p6.maxInstances,
              volume: p6.volume
            };
            XY.push({
              name: p5,
              channel: p0,
              path: p6.path,
              options: p7,
              priority: p6.loadPriority || 0
            });
          }
        }
      }
      XY.sort((p8, p9) => p9.priority - p8.priority);
      for (let p8 = 0; p8 < XY.length; p8++) {
        const p9 = XY[p8];
        this.loadSound(p9);
      }
      const Xl = fe.Reverbs;
      const Xd = Object.keys(Xl);
      for (let pX = 0; pX < Xd.length; pX++) {
        const pp = Xd[pX];
        const pb = Xl[pp];
        ye.Sound.registerReverb(pb.path, pp, pb);
      }
    }
  }
  loadSound(p) {
    const b = p.name + p.channel;
    if (!this.sounds[b]) {
      ye.Sound.registerSound(p.path, b, p.options);
      this.sounds[b] = {
        path: p.path,
        name: p.name,
        channel: p.channel
      };
    }
  }
  loadHandler(p) {
    this.loadedFiles[p] = true;
  }
  update(p) {
    for (let XY = this.soundInstances.length - 1; XY >= 0; XY--) {
      const XC = this.soundInstances[XY];
      if (XC.instance.playState == "playFinished" || XC.instance.playState == "playInterrupted" || XC.instance.playState == "playFailed") {
        this.soundInstances.splice(XY, 1);
      }
    }
    const b = [0, 1, 1 / 3, 2 / 3];
    const XT = this.underground ? b[this.activeLayer] : 0;
    ye.Sound.setReverbs({
      cathedral: XT
    });
    ye.Sound.update(p);
  }
  playSound(b, XT = {}) {
    if (!b || b == "none") {
      return null;
    }
    XT.channel = XT.channel || "activePlayer";
    XT.startSilent = XT.startSilent || false;
    XT.forceStart = XT.forceStart || false;
    XT.loop = XT.loop || false;
    XT.soundPos = XT.soundPos || null;
    XT.fallOff = XT.fallOff || 0;
    XT.filter = XT.filter || "";
    XT.delay = XT.delay || 0;
    XT.ignoreMinAllowable = XT.ignoreMinAllowable || false;
    XT.rangeMult = XT.rangeMult || 1;
    XT.offset = XT.offset || 0;
    XT.ambient = XT.channel == "ambient" || XT.channel == "music";
    XT.detune = XT.detune || 0;
    XT.volumeScale = XT.volumeScale || 1;
    let XY = null;
    const XC = fe.Channels[XT.channel];
    if (XC && (!this.mute || XT.forceStart)) {
      const Xl = this.baseVolume * 1 * this.getTypeVolume(XC.type) * XT.volumeScale;
      const Xd = XT.layer !== undefined && !t.sameAudioLayer(XT.layer, this.activeLayer);
      const Xk = XT.filter ? Xd || XT.forceFilter ? XT.filter : "reverb" : "none";
      if (XT.channel != "activePlayer" && XT.soundPos) {
        const XU = v.sub(this.cameraPos, XT.soundPos);
        const XW = v.length(XU);
        let XD = XC.maxRange * XT.rangeMult;
        if (e.eqAbs(XD, 0)) {
          XD = 1;
        }
        const XG = e.clamp(Math.abs(XW / XD), 0, 1);
        const XF = Math.pow(1 - XG, 1 + XT.fallOff * 2);
        let XH = XC.volume * XF * Xl;
        XH = Xd ? XH * pt : XH;
        if (XH > ri || XT.ignoreMinAllowable) {
          const p0 = e.clamp(XU.x / XD * -1, -1, 1);
          XY = ye.Sound.play(b + XT.channel, {
            filter: Xk,
            loop: XT.loop ? -1 : 0,
            volume: XT.startSilent ? 0 : XH,
            pan: p0,
            delay: XT.delay,
            offset: XT.offset,
            ambient: XT.ambient,
            detune: XT.detune
          });
        }
      } else {
        let p1 = XC.volume * Xl;
        p1 = Xd ? p1 * pt : p1;
        XY = ye.Sound.play(b + XT.channel, {
          filter: Xk,
          loop: XT.loop ? -1 : 0,
          volume: XT.startSilent ? 0 : p1,
          delay: XT.delay,
          offset: XT.offset,
          ambient: XT.ambient,
          detune: XT.detune
        });
      }
      if (XY && (XT.loop || XT.channel == "music")) {
        const p2 = XT.channel == "music" ? "music" : "sound";
        this.soundInstances.push({
          instance: XY,
          type: p2
        });
      }
    }
    return XY;
  }
  playGroup(p, b = {}) {
    const XT = fe.Groups[p];
    if (XT) {
      const XY = XT.sounds;
      const XC = Math.floor(t.random(0, XY.length));
      b.channel = XT.channel;
      return this.playSound(XY[XC], b);
    }
    return null;
  }
  updateSound(b, XT, XY, XC = {}) {
    XC.fallOff = XC.fallOff || 0;
    XC.rangeMult = XC.rangeMult || 1;
    XC.ignoreMinAllowable = XC.ignoreMinAllowable || false;
    XC.volumeScale = XC.volumeScale || 1;
    const Xl = fe.Channels[XT];
    if (b && Xl) {
      const Xd = this.baseVolume * 1 * this.getTypeVolume(Xl.type) * XC.volumeScale;
      const Xk = v.sub(this.cameraPos, XY);
      const XU = v.length(Xk);
      let XW = Xl.maxRange * XC.rangeMult;
      if (e.eqAbs(XW, 0)) {
        XW = 1;
      }
      const XD = e.clamp(Math.abs(XU / XW), 0, 1);
      const XG = Math.pow(1 - XD, 1 + XC.fallOff * 2);
      let XF = Xl.volume * XG * Xd;
      XF = XC.layer === undefined || t.sameAudioLayer(XC.layer, this.activeLayer) ? XF : XF * pt;
      if (XF > ri || XC.ignoreMinAllowable) {
        const XH = e.clamp(Xk.x / XW * -1, -1, 1);
        b.volume = XF;
        b.pan = XH;
      }
    }
  }
  setMasterVolume(p) {
    p = e.clamp(p, 0, 1);
    ye.Sound.volume = p;
  }
  _setInstanceTypeVolume(p, b) {
    b = e.clamp(b, 0, 1);
    const XT = this.getTypeVolume(p);
    const XY = XT > 0.0001 ? b / XT : 0;
    for (let XC = 0; XC < this.soundInstances.length; XC++) {
      const Xl = this.soundInstances[XC];
      if (Xl.type == p) {
        Xl.instance.volume *= XY;
      }
    }
  }
  setSoundVolume(p) {
    this._setInstanceTypeVolume("sound", p);
    this.soundVolume = p;
  }
  setMusicVolume(p) {
    this._setInstanceTypeVolume("music", p);
    this.musicVolume = p;
  }
  setVolume(p, b, XT) {
    if (p) {
      XT = XT || "sound";
      const XY = this.getTypeVolume(XT);
      p.volume = b * XY;
    }
  }
  getVolume(p) {
    if (p) {
      return p.volume;
    } else {
      return 0;
    }
  }
  setMute(p) {
    this.mute = p;
    ye.Sound.setMute(this.mute);
    return this.mute;
  }
  muteToggle() {
    return this.setMute(!this.mute);
  }
  stopSound(p) {
    p?.stop();
  }
  stopAll() {
    ye.Sound.stop();
  }
  allLoaded() {
    const p = Object.keys(this.sounds);
    for (let b = 0; b < p.length; b++) {
      const XT = this.sounds[p[b]];
      if (!this.isSoundLoaded(XT.name, XT.channel)) {
        return false;
      }
    }
    return true;
  }
  isSoundLoaded(p, b) {
    const XT = this.sounds[p + b];
    return XT && this.loadedFiles[XT.path];
  }
  isSoundPlaying(p) {
    return !!p && p.playState == ye.Sound.PLAY_SUCCEEDED;
  }
  getSoundDefVolume(p, b) {
    const XT = fe.Sounds[b][p];
    const XY = fe.Channels[b];
    if (XT && XY) {
      return XT.volume * XY.volume;
    } else {
      return 1;
    }
  }
  getTypeVolume(p) {
    switch (p) {
      case "music":
        return this.musicVolume;
      case "sound":
        return this.soundVolume;
      default:
        return this.soundVolume;
    }
  }
}
const sa = {
  ENV: "website",
  muteAudio: false,
  masterVolume: 1,
  soundVolume: 1,
  musicVolume: 1,
  highResTex: true,
  screenShake: true,
  anonPlayerNames: false,
  touchMoveStyle: "anywhere",
  touchAimStyle: "anywhere",
  touchAimLine: true,
  profile: null,
  playerName: "",
  region: "na",
  gameModeIdx: 2,
  teamAutoFill: true,
  language: "en",
  prerollGamesPlayed: 0,
  totalGamesPlayed: 0,
  promptAppRate: true,
  regionSelected: false,
  lastNewsTimestamp: 0,
  perkModeRole: "",
  loadout: le.defaultLoadout(),
  sessionCookie: "",
  binds: "",
  version: 1
};
class oa {
  loaded = false;
  localStorageAvailable = true;
  config = {};
  onModifiedListeners = [];
  async load(p) {
    const b = XY => {
      let XC = {};
      try {
        XC = JSON.parse(XY);
      } catch {}
      this.config = t.mergeDeep({}, sa, XC);
      this.checkUpgradeConfig();
      this.onModified();
      this.loaded = true;
    };
    let XT = "{}";
    try {
      XT = localStorage.getItem("surviv_config");
    } catch {
      this.localStorageAvailable = false;
    }
    b(XT);
    if (Or()) {
      this.config.ENV = "CrazyGames";
      await Br();
    } else if (Gr()) {
      this.config.ENV = "POKI";
      await Fr();
    } else if (jr()) {
      this.config.ENV = "GameMonetize";
      await qr();
    } else {
      this.config.ENV = "website";
      document.getElementById("btn-start-fullscreen").style.display = "inline-block";
      document.getElementById("btn-game-fullscreen").style.display = "block";
      document.getElementById("left-column").style.display = "block";
    }
    p();
    if (this.config.ENV === "POKI") {
      window.PokiSDK.gameLoadingFinished();
    }
  }
  store() {
    const p = JSON.stringify(this.config);
    if (this.localStorageAvailable) {
      try {
        localStorage.setItem("surviv_config", p);
      } catch {}
    }
  }
  set(p, b) {
    if (!p) {
      return;
    }
    const XT = p.split(".");
    let XY = this.config;
    while (XT.length > 1) {
      XY = XY[XT.shift()];
    }
    XY[XT.shift()] = b;
    this.store();
    this.onModified(p);
  }
  get(p) {
    if (!p) {
      return;
    }
    const b = p.split(".");
    let XT = this.config;
    for (let XY = 0; XY < b.length; XY++) {
      XT = XT[b[XY]];
    }
    return XT;
  }
  addModifiedListener(p) {
    this.onModifiedListeners.push(p);
  }
  onModified(p) {
    for (let b = 0; b < this.onModifiedListeners.length; b++) {
      this.onModifiedListeners[b](p);
    }
  }
  checkUpgradeConfig() {}
}
const la = [];
const ma = document.createElement("canvas");
function Fi(p, b) {
  return new URLSearchParams(b || window.location.search).get(p) || "";
}
const Q = {
  getParameterByName: Fi,
  getCookie: function (p) {
    const b = p + "=";
    const XT = decodeURIComponent(document.cookie).split(";");
    for (let XY = 0; XY < XT.length; XY++) {
      let XC = XT[XY];
      while (XC.charAt(0) == " ") {
        XC = XC.substring(1);
      }
      if (XC.indexOf(b) == 0) {
        return XC.substring(b.length, XC.length);
      }
    }
    return "";
  },
  sanitizeNameInput: function (p) {
    let b = p.trim();
    if (b.length > m.PlayerNameMaxLen) {
      b = b.substring(0, m.PlayerNameMaxLen);
    }
    const XT = " " + b.toLowerCase() + " ";
    if (la.some(XY => XT.includes(" " + XY + " "))) {
      b = "Survev.io";
    }
    return b;
  },
  colorToHexString: function (p) {
    return "#" + ("000000" + p.toString(16)).slice(-6);
  },
  colorToDOMString: function (p, b) {
    return "rgba(" + (p >> 16 & 255) + ", " + (p >> 8 & 255) + ", " + (p & 255) + ", " + b + ")";
  },
  htmlEscape: function (p = "") {
    return p.replace(/&/g, "&amp;").replace(/"/g, "&quot;").replace(/'/g, "&#39;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
  },
  truncateString: function (p, b, XT) {
    const XY = ma.getContext("2d");
    XY.font = b;
    let XC = p;
    for (let Xl = p.length; Xl > 0 && XY.measureText(XC).width > XT;) {
      XC = p.substring(0, --Xl) + "â€¦";
    }
    return XC;
  },
  toggleFullScreen: function (p) {
    let b = document.documentElement;
    if (document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement || document.msFullscreenElement || p) {
      if (document.exitFullscreen) {
        document.exitFullscreen();
      } else if (document.msExitFullscreen) {
        document.msExitFullscreen();
      } else if (document.mozCancelFullScreen) {
        document.mozCancelFullScreen();
      } else {
        document.webkitExitFullscreen?.();
      }
    } else if (b.requestFullscreen) {
      b.requestFullscreen();
    } else if (b.msRequestFullscreen) {
      b = document.body;
      b.msRequestFullscreen();
    } else if (b.mozRequestFullScreen) {
      b.mozRequestFullScreen();
    } else {
      b.webkitRequestFullscreen?.();
    }
  },
  copyTextToClipboard: function (p) {
    try {
      const b = j("<input>");
      j("body").append(b);
      b.val(p);
      if (k.os == "ios") {
        const XT = b.get(0);
        const XY = XT.contentEditable;
        const XC = XT.readOnly;
        XT.contentEditable = "true";
        XT.readOnly = true;
        const Xl = document.createRange();
        Xl.selectNodeContents(XT);
        const Xd = window.getSelection();
        Xd.removeAllRanges();
        Xd.addRange(Xl);
        XT.setSelectionRange(0, 999999);
        XT.contentEditable = XY;
        XT.readOnly = XC;
      } else {
        b.select();
      }
      document.execCommand("copy");
      b.remove();
    } catch {}
  },
  getSvgFromGameType: function (p) {
    const b = w[p];
    switch (b ? b.type : "") {
      case "gun":
      case "melee":
      case "throwable":
      case "heal":
      case "boost":
      case "helmet":
      case "chest":
      case "scope":
      case "backpack":
      case "perk":
      case "xp":
        return "img/loot/" + b.lootImg?.sprite.slice(0, -4) + ".svg";
      case "heal_effect":
      case "boost_effect":
        return "img/particles/" + b.texture?.slice(0, -4) + ".svg";
      case "emote":
        return "img/emotes/" + b.texture.slice(0, -4) + ".svg";
      case "crosshair":
        return "img/crosshairs/" + b.texture.slice(0, -4) + ".svg";
      case "outfit":
        {
          const XT = b.lootImg;
          if (XT.sprite !== "loot-shirt-01.img") {
            return "img/loot/" + XT.sprite.slice(0, -4) + ".svg";
          }
          const XY = "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"128\" height=\"128\"><path d=\"M63.993 8.15c-10.38 0-22.796 3.526-30.355 7.22-8.038 3.266-14.581 7.287-19.253 14.509C8.102 39.594 5.051 54.6 7.13 78.482c5.964 2.07 11.333 1.45 16.842-.415-1.727-7.884-1.448-15.764.496-22.204 2.126-7.044 6.404-12.722 12.675-13.701l2.77-.432.074 2.803c.054 2.043.09 4.17.116 6.335l.027 6.312c-.037 8.798-.382 18.286-1.277 27.845 5.637 1.831 14.806 2.954 23.964 3.019l4.597-.058c8.53-.275 16.742-1.449 21.665-3.063-1.093-14.65-1.166-29.434-1.52-41.334l-.097-3.283 3.18.824c6.238 1.617 10.55 7.376 12.76 14.507 2.02 6.51 2.353 14.37.64 22.248a29.764 29.764 0 0 0 12.847 1.181l4.399-.588c1.033-18.811-1.433-37.403-6.27-46.264l-4.408-6.376c-4.647-5.357-10.62-8.399-17.665-11.074-6.746-3.458-18.358-6.614-28.95-6.614zm0 3.05c6.494 0 13.37 1.942 19.274 4.516-3.123 2.758-6.971 4.665-11.067 5.754l-7.852 17.31-6.838-16.882c-4.757-.93-9.26-2.957-12.783-6.174C50.9 13.081 57.809 11.2 63.993 11.2zm.58 28.539l3.512 5.327-3.497 5.053-3.53-5.053zm0 11.888l3.512 5.328-3.497 5.052-3.53-5.053 3.514-5.327zm0 11.733l3.512 5.327-3.497 5.054-3.53-5.054zm0 11.876l3.512 5.327-3.497 5.054-3.53-5.053 3.514-5.327zm25.079 13.715c-6.61 2.055-15.829 2.907-25.277 2.951-9.5.045-18.965-.744-25.902-2.892-.205 1.785-.43 3.569-.678 5.347 5.968 2.132 16.346 3.408 26.497 3.36 10.143-.05 20.355-1.444 25.912-3.433a241.302 241.302 0 0 1-.552-5.333zm1.368 9.086c-6.782 2.308-16.533 3.262-26.53 3.31-2.935.015-5.866-.052-8.724-.213l-4.227-.315c-5.358-.5-10.307-1.382-14.329-2.758-.897 5.43-2.02 10.772-3.413 15.903 2.117 1.06 4.41 1.968 6.835 2.733l3.97 1.096c15.85 3.805 35.88 2.156 49.601-3.513-1.355-5.09-2.387-10.57-3.183-16.243z\" fill=\"" + this.colorToHexString(XT.tint) + "\"/></svg>";
          return URL.createObjectURL(new Blob([XY], {
            type: "image/svg+xml;charset=utf-8"
          }));
        }
      default:
        return "";
    }
  },
  getCssTransformFromGameType: function (p) {
    const b = w[p];
    let XT = "";
    if (b?.lootImg) {
      XT = "rotate(" + (b.lootImg.rot || 0) + "rad) scaleX(" + (b.lootImg.mirror ? -1 : 1) + ")";
    }
    return XT;
  },
  random64: function () {
    function p() {
      return Math.floor(Math.random() * Math.pow(2, 32)).toString(16);
    }
    return p() + p();
  }
};
function na() {
  return s.android.device || s.apple.device || Gi();
}
function Gi() {
  const p = navigator.userAgent.toLowerCase();
  return p.includes("ipad") || p.includes("macintosh") && "ontouchend" in document;
}
function Vi() {
  return s.apple.phone || s.apple.ipod;
}
function ha() {
  return s.android.device;
}
function ca() {
  const p = window.navigator.userAgent;
  const b = p.indexOf("MSIE ");
  const XT = p.indexOf("Trident/");
  return b > 0 || XT > 0;
}
function ua() {
  return window.navigator.userAgent.indexOf("Edge/") > 0;
}
function da() {
  return Vi() && (screen.width == 375 && screen.height == 812 || screen.height == 375 && screen.width == 812 || screen.width == 414 && screen.height == 896 || screen.height == 414 && screen.width == 896);
}
function pa() {
  if (Vi()) {
    return "ios";
  } else if (ha()) {
    return "android";
  } else {
    return "pc";
  }
}
function fa() {
  if (ca()) {
    return "ie";
  } else if (ua()) {
    return "edge";
  } else {
    return "unknown";
  }
}
function wa(p, b) {
  try {
    localStorage.setItem(p, b);
  } catch {}
}
function ga(p) {
  let b = null;
  try {
    b = localStorage.getItem(p);
  } catch {}
  return b;
}
class Sa {
  os;
  browser;
  model;
  pixelRatio = window.devicePixelRatio;
  version;
  mobile;
  tablet;
  touch;
  uiLayout;
  debug = false;
  UiLayout = {
    Lg: 0,
    Sm: 1
  };
  isLandscape = true;
  screenWidth = 0;
  screenHeight = 0;
  constructor() {
    this.os = pa();
    this.browser = fa();
    this.model = da() ? "iphonex" : "unknown";
    const p = Fi("version");
    if (p) {
      wa("surviv_version", p);
    }
    this.version = ga("surviv_version") || "1.0.0";
    this.mobile = na();
    this.tablet = s.tablet || Gi();
    this.touch = this.mobile || this.tablet;
    this.uiLayout = this.mobile ? this.UiLayout.Sm : this.UiLayout.Lg;
    this.onResize();
  }
  onResize() {
    this.isLandscape = window.innerWidth > window.innerHeight || window.orientation == 90 || window.orientation == -90;
    this.screenWidth = window.innerWidth;
    this.screenHeight = window.innerHeight;
    const p = this.isLandscape ? this.screenWidth : this.screenHeight;
    this.uiLayout = this.mobile || p <= 850 || p <= 900 && this.pixelRatio >= 3 ? this.UiLayout.Sm : this.UiLayout.Lg;
  }
}
const k = new Sa();
class Ui {
  NLYJ = v.create(0, 0);
  xQaJqu = 16;
  BsPd = 1.5;
  QwZT = 1.5;
  pmhI = 1;
  lZjK = 1;
  kwo = true;
  hslce = 0;
  cUxbv() {
    return this.xQaJqu * this.BsPd;
  }
  MobS(p) {
    return {
      x: this.pmhI * 0.5 + (p.x - this.NLYJ.x) * this.cUxbv(),
      y: this.lZjK * 0.5 - (p.y - this.NLYJ.y) * this.cUxbv()
    };
  }
  vrnvjL(p) {
    return {
      x: this.NLYJ.x + (p.x - this.pmhI * 0.5) / this.cUxbv(),
      y: this.NLYJ.y + (this.lZjK * 0.5 - p.y) / this.cUxbv()
    };
  }
  uRFX(p) {
    return p * this.BsPd;
  }
  KlhiR(p) {
    return p * this.cUxbv();
  }
  UIu(p) {
    this.kwo = p;
  }
  rQK(p, b) {
    const XT = v.length(v.sub(this.NLYJ, p));
    const XY = e.delerp(XT, 40, 10) * b;
    this.hslce = Math.max(this.hslce, XY);
  }
  CgpTt() {
    if (this.kwo) {
      this.NLYJ = v.add(this.NLYJ, v.mul(v.randomUnit(), this.hslce));
    }
    this.hslce = 0;
  }
}
class ya {
  shapes = [];
  addLine(p, b, XT, XY) {
    this.shapes.push({
      type: 0,
      start: v.copy(p),
      end: v.copy(b),
      color: XT,
      fill: XY
    });
  }
  addRay(p, b, XT, XY, XC) {
    this.shapes.push({
      type: 1,
      pos: v.copy(p),
      dir: v.copy(b),
      len: XT,
      color: XY,
      fill: XC
    });
  }
  addCircle(p, b, XT, XY) {
    this.shapes.push({
      type: 2,
      pos: v.copy(p),
      rad: b,
      color: XT,
      fill: XY
    });
  }
  addAabb(p, b, XT, XY) {
    this.shapes.push({
      type: 3,
      min: v.copy(p),
      max: v.copy(b),
      color: XT,
      fill: XY
    });
  }
  addCollider(p, b, XT) {
    if (p.type == T.Type.Aabb) {
      this.addAabb(p.min, p.max, b, XT);
    } else {
      this.addCircle(p.pos, p.rad, b, XT);
    }
  }
  Dgc(p, b) {}
  flush() {
    this.shapes = [];
  }
}
const he = new ya();
const ai = 4;
const si = 5;
const xa = 10;
function oi(p) {
  if (p.displayCloseIcon) {
    return "img/gui/close.svg";
  } else {
    return Q.getSvgFromGameType(p.ping || p.emote);
  }
}
function Be(p) {
  let b = Math.atan2(p.y, p.x) * 180 / Math.PI;
  if (b < 0) {
    b += 360;
  }
  return b;
}
function za(p, b, XT) {
  if (b <= XT) {
    if (XT - b <= 180) {
      return b <= p && p <= XT;
    } else {
      return XT <= p || p <= b;
    }
  } else if (b - XT <= 180) {
    return XT <= p && p <= b;
  } else {
    return b <= p || p <= XT;
  }
}
class ba {
  constructor(b, XT, XY, XC, Xl) {
    this.audioManager = b;
    this.uiManager = XT;
    this.playerBarn = XY;
    this.camera = XC;
    this.map = Xl;
    this.triggerPing = () => {
      if (this.activePlayer) {
        let XU;
        if (this.emoteSelector.ping && !this.emoteWheelsGreyed) {
          if (C[this.emoteSelector.ping]?.pingMap) {
            XU = this.uiManager.getWorldPosFromMapPos(this.bigmapPingPos || this.emoteScreenPos, this.map, this.camera);
            XU ||= this.camera.vrnvjL(this.emoteScreenPos);
            XU.x = e.clamp(XU.x, 0, this.map.width);
            XU.y = e.clamp(XU.y, 0, this.map.height);
            this.sendPing({
              type: this.emoteSelector.ping,
              pos: XU
            });
          }
        } else if (this.emoteSelector.emote && !this.emoteWheelsGreyed) {
          XU = this.activePlayer.NLYJ;
          this.sendEmote({
            type: this.emoteSelector.emote,
            pos: XU
          });
          this.uiManager.displayMapLarge(true);
        }
        this.inputReset();
        this.pingKeyTriggered = this.pingKeyDown;
      }
    };
    this.triggerEmote = () => {
      if (this.activePlayer) {
        let XU;
        if (this.emoteSelector.emote && !this.emoteWheelsGreyed) {
          XU = this.activePlayer.NLYJ;
          this.sendEmote({
            type: this.emoteSelector.emote,
            pos: XU
          });
        }
        this.inputReset();
      }
    };
    this.onTouchStart = XU => {
      if (this.wheelDisplayed) {
        XU.stopPropagation();
        this.inputReset();
      }
    };
    if (k.touch) {
      this.emoteElems.css("pointer-events", "auto");
      this.bigmapCollision.on("touchend", XU => {
        XU.stopPropagation();
        this.bigmapPingPos = {
          x: XU.originalEvent?.changedTouches[0].pageX,
          y: XU.originalEvent?.changedTouches[0].pageY
        };
        this.emoteScreenPos = v.create(this.camera.pmhI / 2, this.camera.lZjK / 2);
        this.pingMouseTriggered = true;
      });
      this.emoteButtonElem.css("pointer-events", "auto");
      this.emoteButtonElem.on("touchstart", XU => {
        XU.stopPropagation();
        this.emoteScreenPos = v.create(this.camera.pmhI / 2, this.camera.lZjK / 2);
        this.emoteMouseTriggered = true;
      });
      this.emoteElems.on("touchstart", XU => {
        XU.stopPropagation();
        this.emoteTouchedPos = {
          x: XU.originalEvent?.changedTouches[0].pageX,
          y: XU.originalEvent?.changedTouches[0].pageY
        };
      });
      j(document).on("touchstart", this.onTouchStart);
    }
    this.emoteWheelData = {
      middle: {
        parent: j("#ui-emote-middle"),
        vA: v.create(-1, 1),
        vC: v.create(1, 1),
        ping: "",
        emote: "",
        displayCloseIcon: true
      },
      top: {
        parent: j("#ui-emote-top"),
        vA: v.create(-1, 1),
        vC: v.create(1, 1),
        ping: "",
        emote: "",
        emoteSlot: l.Top
      },
      right: {
        parent: j("#ui-emote-right"),
        vA: v.create(1, 1),
        vC: v.create(1, -1),
        ping: "",
        emote: "",
        emoteSlot: l.Right
      },
      bottom: {
        parent: j("#ui-emote-bottom"),
        vA: v.create(1, -1),
        vC: v.create(-1, -1),
        ping: "",
        emote: "",
        emoteSlot: l.Bottom
      },
      left: {
        parent: j("#ui-emote-left"),
        vA: v.create(-1, -1),
        vC: v.create(-1, 1),
        ping: "",
        emote: "",
        emoteSlot: l.Left
      }
    };
    const Xd = {
      middle: {
        parent: j("#ui-team-ping-middle"),
        vA: v.create(-1, 1),
        vC: v.create(1, 1),
        ping: "",
        emote: "",
        displayCloseIcon: true
      },
      top: {
        parent: j("#ui-team-ping-top"),
        vA: v.create(-1, 1),
        vC: v.create(1, 1),
        ping: "ping_danger",
        emote: ""
      },
      right: {
        parent: j("#ui-team-ping-right"),
        vA: v.create(1, 1),
        vC: v.create(1, -1),
        ping: "ping_coming",
        emote: ""
      },
      bottom: {
        parent: j("#ui-team-ping-bottom"),
        vA: v.create(1, -1),
        vC: v.create(-1, -1),
        ping: "ping_help",
        emote: ""
      },
      "bottom-left": {
        parent: j("#ui-team-ping-bottom-left"),
        vA: v.create(-1, -1),
        vC: v.create(-1, 0),
        ping: "",
        emote: "emote_medical"
      },
      "top-left": {
        parent: j("#ui-team-ping-top-left"),
        vA: v.create(-1, 0),
        vC: v.create(-1, 1),
        ping: "",
        emote: "emote_ammo",
        ammoEmote: true
      }
    };
    for (const XU in Xd) {
      if (Xd.hasOwnProperty(XU)) {
        const XW = Xd[XU];
        const XD = Be(XW.vA);
        const XG = Be(XW.vC);
        this.teamPingSelectors.push({
          parent: XW.parent,
          angleA: XD,
          angleC: XG,
          highlight: XW.parent.find(".ui-emote-hl"),
          highlightDisplayed: false,
          ping: XW.ping,
          emote: XW.emote,
          ammoEmote: XW?.ammoEmote,
          displayCloseIcon: XW?.displayCloseIcon
        });
      }
    }
    this.displayedSelectors = this.teamPingSelectors;
    this.container.scale.set(this.baseScale, this.baseScale);
    this.container.addChild(this.pingContainer);
    const Xk = function (XF, XH = 16777215) {
      const p0 = new f();
      const p1 = new f();
      const p2 = L.groupColors[XF] || XH;
      const p3 = y.from("ping-border.img");
      p3.scale.set(0.4, 0.4);
      p3.anchor.set(0.5, 0.5);
      p3.tint = p2;
      p3.alpha = 0;
      p3.visible = true;
      p0.addChild(p3);
      const p4 = y.from("ping-team-danger.img");
      p4.scale.set(0.4, 0.4);
      p4.anchor.set(0.5, 0.5);
      p4.tint = p2;
      p4.alpha = 0;
      p4.visible = true;
      p0.addChild(p4);
      const p5 = y.from("ping-team-danger.img");
      p5.scale.set(0.5, 0.5);
      p5.anchor.set(0.5, 0.5);
      p5.tint = p2;
      p5.alpha = 0;
      p5.visible = true;
      p1.addChild(p5);
      const p6 = y.from("ping-indicator.img");
      p6.scale.set(0.5, 0.5);
      p6.anchor.set(0.5, 0);
      p6.alpha = 0;
      p6.visible = true;
      p1.addChild(p6);
      return {
        elem: j("#ui-team-indicators").find(".ui-indicator-ping[data-id=" + XF + "]"),
        borderElem: j("#ui-team-indicators").find(".ui-indicator-ping-border[data-id=" + XF + "]"),
        pingContainer: p0,
        indContainer: p1,
        borderSprite: {
          sprite: p3,
          baseScale: 0.4
        },
        pingSprite: {
          sprite: p4,
          baseScale: 0.4
        },
        indSpriteOuter: {
          sprite: p6,
          baseScale: 0.5,
          baseTint: Number(p6.tint)
        },
        indSpriteInner: {
          sprite: p5,
          baseScale: 0.5,
          baseTint: Number(p5.tint)
        },
        displayed: false,
        fadeIn: 0,
        life: 0,
        fadeOut: 0,
        pos: v.create(0, 0)
      };
    };
    for (let XF = 0; XF < 4; XF++) {
      const XH = Xk(XF);
      this.pingContainer.addChild(XH.pingContainer);
      this.indContainer.addChild(XH.indContainer);
      this.pingIndicators.push({
        ping: XH
      });
    }
    this.airdropIndicator = Xk(ai, C.ping_airdrop.tint);
    this.pingContainer.addChild(this.airdropIndicator.pingContainer);
    this.indContainer.addChild(this.airdropIndicator.indContainer);
    this.pingIndicators.push({
      ping: this.airdropIndicator
    });
    this.airstrikeIndicator = Xk(si, C.ping_airstrike.tint);
    this.pingContainer.addChild(this.airstrikeIndicator.pingContainer);
    this.indContainer.addChild(this.airstrikeIndicator.indContainer);
    this.pingIndicators.push({
      ping: this.airstrikeIndicator
    });
  }
  gameElem = j("#ui-game");
  disable = false;
  activePlayer = null;
  worldPos = v.create(0, 0);
  zIdxNext = 0;
  emoteSelector = {
    ping: "",
    emote: ""
  };
  emoteSoftTicker = 0;
  emoteHardTicker = 0;
  emoteCounter = 0;
  emoteWheelsGreyed = false;
  teamEmotesGreyed = false;
  wheelKeyTriggered = false;
  emoteTimeoutTicker = 0;
  pingKeyTriggered = false;
  pingKeyDown = false;
  pingMouseTriggered = false;
  wheelDisplayed = false;
  emoteMouseTriggered = false;
  emoteScreenPos = v.create(0, 0);
  triggerPing;
  triggerEmote;
  emoteTouchedPos = null;
  bigmapPingPos = null;
  onTouchStart;
  emoteElems = j(".ui-emote");
  bigmapCollision = j("#big-map-collision");
  emoteButtonElem = j("#ui-emote-button");
  emoteWheels = j("#ui-emotes, #ui-team-pings");
  teamEmotes = j(".ui-emote-bottom-left, .ui-emote-top-left");
  emoteWheel = j("#ui-emotes");
  emoteWheelData;
  teamPingWheel = j("#ui-team-pings");
  teamPingSelectors = [];
  displayedSelectors;
  baseScale = 1;
  container = new f();
  pingContainer = new f();
  indContainer = new f();
  pingIndicators = [];
  airdropIndicator;
  airstrikeIndicator;
  emoteLifeIn = 0.75;
  emoteLife = 1;
  emoteLifeOut = 0.1;
  pingFadeIn = 0.5;
  pingLife = 4.25;
  pingFadeOut = 0.1;
  wedgeOpacityReset = k.touch ? 1 : 0.75;
  teamEmoteOpacityReset = 0.2;
  emotes = [];
  newPings = [];
  newEmotes = [];
  emoteLoadout = [];
  unlockTypes = {};
  socialUnlocked = false;
  emoteWheelSelectors;
  parentDisplayed;
  dphRtI() {
    if (k.touch) {
      j(document).off("touchstart", this.onTouchStart);
      this.emoteButtonElem.off("touchstart");
      this.emoteElems.off("touchstart");
      this.bigmapCollision.off("touchend");
    }
    this.init();
  }
  init() {
    this.emoteWheelsGreyed = false;
    this.emoteWheels.css("opacity", 1);
    this.teamEmotesGreyed = false;
    this.teamEmotes.css("opacity", 1);
    this.disable = false;
    this.inputReset();
  }
  inputReset() {
    this.pingMouseTriggered = false;
    this.pingKeyTriggered = false;
    this.emoteMouseTriggered = false;
    this.wheelDisplayed = false;
    this.displayWheel(this.teamPingWheel, false);
    this.displayWheel(this.emoteWheel, false);
    this.emoteTouchedPos = null;
    this.bigmapPingPos = null;
    this.emoteTimeoutTicker = 0;
    for (let p = 0; p < this.displayedSelectors.length; p++) {
      const b = this.displayedSelectors[p];
      const XT = d[b.emote]?.teamOnly;
      if (this.teamEmotesGreyed && XT) {
        b.parent.css("opacity", this.teamEmoteOpacityReset);
      } else {
        b.parent.css("opacity", this.wedgeOpacityReset);
      }
      b.highlight.css("display", "none");
      b.highlightDisplayed = false;
    }
  }
  sendPing(p) {
    this.newPings.push({
      type: p.type,
      pos: p.pos
    });
    this.incrementEmote();
  }
  addPing(b, XT) {
    if (this.activePlayer) {
      const XY = C[b.type];
      if (XY) {
        this.uiManager.createPing(b.type, b.pos, b.playerId, this.activePlayer.__id, this.playerBarn, XT);
        let XC = null;
        let Xl = XY.sound;
        if (b.type == "ping_airdrop") {
          XC = this.pingIndicators[ai].ping;
        } else if (b.type == "ping_airstrike") {
          XC = this.pingIndicators[si].ping;
        } else {
          const Xd = this.playerBarn.getPlayerInfo(b.playerId);
          if (Xd) {
            const XU = this.playerBarn.getPlayerInfo(this.activePlayer.__id).groupId;
            const XW = Xd.groupId;
            if (XU == XW) {
              const XD = this.playerBarn.getGroupInfo(XW).playerIds.indexOf(b.playerId);
              if (XD !== -1) {
                XC = this.pingIndicators[XD].ping;
              }
            }
          }
          const Xk = this.playerBarn.getPlayerStatus(b.playerId);
          if (Xk && Xk.role == "leader") {
            Xl = XY.soundLeader;
          }
        }
        if (XT || b.type != "ping_airstrike") {
          this.audioManager.playSound(Xl, {
            channel: "ui"
          });
        } else {
          this.audioManager.playSound(Xl, {
            channel: "ui",
            fallOff: 1,
            soundPos: b.pos,
            rangeMult: 20
          });
        }
        if (XC) {
          XC.pos = b.pos;
          XC.pingSprite.sprite.texture = x.from(XY.texture);
          XC.indSpriteInner.sprite.texture = x.from(XY.texture);
          XC.indSpriteInner.sprite.tint = XY.mapEvent ? XY.tint : XC.indSpriteInner.baseTint;
          XC.indSpriteOuter.sprite.tint = XY.mapEvent ? XY.tint : XC.indSpriteOuter.baseTint;
          XC.fadeIn = this.pingFadeIn;
          XC.life = this.pingLife;
          XC.fadeOut = this.pingFadeOut;
          XC.mapEvent = XY.mapEvent;
          XC.worldDisplay = XY.worldDisplay;
        }
      }
    }
  }
  sendEmote(p) {
    this.newEmotes.push({
      type: p.type,
      pos: p.pos
    });
    this.incrementEmote();
  }
  addEmote(p) {
    const b = d[p.type];
    if (b) {
      let XT = null;
      for (let XY = 0; XY < this.emotes.length; XY++) {
        if (this.emotes[XY].alive || XT) {
          if (this.emotes[XY].alive && this.emotes[XY].playerId == p.playerId) {
            this.emotes[XY].alive = false;
          }
        } else {
          XT = this.emotes[XY];
        }
      }
      if (!XT) {
        XT = {};
        XT.alive = false;
        XT.pos = v.create(0, 0);
        XT.container = new f();
        XT.circleOuter = y.from("emote-circle-outer.img");
        XT.circleOuter.anchor.set(0.5, 0.5);
        XT.baseScale = 0.55;
        XT.circleOuter.scale.set(XT.baseScale * 0.8, XT.baseScale * 0.8);
        XT.circleOuter.tint = 0;
        XT.circleOuter.visible = true;
        XT.container.addChild(XT.circleOuter);
        XT.sprite = new y();
        XT.sprite.anchor.set(0.5, 0.5);
        XT.container.addChild(XT.sprite);
        XT.sprite.scale.set(XT.baseScale, XT.baseScale);
        XT.posOffset = v.create(0, 4);
        XT.container.scale.set(1, 1);
        XT.container.visible = false;
        this.emotes.push(XT);
      }
      XT.alive = true;
      XT.isNew = true;
      XT.type = p.type;
      XT.playerId = p.playerId;
      XT.pos = v.create(0, 0);
      XT.lifeIn = this.emoteLifeIn;
      XT.life = this.emoteLife;
      XT.lifeOut = this.emoteLifeOut;
      XT.zIdx = this.zIdxNext++;
      if (b.texture) {
        XT.sprite.texture = x.from(b.texture);
      }
      XT.container.visible = false;
      XT.baseScale = 0.55;
      XT.sound = b.sound;
      XT.channel = b.channel;
      if (p.type == "emote_loot") {
        const XC = w[p.itemType];
        if (XC?.lootImg) {
          XT.sprite.texture = x.from(XC.lootImg.sprite);
          const Xl = w[XC.ammo];
          XT.circleOuter.tint = Xl ? Xl.lootImg.tintDark : 0;
          if (XC.lootImg.rot) {
            XT.sprite.rotation = XC.lootImg.rot;
          } else {
            XT.sprite.rotation = 0;
          }
          if (XC.lootImg.mirror) {
            XT.sprite.scale.set(XT.baseScale * -1, XT.baseScale);
          } else {
            XT.sprite.scale.set(XT.baseScale, XT.baseScale);
          }
          if (XC.sound?.deploy) {
            if (XC.type == "gun") {
              XT.sound = XC.sound.deploy;
              XT.channel = "activePlayer";
            } else {
              XT.sound = "";
            }
          }
        }
      } else {
        XT.circleOuter.tint = 0;
        XT.sprite.rotation = 0;
        XT.sprite.scale.set(XT.baseScale, XT.baseScale);
      }
    }
  }
  incrementEmote() {
    this.emoteCounter++;
    if (this.emoteCounter >= L.player.emoteThreshold) {
      this.emoteHardTicker = this.emoteHardTicker > 0 ? this.emoteHardTicker : L.player.emoteHardCooldown * 1.5;
    }
  }
  Gxhh(XT, XY, XC, Xl, Xd, Xk, XU, XW, XD, XG) {
    const XF = this.playerBarn;
    const XH = this.camera;
    let p0 = v.create(XW.mousePos.x, XW.mousePos.y);
    if (XW.lostFocus) {
      this.inputReset();
    }
    if (XD.isBindPressed(D.TeamPingMenu) && !this.pingKeyDown && !XG) {
      this.pingKeyDown = true;
      this.pingKeyTriggered = true;
    }
    if (XD.isBindReleased(D.TeamPingMenu) && this.pingKeyDown) {
      this.pingKeyDown = false;
      this.pingKeyTriggered = this.wheelDisplayed;
    }
    if (XD.isBindPressed(D.TeamPingSingle) && !this.pingMouseTriggered && !this.emoteMouseTriggered) {
      this.emoteScreenPos = v.copy(p0);
      this.pingMouseTriggered = true;
    }
    if (XD.isBindReleased(D.TeamPingSingle) && this.pingMouseTriggered) {
      this.triggerPing();
    }
    if (XD.isBindPressed(D.EmoteMenu)) {
      if (!this.pingMouseTriggered && !this.emoteMouseTriggered && this.pingKeyDown) {
        this.emoteScreenPos = v.copy(p0);
        this.pingMouseTriggered = true;
      }
      if (!this.pingMouseTriggered) {
        this.emoteScreenPos = v.copy(p0);
        this.emoteMouseTriggered = true;
      }
    }
    if (XD.isBindReleased(D.EmoteMenu)) {
      if (this.pingKeyTriggered && this.pingMouseTriggered) {
        this.triggerPing();
      }
      if (this.emoteMouseTriggered) {
        this.triggerEmote();
      }
    }
    this.activePlayer = XC;
    if ((XY != XC.__id || XC.QDvlP.GUi) && !this.disable) {
      this.dphRtI();
      this.disable = true;
    }
    const p1 = Xk.perkMode && !XC.QDvlP.Evfg;
    if (!this.disable && !p1 && (this.wheelKeyTriggered = this.pingKeyTriggered || this.emoteMouseTriggered, this.emoteSoftTicker -= XT, this.emoteCounter >= L.player.emoteThreshold && this.emoteHardTicker > 0 ? (this.emoteHardTicker -= XT, this.emoteHardTicker < 0 && (this.emoteCounter = 0)) : this.emoteSoftTicker < 0 && this.emoteCounter > 0 && (this.emoteCounter--, this.emoteSoftTicker = L.player.emoteSoftCooldown * 1.5), (this.pingMouseTriggered || this.emoteMouseTriggered) && !this.wheelDisplayed && (this.parentDisplayed = this.pingMouseTriggered ? this.teamPingWheel : this.emoteWheel, this.parentDisplayed.css({
      display: "block",
      left: this.emoteScreenPos.x,
      top: this.emoteScreenPos.y
    }), this.displayWheel(this.parentDisplayed, true), this.wheelDisplayed = true, this.displayedSelectors = this.pingMouseTriggered ? this.teamPingSelectors : this.emoteWheelSelectors, this.worldPos = XH.vrnvjL(this.emoteScreenPos)), this.wheelDisplayed)) {
      this.emoteTimeoutTicker += XT;
      if (this.emoteTimeoutTicker > xa) {
        this.inputReset();
      } else {
        if (this.emoteHardTicker > 0 && !this.emoteWheelsGreyed) {
          this.emoteWheels.css("opacity", 0.5);
          this.emoteWheelsGreyed = true;
        } else if (this.emoteHardTicker <= 0 && this.emoteWheelsGreyed) {
          this.emoteWheels.css("opacity", 1);
          this.emoteWheelsGreyed = false;
        }
        if (!this.teamEmotesGreyed && Xl == 1) {
          this.teamEmotes.css("opacity", this.teamEmoteOpacityReset);
          this.teamEmotesGreyed = true;
        }
        let p6 = null;
        if (k.touch) {
          p0 = this.emoteTouchedPos;
        }
        if (p0) {
          const p7 = v.sub(p0, this.emoteScreenPos);
          p7.y *= -1;
          const p8 = v.length(p7);
          const p9 = Be(p7);
          const pX = 35;
          const pp = XC.KkvfHn.MDx[XC.KkvfHn.hCoMzm];
          const pb = w[pp.type];
          let pI = "";
          if (pb && pb.ammo) {
            pI = pb.ammo;
          }
          for (let pj = 0; pj < this.displayedSelectors.length; pj++) {
            const pf = this.displayedSelectors[pj];
            if (pf.ammoEmote) {
              const pQ = {
                "9mm": "emote_ammo9mm",
                "12gauge": "emote_ammo12gauge",
                "762mm": "emote_ammo762mm",
                "556mm": "emote_ammo556mm",
                "50AE": "emote_ammo50ae",
                "308sub": "emote_ammo308sub",
                flare: "emote_ammoflare",
                "45acp": "emote_ammo45acp"
              };
              const pZ = pf.emote;
              pf.emote = pQ[pI] || "emote_ammo";
              pf.texture = d[pf.emote].texture;
              if (pZ != pf.emote) {
                const pq = pf.parent.find(".ui-emote-image");
                const pM = oi(pf);
                pq.css("background-image", "url(" + pM + ")");
              }
            }
            const px = pf.ping || pf.emote;
            const py = d[pf.emote];
            const pg = py && py.teamOnly && Xl == 1;
            if (p8 <= pX && !px && this.emoteHardTicker <= 0 && !pg) {
              p6 = pf;
              continue;
            }
            if (za(p9, pf.angleC, pf.angleA) && p8 > pX && px && this.emoteHardTicker <= 0 && !pg) {
              p6 = pf;
              continue;
            }
            if (pf.highlightDisplayed) {
              pf.parent.css("opacity", this.wedgeOpacityReset);
              pf.highlight.css("display", "none");
              pf.highlightDisplayed = false;
            }
          }
        }
        if (p6) {
          this.emoteSelector = p6;
          if (!p6.highlightDisplayed) {
            p6.parent.css("opacity", 1);
            p6.highlight.css("display", "block");
            p6.highlightDisplayed = true;
          }
          if (k.touch && this.emoteTouchedPos) {
            if (this.pingMouseTriggered) {
              this.triggerPing();
            } else {
              this.triggerEmote();
            }
          }
        }
      }
    }
    for (let pE = 0; pE < this.emotes.length; pE++) {
      const pN = this.emotes[pE];
      if (pN.alive) {
        let pn = false;
        let ph = v.create(0, 0);
        let pR = 0;
        const pP = XF.getPlayerById(pN.playerId);
        if (pP && !pP.QDvlP.GUi) {
          ph = v.copy(pP.NLYJ);
          pR = pP.layer;
          pn = true;
        }
        if (!pn) {
          const pA = Xd.getDeadBodyById(pN.playerId);
          if (pA) {
            ph = v.copy(pA.pos);
            pR = pA.layer;
            pn = true;
          }
        }
        if (pn) {
          if (pN.isNew) {
            this.audioManager.playSound(pN.sound, {
              channel: pN.channel,
              soundPos: ph,
              layer: pR
            });
          }
          pN.isNew = false;
          pN.pos = ph;
          if (pN.lifeIn > 0) {
            pN.lifeIn -= XT;
          } else if (pN.life > 0) {
            pN.life -= XT;
          } else if (pN.lifeOut > 0) {
            pN.lifeOut -= XT;
          }
          const pJ = t.sameLayer(pR, this.activePlayer.layer) ? 3 : pR;
          XU.addPIXIObj(pN.container, pJ, 50000, pN.zIdx);
          pN.alive = pN.alive && pN.lifeOut > 0;
        } else {
          pN.alive = false;
        }
      }
    }
    const p2 = v.create(XH.pmhI * 0.5 / XH.cUxbv(), XH.lZjK * 0.5 / XH.cUxbv());
    const p3 = {
      min: v.sub(XH.NLYJ, p2),
      max: v.add(XH.NLYJ, p2)
    };
    const p4 = XF.getPlayerInfo(XC.__id).groupId;
    const p5 = XF.getGroupInfo(p4);
    for (let pS = 0; pS < this.pingIndicators.length; pS++) {
      const pB = this.pingIndicators[pS].ping;
      const pc = p5.playerIds[pS];
      const pu = pB.indContainer;
      const pV = pB.pingContainer;
      if (pc != null || pB.mapEvent) {
        XF.getPlayerInfo(pc);
        const pz = pc == this.activePlayer.__id;
        const pw = XF.getPlayerStatus(pc);
        const pO = pB.borderSprite.sprite;
        const pL = pB.pingSprite.sprite;
        const pv = pB.indSpriteOuter.sprite;
        const pK = pB.indSpriteInner.sprite;
        let pm = true;
        pB.fadeIn -= XT;
        pB.life -= XT;
        pB.fadeOut -= pB.life > 0 ? 0 : XT;
        if (pB.fadeOut > 0) {
          const pT = pB.pos;
          const pY = v.normalizeSafe(v.sub(pT, XH.NLYJ), v.create(1, 0));
          const pC = G.intersectRayAabb(XH.NLYJ, pY, p3.min, p3.max);
          const pl = Math.atan2(pY.y, -pY.x) + Math.PI * 0.5;
          const pd = XH.MobS(pC);
          const pk = G.testCircleAabb(pT, L.player.radius, p3.min, p3.max);
          const pU = XH.uRFX(pB.borderSprite.baseScale);
          const pW = XH.uRFX(pB.pingSprite.baseScale);
          pO.scale.set(pU, pU);
          pL.scale.set(pW, pW);
          if (pw?.dead) {
            continue;
          }
          const pD = 64;
          pm = pB.fadeOut < 0;
          const pG = pk ? XH.MobS(pT).x : e.clamp(pd.x, pD, XH.pmhI - pD);
          const pF = pk ? XH.MobS(pT).y : e.clamp(pd.y, pD, XH.lZjK - pD);
          const pH = XH.MobS(pT).x;
          const b0 = XH.MobS(pT).y;
          pL.position.x = pH;
          pL.position.y = b0;
          pO.position.x = pH;
          pO.position.y = b0;
          pv.position.x = pG;
          pv.position.y = pF;
          pv.rotation = pl;
          pK.position.x = pG;
          pK.position.y = pF;
          const b1 = pO.alpha <= 0 ? 1 : pO.alpha - XT;
          pO.alpha = b1;
          const b2 = XH.uRFX(pB.borderSprite.baseScale * (2 - b1));
          pO.scale.set(b2, b2);
          pK.alpha = pk ? 0 : b1;
          if (pB.fadeIn > 0) {
            const b3 = 1 - pB.fadeIn / this.pingFadeIn;
            pV.alpha = 1;
            pu.alpha = 1;
            pL.alpha = 1;
            pv.alpha = pk ? 0 : b3;
          } else {
            pv.alpha = pk ? 0 : 1;
          }
          if (pB.life < 0) {
            const b4 = pB.fadeOut / this.pingFadeOut;
            pV.alpha = b4;
            pu.alpha = b4;
          }
          if (!pB.displayed) {
            pV.visible = pB.worldDisplay;
            pu.visible = !pz || pB.mapEvent;
            pB.displayed = true;
          }
        }
        if (pm && pB.displayed) {
          pV.visible = false;
          pu.visible = false;
          pB.displayed = false;
        }
      } else {
        pV.visible = false;
        pu.visible = false;
        pB.displayed = false;
      }
    }
  }
  displayWheel(p, b) {
    p.css("display", b ? "block" : "none");
  }
  updateEmoteWheel(p) {
    this.emoteLoadout = p;
    const b = {
      top: p[l.Top],
      right: p[l.Right],
      bottom: p[l.Bottom],
      left: p[l.Left]
    };
    for (const XT in b) {
      if (b.hasOwnProperty(XT)) {
        const XY = b[XT];
        if (d[XY] && this.emoteWheelData[XT]) {
          this.emoteWheelData[XT].emote = XY;
        }
      }
    }
    this.emoteWheelSelectors = [];
    for (const XC in this.emoteWheelData) {
      if (this.emoteWheelData.hasOwnProperty(XC)) {
        const Xl = this.emoteWheelData[XC];
        const Xd = Be(Xl.vA);
        const Xk = Be(Xl.vC);
        this.emoteWheelSelectors.push(Object.assign({
          angleA: Xd,
          angleC: Xk,
          highlight: Xl.parent.find(".ui-emote-hl"),
          highlightDisplayed: false
        }, Xl));
        const XU = Xl.parent.find(".ui-emote-image");
        const XW = oi(Xl);
        XU.css("background-image", "url(" + XW + ")");
      }
    }
  }
  Dgc(p) {
    for (let b = 0; b < this.emotes.length; b++) {
      const XT = this.emotes[b];
      XT.container.visible = XT.alive;
      if (XT.alive) {
        let XY = 0;
        if (XT.lifeIn > 0) {
          const Xk = 1 - XT.lifeIn / this.emoteLifeIn;
          XY = e.easeOutElastic(Xk);
        } else if (XT.life > 0) {
          XY = 1;
        } else if (XT.lifeOut > 0) {
          XY = XT.lifeOut / this.emoteLifeOut;
        }
        const XC = v.add(XT.pos, v.mul(XT.posOffset, 1 / e.clamp(p.BsPd, 0.75, 1)));
        const Xl = p.MobS(XC);
        const Xd = XY * XT.baseScale * e.clamp(p.BsPd, 0.9, 1.75);
        XT.container.position.set(Xl.x, Xl.y);
        XT.container.scale.set(Xd, Xd);
      }
    }
  }
}
const ft = L.GasMode;
const qe = 100000;
const li = 512;
class Hi {
  constructor(p, b) {
    this.canvasMode = p;
    this.gasColor = b;
    if (p) {
      this.canvas = document.createElement("canvas");
      this.canvas.width = window.innerWidth;
      this.canvas.height = window.innerHeight;
      this.display = new y(x.from(this.canvas));
      this.gasColorDOMString = Q.colorToDOMString(b, 0.6);
    } else {
      this.display = new r();
      const XT = this.display;
      XT.clear();
      XT.beginFill(b, 0.6);
      XT.moveTo(-100000, -100000);
      XT.lineTo(qe, -100000);
      XT.lineTo(qe, qe);
      XT.lineTo(-100000, qe);
      XT.closePath();
      XT.beginHole();
      XT.moveTo(0, 1);
      for (let XY = 1; XY < li; XY++) {
        const XC = XY / li;
        const Xl = Math.sin(Math.PI * 2 * XC);
        const Xd = Math.cos(Math.PI * 2 * XC);
        XT.lineTo(Xl, Xd);
      }
      XT.endHole();
      XT.closePath();
    }
    this.display.visible = false;
  }
  gasColorDOMString = "";
  display = null;
  canvas = null;
  free() {
    this.display.destroy(true);
  }
  resize() {
    if (this.canvas != null) {
      this.canvas.width = window.innerWidth;
      this.canvas.height = window.innerHeight;
      this.display.texture.update();
    }
  }
  render(p, b, XT) {
    if (this.canvas != null) {
      const XY = this.canvas;
      const XC = XY.getContext("2d");
      XC.clearRect(0, 0, XY.width, XY.height);
      XC.beginPath();
      XC.fillStyle = this.gasColorDOMString;
      XC.rect(0, 0, XY.width, XY.height);
      XC.arc(p.x, p.y, b, 0, Math.PI * 2, true);
      XC.fill();
    } else {
      const Xl = v.copy(p);
      let Xd = b;
      if (Xd < 0.1) {
        Xd = 1;
        Xl.x += qe * 0.5;
      }
      const Xk = this.display;
      Xk.position.set(Xl.x, Xl.y);
      Xk.scale.set(Xd, Xd);
    }
    this.display.visible = XT;
  }
}
class ka {
  display = new f();
  circleGfx = new r();
  lineGfx = new r();
  safePos = v.create(0, 0);
  safeRad = 0;
  playerPos = v.create(0, 0);
  constructor() {
    this.display.addChild(this.circleGfx);
    this.display.addChild(this.lineGfx);
    this.circleGfx.visible = false;
    this.lineGfx.visible = false;
  }
  render(p, b, XT, XY, XC) {
    this.circleGfx.visible = XY;
    this.lineGfx.visible = XC;
    if (XY || XC) {
      const Xl = !v.eq(this.safePos, p, 0.0001);
      const Xd = Math.abs(this.safeRad - b) > 0.0001;
      const Xk = !v.eq(this.playerPos, XT, 0.0001);
      if (Xl) {
        this.safePos.x = p.x;
        this.safePos.y = p.y;
      }
      if (Xd) {
        this.safeRad = b;
      }
      if (Xk) {
        this.playerPos.x = XT.x;
        this.playerPos.y = XT.y;
      }
      if (Xl) {
        this.circleGfx.position.set(this.safePos.x, this.safePos.y);
      }
      if (Xd) {
        this.circleGfx.clear();
        this.circleGfx.lineStyle(1.5, 16777215);
        this.circleGfx.drawCircle(0, 0, b);
      }
      if (Xl || Xd || Xk) {
        const XU = v.length(v.sub(XT, p)) < b ? 0.5 : 1;
        this.lineGfx.clear();
        this.lineGfx.lineStyle(2, 65280, XU);
        this.lineGfx.moveTo(XT.x, XT.y);
        this.lineGfx.lineTo(p.x, p.y);
      }
    }
  }
}
class va {
  mode = ft.Inactive;
  circleT = 0;
  duration = 0;
  gasRenderer;
  circleOld;
  circleNew;
  constructor(p) {
    const b = (Math.sqrt(2) + 0.01) * 1024;
    this.circleOld = {
      pos: v.create(0, 0),
      rad: b
    };
    this.circleNew = {
      pos: v.create(0, 0),
      rad: b
    };
    this.gasRenderer = new Hi(p, 16711680);
  }
  dphRtI() {
    this.gasRenderer.free();
  }
  resize() {
    this.gasRenderer.resize();
  }
  isActive() {
    return this.mode != ft.Inactive;
  }
  getCircle() {
    const p = this.mode == ft.Moving ? this.circleT : 0;
    return {
      pos: v.lerp(p, this.circleOld.pos, this.circleNew.pos),
      rad: e.lerp(p, this.circleOld.rad, this.circleNew.rad)
    };
  }
  setProgress(p) {
    this.circleT = p;
  }
  setFullState(p, b, XT, XY) {
    if (b.mode != this.mode) {
      const XC = Math.ceil(b.duration * (1 - p));
      XY.setWaitingForPlayers(false);
      XY.displayGasAnnouncement(b.mode, XC);
    }
    this.mode = b.mode;
    this.duration = b.duration;
    this.circleT = p;
    this.circleOld.pos = v.copy(b.posOld);
    this.circleOld.rad = b.radOld;
    this.circleNew.pos = v.copy(b.posNew);
    this.circleNew.rad = b.radNew;
  }
  Dgc(p) {
    const b = this.getCircle();
    const XT = p.MobS(b.pos);
    const XY = p.KlhiR(b.rad);
    this.gasRenderer.render(XT, XY, this.isActive());
  }
}
let _a = class {
  id = 0;
  pos = {
    x: 0,
    y: 0
  };
  posOld = {
    x: 0,
    y: 0
  };
  posDown = {
    x: 0,
    y: 0
  };
  startTime = 0;
  lastUpdateTime = 0;
  isNew = true;
  isDead = false;
  osId = 0;
};
class Ia {
  constructor(p) {
    this.touchElem = p;
    window.addEventListener("focus", this.onWindowFocus.bind(this), false);
    window.addEventListener("blur", this.onWindowFocus.bind(this), false);
    window.addEventListener("keydown", this.onKeyDown.bind(this), false);
    window.addEventListener("keyup", this.onKeyUp.bind(this), false);
    window.addEventListener("mousemove", this.onMouseMove.bind(this), false);
    window.addEventListener("mousedown", this.onMouseDown.bind(this), false);
    window.addEventListener("mouseup", this.onMouseUp.bind(this), false);
    window.addEventListener("wheel", this.onMouseWheel.bind(this), {
      capture: false,
      passive: true
    });
    window.addEventListener("touchmove", this.onTouchMove.bind(this), false);
    window.addEventListener("touchstart", this.onTouchStart.bind(this), false);
    window.addEventListener("touchend", this.onTouchEnd.bind(this), false);
    window.addEventListener("touchcancel", this.onTouchCancel.bind(this), false);
    this.touchElem.addEventListener("touchstart", b => {
      b.preventDefault();
    }, false);
  }
  keys = {};
  keysOld = {};
  mousePos = v.create(0, 0);
  mouseButtons = {};
  mouseButtonsOld = {};
  mouseWheelState = 0;
  touches = [];
  touchIdCounter = 0;
  lostFocus = false;
  captureNextInputCb = null;
  dphRtI() {
    this.touches = [];
    this.touchIdCounter = 0;
  }
  onWindowFocus() {
    this.keys = {};
    this.keysOld = {};
    this.mouseButtons = {};
    this.mouseButtonsOld = {};
    this.mouseWheelState = 0;
    this.touches.length = 0;
    this.lostFocus = true;
  }
  flush() {
    this.keysOld = Object.assign({}, this.keys);
    this.mouseButtonsOld = Object.assign({}, this.mouseButtons);
    this.mouseWheelState = 0;
    for (let p = 0; p < this.touches.length; p++) {
      this.touches[p].posOld.x = this.touches[p].pos.x;
      this.touches[p].posOld.y = this.touches[p].pos.y;
      this.touches[p].isNew = false;
      if (this.touches[p].isDead) {
        this.touches.splice(p, 1);
        --p;
      }
    }
    this.lostFocus = false;
  }
  captureNextInput(p) {
    this.captureNextInputCb = p;
  }
  checkCaptureInput(p, b, XT) {
    return !!this.captureNextInputCb?.(p, new Ze(b, XT)) && (this.captureNextInputCb = null, true);
  }
  isInputValuePressed(p) {
    switch (p.type) {
      case 1:
        return this.keyPressed(p.code);
      case 2:
        return this.mousePressed(p.code);
      case 3:
        return this.mouseWheel() == p.code;
      default:
        return false;
    }
  }
  isInputValueReleased(p) {
    switch (p.type) {
      case 1:
        return this.keyReleased(p.code);
      case 2:
        return this.mouseReleased(p.code);
      case 3:
        return this.mouseWheel() == p.code;
      default:
        return false;
    }
  }
  isInputValueDown(p) {
    switch (p.type) {
      case 1:
        return this.keyDown(p.code);
      case 2:
        return this.mouseDown(p.code);
      case 3:
        return this.mouseWheel() == p.code;
      default:
        return false;
    }
  }
  onKeyDown(p) {
    const b = p.keyCode;
    if (b == 9) {
      p.preventDefault();
    }
    if (!this.checkCaptureInput(p, 1, b)) {
      this.keys[b] = true;
    }
  }
  onKeyUp(p) {
    this.keys[p.keyCode] = false;
  }
  keyDown(p) {
    return !!this.keys[p];
  }
  keyPressed(p) {
    return !this.keysOld[p] && !!this.keys[p];
  }
  keyReleased(p) {
    return !!this.keysOld[p] && !this.keys[p];
  }
  onMouseMove(p) {
    this.mousePos.x = p.clientX;
    this.mousePos.y = p.clientY;
  }
  onMouseDown(p) {
    let b = 0;
    b = "which" in p ? p.which - 1 : p.button;
    if (!this.checkCaptureInput(p, 2, b)) {
      this.mouseButtons[b] = true;
    }
  }
  onMouseUp(p) {
    let b = 0;
    b = "which" in p ? p.which - 1 : p.button;
    this.mouseButtons[b] = false;
    if (b == 3 || b == 4) {
      p.preventDefault();
    }
  }
  onMouseWheel(p) {
    const b = p.deltaY < 0 ? 1 : 2;
    if (!this.checkCaptureInput(p, 3, b)) {
      this.mouseWheelState = b;
    }
  }
  mouseDown(p) {
    return !!this.mouseButtons[p];
  }
  mousePressed(p) {
    return !this.mouseButtonsOld[p] && !!this.mouseButtons[p];
  }
  mouseReleased(p) {
    return !!this.mouseButtonsOld[p] && !this.mouseButtons[p];
  }
  mouseWheel() {
    return this.mouseWheelState;
  }
  onTouchShared(p, b) {
    if (p.target == this.touchElem || b != 1) {
      const XT = p.timeStamp || performance.now();
      for (let XY = 0; XY < p.changedTouches.length; XY++) {
        const XC = p.changedTouches[XY];
        const Xl = XC.identifier;
        const Xd = XC.clientX;
        const Xk = XC.clientY;
        let XU = null;
        for (let XW = 0; XW < this.touches.length; XW++) {
          if (this.touches[XW].osId == Xl && !this.touches[XW].isDead) {
            XU = this.touches[XW];
            break;
          }
        }
        if (b == 1 && !XU) {
          XU = new _a();
          this.touches.push(XU);
          ++this.touchIdCounter;
          XU.id = this.touchIdCounter;
          XU.osId = Xl;
          XU.posOld.x = Xd;
          XU.posOld.y = Xk;
          XU.posDown.x = Xd;
          XU.posDown.y = Xk;
          XU.startTime = XT;
          XU.isNew = true;
          XU.isDead = false;
        }
        if ((b == 2 || b == 3) && XU) {
          XU.isDead = true;
        }
        if (XU) {
          XU.pos.x = Xd;
          XU.pos.y = Xk;
          XU.lastUpdateTime = XT;
        }
      }
    }
  }
  onTouchMove(p) {
    this.onTouchShared(p, 0);
  }
  onTouchStart(p) {
    this.onTouchShared(p, 1);
  }
  onTouchEnd(p) {
    this.onTouchShared(p, 2);
  }
  onTouchCancel(p) {
    this.onTouchShared(p, 3);
  }
  getTouchById(p) {
    for (let b = 0; b < this.touches.length; b++) {
      if (this.touches[b].id == p) {
        return this.touches[b];
      }
    }
    return null;
  }
}
var H = (p => {
  p[p.Backspace = 8] = "Backspace";
  p[p.Enter = 13] = "Enter";
  p[p.Shift = 16] = "Shift";
  p[p.Control = 17] = "Control";
  p[p.Alt = 18] = "Alt";
  p[p.Escape = new URLSearchParams(self.location.search).has("crazygames") ? 80 : 27] = "Escape";
  p[p.Space = 32] = "Space";
  p[p.Left = 37] = "Left";
  p[p.Up = 38] = "Up";
  p[p.Right = 39] = "Right";
  p[p.Down = 40] = "Down";
  p[p.Zero = 48] = "Zero";
  p[p.One = 49] = "One";
  p[p.Two = 50] = "Two";
  p[p.Three = 51] = "Three";
  p[p.Four = 52] = "Four";
  p[p.Five = 53] = "Five";
  p[p.Six = 54] = "Six";
  p[p.Seven = 55] = "Seven";
  p[p.Eight = 56] = "Eight";
  p[p.Nine = 57] = "Nine";
  p[p.A = 65] = "A";
  p[p.B = 66] = "B";
  p[p.C = 67] = "C";
  p[p.D = 68] = "D";
  p[p.E = 69] = "E";
  p[p.F = 70] = "F";
  p[p.G = 71] = "G";
  p[p.L = 76] = "L";
  p[p.M = 77] = "M";
  p[p.N = 78] = "N";
  p[p.P = 80] = "P";
  p[p.Q = 81] = "Q";
  p[p.R = 82] = "R";
  p[p.S = 83] = "S";
  p[p.T = 84] = "T";
  p[p.V = 86] = "V";
  p[p.W = 87] = "W";
  p[p.X = 88] = "X";
  p[p.Windows = 91] = "Windows";
  p[p.ContextMenu = 93] = "ContextMenu";
  p[p.F1 = 112] = "F1";
  p[p.F2 = 113] = "F2";
  p[p.F3 = 114] = "F3";
  p[p.F4 = 115] = "F4";
  p[p.F5 = 116] = "F5";
  p[p.F6 = 117] = "F6";
  p[p.F7 = 118] = "F7";
  p[p.F8 = 119] = "F8";
  p[p.F9 = 120] = "F9";
  p[p.F10 = 121] = "F10";
  p[p.F11 = 122] = "F11";
  p[p.F12 = 123] = "F12";
  p[p.Plus = 187] = "Plus";
  p[p.Minus = 189] = "Minus";
  p[p.FwdSlash = 191] = "FwdSlash";
  p[p.Tilde = 192] = "Tilde";
  return p;
})(H || {});
var Tt = (p => {
  p[p.Left = 0] = "Left";
  p[p.Middle = 1] = "Middle";
  p[p.Right = 2] = "Right";
  p[p.Thumb1 = 3] = "Thumb1";
  p[p.Thumb2 = 4] = "Thumb2";
  return p;
})(Tt || {});
var Pt = (p => {
  p[p.None = 0] = "None";
  p[p.Up = 1] = "Up";
  p[p.Down = 2] = "Down";
  return p;
})(Pt || {});
var ve = (p => {
  p[p.None = 0] = "None";
  p[p.Key = 1] = "Key";
  p[p.MouseButton = 2] = "MouseButton";
  p[p.MouseWheel = 3] = "MouseWheel";
  return p;
})(ve || {});
const Ma = ["", "", "", "Cancel", "", "", "Help", "", "Backspace", "Tab", "", "", "Clear", "Enter", "Enter", "", "Shift", "Control", "Alt", "Pause", "Capslock", "Kana", "Eisu", "Junja", "Final", "Hanja", "", "ESC", "Convert", "Nonconvert", "Accept", "Modechange", "Space", "Page Up", "Page Down", "End", "Home", "â†", "â†‘", "â†’", "â†“", "Select", "Print", "Execute", "Printscreen", "Insert", "Delete", "", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", ":", ";", "<", "=", ">", "?", "@", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "Windows Key", "", "Context Menu", "", "Sleep", "Numpad 0", "Numpad 1", "Numpad 2", "Numpad 3", "Numpad 4", "Numpad 5", "Numpad 6", "Numpad 7", "Numpad 8", "Numpad 9", "*", "+", "Separator", "-", ".", "/", "F1", "F2", "F3", "F4", "F5", "F6", "F7", "F8", "F9", "F10", "F11", "F12", "F13", "F14", "F15", "F16", "F17", "F18", "F19", "F20", "F21", "F22", "F23", "F24", "", "", "", "", "", "", "", "", "Num Lock", "Scroll Lock", "WIN_OEM_FJ_JISHO", "WIN_OEM_FJ_MASSHOU", "WIN_OEM_FJ_TOUROKU", "WIN_OEM_FJ_LOYA", "WIN_OEM_FJ_ROYA", "", "", "", "", "", "", "", "", "", "Circumflex", "!", "\"", "#", "$", "%", "&", "_", "(", ")", "*", "+", "|", "Hyphen Minus", "{", "}", "~", "", "", "", "", "Volume Mute", "Volume Down", "Volume Up", "", "", ";", "=", ",", "-", ".", "/", "Backquote", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "[", "\\", "]", "'", "", "Meta", "ALTGR", "", "WIN_ICO_HELP", "WIN_ICO_00", "", "WIN_ICO_CLEAR", "", "", "WIN_OEM_RESET", "WIN_OEM_JUMP", "WIN_OEM_PA1", "WIN_OEM_PA2", "WIN_OEM_PA3", "WIN_OECTRL", "WIN_OEM_CUSEL", "WIN_OEM_ATTN", "WIN_OEM_FINISH", "WIN_OEM_COPY", "WIN_OEM_AUTO", "WIN_OEM_ENLW", "WIN_OEM_BACKTAB", "ATTN", "CRSEL", "EXSEL", "EREOF", "PLAY", "ZOOM", "", "PA1", "WIN_OEM_CLEAR", ""];
const Ta = ["Left Mouse", "Middle Mouse", "Right Mouse", "Thumb Mouse 1", "Thumb Mouse 2"];
const Pa = ["", "Mouse Wheel Up", "Mouse Wheel Down"];
class Ze {
  constructor(p, b) {
    this.type = p;
    this.code = b;
    this.type = p;
    this.code = b;
  }
  equals(p) {
    return this.type == p.type && this.code == p.code;
  }
  toString() {
    if (this.type == 0) {
      return "";
    } else if (this.type == 1) {
      return Ma[this.code] || "Key " + this.code;
    } else if (this.type == 2) {
      return Ta[this.code] || "Mouse " + this.code;
    } else {
      return Pa[this.code] || "Mouse Wheel " + this.code;
    }
  }
}
function Wi(p) {
  const b = a[p.type];
  const XT = b.type == "building" || b.type == "structure" ? 1.15 : 1;
  const XY = [T.transform(X0.getBoundingCollider(p.type), p.pos, p.rot, p.scale * XT)];
  if (b.bridgeLandBounds !== undefined) {
    for (let XC = 0; XC < b.bridgeLandBounds.length; XC++) {
      XY.push(T.transform(b.bridgeLandBounds[XC], p.pos, p.rot, p.scale));
    }
  }
  for (let Xl = 0; Xl < XY.length; Xl++) {
    he.addCollider(XY[Xl], 16777215, 0);
  }
}
function Ca(p) {
  const b = a[p.type];
  if (b.terrain.waterEdge !== undefined) {
    const {
      waterEdge: XT
    } = b.terrain;
    const XY = T.transform(X0.getBoundingCollider(p.type), p.pos, p.rot, p.scale * 1.15);
    const XC = v.add(XY.min, v.mul(v.sub(XY.max, XY.min), 0.5));
    const Xl = v.rotate(XT.dir, p.rot);
    const Xd = (Xk, XU, XW) => {
      if (XW < 0) {
        XU = v.neg(XU);
      }
      he.addRay(Xk, XU, Math.abs(XW), 16777215, 0);
    };
    Xd(XC, Xl, XT.distMin);
    Xd(v.add(XC, v.mul(v.perp(Xl), 0.5)), Xl, XT.distMax);
  }
}
function $i(p) {
  const b = a[p.type];
  if (b.terrain.bridge !== undefined) {
    const XT = b.bridgeLandBounds || [];
    for (let Xk = 0; Xk < XT.length; Xk++) {
      const XU = T.transform(XT[Xk], p.pos, p.rot, p.scale);
      he.addCollider(XU, 16742144, 0);
    }
    const XY = b.bridgeWaterBounds || [];
    for (let XW = 0; XW < XY.length; XW++) {
      const XD = T.transform(XY[XW], p.pos, p.rot, p.scale);
      he.addCollider(XD, 30719, 0);
    }
    const XC = X0.getBridgeDims(p.type);
    const Xl = v.rotate(v.create(1, 0), p.rot);
    he.addRay(p.pos, Xl, XC.length * 0.5, 16711680, 0);
    he.addRay(p.pos, v.perp(Xl), XC.width * 0.5, 65280, 0);
    const Xd = X0.getBridgeOverlapCollider(p.type, p.pos, p.rot, p.scale);
    he.addCollider(Xd, 7799039, 0);
  }
}
function Da(p, b, XT) {
  const XY = b - p;
  const XC = XY * XT;
  if (Math.abs(XC) < 0.001) {
    return XY;
  } else {
    return XC;
  }
}
class La {
  __id;
  __type;
  active;
  sprites = [];
  particleEmitters = [];
  soundEmitters = [];
  isNew;
  residue;
  ceilingDead;
  ceilingDamaged;
  playedCeilingDeadFx;
  playedSolvedPuzzleFx;
  hasPuzzle;
  puzzleErrSeqModified;
  puzzleErrSeq;
  puzzleSolved;
  soundEmitterTicker;
  type;
  pos;
  ori;
  rot;
  scale;
  layer;
  occupied;
  imgs = [];
  zIdx;
  bounds;
  ceiling;
  surfaces;
  rfNkqZ() {
    this.isNew = false;
    this.residue = null;
    this.ceilingDead = false;
    this.ceilingDamaged = false;
    this.playedCeilingDeadFx = false;
    this.playedSolvedPuzzleFx = false;
    this.hasPuzzle = false;
    this.puzzleErrSeqModified = false;
    this.puzzleErrSeq = 0;
    this.puzzleSolved = false;
    this.soundEmitterTicker = 0;
  }
  dphRtI() {
    for (let p = 0; p < this.sprites.length; p++) {
      const b = this.sprites[p];
      b.active = false;
      b.sprite.visible = false;
      b.sprite.parent?.removeChild(b.sprite);
      b.sprite.removeChildren();
    }
    for (let XT = 0; XT < this.particleEmitters.length; XT++) {
      this.particleEmitters[XT].stop();
    }
    this.particleEmitters = [];
    for (let XY = 0; XY < this.soundEmitters.length; XY++) {
      this.soundEmitters[XY].instance?.stop();
    }
    this.soundEmitters = [];
  }
  allocSprite() {
    for (let b = 0; b < this.sprites.length; b++) {
      const XT = this.sprites[b];
      if (!XT.active) {
        XT.active = true;
        return XT.sprite;
      }
    }
    const p = new y();
    p.anchor.set(0.5, 0.5);
    this.sprites.push({
      active: true,
      sprite: p
    });
    return p;
  }
  wzDEnz(XT, XY, XC, Xl) {
    if (XY) {
      this.type = XT.type;
      this.pos = v.copy(XT.pos);
      this.ori = XT.ori;
      this.rot = e.oriToRad(XT.ori);
      this.scale = 1;
      this.layer = XT.layer;
    }
    this.ceilingDead = XT.ceilingDead;
    this.ceilingDamaged = XT.ceilingDamaged;
    this.occupied = XT.occupied;
    this.hasPuzzle = XT.hasPuzzle;
    if (this.hasPuzzle) {
      this.puzzleErrSeqModified = XT.puzzleErrSeq != this.puzzleErrSeq;
      this.puzzleSolved = XT.puzzleSolved;
      this.puzzleErrSeq = XT.puzzleErrSeq;
    }
    const Xd = a[this.type];
    if (XC) {
      this.isNew = true;
      this.playedCeilingDeadFx = Xd.ceiling.destroy !== undefined && Xl.map.deadCeilingIds.includes(this.__id);
      this.playedSolvedPuzzleFx = this.hasPuzzle && Xl.map.solvedPuzzleIds.includes(this.__id);
      const Xk = XG => {
        const XF = XG.pos || v.create(0, 0);
        const XH = e.oriToRad(XG.rot || 0);
        const p0 = this.allocSprite();
        if (XG.sprite && XG.sprite != "none") {
          p0.texture = x.from(XG.sprite);
        } else {
          p0.texture = x.EMPTY;
        }
        p0.tint = XG.tint;
        const p1 = Xl.map.getMapDef().biome.valueAdjust;
        if (p1 < 1) {
          p0.tint = t.adjustValue(p0.tint, p1);
        }
        p0.posOffset = v.rotate(XF, this.rot);
        p0.rotOffset = XH;
        p0.imgAlpha = XG.alpha;
        p0.alpha = p0.imgAlpha;
        p0.defScale = XG.scale;
        p0.mirrorY = !!XG.mirrorY;
        p0.mirrorX = !!XG.mirrorX;
        p0.visible = true;
        return p0;
      };
      this.bounds = T.transform(X0.getBoundingCollider(this.type), this.pos, this.rot, this.scale);
      this.zIdx = Xd.zIdx || 0;
      this.surfaces = [];
      for (let XG = 0; XG < Xd.floor.surfaces.length; XG++) {
        const XF = Xd.floor.surfaces[XG];
        const XH = {
          type: XF.type,
          data: XF.data || {},
          colliders: []
        };
        for (let p0 = 0; p0 < XF.collision.length; p0++) {
          XH.colliders.push(T.transform(XF.collision[p0], this.pos, this.rot, this.scale));
        }
        this.surfaces.push(XH);
      }
      const XU = Object.assign({
        dist: 5.5,
        width: 2.75,
        linger: 0,
        fadeRate: 12
      }, Xd.ceiling.vision);
      this.ceiling = {
        zoomRegions: [],
        vision: XU,
        visionTicker: 0,
        fadeAlpha: 1
      };
      for (let p1 = 0; p1 < Xd.ceiling.zoomRegions.length; p1++) {
        const p2 = Xd.ceiling.zoomRegions[p1];
        this.ceiling.zoomRegions?.push({
          zoomIn: p2.zoomIn ? T.transform(p2.zoomIn, this.pos, this.rot, this.scale) : null,
          zoomOut: p2.zoomOut ? T.transform(p2.zoomOut, this.pos, this.rot, this.scale) : null
        });
      }
      this.imgs = [];
      for (let p3 = 0; p3 < Xd.floor.imgs.length; p3++) {
        this.imgs.push({
          sprite: Xk(Xd.floor.imgs[p3]),
          isCeiling: false,
          zOrd: this.zIdx,
          zIdx: this.__id * 100 + p3
        });
      }
      for (let p4 = 0; p4 < Xd.ceiling.imgs.length; p4++) {
        const p5 = Xd.ceiling.imgs[p4];
        this.imgs.push({
          sprite: Xk(p5),
          isCeiling: true,
          removeOnDamaged: !!p5.removeOnDamaged,
          zOrd: 750 - this.zIdx,
          zIdx: this.__id * 100 + p4
        });
      }
      const XW = Xd.occupiedEmitters || [];
      for (let p6 = 0; p6 < XW.length; p6++) {
        const p7 = XW[p6];
        const p8 = p7.rot !== undefined ? p7.rot : 0;
        const p9 = this.rot + p8;
        let pX = v.add(this.pos, v.rotate(p7.pos, p9));
        const pp = p7.dir || v.create(1, 0);
        let pb = v.rotate(pp, p9);
        let pI = p7.scale;
        let pj = null;
        if (p7.parentToCeiling) {
          let px = -1;
          for (let py = 0; py < this.imgs.length; py++) {
            if (this.imgs[py].isCeiling) {
              px = py;
            }
          }
          if (px >= 0) {
            const pg = this.imgs[px];
            pj = pg.sprite;
            pX = v.mul(p7.pos, 32);
            pX.y *= -1;
            pb = v.rotate(v.create(1, 0), p7.rot);
            pI = 1 / pg.sprite.defScale;
          }
        }
        const pf = Xl.particleBarn.addEmitter(p7.type, {
          pos: pX,
          dir: pb,
          scale: pI,
          layer: p7.layer,
          parent: pj
        });
        this.particleEmitters.push(pf);
      }
      const XD = Xd.soundEmitters || [];
      for (let pQ = 0; pQ < XD.length; pQ++) {
        const pZ = XD[pQ];
        const pq = v.add(this.pos, v.rotate(pZ.pos, this.rot));
        this.soundEmitters.push({
          instance: null,
          sound: pZ.sound,
          channel: pZ.channel,
          pos: pq,
          range: pZ.range,
          falloff: pZ.falloff,
          volume: pZ.volume
        });
      }
    }
  }
  Gxhh(XT, XY, XC, Xl, Xd, Xk, XU, XW) {
    if (this.hasPuzzle) {
      const p0 = a[this.type];
      if (this.puzzleErrSeqModified && (this.puzzleErrSeqModified = false, !this.isNew)) {
        let p1 = this;
        let p2 = v.length(v.sub(Xk.NLYJ, p1.pos));
        const p3 = XY.NmwMZ.KGHPNo();
        for (let p4 = 0; p4 < p3.length; p4++) {
          const p5 = p3[p4];
          if (p5.active && p5.isPuzzlePiece && p5.parentBuildingId == this.__id) {
            const p6 = v.length(v.sub(Xk.NLYJ, p5.pos));
            if (p6 < p2) {
              p1 = p5;
              p2 = p6;
            }
          }
        }
        Xl.playSound(p0.puzzle?.sound.fail, {
          channel: "sfx",
          soundPos: p1.pos,
          layer: p1.layer,
          filter: "muffled"
        });
      }
      if (this.puzzleSolved && !this.playedSolvedPuzzleFx) {
        XY.solvedPuzzleIds.push(this.__id);
        this.playedSolvedPuzzleFx = true;
        if (!this.isNew && p0.puzzle?.sound.complete != "none") {
          Xl.playSound(p0.puzzle?.sound.complete, {
            channel: "sfx",
            soundPos: this.pos,
            layer: this.layer,
            filter: "muffled"
          });
        }
      }
    }
    if (this.ceilingDead && !this.playedCeilingDeadFx) {
      XY.deadCeilingIds.push(this.__id);
      this.playedCeilingDeadFx = true;
      if (!this.isNew) {
        this.destroyCeilingFx(XC, Xl);
      }
    }
    this.isNew = false;
    if (this.ceilingDead && !this.residue) {
      const p7 = a[this.type];
      if (p7.ceiling.destroy?.residue) {
        const p8 = this.allocSprite();
        p8.texture = x.from(p7.ceiling.destroy.residue);
        p8.position.set(0, 0);
        p8.scale.set(1, 1);
        p8.rotation = 0;
        p8.tint = 16777215;
        p8.visible = true;
        this.imgs[0].sprite.addChild(p8);
        this.residue = p8;
      }
    }
    this.ceiling.visionTicker -= XT;
    const XD = this.ceiling.vision;
    let XG = false;
    for (let p9 = 0; p9 < this.ceiling.zoomRegions.length; p9++) {
      const pX = this.ceiling.zoomRegions[p9].zoomIn;
      if (pX && (this.layer == Xk.layer || Xk.layer & 2) && X1.scanCollider(pX, XY.NmwMZ.KGHPNo(), Xk.NLYJ, Xk.layer, 0.5, XD.width * 2, XD.dist, 5)) {
        XG = true;
        break;
      }
    }
    if (this.ceilingDead) {
      XG = true;
    }
    if (XG) {
      this.ceiling.visionTicker = XD.linger + 0.0001;
    }
    if (Xk.noCeilingRevealTicker > 0 && !this.ceilingDead) {
      this.ceiling.visionTicker = 0;
    }
    const XF = this.ceiling.visionTicker > 0;
    const XH = Da(this.ceiling.fadeAlpha, XF ? 0 : 1, XT * (XF ? 12 : XD?.fadeRate));
    this.ceiling.fadeAlpha += XH;
    if (XG && Xk.noCeilingRevealTicker <= 0 && Xk.layer & 2 && !t.sameLayer(Xk.layer, this.layer)) {
      this.ceiling.fadeAlpha = 0;
    }
    for (let pp = 0; pp < this.particleEmitters.length; pp++) {
      this.particleEmitters[pp].enabled = this.occupied;
    }
    this.soundEmitterTicker += XT;
    if (this.soundEmitterTicker > 0.1) {
      this.soundEmitterTicker = 0;
      for (let pb = 0; pb < this.soundEmitters.length; pb++) {
        const pI = this.soundEmitters[pb];
        if (!pI.instance && Xl.isSoundLoaded(pI.sound, pI.channel)) {
          pI.instance = Xl.playSound(pI.sound, {
            channel: pI.channel,
            loop: true,
            forceStart: true,
            startSilent: true
          });
        }
        if (pI.instance) {
          const pj = v.sub(XW.NLYJ, pI.pos);
          const pf = v.length(pj);
          const px = e.remap(pf, pI.range.min, pI.range.max, 1, 0);
          const py = Math.pow(px, pI.falloff);
          const pg = e.lerp(this.ceiling.fadeAlpha, 1, 0.25);
          let pQ = Xl.baseVolume * Xl.getTypeVolume("sound") * pI.volume * py * pg;
          if (!t.sameAudioLayer(this.layer, Xk.layer)) {
            pQ = 0;
          }
          if (pQ < 0.003) {
            pQ = 0;
          }
          pI.instance.volume = pQ;
        }
      }
    }
    for (let pZ = 0; pZ < this.imgs.length; pZ++) {
      const pq = this.imgs[pZ];
      const pM = pq.isCeiling ? this.ceiling.fadeAlpha : 1;
      this.positionSprite(pq.sprite, pM, XW);
      if (pq.removeOnDamaged && this.ceilingDamaged) {
        pq.sprite.visible = !this.ceilingDamaged;
      }
      let pE = this.layer;
      if (pq.isCeiling && (this.layer == Xk.layer || Xk.layer & 2 && this.layer == 1)) {
        pE |= 2;
      }
      XU.addPIXIObj(pq.sprite, pE, pq.zOrd, pq.zIdx);
    }
  }
  isInsideCeiling(p) {
    for (let b = 0; b < this.ceiling.zoomRegions.length; b++) {
      const XT = this.ceiling.zoomRegions[b].zoomIn;
      if (XT && T.intersect(XT, p)) {
        return true;
      }
    }
    return false;
  }
  getDistanceToBuilding(p, b) {
    let XT = b;
    for (let XY = 0; XY < this.ceiling.zoomRegions.length; XY++) {
      const XC = this.ceiling.zoomRegions[XY].zoomIn;
      if (XC) {
        const Xl = T.intersectCircle(XC, p, b);
        if (Xl) {
          XT = e.clamp(b - Xl.pen, 0, XT);
        }
      }
    }
    return XT;
  }
  destroyCeilingFx(p, b) {
    const XT = a[this.type].ceiling.destroy;
    const XY = this.surfaces[0];
    for (let XC = 0; XC < XY.colliders.length; XC++) {
      const Xl = T.toAabb(XY.colliders[XC]);
      for (let Xd = 0; Xd < XT.particleCount; Xd++) {
        const Xk = v.create(t.random(Xl.min.x, Xl.max.x), t.random(Xl.min.y, Xl.max.y));
        const XU = v.mul(v.randomUnit(), t.random(0, 15));
        p.addParticle(XT.particle, this.layer, Xk, XU);
      }
      break;
    }
    b.playSound(XT.sound || "ceiling_break_01", {
      channel: "sfx",
      soundPos: this.pos
    });
  }
  positionSprite(p, b, XT) {
    const XY = XT.MobS(v.add(this.pos, p.posOffset));
    const XC = XT.uRFX(this.scale * p.defScale);
    p.position.set(XY.x, XY.y);
    p.scale.set(XC, XC);
    if (p.mirrorY) {
      p.scale.y *= -1;
    }
    if (p.mirrorX) {
      p.scale.x *= -1;
    }
    p.rotation = -this.rot + p.rotOffset;
    p.alpha = p.imgAlpha * b;
  }
  render(p, b, XT) {
    if (k.debug && XT === this.layer && (b.buildings?.bounds && Wi(this), b?.bridge && $i(this), b.buildings?.ceiling)) {
      for (let XY = 0; XY < this.ceiling.zoomRegions.length; XY++) {
        const XC = this.ceiling.zoomRegions[XY];
        if (XC.zoomIn) {
          he.addCollider(XC.zoomIn, 65280, 0);
        }
        if (XC.zoomOut) {
          he.addCollider(XC.zoomOut, 255, 0);
        }
      }
    }
  }
}
class be {
  vTIwcd = [];
  aafDtB = 0;
  Gtu;
  constructor(p) {
    this.Gtu = {
      type: p
    };
    X3(p !== undefined);
  }
  HtPL() {
    let p = null;
    for (let b = 0; b < this.vTIwcd.length; b++) {
      if (!this.vTIwcd[b].active) {
        p = this.vTIwcd[b];
        break;
      }
    }
    if (!p) {
      p = new this.Gtu.type();
      this.vTIwcd.push(p);
    }
    p.active = true;
    p.rfNkqZ();
    this.aafDtB++;
    return p;
  }
  dphRtI(p) {
    p.dphRtI();
    p.active = false;
    this.aafDtB--;
    if (this.vTIwcd.length > 128 && this.aafDtB < this.vTIwcd.length / 2) {
      const b = [];
      for (let XT = 0; XT < this.vTIwcd.length; XT++) {
        if (this.vTIwcd[XT].active) {
          b.push(this.vTIwcd[XT]);
        }
      }
      this.vTIwcd = b;
    }
  }
  KGHPNo() {
    return this.vTIwcd;
  }
}
class Qi {
  EzWoG = {};
  vGs = {};
  zhaIA = 0;
  ACE(p, b) {
    this.vGs[p] = b;
  }
  MZR(p) {
    return this.EzWoG[p];
  }
  XmuodX(p, b) {
    const XT = this.MZR(p);
    if (!XT) {
      const XY = {
        id: p,
        ids: Object.keys(this.EzWoG),
        stream: b._view._view
      };
      console.error("objectPoolErr", "getTypeById" + JSON.stringify(XY));
      return X2.Invalid;
    }
    return XT.__type;
  }
  gLpEK(p, b, XT, XY) {
    let XC = this.MZR(b);
    let Xl = false;
    if (XC === undefined) {
      XC = this.vGs[p].HtPL();
      XC.__id = b;
      XC.__type = p;
      this.EzWoG[b] = XC;
      this.zhaIA++;
      Xl = true;
    }
    XC.wzDEnz(XT, true, Xl, XY);
    return XC;
  }
  cZVtOf(p, b, XT) {
    const XY = this.MZR(p);
    if (XY) {
      XY.wzDEnz(b, false, false, XT);
    } else {
      console.error("updateObjPart, missing object", p);
    }
  }
  DaWtm(p) {
    const b = this.MZR(p);
    if (b === undefined) {
      console.error("deleteObj, missing object", p);
    } else {
      this.vGs[b.__type].dphRtI(b);
      delete this.EzWoG[p];
    }
  }
}
class Aa {
  __id;
  __type;
  active;
  sprite = new y();
  isNew;
  smokeEmitter;
  img;
  type;
  layer;
  healthT;
  dead;
  isSkin;
  rot;
  scale;
  pos;
  imgMirrorX;
  imgMirrorY;
  exploded;
  collidable;
  destructible;
  height;
  isWall;
  isWindow;
  isBush;
  isDoor;
  isButton;
  isPuzzlePiece;
  parentBuildingId;
  button;
  door;
  imgScale;
  explodeParticle;
  skinPlayerId;
  collider;
  constructor() {
    this.sprite.anchor.set(0.5, 0.5);
    this.sprite.visible = false;
  }
  rfNkqZ() {
    this.isNew = false;
    this.smokeEmitter = null;
    this.sprite.visible = false;
    this.img = "";
  }
  dphRtI() {
    this.sprite.visible = false;
    this.sprite.parent?.removeChild(this.sprite);
    if (this.door?.casingSprite) {
      this.door.casingSprite.destroy();
      this.door.casingSprite = null;
    }
    if (this.smokeEmitter) {
      this.smokeEmitter.stop();
      this.smokeEmitter = null;
    }
  }
  wzDEnz(b, XT, XY, XC) {
    if (XT) {
      this.type = b.type;
      this.layer = b.layer;
      this.healthT = b.healthT;
      this.dead = b.dead;
      this.isSkin = b.isSkin;
      if (this.isSkin) {
        this.skinPlayerId = b.skinPlayerId;
      }
    }
    const Xl = a[this.type];
    this.pos = v.copy(b.pos);
    this.rot = e.oriToRad(b.ori);
    this.scale = b.scale;
    this.imgScale = Xl.img.scale;
    this.imgMirrorY = Xl.img.mirrorY;
    this.imgMirrorX = Xl.img.mirrorX;
    this.collider = T.transform(Xl.collision, this.pos, this.rot, this.scale);
    if (XY) {
      this.isNew = true;
      this.exploded = XC.map.deadObstacleIds.includes(this.__id);
      this.explodeParticle = Xl.explodeParticle;
      this.collidable = Xl.collidable && !this.isSkin;
      this.destructible = Xl.destructible;
      this.height = Xl.height;
      this.isWall = !!Xl.isWall;
      this.isWindow = !!Xl.isWindow;
      this.isBush = !!Xl.isBush;
      this.isDoor = Xl.door !== undefined;
      if (this.isDoor) {
        this.door = {
          openOneWay: Xl.door?.openOneWay,
          closedPos: v.copy(b.pos),
          autoOpen: Xl.door?.autoOpen,
          interactionRad: Xl.door?.interactionRad,
          interpSpeed: Xl.door?.openSpeed,
          interpPos: v.copy(b.pos),
          interpRot: e.oriToRad(b.ori),
          seq: b.door?.seq,
          seqOld: b.door?.seq,
          open: b.door?.open,
          wasOpen: b.door?.open,
          locked: b.door?.locked,
          casingSprite: null
        };
        const XW = Xl.door?.casingImg;
        if (XW !== undefined) {
          let XD = XW.pos || v.create(0, 0);
          XD = v.rotate(XD, this.rot + Math.PI * 0.5);
          const XG = new y();
          XG.texture = x.from(XW.sprite);
          XG.anchor.set(0.5, 0.5);
          XG.posOffset = XD;
          XG.imgScale = XW.scale;
          XG.tint = XW.tint;
          XG.alpha = XW.alpha;
          XG.visible = true;
          this.door.casingSprite = XG;
        }
      }
      this.isButton = Xl.button !== undefined;
      if (this.isButton) {
        this.button = {
          interactionRad: Xl.button?.interactionRad,
          interactionText: Xl.button?.interactionText || "game-use",
          seq: b.button?.seq,
          seqOld: b.button?.seq
        };
      }
      this.isPuzzlePiece = b.isPuzzlePiece;
      this.parentBuildingId = this.isPuzzlePiece ? b.parentBuildingId : 0;
    }
    if (this.isDoor && XT) {
      this.door.canUse = b.door?.canUse;
      this.door.open = b.door?.open;
      this.door.seq = b.door?.seq;
      const XF = v.rotate(v.create(Xl.door?.slideOffset, 0), this.rot + Math.PI * 0.5);
      this.door.closedPos = b.door?.open ? v.add(b.pos, XF) : v.copy(b.pos);
    }
    if (this.isButton && XT) {
      this.button.onOff = b.button?.onOff;
      this.button.canUse = b.button?.canUse;
      this.button.seq = b.button?.seq;
    }
    if (Xl.explosion !== undefined && !this.smokeEmitter && b.healthT < 0.5 && !b.dead) {
      const XH = v.normalize(v.create(1, 1));
      this.smokeEmitter = XC.particleBarn.addEmitter("smoke_barrel", {
        pos: this.pos,
        dir: XH,
        layer: this.layer
      });
    }
    let Xd = false;
    let Xk = this.dead ? Xl.img.residue : Xl.img.sprite;
    if (this.isButton && this.button.onOff && !this.dead && Xl.button?.useImg) {
      Xk = Xl.button.useImg;
    } else if (this.isButton && !this.button.canUse && Xl.button?.offImg) {
      Xk = Xl.button.offImg;
    }
    if (Xk != this.img) {
      let p0 = v.create(0.5, 0.5);
      if (this.isDoor) {
        p0 = Xl.door?.spriteAnchor;
      }
      const p1 = Xk !== undefined;
      if (!p1) {
        this.sprite.parent?.removeChild(this.sprite);
      }
      if (p1) {
        this.sprite.texture = Xk == "none" || !Xk ? x.EMPTY : x.from(Xk);
        this.sprite.anchor.set(p0.x, p0.y);
        this.sprite.tint = Xl.img.tint;
        this.sprite.imgAlpha = this.dead ? 0.75 : Xl.img.alpha;
        this.sprite.zOrd = Xl.img.zIdx;
        this.sprite.zIdx = Math.floor(this.scale * 1000) * 65535 + this.__id;
        this.sprite.alpha = this.sprite.imgAlpha;
        Xd = true;
      }
      this.sprite.visible = p1;
      this.img = Xk;
    }
    const XU = XC.map.getMapDef().biome.valueAdjust;
    if (Xd && XU < 1) {
      this.sprite.tint = t.adjustValue(this.sprite.tint, XU);
    }
  }
  getInteraction() {
    if (this.isButton && this.button.canUse) {
      return {
        rad: this.button.interactionRad,
        action: this.button.interactionText,
        object: "game-" + this.type
      };
    } else if (this.isDoor && this.door.canUse && !this.door.autoOpen) {
      return {
        rad: this.door.interactionRad,
        action: this.door.open ? "game-close-door" : "game-open-door",
        object: ""
      };
    } else {
      return null;
    }
  }
  update(b, XT, XY, XC, Xl, Xd, Xk) {
    if (this.isButton) {
      const XU = this.button;
      if (XU.seq != XU.seqOld) {
        const XW = a[this.type];
        if (XW.button?.useParticle) {
          const XG = T.toAabb(this.collider);
          const XF = v.mul(v.sub(XG.max, XG.min), 0.5);
          const XH = v.add(XG.min, XF);
          const p0 = v.mul(v.randomUnit(), t.random(5, 15));
          XC.addParticle(XW.button.useParticle, this.layer, XH, p0);
        }
        const XD = this.button.onOff ? XW.button?.sound.on : XW.button?.sound.off;
        if (XD) {
          Xl.playSound(XD, {
            channel: "sfx",
            soundPos: this.pos,
            layer: this.layer,
            filter: "muffled"
          });
        }
      }
      XU.seqOld = XU.seq;
    }
    if (this.isDoor) {
      const p1 = this.door;
      const p2 = p1.interpSpeed;
      const p3 = v.sub(this.pos, p1.interpPos);
      const p4 = v.length(p3);
      let p5 = p2 * b;
      if (p4 < p5) {
        p5 = p4;
      }
      const p6 = p4 > 0.0001 ? v.div(p3, p4) : v.create(1, 0);
      p1.interpPos = v.add(p1.interpPos, v.mul(p6, p5));
      const p7 = Math.PI * p1.interpSpeed;
      const p8 = e.angleDiff(p1.interpRot, this.rot);
      let p9 = e.sign(p8) * p7 * b;
      if (Math.abs(p8) < Math.abs(p9)) {
        p9 = p8;
      }
      p1.interpRot += p9;
      if (p1.seq != p1.seqOld) {
        const pX = a[this.type].door?.sound.change || "";
        if (pX != "") {
          Xl.playSound(pX, {
            channel: "sfx",
            soundPos: this.pos,
            layer: this.layer,
            filter: "muffled"
          });
        }
        p1.seqOld = p1.seq;
      }
      if (p1.open != p1.wasOpen) {
        const pp = a[this.type];
        const pb = p1.open ? pp.door?.sound.open : pp.door?.sound.close;
        Xl.playSound(pb, {
          channel: "sfx",
          soundPos: this.pos,
          layer: this.layer,
          filter: "muffled"
        });
        p1.wasOpen = p1.open;
      }
    }
    if (this.dead && !this.exploded && (XT.deadObstacleIds.push(this.__id), this.exploded = true, this.smokeEmitter && (this.smokeEmitter.stop(), this.smokeEmitter = null), !this.isNew)) {
      const pI = a[this.type];
      const pj = T.toAabb(this.collider);
      const pf = v.mul(v.sub(pj.max, pj.min), 0.5);
      const px = v.add(pj.min, pf);
      const py = Math.floor(t.random(5, 11));
      for (let pg = 0; pg < py; pg++) {
        const pQ = v.mul(v.randomUnit(), t.random(5, 15));
        const pZ = Array.isArray(this.explodeParticle) ? this.explodeParticle[Math.floor(Math.random() * this.explodeParticle.length)] : this.explodeParticle;
        XC.addParticle(pZ, this.layer, px, pQ);
      }
      Xl.playSound(pI.sound?.explode, {
        channel: "sfx",
        soundPos: px,
        layer: this.layer,
        filter: "muffled"
      });
    }
    if (this.smokeEmitter) {
      const pq = this.isSkin ? 0.3 : 0.5;
      this.smokeEmitter.pos = v.copy(this.pos);
      this.smokeEmitter.enabled = !this.dead && this.healthT < pq;
    }
    if (this.sprite.visible && this.img) {
      let pM = this.dead ? 5 : this.sprite.zOrd;
      let pE = this.sprite.zIdx;
      let pN = this.layer;
      if (!this.dead && pM >= 50 && this.layer == 0 && Xd.layer == 0) {
        pM += 100;
        pN |= 2;
      }
      if (!this.dead && this.isSkin) {
        const pn = XY.getPlayerById(this.skinPlayerId);
        if (pn) {
          pM = e.max(e.max(pM, pn.renderZOrd), 21);
          if (pn.renderLayer != 0) {
            pN = pn.renderLayer;
            pM = pn.renderZOrd;
          }
          pE = pn.renderZIdx + 262144;
        }
      }
      Xk.addPIXIObj(this.sprite, pN, pM, pE);
      if (this.isDoor && this.door.casingSprite) {
        Xk.addPIXIObj(this.door.casingSprite, pN, pM + 1, pE);
      }
    }
    this.isNew = false;
  }
  render(p, b, XT) {
    const XY = this.isDoor ? this.door.interpPos : this.pos;
    const XC = this.isDoor ? this.door.interpRot : this.rot;
    const Xl = this.scale;
    const Xd = p.MobS(XY);
    const Xk = p.uRFX(Xl * this.imgScale);
    this.sprite.position.set(Xd.x, Xd.y);
    this.sprite.scale.set(Xk, Xk);
    if (this.imgMirrorY) {
      this.sprite.scale.y *= -1;
    }
    if (this.imgMirrorX) {
      this.sprite.scale.x *= -1;
    }
    this.sprite.rotation = -XC;
    if (this.isDoor && this.door?.casingSprite) {
      const XU = p.MobS(v.add(this.door.closedPos, this.door.casingSprite.posOffset));
      const XW = p.uRFX(Xl * this.door.casingSprite.imgScale);
      this.door.casingSprite.position.set(XU.x, XU.y);
      this.door.casingSprite.scale.set(XW, XW);
      this.door.casingSprite.rotation = -XC;
      this.door.casingSprite.visible = !this.dead;
    }
    if (k.debug && b.obstacles && t.sameLayer(XT, this.layer)) {
      he.addCollider(this.collider, 16711680, 0);
    }
  }
}
class Ra {
  __id;
  __type;
  active;
  soundTransitionT;
  soundEnabledT;
  type;
  layer;
  pos;
  rot;
  scale;
  interiorSoundAlt;
  interiorSoundEnabled;
  aabb;
  layers;
  stairs;
  mask;
  rfNkqZ() {
    this.soundTransitionT = 0;
  }
  dphRtI() {}
  wzDEnz(b, XT, XY, XC) {
    if (XT) {
      this.type = b.type;
      this.layer = 0;
      this.pos = v.copy(b.pos);
      this.rot = e.oriToRad(b.ori);
      this.scale = 1;
      this.interiorSoundAlt = b.interiorSoundAlt;
      this.interiorSoundEnabled = b.interiorSoundEnabled;
      if (XY) {
        this.soundTransitionT = this.interiorSoundAlt ? 1 : 0;
        this.soundEnabledT = this.interiorSoundEnabled ? 1 : 0;
      }
      this.aabb = T.transform(X0.getBoundingCollider(this.type), this.pos, this.rot, this.scale);
      const Xl = a[this.type];
      this.layers = [];
      for (let Xd = 0; Xd < Xl.layers.length; Xd++) {
        const Xk = Xl.layers[Xd];
        const XU = b.layerObjIds[Xd];
        const XW = Xk?.inheritOri === undefined || Xk.inheritOri;
        const XD = Xk.underground !== undefined ? Xk.underground : Xd == 1;
        const XG = v.add(this.pos, Xk.pos);
        const XF = e.oriToRad(XW ? b.ori + Xk.ori : Xk.ori);
        const XH = T.transform(X0.getBoundingCollider(Xk.type), XG, XF, 1);
        this.layers.push({
          objId: XU,
          collision: XH,
          underground: XD
        });
      }
      this.stairs = [];
      for (let p0 = 0; p0 < Xl.stairs.length; p0++) {
        const p1 = Xl.stairs[p0];
        const p2 = T.transform(p1.collision, this.pos, this.rot, this.scale);
        const p3 = v.rotate(p1.downDir, this.rot);
        const p4 = G.splitAabb(p2, p3);
        this.stairs.push({
          collision: p2,
          center: v.add(p2.min, v.mul(v.sub(p2.max, p2.min), 0.5)),
          downDir: p3,
          downAabb: T.createAabb(p4[0].min, p4[0].max),
          upAabb: T.createAabb(p4[1].min, p4[1].max),
          noCeilingReveal: !!p1.noCeilingReveal,
          lootOnly: !!p1.lootOnly
        });
      }
      this.mask = [];
      for (let p5 = 0; p5 < Xl.mask.length; p5++) {
        this.mask.push(T.transform(Xl.mask[p5], this.pos, this.rot, this.scale));
      }
      XC.renderer.layerMaskDirty = true;
    }
  }
  update(p, b, XT, XY) {
    if (a[this.type].interiorSound) {
      this.updateInteriorSounds(p, b, XT, XY);
    }
  }
  updateInteriorSounds(XT, XY, XC, Xl) {
    const Xd = a[this.type];
    T.createCircle(XC.NLYJ, 0.001);
    XY.nNUjss.KGHPNo();
    const Xk = this.layers.length > 0 ? XY.getBuildingById(this.layers[0].objId) : null;
    const XU = this.layers.length > 1 ? XY.getBuildingById(this.layers[1].objId) : null;
    const XW = Xd.interiorSound?.outsideMaxDist !== undefined ? Xd.interiorSound.outsideMaxDist : 10;
    const XD = Xd.interiorSound?.outsideVolume !== undefined ? Xd.interiorSound.outsideVolume : 0;
    const XG = Xd.interiorSound?.undergroundVolume !== undefined ? Xd.interiorSound.undergroundVolume : 1;
    let XF = 0;
    let XH = 0;
    if (XC.layer != 1) {
      if (Xk) {
        const p5 = Xk.getDistanceToBuilding(XC.NLYJ, XW);
        const p6 = e.remap(p5, XW, 0, 0, 1);
        const p7 = XC.layer & 2;
        const p8 = Xk.ceiling.fadeAlpha;
        XF = p6 * (1 - p8);
        XH = p6 * p8 * (p7 ? XG : XD);
      }
    } else if (XU) {
      const p9 = XU.getDistanceToBuilding(XC.NLYJ, XW);
      const pX = e.remap(p9, XW, 0, 0, 1);
      XF = 0;
      XH = pX * XG;
    }
    const p0 = Xd.interiorSound?.transitionTime !== undefined ? Xd.interiorSound.transitionTime : 1;
    if (this.interiorSoundAlt) {
      this.soundTransitionT = e.clamp(this.soundTransitionT + XT / p0, 0, 1);
    }
    const p1 = Math.abs(this.soundTransitionT - 0.5) * 2;
    if (!this.interiorSoundEnabled) {
      this.soundEnabledT = e.clamp(this.soundEnabledT - XT * 0.5, 0, 1);
    }
    const p2 = this.soundTransitionT > 0.5 ? Xd.interiorSound?.soundAlt : Xd.interiorSound?.sound;
    const p3 = Xl.getTrack("interior_0");
    p3.sound = p2;
    p3.filter = "";
    p3.weight = p2 ? XF * p1 * this.soundEnabledT : 0;
    const p4 = Xl.getTrack("interior_1");
    p4.sound = p2;
    p4.filter = Xd.interiorSound?.filter;
    p4.weight = p2 ? XH * p1 * this.soundEnabledT : 0;
  }
  render(p, b, XT) {
    if (k.debug && (b.structures?.bounds && Wi(this), b?.bridge && $i(this), b.structures?.waterEdge && Ca(this), b.structures?.stairs)) {
      for (let XY = 0; XY < this.stairs.length; XY++) {
        he.addCollider(this.stairs[XY].downAabb, 255, 0);
        he.addCollider(this.stairs[XY].upAabb, 65280, 0);
      }
    }
  }
  insideStairs(p) {
    for (let b = 0; b < this.stairs.length; b++) {
      if (T.intersect(this.stairs[b]?.collision, p)) {
        return true;
      }
    }
    return false;
  }
  insideMask(p) {
    for (let b = 0; b < this.mask.length; b++) {
      if (T.intersect(this.mask[b], p)) {
        return true;
      }
    }
    return false;
  }
}
function Le(p, b, XT) {
  p.moveTo(b.x, b.y);
  p.lineTo(XT.x, XT.y);
}
function Te(p, b) {
  let XT = b[0];
  p.moveTo(XT.x, XT.y);
  for (let XY = 1; XY < b.length; ++XY) {
    XT = b[XY];
    p.lineTo(XT.x, XT.y);
  }
  p.closePath();
}
function mi(p, b, XT) {
  const XY = b.max.x - b.min.x;
  const XC = b.max.y - b.min.y;
  const Xl = e.max(b.offsetDist, 0.001);
  const Xd = b.roughness;
  const Xk = Math.round(XY * Xd / Xl);
  const XU = Math.round(XC * Xd / Xl);
  const XW = t.seededRand(XT);
  Te(p, X6(b, Xk, XU, Xl, XW));
}
class Zi {
  constructor(p) {
    this.decalBarn = p;
  }
  display = {
    ground: new r()
  };
  mapName = "";
  mapDef = {};
  factionMode = false;
  perkMode = false;
  turkeyMode = false;
  seed = 0;
  width = 0;
  height = 0;
  mapData = {
    places: [],
    objects: [],
    groundPatches: []
  };
  mapLoaded = false;
  mapTexture = null;
  NmwMZ = new be(Aa);
  nNUjss = new be(La);
  JCfHy = new be(Ra);
  deadObstacleIds = [];
  deadCeilingIds = [];
  solvedPuzzleIds = [];
  lootDropSfxIds = [];
  terrain = null;
  cameraEmitter = null;
  dphRtI() {
    const p = this.nNUjss.KGHPNo();
    for (let b = 0; b < p.length; b++) {
      p[b].dphRtI();
    }
    this.mapTexture?.destroy(true);
    this.display.ground.destroy({
      children: true
    });
    this.cameraEmitter?.stop();
    this.cameraEmitter = null;
  }
  resize(p, b) {
    this.renderMap(p, b);
  }
  loadMap(p, b, XT, XY) {
    this.mapName = p.mapName;
    const XC = X4[this.mapName];
    if (!XC) {
      throw new Error("Failed loading mapDef " + this.mapName);
    }
    this.mapDef = t.cloneDeep(XC);
    this.factionMode = !!this.mapDef.gameMode.factionMode;
    this.perkMode = !!this.mapDef.gameMode.perkMode;
    this.turkeyMode = !!this.mapDef.gameMode.turkeyMode;
    this.seed = p.seed;
    this.width = p.width;
    this.height = p.height;
    this.terrain = X5(this.width, this.height, p.shoreInset, p.grassInset, p.rivers, this.seed);
    this.mapData = {
      places: p.places,
      objects: p.objects,
      groundPatches: p.groundPatches
    };
    this.mapLoaded = true;
    const Xl = this.mapDef.biome.particles.camera;
    if (Xl) {
      const Xd = v.normalize(v.create(1, -1));
      this.cameraEmitter = XY.addEmitter(Xl, {
        pos: v.create(0, 0),
        dir: Xd,
        layer: 99999
      });
    }
    this.display.ground.clear();
    this.renderTerrain(this.display.ground, 2 / b.xQaJqu, XT, false);
  }
  getMapDef() {
    if (!this.mapLoaded) {
      throw new Error("Map not loaded!");
    }
    return this.mapDef;
  }
  getMapTexture() {
    return this.mapTexture;
  }
  Gxhh(b, XT, XY, XC, Xl, Xd, Xk, XU, XW, XD) {
    const XG = this.NmwMZ.KGHPNo();
    for (let XH = 0; XH < XG.length; XH++) {
      const p0 = XG[XH];
      if (p0.active) {
        p0.update(b, this, XY, XC, Xl, XT, Xk);
        p0.render(XU, XD, XT.layer);
      }
    }
    const XF = this.nNUjss.KGHPNo();
    for (let p1 = 0; p1 < XF.length; p1++) {
      const p2 = XF[p1];
      if (p2.active) {
        p2.Gxhh(b, this, XC, Xl, Xd, XT, Xk, XU);
        p2.render(XU, XD, XT.layer);
      }
    }
    for (let p3 = this.JCfHy.KGHPNo(), p4 = 0; p4 < p3.length; p4++) {
      const p5 = p3[p4];
      if (p5.active) {
        p5.update(b, this, XT, Xd);
        p5.render(XU, XD, XT.layer);
      }
    }
    if (this.cameraEmitter) {
      this.cameraEmitter.pos = v.copy(XU.NLYJ);
      this.cameraEmitter.enabled = true;
      const p6 = 120;
      const p7 = XT.ulnm() * 2.5;
      this.cameraEmitter.radius = e.min(p7, p6);
      const p8 = this.cameraEmitter.radius;
      const p9 = p8 * p8 / (p6 * p6);
      this.cameraEmitter.rateMult = 1 / p9;
      const pX = XT.layer == 0 ? 1 : 0;
      this.cameraEmitter.alpha = e.lerp(b * 6, this.cameraEmitter.alpha, pX);
    }
  }
  renderTerrain(b, XT, XY, XC) {
    const Xl = this.width;
    const Xd = this.height;
    const Xk = this.terrain;
    const XU = {
      x: 0,
      y: 0
    };
    const XW = {
      x: Xl,
      y: 0
    };
    const XD = {
      x: 0,
      y: Xd
    };
    const XG = {
      x: Xl,
      y: Xd
    };
    const XF = this.mapDef.biome.colors;
    const XH = this.mapData.groundPatches;
    b.beginFill(XF.background);
    b.drawRect(-120, -120, Xl + 240, 120);
    b.drawRect(-120, Xd, Xl + 240, 120);
    b.drawRect(-120, -120, 120, Xd + 240);
    b.drawRect(Xl, -120, 120, Xd + 240);
    b.endFill();
    b.beginFill(XF.beach);
    Te(b, Xk?.shore);
    b.beginHole();
    Te(b, Xk?.grass);
    b.endHole();
    b.endFill();
    if (XY) {
      b.beginFill(XF.grass);
      Te(b, Xk?.grass);
      b.endFill();
    }
    for (let p1 = 0; p1 < XH.length; p1++) {
      const p2 = XH[p1];
      if (p2.order == 0 && (!XC || p2.useAsMapShape)) {
        b.beginFill(p2.color);
        mi(b, p2, this.seed);
        b.endFill();
      }
    }
    b.beginFill(XF.riverbank);
    for (let p3 = 0; p3 < Xk.rivers.length; p3++) {
      Te(b, Xk.rivers[p3].shorePoly);
    }
    b.endFill();
    b.beginFill(XF.water);
    for (let p4 = 0; p4 < Xk.rivers.length; p4++) {
      Te(b, Xk.rivers[p4].waterPoly);
    }
    b.endFill();
    b.beginFill(XF.water);
    b.moveTo(XD.x, XD.y);
    b.lineTo(XG.x, XG.y);
    b.lineTo(XW.x, XW.y);
    b.lineTo(XU.x, XU.y);
    b.beginHole();
    Te(b, Xk.shore);
    b.endHole();
    b.closePath();
    b.endFill();
    const p0 = b;
    p0.lineStyle(XT, 0, 0.15);
    for (let p5 = 0; p5 <= Xl; p5 += L.map.gridSize) {
      Le(p0, {
        x: p5,
        y: 0
      }, {
        x: p5,
        y: Xd
      });
    }
    for (let p6 = 0; p6 <= Xd; p6 += L.map.gridSize) {
      Le(p0, {
        x: 0,
        y: p6
      }, {
        x: Xl,
        y: p6
      });
    }
    p0.lineStyle(XT, 0, 0);
    for (let p7 = 0; p7 < XH.length; p7++) {
      const p8 = XH[p7];
      if (p8.order == 1 && (!XC || p8.useAsMapShape)) {
        b.beginFill(p8.color);
        mi(b, p8, this.seed);
        b.endFill();
      }
    }
  }
  Dgc(p) {
    const b = p.MobS(v.create(0, 0));
    const XT = p.MobS(v.create(1, 1));
    const XY = v.sub(XT, b);
    this.display.ground.position.set(b.x, b.y);
    this.display.ground.scale.set(XY.x, XY.y);
  }
  getMinimapRender(p) {
    const b = a[p.type];
    const XT = b.type == "building" ? 750 + (b.zIdx || 0) : b.img.zIdx || 0;
    let XY = [];
    if (b.map?.shapes !== undefined) {
      XY = b.map?.shapes;
    } else {
      let XC = null;
      if (XC = b.type == "obstacle" ? b.collision : b.ceiling.zoomRegions.length > 0 && b.ceiling.zoomRegions[0].zoomIn ? b.ceiling.zoomRegions[0].zoomIn : X0.getBoundingCollider(p.type)) {
        XY.push({
          collider: T.copy(XC),
          scale: b.map?.scale || 1,
          color: b.map?.color
        });
      }
    }
    return {
      obj: p,
      zIdx: XT,
      shapes: XY
    };
  }
  renderMap(XT, XY) {
    if (this.mapLoaded) {
      const XC = new f();
      const Xl = new f();
      const Xd = this.mapDef.biome.colors;
      const Xk = this.mapData.places;
      const XU = this.mapData.objects;
      let XW = k.screenHeight;
      if (k.mobile) {
        if (!k.isLandscape) {
          XW = k.screenWidth;
        }
        XW *= e.min(k.pixelRatio, 2);
      }
      const XD = this.height / XW;
      const XG = new r();
      XG.beginFill(Xd.grass);
      XG.drawRect(0, 0, this.width, this.height);
      XG.endFill();
      this.renderTerrain(XG, XD, XY, true);
      const XF = {
        x: 0,
        y: 0
      };
      const XH = {
        x: this.width,
        y: 0
      };
      const p0 = {
        x: 0,
        y: this.height
      };
      const p1 = {
        x: this.width,
        y: this.height
      };
      XG.lineStyle(XD * 2, 0, 1);
      Le(XG, XF, p0);
      Le(XG, p0, p1);
      Le(XG, p1, XH);
      Le(XG, XH, XF);
      XG.position.y = this.height;
      XG.scale.y = -1;
      XC.addChild(XG);
      const p2 = [];
      for (let p5 = 0; p5 < XU.length; p5++) {
        const p6 = XU[p5];
        p2.push(this.getMinimapRender(p6));
      }
      p2.sort((p7, p8) => p7.zIdx - p8.zIdx);
      const p3 = new r();
      for (let p7 = 0; p7 < p2.length; p7++) {
        const p8 = p2[p7];
        const p9 = p8.obj;
        for (let pX = 0; pX < p8.shapes.length; pX++) {
          const pp = p8.shapes[pX];
          const pb = T.transform(pp.collider, p9.pos, e.oriToRad(p9.ori), p9.scale);
          const pI = pp.scale !== undefined ? pp.scale : 1;
          p3.beginFill(pp.color, 1);
          switch (pb.type) {
            case T.Type.Circle:
              p3.drawCircle(pb.pos.x, this.height - pb.pos.y, pb.rad * pI);
              break;
            case T.Type.Aabb:
              {
                let pj = v.mul(v.sub(pb.max, pb.min), 0.5);
                const pf = v.add(pb.min, pj);
                pj = v.mul(pj, pI);
                p3.drawRect(pf.x - pj.x, this.height - pf.y - pj.y, pj.x * 2, pj.y * 2);
                p3.endFill();
              }
          }
        }
      }
      XC.addChild(p3);
      const p4 = new f();
      for (let px = 0; px < Xk.length; px++) {
        const py = Xk[px];
        const pg = new Z({
          fontFamily: "Arial",
          fontSize: k.mobile ? 20 : 22,
          fontWeight: "bold",
          fill: ["#ffffff"],
          stroke: "#000000",
          strokeThickness: 1,
          dropShadow: true,
          dropShadowColor: "#000000",
          dropShadowBlur: 1,
          dropShadowAngle: Math.PI / 3,
          dropShadowDistance: 1,
          wordWrap: false,
          align: "center"
        });
        const pQ = new q(py.name, pg);
        pQ.anchor.set(0.5, 0.5);
        pQ.x = py.pos.x * this.height / XD;
        pQ.y = py.pos.y * this.height / XD;
        pQ.alpha = 0.75;
        p4.addChild(pQ);
      }
      Xl.addChild(p4);
      if (this.mapTexture) {
        this.mapTexture.resize(XW, XW);
      } else {
        this.mapTexture = M.create({
          width: XW,
          height: XW,
          scaleMode: E.LINEAR,
          resolution: 1
        });
      }
      XC.scale = new h(XW / this.height, XW / this.height);
      XT.render(XC, {
        renderTexture: this.mapTexture,
        clear: true
      });
      XT.render(Xl, {
        renderTexture: this.mapTexture,
        clear: false
      });
      XC.destroy({
        children: true,
        texture: true,
        baseTexture: true
      });
      Xl.destroy({
        children: true,
        texture: true,
        baseTexture: true
      });
    }
  }
  getGroundSurface(b, XT) {
    const XY = (XD, XG = {}) => {
      if (XD == "water") {
        const XF = this.getMapDef().biome.colors;
        XG.waterColor = XG.waterColor !== undefined ? XG.waterColor : XF.water;
        XG.rippleColor = XG.rippleColor !== undefined ? XG.rippleColor : XF.waterRipple;
      }
      return {
        type: XD,
        data: XG
      };
    };
    const XC = this.decalBarn.decalPool.KGHPNo();
    for (let XD = 0; XD < XC.length; XD++) {
      const XG = XC[XD];
      if (XG.active && XG.surface && t.sameLayer(XG.layer, XT) && T.intersectCircle(XG.collider, b, 0.0001)) {
        return XY(XG.surface.type, XG.surface.data);
      }
    }
    let Xl = null;
    let Xd = 0;
    const Xk = XT & 2;
    const XU = this.nNUjss.KGHPNo();
    for (let XF = 0; XF < XU.length; XF++) {
      const XH = XU[XF];
      if (XH.active && XH.zIdx >= Xd && (XH.layer == XT || Xk) && (XH.layer != 1 || !Xk)) {
        for (let p0 = 0; p0 < XH.surfaces.length; p0++) {
          const p1 = XH.surfaces[p0];
          for (let p2 = 0; p2 < p1.colliders.length; p2++) {
            if (T.intersectCircle(p1.colliders[p2], b, 0.0001)) {
              Xd = XH.zIdx;
              Xl = p1;
              break;
            }
          }
        }
      }
    }
    if (Xl) {
      return XY(Xl.type, Xl.data);
    }
    let XW = false;
    if (XT != 1) {
      const p3 = this.terrain?.rivers;
      for (let p4 = 0; p4 < p3.length; p4++) {
        const p5 = p3[p4];
        if (G.testPointAabb(b, p5.aabb.min, p5.aabb.max) && e.pointInsidePolygon(b, p5.shorePoly) && (XW = true, e.pointInsidePolygon(b, p5.waterPoly))) {
          return XY("water", {
            river: p5
          });
        }
      }
    }
    return XY(e.pointInsidePolygon(b, this.terrain?.grass) ? XW ? this.mapDef.biome.sound.riverShore : "grass" : e.pointInsidePolygon(b, this.terrain?.shore) ? "sand" : "water");
  }
  isInOcean(p) {
    return !e.pointInsidePolygon(p, this.terrain?.shore);
  }
  distanceToShore(p) {
    return e.distToPolygon(p, this.terrain?.shore);
  }
  insideStructureStairs(p) {
    const b = this.JCfHy.KGHPNo();
    for (let XT = 0; XT < b.length; XT++) {
      const XY = b[XT];
      if (XY.active && XY.insideStairs(p)) {
        return true;
      }
    }
    return false;
  }
  getBuildingById(p) {
    const b = this.nNUjss.KGHPNo();
    for (let XT = 0; XT < b.length; XT++) {
      const XY = b[XT];
      if (XY.active && XY.__id == p) {
        return XY;
      }
    }
    return null;
  }
  insideStructureMask(p) {
    const b = this.JCfHy.KGHPNo();
    for (let XT = 0; XT < b.length; XT++) {
      const XY = b[XT];
      if (XY.active && XY.insideMask(p)) {
        return true;
      }
    }
    return false;
  }
  insideBuildingCeiling(p, b) {
    const XT = this.nNUjss.KGHPNo();
    for (let XY = 0; XY < XT.length; XY++) {
      const XC = XT[XY];
      if (XC.active && (!b || XC.ceiling.visionTicker > 0 && !XC.ceilingDead) && XC.isInsideCeiling(p)) {
        return true;
      }
    }
    return false;
  }
}
class Na {
  __id;
  __type;
  active;
  sprite = new y();
  playedLandFx;
  landed;
  fallInstance;
  chuteDeployed;
  soundUpdateThrottle;
  pos;
  isNew;
  fallTicker;
  rad;
  constructor() {
    this.sprite.anchor.set(0.5, 0.5);
    this.sprite.visible = false;
  }
  rfNkqZ() {
    this.playedLandFx = false;
    this.landed = false;
    this.fallInstance = null;
    this.chuteDeployed = false;
    this.soundUpdateThrottle = 0;
    this.pos = v.create(0, 0);
    this.isNew = false;
    this.fallTicker = 0;
  }
  dphRtI() {
    this.fallInstance?.stop();
    this.fallInstance = null;
    this.sprite.visible = false;
  }
  wzDEnz(p, b, XT, XY) {
    if (XT) {
      this.isNew = true;
      this.fallTicker = p.fallT * L.airdrop.fallTime;
      const XC = XY.map.getMapDef().biome.airdrop.airdropImg;
      this.sprite.texture = x.from(XC);
    }
    if (b) {
      this.pos = v.copy(p.pos);
    }
    this.landed = p.landed;
  }
}
class Ea {
  airdropPool = new be(Na);
  dphRtI() {
    const p = this.airdropPool.KGHPNo();
    for (let b = 0; b < p.length; b++) {
      p[b].dphRtI();
    }
  }
  Gxhh(b, XT, XY, XC, Xl, Xd, Xk) {
    const XU = this.airdropPool.KGHPNo();
    for (let XW = 0; XW < XU.length; XW++) {
      const XD = XU[XW];
      if (!XD.active) {
        continue;
      }
      XD.fallTicker += b;
      const XG = e.clamp(XD.fallTicker / L.airdrop.fallTime, 0, 1);
      let XF = 0;
      if ((t.sameLayer(XF, XT.layer) || XT.layer & 2) && (!(XT.layer & 2) || !XC.insideStructureMask(T.createCircle(XD.pos, 1)))) {
        XF |= 2;
      }
      if (XD.landed && !XD.playedLandFx && (XD.playedLandFx = true, !XD.isNew)) {
        for (let p3 = 0; p3 < 10; p3++) {
          const p4 = v.randomUnit();
          Xl.addParticle("airdropSmoke", XF, XD.pos, p4);
        }
        const p1 = XC.getGroundSurface(XD.pos, XF);
        if (p1.type == "water") {
          for (let p5 = 0; p5 < 12; p5++) {
            const p6 = v.add(XD.pos, v.mul(v.randomUnit(), t.random(4.5, 6)));
            Xl.addRippleParticle(p6, XF, p1.data.rippleColor).setDelay(p5 * 0.075);
          }
        }
        const p2 = p1.type == "water" ? "airdrop_crash_02" : "airdrop_crash_01";
        Xk.playSound(p2, {
          channel: "sfx",
          soundPos: XD.pos,
          layer: XF,
          filter: "muffled"
        });
        Xk.stopSound(XD.fallInstance);
        XD.fallInstance = null;
      }
      if (!XD.chuteDeployed && XG <= 0.1) {
        Xk.playSound("airdrop_chute_01", {
          channel: "sfx",
          soundPos: XD.pos,
          layer: XF,
          rangeMult: 1.75
        });
        XD.chuteDeployed = true;
      }
      if (!XD.landed && !XD.fallInstance) {
        XD.fallInstance = Xk.playSound("airdrop_fall_01", {
          channel: "sfx",
          soundPos: XD.pos,
          layer: XF,
          rangeMult: 1.75,
          ignoreMinAllowable: true,
          offset: XD.fallTicker
        });
      }
      if (XD.fallInstance && XD.soundUpdateThrottle < 0) {
        XD.soundUpdateThrottle = 0.1;
        Xk.updateSound(XD.fallInstance, "sfx", XD.pos, {
          layer: XF,
          rangeMult: 1.75,
          ignoreMinAllowable: true
        });
      } else {
        XD.soundUpdateThrottle -= b;
      }
      XD.rad = e.lerp((1 - XG) ** 1.1, 5, 12);
      Xd.addPIXIObj(XD.sprite, XF, 1500, XD.__id);
      const XH = XY.MobS(XD.pos);
      const p0 = XY.uRFX(XD.rad * 2 / XY.xQaJqu);
      XD.sprite.position.set(XH.x, XH.y);
      XD.sprite.scale.set(p0, p0);
      XD.sprite.tint = 16776960;
      XD.sprite.alpha = 1;
      XD.sprite.visible = !XD.landed;
      XD.isNew = false;
    }
  }
}
function ni(p, b, XT, XY) {
  const XC = Math.atan2(XY.y, XY.x);
  return {
    p0: v.add(XT, v.rotate(p, XC)),
    p1: v.add(XT, v.rotate(b, XC))
  };
}
function Oa(p, b, XT, XY, XC) {
  if (X7[p.bulletType].addFlare) {
    XT.addFlare(p, XY, XC);
  } else {
    b.addBullet(p, XY, XC);
  }
}
function Ct(p, b, XT, XY, XC, Xl, Xd) {
  const Xk = Math.floor(t.random(1, 2));
  let XU = v.mul(XY, 9.5);
  for (let XW = 0; XW < Xk; XW++) {
    XU = v.rotate(XU, (Math.random() - 0.5) * Math.PI / 3);
    Xl.addParticle(p, XC, XT, XU);
  }
  Xd.playGroup(b, {
    channel: "hits",
    soundPos: XT,
    layer: XC,
    filter: "muffled"
  });
}
class Ba {
  bullets = [];
  tracerColors = {};
  onMapLoad(p) {
    this.tracerColors = t.mergeDeep(L.tracerColors, p.getMapDef().biome.tracerColors);
  }
  addBullet(b, XT, XY) {
    let XC = null;
    for (let p0 = 0; p0 < this.bullets.length; p0++) {
      if (!this.bullets[p0].alive && !this.bullets[p0].collided) {
        XC = this.bullets[p0];
        break;
      }
    }
    if (!XC) {
      XC = {};
      XC.alive = false;
      XC.container = new f();
      XC.container.pivot.set(14.5, 0);
      XC.container.visible = false;
      XC.bulletTrail = y.from("player-bullet-trail-02.img");
      XC.bulletTrail.anchor.set(0.5, 0.5);
      XC.container.addChild(XC.bulletTrail);
      this.bullets.push(XC);
    }
    const Xl = X7[b.bulletType];
    const Xd = 1 + b.varianceT * Xl.variance;
    const Xk = e.remap(b.distAdjIdx, 0, 16, -1, 1);
    let XU = Xl.distance / Math.pow(L.bullet.reflectDistDecay, b.reflectCount);
    if (b.clipDistance) {
      XU = b.distance;
    }
    XC.alive = true;
    XC.isNew = true;
    XC.collided = false;
    XC.scale = 1;
    XC.playerId = b.playerId;
    XC.startPos = v.copy(b.pos);
    XC.pos = v.copy(b.pos);
    XC.dir = v.copy(b.dir);
    XC.layer = b.layer;
    XC.speed = Xl.speed * Xd;
    XC.distance = XU * Xd + Xk;
    XC.damageSelf = Xl.shrapnel || b.reflectCount > 0;
    XC.reflectCount = b.reflectCount;
    XC.reflectObjId = b.reflectObjId;
    XC.whizHeard = false;
    const XW = Math.atan2(XC.dir.x, XC.dir.y);
    XC.container.rotation = XW - Math.PI / 2;
    XC.layer = b.layer;
    const XD = XT.getPlayerById(XC.playerId);
    if (XD && XD.layer & 2) {
      XC.layer |= 2;
    }
    let XG = Xl.tracerWidth;
    if (b.trailSmall) {
      XG *= 0.5;
    }
    if (b.trailThick) {
      XG *= 2;
    }
    XC.bulletTrail.scale.set(0.8, XG);
    XC.tracerLength = Xl.tracerLength;
    XC.suppressed = !!Xl.suppressed;
    const XF = this.tracerColors[Xl.tracerColor];
    let XH = XF.regular;
    if (b.trailSaturated) {
      XH = XF.chambered || XF.saturated;
    } else if (XD?.surface?.data.isBright) {
      XH = XF.saturated;
    }
    XC.bulletTrail.tint = XH;
    XC.tracerAlphaRate = XF.alphaRate;
    XC.tracerAlphaMin = XF.alphaMin;
    XC.bulletTrail.alpha = 1;
    if (XC.reflectCount > 0) {
      XC.bulletTrail.alpha *= 0.5;
    }
    XC.container.visible = true;
    XY.addPIXIObj(XC.container, XC.layer, 20);
  }
  Gxhh(XT, XY, XC, Xl, Xd, Xk, XU, XW) {
    const XD = XY.playerPool.KGHPNo();
    for (let XG = 0; XG < this.bullets.length; XG++) {
      const XF = this.bullets[XG];
      if (XF.collided) {
        XF.scale = e.max(XF.scale - XT * 6, 0);
        if (XF.scale <= 0) {
          XF.collided = false;
          XF.container.visible = false;
        }
      }
      if (XF.alive) {
        const XH = XF.distance - v.length(v.sub(XF.startPos, XF.pos));
        const p0 = e.min(XH, XT * XF.speed);
        const p1 = v.copy(XF.pos);
        XF.pos = v.add(XF.pos, v.mul(XF.dir, p0));
        if (!Xd.QDvlP.GUi && t.sameAudioLayer(Xd.layer, XF.layer) && v.length(v.sub(Xl.NLYJ, XF.pos)) < 7.5 && !XF.whizHeard && XF.playerId != Xd.__id) {
          XW.playGroup("bullet_whiz", {
            soundPos: XF.pos,
            fallOff: 4
          });
          XF.whizHeard = true;
        }
        if (XF.tracerAlphaRate && XF.suppressed) {
          const p7 = XF.tracerAlphaRate;
          XF.bulletTrail.alpha = e.max(XF.tracerAlphaMin, XF.bulletTrail.alpha * p7);
        }
        const p2 = [];
        const p3 = XC.NmwMZ.KGHPNo();
        for (let p8 = 0; p8 < p3.length; p8++) {
          const p9 = p3[p8];
          if (p9.active && !p9.dead && t.sameLayer(p9.layer, XF.layer) && p9.height >= L.bullet.height && (XF.reflectCount <= 0 || p9.__id != XF.reflectObjId)) {
            const pX = T.intersectSegment(p9.collider, p1, XF.pos);
            if (pX) {
              p2.push({
                type: "obstacle",
                obstacleType: p9.type,
                collidable: p9.collidable,
                point: pX.point,
                normal: pX.normal
              });
            }
          }
        }
        for (let pp = 0; pp < XD.length; pp++) {
          const pb = XD[pp];
          if (pb.active && !pb.QDvlP.GUi && (t.sameLayer(pb.QDvlP.fgCE, XF.layer) || pb.QDvlP.fgCE & 2) && (pb.__id != XF.playerId || XF.damageSelf)) {
            let pI = null;
            if (pb.Zfl()) {
              const pf = pb;
              const px = pf.jsGID();
              const py = ni(px.p0, px.p1, pf.tixW, pf.Htl);
              const pg = ni(px.p0, px.p1, pf.NLYJ, pf.RkcQgd);
              const pQ = G.intersectSegmentSegment(p1, XF.pos, py.p0, py.p1);
              const pZ = G.intersectSegmentSegment(p1, XF.pos, pg.p0, pg.p1) || pQ;
              if (pZ) {
                const pq = v.normalize(v.perp(v.sub(pg.p1, pg.p0)));
                pI = {
                  point: pZ.point,
                  normal: pq
                };
              }
            }
            const pj = G.intersectSegmentCircle(p1, XF.pos, pb.NLYJ, pb.Guz);
            if (pj && (!pI || v.length(v.sub(pj.point, XF.startPos)) < v.length(v.sub(pI.point, XF.startPos)))) {
              p2.push({
                type: "player",
                player: pb,
                point: pj.point,
                normal: pj.normal,
                layer: pb.layer,
                collidable: true
              });
              if (pb.PsSK("steelskin")) {
                p2.push({
                  type: "pan",
                  point: v.add(pj.point, v.mul(pj.normal, 0.1)),
                  normal: pj.normal,
                  layer: pb.layer,
                  collidable: false
                });
              }
            } else if (pI) {
              p2.push({
                type: "pan",
                point: pI.point,
                normal: pI.normal,
                layer: pb.layer,
                collidable: true
              });
            }
            if (pj || pI) {
              break;
            }
          }
        }
        for (let pM = 0; pM < p2.length; pM++) {
          const pE = p2[pM];
          pE.dist = v.length(v.sub(pE.point, p1));
        }
        p2.sort((pN, pn) => pN.dist - pn.dist);
        let p4 = false;
        const p5 = XY.getPlayerById(XF.playerId);
        if (p5 && (p5.QDvlP.GUi || p5.QDvlP.RxB)) {
          p4 = true;
        }
        let p6 = false;
        for (let pN = 0; pN < p2.length; pN++) {
          const pn = p2[pN];
          if (pn.type == "obstacle") {
            const ph = a[pn?.obstacleType];
            Ct(ph.hitParticle, ph.sound.bullet, pn.point, pn.normal, XF.layer, XU, XW);
            p6 = pn.collidable;
          } else if (pn.type == "player") {
            if (!p4) {
              const pR = pn.player;
              if (XC.turkeyMode && p5?.PsSK("turkey_shoot")) {
                const pA = v.mul(v.randomUnit(), t.random(3, 6));
                XU.addParticle("turkeyFeathersHit", pR.layer, pR.NLYJ, pA);
              }
              const pP = v.sub(pn.point, pR?.NLYJ);
              pP.y *= -1;
              if (!window.CrazyGames) {
                XU.addParticle("bloodSplat", pR.layer, v.mul(pP, Xl.xQaJqu), v.create(0, 0), 1, 1, pR.container);
              }
              XW.playGroup("player_bullet_hit", {
                soundPos: pR.NLYJ,
                fallOff: 1,
                layer: pR.layer,
                filter: "muffled"
              });
            }
            p6 = pn.collidable;
          } else if (pn.type == "pan") {
            Ct("barrelChip", w.pan.sound.bullet, pn.point, pn.normal, pn.layer, XU, XW);
            p6 = pn.collidable;
          }
          if (p6) {
            XF.pos = pn.point;
            break;
          }
        }
        if (!(XF.layer & 2)) {
          const pJ = XC.JCfHy.KGHPNo();
          let pS = XF.layer;
          for (let pB = 0; pB < pJ.length; pB++) {
            const pc = pJ[pB];
            if (pc.active) {
              let pu = false;
              let pV = false;
              for (let pz = 0; pz < pc.stairs.length; pz++) {
                const pw = pc.stairs[pz];
                if (!pw?.lootOnly && T.intersectSegment(pw?.collision, XF.pos, p1)) {
                  pu = true;
                  break;
                }
              }
              for (let pO = 0; pO < pc.mask.length; pO++) {
                if (T.intersectSegment(pc.mask[pO], XF.pos, p1)) {
                  pV = true;
                  break;
                }
              }
              if (pu && !pV) {
                pS |= 2;
              }
            }
          }
          if (pS != XF.layer) {
            XF.layer = pS;
            Xk.addPIXIObj(XF.container, XF.layer, 20);
          }
        }
        if (p6 || e.eqAbs(XH, p0)) {
          XF.collided = true;
          XF.alive = false;
        }
        XF.isNew = false;
      }
    }
  }
  createBulletHit(p, b, XT) {
    const XY = p.getPlayerById(b);
    if (XY) {
      XT.playGroup("player_bullet_hit", {
        soundPos: XY.NLYJ,
        fallOff: 1,
        layer: XY.layer,
        filter: "muffled"
      });
    }
  }
  Dgc(p, b) {
    p.uRFX(1);
    for (let XT = 0; XT < this.bullets.length; XT++) {
      const XY = this.bullets[XT];
      if (XY.alive || XY.collided) {
        const XC = v.length(v.sub(XY.pos, XY.startPos));
        const Xl = p.MobS(XY.pos);
        XY.container.position.set(Xl.x, Xl.y);
        const Xd = p.uRFX(1);
        const Xk = e.min(XY.tracerLength * 15, XC / 2);
        XY.container.scale.set(Xd * Xk * XY.scale, Xd);
      }
    }
  }
}
function qa() {
  const p = {
    fontFamily: "Arial",
    fontWeight: "bold",
    fontSize: k.pixelRatio > 1 ? 30 : 24,
    align: "center",
    fill: 16777215,
    stroke: 0,
    strokeThickness: 0,
    dropShadow: true,
    dropShadowColor: "#000000",
    dropShadowBlur: 1,
    dropShadowAngle: Math.PI / 3,
    dropShadowDistance: 1
  };
  const b = new q("", p);
  b.anchor.set(0.5, 0.5);
  b.scale.set(0.5, 0.5);
  return b;
}
class ja {
  __id;
  __type;
  active = false;
  pos = v.create(0, 0);
  container = new f();
  sprite = y.from("skull.img");
  nameText = qa();
  nameTextSet;
  layer;
  playerId;
  constructor() {
    this.container.addChild(this.sprite);
    this.sprite.anchor.set(0.5, 0.5);
    this.sprite.scale.set(0.4, 0.4);
    this.sprite.tint = 5921370;
    this.nameText.anchor.set(0.5, -1);
    this.nameText.tint = t.rgbToInt(t.hsvToRgb(0, 0, 0.5));
    this.container.addChild(this.nameText);
    this.container.visible = this.sprite;
  }
  rfNkqZ() {}
  dphRtI() {
    this.container.visible = false;
  }
  wzDEnz(p, b, XT, XY) {
    this.pos = v.copy(p.pos);
    if (b) {
      this.layer = p.layer;
      this.playerId = p.playerId;
    }
    if (XT) {
      this.nameTextSet = false;
      this.container.visible = true;
    }
  }
}
class Fa {
  deadBodyPool = new be(ja);
  Gxhh(b, XT, XY, XC, Xl, Xd) {
    const Xk = this.deadBodyPool.KGHPNo();
    for (let XU = 0; XU < Xk.length; XU++) {
      const XW = Xk[XU];
      if (XW.active) {
        if (!XW.nameTextSet) {
          XW.nameText.text = XT.getPlayerName(XW.playerId, XY.__id, false);
          XW.nameTextSet = true;
        }
        const XD = T.createCircle(XW.pos, 1);
        const XG = XC.insideStructureStairs(XD);
        let XF = XW.layer;
        let XH = 12;
        if (XW.layer == 0 && XY.layer == 0 && XG) {
          XF |= 2;
          XH += 100;
        }
        Xd.addPIXIObj(XW.container, XF, XH, XW.__id);
        const p0 = Xl.MobS(XW.pos);
        const p1 = Xl.uRFX(1);
        XW.container.position.set(p0.x, p0.y);
        XW.container.scale.set(p1, p1);
      }
    }
  }
  getDeadBodyById(p) {
    const b = this.deadBodyPool.KGHPNo();
    for (let XT = 0; XT < b.length; XT++) {
      const XY = b[XT];
      if (XY.active && XY.playerId == p) {
        return XY;
      }
    }
    return null;
  }
}
function wt(p, b, XT) {
  if (p == 0) {
    return b;
  } else if (p == 1) {
    return XT;
  } else {
    return t.lerpColor(p, b, XT);
  }
}
class Ga {
  __id;
  __type;
  active;
  decalRender = null;
  isNew;
  goreT;
  hasGore;
  type;
  pos;
  rot;
  scale;
  layer;
  goreKills;
  collider;
  surface;
  rfNkqZ() {
    this.isNew = false;
    this.goreT = 0;
  }
  dphRtI() {
    if (this.decalRender) {
      this.decalRender.free();
      this.decalRender = null;
    }
  }
  wzDEnz(p, b, XT, XY) {
    if (b) {
      const XC = a[p.type];
      this.type = p.type;
      this.pos = v.copy(p.pos);
      this.rot = e.oriToRad(p.ori);
      this.scale = p.scale;
      this.layer = p.layer;
      this.goreKills = p.goreKills;
      this.collider = T.transform(XC.collision, this.pos, this.rot, this.scale);
      this.surface = XC.surface ? t.cloneDeep(XC.surface) : null;
      this.hasGore = XC.gore !== undefined;
      this.isNew = XT;
      if (this.isNew) {
        this.decalRender = XY.decalBarn.allocDecalRender();
        this.decalRender.init(this, XY.map, XY.renderer);
      }
    }
  }
  update(p, b) {
    if (this.hasGore) {
      const XT = a[this.type];
      let XY = e.delerp(this.goreKills, XT.gore?.fade.start, XT.gore?.fade.end);
      XY = Math.pow(XY, XT.gore?.fade.pow);
      this.goreT = this.isNew ? XY : e.lerp(p * XT.gore?.fade.speed, this.goreT, XY);
      if (XT.gore?.tint !== undefined) {
        const XC = wt(this.goreT, XT.img.tint, XT.gore.tint);
        this.decalRender.setTint(XC);
      }
      if (XT.gore?.alpha !== undefined) {
        this.decalRender.spriteAlpha = e.lerp(this.goreT, XT.img.alpha, XT.gore.alpha);
      }
      if (XT.gore?.waterColor !== undefined && this.surface) {
        this.surface.data.waterColor = wt(this.goreT, XT.surface?.data.waterColor, XT.gore.waterColor);
      }
      if (XT.gore?.rippleColor !== undefined && this.surface) {
        this.surface.data.rippleColor = wt(this.goreT, XT.surface?.data.rippleColor, XT.gore.rippleColor);
      }
    }
    this.isNew = false;
  }
}
class Va {
  sprite = new y();
  pos;
  rot;
  scale;
  layer;
  zIdx;
  zOrd;
  imgScale;
  spriteAlpha;
  valueAdjust;
  inWater;
  flicker;
  flickerMin;
  flickerMax;
  flickerTarget;
  flickerRate;
  flickerCooldown;
  active;
  deactivated;
  fadeout;
  fadeAlpha;
  constructor() {
    this.sprite.anchor.set(0.5, 0.5);
    this.sprite.visible = false;
  }
  init(p, b, XT) {
    const XY = a[p.type];
    this.pos = v.copy(p.pos);
    this.rot = p.rot;
    this.scale = p.scale;
    this.layer = p.layer;
    this.zIdx = XY.img.zIdx;
    this.zOrd = p.__id;
    const XC = XY.img;
    this.sprite.texture = x.from(XC.sprite);
    this.sprite.alpha = 1;
    this.sprite.visible = true;
    this.imgScale = XY.img.scale;
    this.spriteAlpha = XC.alpha;
    this.valueAdjust = XC.ignoreAdjust ? 1 : b.getMapDef().biome.valueAdjust;
    this.setTint(XC.tint);
    this.inWater = false;
    if (XY.height < 0.25) {
      const Xl = b.getGroundSurface(p.pos, p.layer);
      this.inWater = Xl.type == "water";
    }
    this.flicker = XY.img.flicker;
    if (this.flicker) {
      this.flickerMin = XY.img.flickerMin;
      this.flickerMax = XY.img.flickerMax;
      this.flickerTarget = this.imgScale;
      this.flickerRate = XY.img.flickerRate;
      this.flickerCooldown = 0;
    }
    this.active = true;
    this.deactivated = false;
    this.fadeout = XY.lifetime !== undefined;
    this.fadeAlpha = 1;
  }
  free() {
    this.deactivated = true;
  }
  setTint(p) {
    if (this.valueAdjust < 1) {
      p = t.adjustValue(p, this.valueAdjust);
    }
    this.sprite.tint = p;
  }
  update(p, b, XT) {
    if (this.deactivated && this.fadeout) {
      this.fadeAlpha = e.lerp(p * 3, this.fadeAlpha, 0);
      if (this.fadeAlpha < 0.01) {
        this.fadeAlpha = 0;
      }
    }
    if (this.deactivated && (!this.fadeout || e.eqAbs(this.fadeAlpha, 0))) {
      this.sprite.visible = false;
      this.active = false;
    }
    if (this.flicker) {
      if (this.flickerCooldown < 0) {
        this.flickerTarget = t.random(this.flickerMin, this.flickerMax);
        this.flickerCooldown = t.random(0.05, this.flickerRate);
      } else {
        this.imgScale = e.lerp(this.flickerRate - this.flickerCooldown, this.imgScale, this.flickerTarget);
        this.flickerCooldown -= p;
      }
    }
    const XY = b.MobS(this.pos);
    const XC = b.uRFX(this.scale * this.imgScale);
    this.sprite.position.set(XY.x, XY.y);
    this.sprite.scale.set(XC, XC);
    this.sprite.rotation = -this.rot;
    this.sprite.alpha = this.spriteAlpha * (this.inWater ? 0.3 : 1) * this.fadeAlpha;
    XT.addPIXIObj(this.sprite, this.layer, this.zIdx, this.zOrd);
  }
}
class Yi {
  decalPool = new be(Ga);
  decalRenders = [];
  allocDecalRender() {
    let p = null;
    for (let b = 0; b < this.decalRenders.length; b++) {
      const XT = this.decalRenders[b];
      if (!XT.active) {
        p = XT;
        break;
      }
    }
    if (!p) {
      p = new Va();
      this.decalRenders.push(p);
    }
    return p;
  }
  Gxhh(p, b, XT, XY) {
    const XC = this.decalPool.KGHPNo();
    for (let Xl = 0; Xl < XC.length; Xl++) {
      const Xd = XC[Xl];
      if (Xd.active) {
        Xd.update(p);
      }
    }
    for (let Xk = 0; Xk < this.decalRenders.length; Xk++) {
      const XU = this.decalRenders[Xk];
      if (XU.active) {
        XU.update(p, b, XT);
      }
    }
  }
  Dgc(p, b, XT) {}
}
class Ua {
  active;
  pos;
  vel;
  layer;
  particle;
  ticker;
  colCount;
  constructor() {
    this.active = false;
  }
  init(p, b, XT, XY) {
    this.pos = v.copy(p);
    this.vel = v.copy(b);
    this.layer = XT;
    this.particle = XY;
    this.ticker = 0;
    this.colCount = 0;
    this.active = true;
  }
  update(b, XT, XY) {
    const XC = v.copy(this.pos);
    this.pos = v.add(this.pos, v.mul(this.vel, b));
    this.vel = v.mul(this.vel, 1 / (1 + b * 5));
    const Xl = [];
    const Xd = XT.NmwMZ.KGHPNo();
    for (let XW = 0; XW < Xd.length; XW++) {
      const XD = Xd[XW];
      if (XD.active && !XD.dead && t.sameLayer(this.layer, XD.layer)) {
        Xl.push(XD.collider);
      }
    }
    const Xk = XY.playerPool.KGHPNo();
    for (let XG = 0; XG < Xk.length; XG++) {
      const XF = Xk[XG];
      if (XF.active && !XF.dead && t.sameLayer(this.layer, XF.layer)) {
        Xl.push(T.createCircle(XF.NLYJ, XF.Guz, 0));
      }
    }
    const XU = [];
    for (let XH = 0; XH < Xl.length; XH++) {
      const p0 = T.intersectSegment(Xl[XH], XC, this.pos);
      if (p0) {
        const p1 = v.length(v.sub(p0.point, XC));
        XU.push({
          point: p0.point,
          normal: p0.normal,
          dist: p1
        });
      }
    }
    XU.sort((p2, p3) => p2.dist - p3.dist);
    if (XU.length > 0) {
      const p2 = XU[0];
      const p3 = v.normalizeSafe(this.vel, v.create(1, 0));
      const p4 = v.length(this.vel);
      const p5 = v.sub(p3, v.mul(p2.normal, v.dot(p2.normal, p3) * 2));
      const p6 = this.colCount++ > 0 ? 0.35 : 1;
      this.pos = v.add(p2.point, v.mul(p2.normal, 0.01));
      this.vel = v.mul(p5, p4 * p6);
    }
    this.particle.pos = v.copy(this.pos);
    this.ticker += b;
    if (this.ticker >= this.particle.life) {
      this.particle.free();
      this.active = false;
    }
  }
}
class Ha {
  active;
  type;
  done;
  pos;
  layer;
  ticker;
  lifetime;
  soundInstance;
  soundUpdateThrottle;
  constructor(p) {
    this.active = false;
  }
  init(p, b, XT) {
    const XY = X8[p].explosionEffectType;
    const XC = hi[XY];
    this.active = true;
    this.done = false;
    this.type = p;
    this.pos = v.copy(b);
    this.layer = XT;
    this.ticker = 0;
    this.lifetime = XC.lifetime;
    this.soundInstance = null;
    this.soundUpdateThrottle = 0;
  }
  free() {
    this.active = false;
  }
  update(b, XT, XY, XC, Xl, Xd) {
    const Xk = X8[this.type].explosionEffectType;
    const XU = hi[Xk];
    if (this.ticker == 0) {
      let XG = true;
      if (this.type == "explosion_bomb_iron") {
        const p2 = T.createCircle(this.pos, 0.5);
        if (Xl.insideBuildingCeiling(p2, true)) {
          XG = false;
        }
      }
      if (XG && (XU.burst.particle && XY.addParticle(XU.burst.particle, this.layer, this.pos, v.create(0, 0), XU.burst.scale, 0, null), XU.scatter)) {
        for (let p3 = 0; p3 < XU.scatter.count; p3++) {
          const p4 = XY.addParticle(XU.scatter.particle, this.layer, this.pos, v.create(0, 0), 1, 0, null);
          const p5 = XT.addPhysicsParticle();
          const p6 = v.mul(v.randomUnit(), t.random(XU.scatter.speed.min, XU.scatter.speed.max));
          p5.init(this.pos, p6, this.layer, p4);
        }
      }
      const XF = Xl.getGroundSurface(this.pos, this.layer);
      const XH = XF.type == "water" ? XU.burst.sound.water : XU.burst.sound.grass;
      let p0 = 0;
      if (XU.burst.sound.detune != null) {
        p0 = XU.burst.sound.detune;
      }
      let p1 = 1;
      if (XU.burst.sound.volume != null) {
        p1 = XU.burst.sound.volume;
      }
      this.soundInstance = XC.playSound(XH, {
        channel: "sfx",
        soundPos: this.pos,
        layer: this.layer,
        filter: "muffled",
        rangeMult: 2,
        ignoreMinAllowable: true,
        detune: p0,
        volumeScale: p1
      });
      if (XF.type == "water") {
        for (let p7 = 0; p7 < XU.rippleCount; p7++) {
          const p8 = XU.rippleCount * 0.5;
          const p9 = v.add(this.pos, v.mul(v.randomUnit(), t.random(0, p8)));
          XY.addRippleParticle(p9, this.layer, XF.data.rippleColor).setDelay(p7 * 0.06);
        }
      }
    }
    if (this.soundInstance && this.soundUpdateThrottle < 0) {
      this.soundUpdateThrottle = 0.1;
      let pX = 1;
      if (XU.burst.sound.volume != null) {
        pX = XU.burst.sound.volume;
      }
      XC.updateSound(this.soundInstance, "sfx", this.pos, {
        layer: this.layer,
        filter: "muffled",
        volumeScale: pX
      });
    } else {
      this.soundUpdateThrottle -= b;
    }
    this.ticker += b;
    const XW = e.min(this.ticker / XU.shakeDur, 1);
    const XD = e.lerp(XW, XU.shakeStr, 0);
    Xd.rQK(this.pos, XD);
    if (this.ticker >= this.lifetime) {
      this.active = false;
    }
  }
}
class Wa {
  explosions;
  physicsParticles;
  constructor() {
    this.explosions = [];
    this.physicsParticles = [];
  }
  addExplosion(p, b, XT) {
    let XY = null;
    for (let XC = 0; XC < this.explosions.length; XC++) {
      if (!this.explosions[XC].active) {
        XY = this.explosions[XC];
        break;
      }
    }
    if (!XY) {
      XY = new Ha(this);
      this.explosions.push(XY);
    }
    XY.init(p, b, XT);
  }
  addPhysicsParticle() {
    let p = null;
    for (let b = 0; b < this.physicsParticles.length; b++) {
      const XT = this.physicsParticles[b];
      if (!XT.active) {
        p = XT;
        break;
      }
    }
    if (!p) {
      p = new Ua();
      this.physicsParticles.push(p);
    }
    return p;
  }
  Gxhh(p, b, XT, XY, XC, Xl, Xd) {
    for (let Xk = 0; Xk < this.explosions.length; Xk++) {
      const XU = this.explosions[Xk];
      if (XU.active) {
        XU.update(p, this, XC, Xl, b, XY);
        if (!XU.active) {
          XU.free();
        }
      }
    }
    for (let XW = 0; XW < this.physicsParticles.length; XW++) {
      const XD = this.physicsParticles[XW];
      if (XD.active) {
        XD.update(p, b, XT);
      }
    }
  }
}
const hi = {
  frag: {
    burst: {
      particle: "explosionBurst",
      scale: 1,
      sound: {
        grass: "explosion_01",
        water: "explosion_02"
      }
    },
    rippleCount: 10,
    shakeStr: 0.2,
    shakeDur: 0.35,
    lifetime: 2
  },
  smoke: {
    burst: {
      particle: "explosionBurst",
      scale: 0,
      sound: {
        grass: "explosion_smoke_01",
        water: "explosion_smoke_01"
      }
    },
    rippleCount: 10,
    shakeStr: 0,
    shakeDur: 0,
    lifetime: 6
  },
  strobe: {
    burst: {
      particle: "explosionBurst",
      scale: 0.25,
      sound: {
        grass: "explosion_04",
        water: "explosion_02"
      }
    },
    rippleCount: 3,
    shakeStr: 0,
    shakeDur: 0,
    lifetime: 2
  },
  barrel: {
    burst: {
      particle: "explosionBurst",
      scale: 1,
      sound: {
        grass: "explosion_01",
        water: "explosion_02"
      }
    },
    rippleCount: 10,
    shakeStr: 0.2,
    shakeDur: 0.35,
    lifetime: 2
  },
  usas: {
    burst: {
      particle: "explosionUSAS",
      scale: 0.75,
      sound: {
        grass: "explosion_03",
        water: "explosion_02"
      }
    },
    rippleCount: 10,
    shakeStr: 0.12,
    shakeDur: 0.25,
    lifetime: 1.25
  },
  rounds: {
    burst: {
      particle: "explosionRounds",
      scale: 0.32,
      sound: {
        grass: "explosion_04",
        water: "explosion_04",
        detune: 500,
        volume: 0.5
      }
    },
    rippleCount: 1,
    shakeStr: 0,
    shakeDur: 0,
    lifetime: 1
  },
  rounds_sg: {
    burst: {
      particle: "explosionRounds",
      scale: 0.32,
      sound: {
        grass: "explosion_04",
        water: "explosion_04",
        detune: 500,
        volume: 0.2
      }
    },
    rippleCount: 1,
    shakeStr: 0,
    shakeDur: 0,
    lifetime: 1
  },
  mirv: {
    burst: {
      particle: "explosionMIRV",
      scale: 1,
      sound: {
        grass: "explosion_01",
        water: "explosion_02"
      }
    },
    rippleCount: 10,
    shakeStr: 0.2,
    shakeDur: 0.35,
    lifetime: 2
  },
  mirv_mini: {
    burst: {
      particle: "explosionMIRV",
      scale: 0.75,
      sound: {
        grass: "explosion_03",
        water: "explosion_02"
      }
    },
    rippleCount: 3,
    shakeStr: 0.1,
    shakeDur: 0.2,
    lifetime: 1.25
  },
  martyr_nade: {
    burst: {
      particle: "explosionBurst",
      scale: 0.75,
      sound: {
        grass: "explosion_03",
        water: "explosion_02"
      }
    },
    rippleCount: 3,
    shakeStr: 0.1,
    shakeDur: 0.2,
    lifetime: 1.25
  },
  snowball: {
    burst: {
      particle: "",
      scale: 0.75,
      sound: {
        grass: "snowball_01",
        water: "frag_water_01"
      }
    },
    scatter: {
      particle: "snowball_impact",
      count: 5,
      speed: {
        min: 5,
        max: 25
      }
    },
    rippleCount: 1,
    shakeStr: 0,
    shakeDur: 0,
    lifetime: 1
  },
  snowball_heavy: {
    burst: {
      particle: "",
      scale: 0.75,
      sound: {
        grass: "snowball_02",
        water: "frag_water_01"
      }
    },
    scatter: {
      particle: "snowball_impact",
      count: 8,
      speed: {
        min: 5,
        max: 25
      }
    },
    rippleCount: 1,
    shakeStr: 0,
    shakeDur: 0,
    lifetime: 1
  },
  potato: {
    burst: {
      particle: "",
      scale: 0.75,
      sound: {
        grass: "potato_01",
        water: "frag_water_01"
      }
    },
    scatter: {
      particle: "potato_impact",
      count: 5,
      speed: {
        min: 5,
        max: 25
      }
    },
    rippleCount: 1,
    shakeStr: 0,
    shakeDur: 0,
    lifetime: 1
  },
  potato_heavy: {
    burst: {
      particle: "",
      scale: 0.75,
      sound: {
        grass: "potato_02",
        water: "frag_water_01"
      }
    },
    scatter: {
      particle: "potato_impact",
      count: 8,
      speed: {
        min: 5,
        max: 25
      }
    },
    rippleCount: 1,
    shakeStr: 0,
    shakeDur: 0,
    lifetime: 1
  },
  potato_cannonball: {
    burst: {
      particle: "explosionPotato",
      scale: 0.75,
      sound: {
        grass: "explosion_05",
        water: "explosion_02"
      }
    },
    scatter: {
      particle: "potato_impact",
      count: 8,
      speed: {
        min: 5,
        max: 25
      }
    },
    rippleCount: 10,
    shakeStr: 0.12,
    shakeDur: 0.25,
    lifetime: 1.25
  },
  potato_smgshot: {
    burst: {
      particle: "",
      scale: 0.2,
      sound: {
        grass: "potato_01",
        water: "potato_02",
        detune: 250,
        volume: 0.5
      }
    },
    scatter: {
      particle: "potato_smg_impact",
      count: 2,
      speed: {
        min: 5,
        max: 25
      }
    },
    rippleCount: 1,
    shakeStr: 0,
    shakeDur: 0,
    lifetime: 0.5
  },
  bomb_iron: {
    burst: {
      particle: "explosionBomb",
      scale: 2,
      sound: {
        grass: "explosion_01",
        water: "explosion_02"
      }
    },
    rippleCount: 12,
    shakeStr: 0.25,
    shakeDur: 0.4,
    lifetime: 2
  }
};
class $a {
  bullets = [];
  addFlare(b, XT, XY) {
    let XC = null;
    for (let XH = 0; XH < this.bullets.length; XH++) {
      if (!this.bullets[XH].alive && !this.bullets[XH].collided) {
        XC = this.bullets[XH];
        break;
      }
    }
    if (!XC) {
      XC = {};
      XC.alive = false;
      XC.flareContainer = new f();
      XC.flareContainer.visible = false;
      XC.flare = y.from("part-flare-01.img");
      XC.flare.anchor.set(0.5, 0.5);
      XC.flareContainer.addChild(XC.flare);
      XC.trailContainer = new f();
      XC.trailContainer.visible = false;
      XC.trailContainer.pivot.set(14.5, 0);
      XC.bulletTrail = y.from("player-bullet-trail-02.img");
      XC.bulletTrail.anchor.set(0.5, 0.5);
      XC.trailContainer.addChild(XC.bulletTrail);
      this.bullets.push(XC);
    }
    const Xl = X7[b.bulletType];
    const Xd = 1 + b.varianceT * Xl.variance;
    const Xk = e.remap(b.distAdjIdx, 0, 32, -1, 1);
    const XU = Xl.distance / Math.pow(L.bullet.reflectDistDecay, b.reflectCount);
    XC.alive = true;
    XC.isNew = true;
    XC.collided = false;
    XC.flareScale = 0.01;
    XC.trailScale = 1;
    XC.timeAlive = 0;
    XC.maxTimeAlive = 2.5;
    XC.startPos = v.copy(b.pos);
    XC.pos = v.copy(b.pos);
    XC.dir = v.copy(b.dir);
    XC.layer = b.layer;
    XC.speed = Xl.speed * Xd;
    XC.distance = XU * Xd + Xk;
    const XW = Math.atan2(XC.dir.x, XC.dir.y);
    XC.flareContainer.rotation = XW - Math.PI / 2;
    XC.trailContainer.rotation = XW - Math.PI / 2;
    XC.layer = b.layer;
    const XD = XT.getPlayerById(XC.playerId);
    if (XD && XD.layer & 2) {
      XC.layer |= 2;
    }
    const XG = L.tracerColors[Xl.tracerColor];
    let XF = XG.regular;
    if (XD?.isOnBrightSurface) {
      XF = XG.saturated;
    }
    XC.bulletTrail.scale.set(0.8, Xl.tracerWidth);
    XC.tracerLength = Xl.tracerLength;
    XC.bulletTrail.tint = XF;
    XC.tracerAlphaRate = XG.alphaRate;
    XC.tracerAlphaMin = XG.alphaMin;
    XC.bulletTrail.alpha = 1;
    XC.flare.scale.set(1, 1);
    XC.flare.tint = Xl.flareColor;
    XC.flare.alpha = 0.8;
    XC.maxFlareScale = Xl.maxFlareScale;
    XC.smokeThrottle = 0;
    XC.flareContainer.visible = true;
    XC.trailContainer.visible = true;
  }
  Gxhh(b, XT, XY, XC, Xl, Xd, Xk, XU) {
    for (let XW = 0; XW < this.bullets.length; XW++) {
      const XD = this.bullets[XW];
      if (XD.collided) {
        XD.flareScale = e.max(XD.flareScale - b * 0.5, 0);
        XD.flare.alpha = e.max(XD.flare.alpha - b, 0);
        XD.trailScale = e.max(XD.trailScale - b * 6, 0);
        XD.bulletTrail.alpha = e.max(XD.bulletTrail.alpha - b, 0);
        XD.pos = v.add(XD.pos, v.mul(XD.dir, b * XD.speed));
        if (XD.flare.alpha <= 0) {
          XD.collided = false;
          XD.flareContainer.visible = false;
          XD.trailContainer.visible = false;
        }
      }
      if (XD.alive) {
        if (XD.tracerAlphaRate) {
          const p0 = Xl.__id == XD.playerId ? XD.tracerAlphaRate : XD.tracerAlphaRate * 0.9;
          XD.bulletTrail.alpha = e.max(XD.tracerAlphaMin, XD.bulletTrail.alpha * p0);
        }
        XD.timeAlive += b;
        XD.flareScale = e.easeOutExpo(XD.timeAlive / XD.maxTimeAlive) * XD?.maxFlareScale;
        if (XD.smokeThrottle <= 0) {
          XD.smokeThrottle = 0.05;
        } else {
          XD.smokeThrottle -= b;
        }
        const XG = XD.distance - v.length(v.sub(XD.startPos, XD.pos));
        const XF = e.min(XG, b * XD.speed);
        XD.pos = v.add(XD.pos, v.mul(XD.dir, XF));
        if (e.eqAbs(XG, XF)) {
          XD.collided = true;
          XD.alive = false;
        }
        let XH = 0;
        if ((t.sameLayer(XH, Xl.layer) || Xl.layer & 2) && (!(Xl.layer & 2) || !XY.insideStructureMask(T.createCircle(XD.pos, 1)))) {
          XH |= 2;
        }
        Xd.addPIXIObj(XD.trailContainer, XH, 1000, 0);
        Xd.addPIXIObj(XD.flareContainer, XH, 1000, 1);
        XD.isNew = false;
      }
    }
  }
  Dgc(p) {
    for (let b = 0; b < this.bullets.length; b++) {
      const XT = this.bullets[b];
      if (XT.alive || XT.collided) {
        const XY = p.MobS(XT.pos);
        XT.flareContainer.position.set(XY.x, XY.y);
        const XC = p.uRFX(1);
        XT.flareContainer.scale.set(XC * XT.flareScale, XC * XT.flareScale);
        const Xl = v.length(v.sub(XT.pos, XT.startPos));
        XT.trailContainer.position.set(XY.x, XY.y);
        const Xd = e.min(XT.tracerLength * 15, Xl / 2);
        XT.trailContainer.scale.set(XC * Xd * XT.trailScale, XC);
      }
    }
  }
}
class Qa {
  __id;
  __type;
  active;
  ticker = 0;
  playDropSfx = false;
  container = new y();
  sprite = new y();
  emitter = null;
  updatedData;
  pos;
  isOld;
  layer;
  type;
  count;
  isPreloadedGun;
  ownerId;
  rad;
  imgScale;
  constructor() {
    this.container.anchor.set(0.5, 0.5);
    this.container.scale.set(1, 1);
    this.sprite.anchor.set(0.5, 0.5);
    this.sprite.scale.set(0.8, 0.8);
    this.container.addChild(this.sprite);
  }
  rfNkqZ() {
    this.updatedData = false;
  }
  dphRtI() {
    this.container.visible = false;
    if (this.emitter) {
      this.emitter.stop();
      this.emitter = null;
    }
  }
  wzDEnz(p, b, XT, XY) {
    this.updatedData = true;
    this.pos = v.copy(p.pos);
    if (b) {
      this.layer = p.layer;
      this.type = p.type;
      this.count = p.count;
      this.isOld = p.isOld;
      this.isPreloadedGun = p.isPreloadedGun;
      this.ownerId = p.hasOwner ? p.ownerId : 0;
    }
    if (XT) {
      const XC = w[this.type];
      this.ticker = 0;
      if (this.isOld) {
        this.ticker = 10;
      }
      if (!this.isOld && XC.sound.drop && !XY.map.lootDropSfxIds.includes(this.__id)) {
        this.playDropSfx = true;
      }
      this.rad = L.lootRadius[XC.type];
      this.imgScale = XC.lootImg?.scale * 1.25;
      const Xl = XC.lootImg.innerScale || 0.8;
      this.sprite.scale.set(Xl, Xl);
      this.sprite.texture = x.from(XC.lootImg?.sprite);
      this.sprite.tint = XC.lootImg?.tint;
      this.container.texture = XC.lootImg.border ? x.from(XC.lootImg.border) : x.EMPTY;
      if (this.isPreloadedGun) {
        this.container.texture = x.from("loot-circle-outer-06.img");
      }
      const Xd = w[XC.ammo];
      if (Xd) {
        this.container.tint = Xd.lootImg.tintDark;
      } else if (XC.lootImg.borderTint) {
        this.container.tint = XC.lootImg.borderTint;
      } else {
        this.container.tint = 0;
      }
      if (XC.type == "xp" && XC.emitter) {
        this.emitter = XY.particleBarn.addEmitter(XC.emitter, {
          pos: this.pos,
          layer: this.layer
        });
      }
      this.sprite.rotation = XC?.lootImg?.rot ? XC.lootImg.rot : 0;
      this.sprite.scale.x = XC.lootImg.mirror ? -Xl : Xl;
      this.container.visible = true;
    }
    if (XT || b) {
      XY.renderer.addPIXIObj(this.container, this.layer, 13, this.__id);
    }
  }
}
class Za {
  lootPool = new be(Qa);
  closestLoot = null;
  Gxhh(b, XT, XY, XC, Xl, Xd) {
    this.closestLoot = null;
    let Xk = Number.MAX_VALUE;
    const XU = this.lootPool.KGHPNo();
    for (let XW = 0; XW < XU.length; XW++) {
      const XD = XU[XW];
      if (XD.active) {
        if (t.sameLayer(XD.layer, XT.layer) && !XT.QDvlP.GUi && (XD.ownerId == 0 || XD.ownerId == XT.__id)) {
          const p1 = XD.pos;
          const p2 = k.touch ? XT.Guz + XD.rad * L.player.touchLootRadMult : XD.rad;
          const p3 = v.sub(XT.NLYJ, p1);
          const p4 = v.lengthSqr(p3);
          if (p4 < p2 * p2 && p4 < Xk) {
            Xk = p4;
            this.closestLoot = XD;
          }
        }
        XD.ticker += b;
        if (XD.playDropSfx) {
          XY.lootDropSfxIds.push(XD.__id);
          XD.playDropSfx = false;
          const p5 = w[XD.type];
          XC.playSound(p5.sound?.drop, {
            channel: "sfx",
            soundPos: XD.pos,
            layer: XD.layer,
            filter: "muffled"
          });
        }
        if (XD.emitter) {
          XD.emitter.pos = v.add(XD.pos, v.create(0, 0.1));
          XD.emitter.layer = XD.layer;
        }
        const XG = e.delerp(XD.ticker, 0, 1);
        const XF = e.easeOutElastic(XG, 0.75);
        const XH = Xl.MobS(XD.pos);
        const p0 = Xl.uRFX(XD.imgScale * XF);
        if (k.debug && Xd.loot && XT.layer === XD.layer) {
          he.addCircle(XD.pos, XD.rad, 16711680, 0);
        }
        XD.container.position.set(XH.x, XH.y);
        XD.container.scale.set(p0, p0);
      }
    }
  }
  getClosestLoot() {
    return this.closestLoot;
  }
}
class o {
  constructor(p, b) {
    this.min = p;
    this.max = b;
  }
  getRandom() {
    return t.random(this.min, this.max);
  }
}
function we(p) {
  if (p instanceof o) {
    return p.getRandom();
  } else {
    return p;
  }
}
function Ya(p) {
  if (p instanceof Function) {
    return p();
  } else {
    return p;
  }
}
class ci {
  active = false;
  ticker = 0;
  def = {};
  sprite = new y();
  hasParent = false;
  pos;
  vel;
  rot;
  delay;
  life;
  drag;
  rotVel;
  rotDrag;
  scaleUseExp;
  scale;
  scaleEnd;
  scaleExp;
  alphaUseExp;
  alpha;
  alphaEnd;
  alphaExp;
  alphaIn;
  alphaInStart;
  alphaInEnd;
  emitterIdx;
  valueAdjust;
  constructor() {
    this.sprite.anchor.set(0.5, 0.5);
    this.sprite.scale.set(1, 1);
    this.sprite.visible = false;
  }
  init(b, XT, XY, XC, Xl, Xd, Xk, XU, XW, XD) {
    const XG = Et[XT];
    this.active = true;
    this.ticker = 0;
    if (XU) {
      this.hasParent = true;
      XU.addChild(this.sprite);
    } else {
      this.hasParent = false;
      b.addPIXIObj(this.sprite, XY, XW);
    }
    this.pos = v.copy(XC);
    this.vel = v.copy(Xl);
    this.rot = Xk;
    this.def = XG;
    this.delay = 0;
    this.life = we(XG.life);
    this.drag = we(XG.drag);
    this.rotVel = we(XG.rotVel) * (Math.random() < 0.5 ? -1 : 1);
    this.rotDrag = we(XG.drag) / 2;
    this.scaleUseExp = XG.scale.exp !== undefined;
    this.scale = we(XG.scale.start) * Xd;
    this.scaleEnd = this.scaleUseExp ? 0 : we(XG.scale?.end) * Xd;
    this.scaleExp = this.scaleUseExp ? XG.scale.exp : 0;
    this.alphaUseExp = XG.alpha.exp !== undefined;
    this.alpha = we(XG.alpha.start);
    this.alphaEnd = this.alphaUseExp ? 0 : we(XG.alpha?.end);
    this.alphaExp = this.alphaUseExp ? XG.alpha.exp : 0;
    this.alphaIn = XG.alphaIn !== undefined;
    this.alphaInStart = this.alphaIn ? we(XG.alphaIn?.start) : 0;
    this.alphaInEnd = this.alphaIn ? we(XG.alphaIn?.end) : 0;
    this.emitterIdx = -1;
    const XF = Array.isArray(XG.image) ? XG.image[Math.floor(Math.random() * XG.image.length)] : XG.image;
    this.sprite.texture = x.from(XF);
    this.sprite.visible = false;
    this.valueAdjust = XG.ignoreValueAdjust ? 1 : XD;
    this.setColor(Ya(XG.color));
  }
  free() {
    this.active = false;
    this.sprite.visible = false;
  }
  setDelay(p) {
    this.delay = p;
  }
  setColor(p) {
    if (this.valueAdjust < 1) {
      p = t.adjustValue(p, this.valueAdjust);
    }
    this.sprite.tint = p;
  }
}
class Ja {
  active = false;
  enabled;
  type;
  pos;
  dir;
  scale;
  layer;
  duration;
  radius;
  ticker;
  nextSpawn;
  spawnCount;
  parent;
  alpha;
  rateMult;
  zOrd;
  init(p, b = {}) {
    const XT = Ki[p];
    this.active = true;
    this.enabled = true;
    this.type = p;
    this.pos = b.pos ? v.copy(b.pos) : v.create(0, 0);
    this.dir = b.dir ? v.copy(b.dir) : v.create(0, 1);
    this.scale = b.scale !== undefined ? b.scale : 1;
    this.layer = b.layer || 0;
    this.duration = b.duration !== undefined ? b.duration : Number.MAX_VALUE;
    this.radius = b.radius !== undefined ? b.radius : XT.radius;
    this.ticker = 0;
    this.nextSpawn = 0;
    this.spawnCount = 0;
    this.parent = b.parent || null;
    this.alpha = 1;
    this.rateMult = b.rateMult !== undefined ? b.rateMult : 1;
    const XY = Et[XT.particle];
    this.zOrd = XT.zOrd !== undefined ? XT.zOrd : XY.zOrd !== undefined ? XY.zOrd : 20;
  }
  free() {
    this.active = false;
  }
  stop() {
    this.duration = this.ticker;
  }
}
class Ji {
  constructor(p) {
    this.renderer = p;
    for (let b = 0; b < 256; b++) {
      this.particles[b] = new ci();
    }
  }
  particles = [];
  emitters = [];
  valueAdjust = 1;
  onMapLoad(p) {
    this.valueAdjust = p.getMapDef().biome.valueAdjust;
  }
  dphRtI() {
    for (let p = 0; p < this.particles.length; p++) {
      const b = this.particles[p].sprite;
      b.parent?.removeChild(b);
      b.destroy({
        children: true
      });
    }
  }
  addParticle(p, b, XT, XY, XC, Xl, Xd, Xk) {
    let XU = null;
    for (let XW = 0; XW < this.particles.length; XW++) {
      if (!this.particles[XW].active) {
        XU = this.particles[XW];
        break;
      }
    }
    if (!XU) {
      XU = new ci();
      this.particles.push(XU);
    }
    XC = XC !== undefined ? XC : 1;
    Xl = Xl !== undefined ? Xl : Math.random() * Math.PI * 2;
    Xk = Xk !== undefined ? Xk : Et[p].zOrd || 20;
    XU.init(this.renderer, p, b, XT, XY, XC, Xl, Xd, Xk, this.valueAdjust);
    return XU;
  }
  addRippleParticle(p, b, XT) {
    const XY = this.addParticle("waterRipple", b, p, v.create(0, 0), 1, 0, null);
    XY.setColor(XT);
    return XY;
  }
  addEmitter(p, b = {}) {
    let XT = null;
    for (let XY = 0; XY < this.emitters.length; XY++) {
      if (!this.emitters[XY].active) {
        XT = this.emitters[XY];
        break;
      }
    }
    if (!XT) {
      XT = new Ja();
      this.emitters.push(XT);
    }
    XT.init(p, b);
    return XT;
  }
  Gxhh(b, XT, XY) {
    for (let XC = 0; XC < this.emitters.length; XC++) {
      const Xl = this.emitters[XC];
      if (Xl.active && Xl.enabled) {
        Xl.ticker += b;
        Xl.nextSpawn -= b;
        const Xd = Ki[Xl.type];
        while (Xl.nextSpawn <= 0 && Xl.spawnCount < Xd.maxCount) {
          const Xk = Xl.scale * Xl.radius;
          const XU = v.add(Xl.pos, t.randomPointInCircle(Xk));
          const XW = v.rotate(Xl.dir, (Math.random() - 0.5) * Xd.angle);
          const XD = v.mul(XW, we(Xd.speed));
          const XG = we(Xd.rot);
          const XF = this.addParticle(Xd.particle, Xl.layer, XU, XD, Xl.scale, XG, Xl.parent, Xl.zOrd);
          XF.emitterIdx = XC;
          let XH = we(Xd.rate);
          if (Xd.maxRate) {
            const p0 = e.easeInExpo(e.min(1, Xl.ticker / Xd.maxElapsed));
            const p1 = we(Xd.maxRate);
            XH = e.lerp(p0, XH, p1);
          }
          Xl.nextSpawn += XH * Xl.rateMult;
          Xl.spawnCount++;
        }
        if (Xl.ticker >= Xl.duration) {
          Xl.free();
        }
      }
    }
    for (let p2 = 0; p2 < this.particles.length; p2++) {
      const p3 = this.particles[p2];
      if (p3.active && (p3.ticker += b, p3.ticker >= p3.delay)) {
        const p4 = e.min((p3.ticker - p3.delay) / p3.life, 1);
        p3.vel = v.mul(p3.vel, 1 / (1 + b * p3.drag));
        p3.pos = v.add(p3.pos, v.mul(p3.vel, b));
        p3.rotVel *= 1 / (1 + b * p3.rotDrag);
        p3.rot += p3.rotVel * b;
        if (p3.scaleUseExp) {
          p3.scale += b * p3.scaleExp;
        }
        if (p3.alphaUseExp) {
          p3.alpha = e.max(p3.alpha + b * p3.alphaExp, 0);
        }
        const p5 = p3.hasParent ? p3.pos : XT.MobS(p3.pos);
        let p6 = p3.scaleUseExp ? p3.scale : e.remap(p4, p3.def.scale.lerp?.min, p3.def.scale.lerp?.max, p3.scale, p3.scaleEnd);
        let p7 = p3.alphaUseExp ? p3.alpha : e.remap(p4, p3.def.alpha.lerp?.min, p3.def.alpha.lerp?.max, p3.alpha, p3.alphaEnd);
        if (p3.alphaIn && p4 < p3.def.alphaIn?.lerp?.max) {
          p7 = e.remap(p4, p3.def.alphaIn?.lerp?.min, p3.def.alphaIn?.lerp?.max, p3.alphaInStart, p3.alphaInEnd);
        }
        if (p3.emitterIdx >= 0) {
          p7 *= this.emitters[p3.emitterIdx].alpha;
        }
        if (!p3.hasParent) {
          p6 = XT.uRFX(p6);
        }
        p3.sprite.position.set(p5.x, p5.y);
        p3.sprite.scale.set(p6, p6);
        p3.sprite.rotation = p3.rot;
        p3.sprite.alpha = p7;
        p3.sprite.visible = true;
        if (p4 >= 1) {
          p3.free();
        }
      }
    }
  }
}
const Et = {
  archwayBreak: {
    image: ["part-panel-01.img"],
    life: new o(0.5, 1.5),
    drag: new o(1, 5),
    rotVel: new o(0, Math.PI * 3),
    scale: {
      start: new o(0.2, 0.35),
      end: new o(0.08, 0.12),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0.06, 0.84, t.random(0.46, 0.48)));
    }
  },
  bloodSplat: {
    image: ["part-splat-01.img", "part-splat-02.img", "part-splat-03.img"],
    life: 0.5,
    drag: 1,
    rotVel: 0,
    scale: {
      start: 0.04,
      end: new o(0.15, 0.2),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.75, 1)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(16711680, 1, t.random(0.45, 0.8)));
    }
  },
  barrelPlank: {
    image: ["part-plank-01.img"],
    life: new o(1, 1.5),
    drag: new o(3, 5),
    rotVel: new o(Math.PI * 3, Math.PI * 3),
    scale: {
      start: new o(0.08, 0.18),
      end: new o(0.07, 0.17),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0.09, 0.8, t.random(0.66, 0.68)));
    }
  },
  barrelChip: {
    image: ["part-spark-02.img"],
    life: 0.5,
    drag: new o(1, 10),
    rotVel: 0,
    scale: {
      start: new o(0.04, 0.08),
      end: new o(0.01, 0.02),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.95, 1)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0.01, 0.02, t.random(0.38, 0.41)));
    }
  },
  barrelBreak: {
    image: ["part-spark-02.img"],
    life: new o(0.8, 1),
    drag: new o(1, 5),
    rotVel: 0,
    scale: {
      start: new o(0.07, 0.12),
      end: new o(0.05, 0.1),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0.01, 0.02, t.random(0.38, 0.41)));
    }
  },
  blackChip: {
    image: ["part-woodchip-01.img"],
    life: new o(0.5, 1),
    drag: new o(1, 5),
    rotVel: new o(Math.PI * 3, Math.PI * 3),
    scale: {
      start: new o(0.04, 0.08),
      end: new o(0.01, 0.02),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0, 0.08, t.random(0.16, 0.18)));
    }
  },
  blueChip: {
    image: ["part-spark-02.img"],
    life: 0.5,
    drag: new o(1, 10),
    rotVel: 0,
    scale: {
      start: new o(0.04, 0.08),
      end: new o(0.01, 0.02),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.95, 1)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0.64, 1, t.random(0.83, 0.85)));
    }
  },
  book: {
    image: ["part-book-01.img"],
    life: new o(1, 1.5),
    drag: new o(3, 5),
    rotVel: new o(Math.PI * 3, Math.PI * 3),
    scale: {
      start: new o(0.09, 0.19),
      end: new o(0.07, 0.17),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0.08, 0.42, t.random(0.72, 0.74)));
    }
  },
  bottleBrownChip: {
    image: ["part-spark-02.img"],
    life: 0.5,
    drag: new o(1, 5),
    rotVel: new o(Math.PI * 1, Math.PI * 6),
    scale: {
      start: new o(0.02, 0.04),
      end: new o(0.01, 0.02),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.95, 1)
    },
    color: 7878664
  },
  bottleBrownBreak: {
    image: ["part-spark-02.img"],
    life: new o(0.4, 0.8),
    drag: new o(1, 4),
    rotVel: new o(Math.PI * 1, Math.PI * 6),
    scale: {
      start: new o(0.03, 0.06),
      end: new o(0.05, 0.1),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 0.8,
      end: 0,
      lerp: new o(0.75, 1)
    },
    color: 7878664
  },
  bottleBlueChip: {
    image: ["part-spark-02.img"],
    life: 0.5,
    drag: new o(1, 5),
    rotVel: new o(Math.PI * 1, Math.PI * 6),
    scale: {
      start: new o(0.02, 0.04),
      end: new o(0.01, 0.02),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.95, 1)
    },
    color: 19544
  },
  bottleWhiteBreak: {
    image: ["part-spark-02.img"],
    life: new o(0.4, 0.8),
    drag: new o(1, 4),
    rotVel: new o(Math.PI * 1, Math.PI * 6),
    scale: {
      start: new o(0.03, 0.06),
      end: new o(0.05, 0.1),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 0.75,
      end: 0,
      lerp: new o(0.75, 1)
    },
    color: 16777215
  },
  bottleWhiteChip: {
    image: ["part-spark-02.img"],
    life: 0.5,
    drag: new o(1, 5),
    rotVel: new o(Math.PI * 1, Math.PI * 6),
    scale: {
      start: new o(0.02, 0.04),
      end: new o(0.01, 0.02),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 0.75,
      end: 0,
      lerp: new o(0.95, 1)
    },
    color: 16777215
  },
  bottleBlueBreak: {
    image: ["part-spark-02.img"],
    life: new o(0.4, 0.8),
    drag: new o(1, 4),
    rotVel: new o(Math.PI * 1, Math.PI * 6),
    scale: {
      start: new o(0.03, 0.06),
      end: new o(0.05, 0.1),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 0.8,
      end: 0,
      lerp: new o(0.75, 1)
    },
    color: 19544
  },
  brickChip: {
    image: ["part-spark-02.img"],
    life: 0.5,
    drag: new o(1, 10),
    rotVel: 0,
    scale: {
      start: new o(0.04, 0.08),
      end: new o(0.01, 0.02),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.95, 1)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0, 0.71, t.random(0.32, 0.34)));
    }
  },
  clothBreak: {
    image: ["part-cloth-01.img"],
    life: new o(0.8, 1),
    drag: new o(1, 5),
    rotVel: 0,
    scale: {
      start: new o(0.07, 0.12),
      end: new o(0.05, 0.1),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0, 0, t.random(0.95, 1)));
    }
  },
  clothHit: {
    image: ["part-cloth-01.img"],
    life: 0.5,
    drag: new o(1, 10),
    rotVel: 0,
    scale: {
      start: new o(0.04, 0.08),
      end: new o(0.01, 0.02),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.95, 1)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0, 0, t.random(0.95, 1)));
    }
  },
  depositBoxGreyBreak: {
    image: ["part-plate-01.img"],
    life: new o(0.5, 1),
    drag: new o(7, 8),
    rotVel: new o(0, Math.PI * 3),
    scale: {
      start: new o(0.15, 0.25),
      end: new o(0.12, 0.2),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0, 0, t.random(0.36, 0.38)));
    }
  },
  depositBoxGoldBreak: {
    image: ["part-plate-01.img"],
    life: new o(0.5, 1),
    drag: new o(6, 8),
    rotVel: new o(0, Math.PI * 3),
    scale: {
      start: new o(0.2, 0.35),
      end: new o(0.18, 0.25),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0.11, 0.84, t.random(0.64, 0.66)));
    }
  },
  glassChip: {
    image: ["part-spark-02.img"],
    life: 0.5,
    drag: new o(1, 5),
    rotVel: new o(Math.PI * 1, Math.PI * 6),
    scale: {
      start: new o(0.04, 0.08),
      end: new o(0.01, 0.02),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.95, 1)
    },
    color: 8444415
  },
  glassPlank: {
    image: ["part-plank-01.img"],
    life: new o(1, 1.5),
    drag: new o(1, 5),
    rotVel: new o(Math.PI * 3, Math.PI * 3),
    scale: {
      start: new o(0.1, 0.2),
      end: new o(0.08, 0.18),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: 8444415
  },
  goldChip: {
    image: ["part-spark-02.img"],
    life: 0.5,
    drag: new o(1, 10),
    rotVel: 0,
    scale: {
      start: new o(0.04, 0.08),
      end: new o(0.01, 0.02),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.95, 1)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0.11, 0.84, t.random(0.88, 0.9)));
    }
  },
  greenChip: {
    image: ["part-spark-02.img"],
    life: 0.5,
    drag: new o(1, 10),
    rotVel: 0,
    scale: {
      start: new o(0.04, 0.08),
      end: new o(0.01, 0.02),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.95, 1)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0.4, 0.18, t.random(0.5, 0.62)));
    }
  },
  greenPlank: {
    image: ["part-plank-01.img"],
    life: new o(1, 1.5),
    drag: new o(1, 5),
    rotVel: new o(Math.PI * 3, Math.PI * 3),
    scale: {
      start: new o(0.08, 0.16),
      end: new o(0.05, 0.1),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: 3884335
  },
  greenhouseBreak: {
    image: ["part-spark-02.img", "part-plate-01.img", "part-panel-01.img"],
    life: new o(0.5, 1.5),
    drag: new o(1, 5),
    rotVel: new o(Math.PI * 1, Math.PI * 6),
    scale: {
      start: new o(0.25, 0.55),
      end: new o(0.08, 0.18),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 0.8,
      end: 0,
      lerp: new o(0.75, 1)
    },
    color: 8444415
  },
  hutBreak: {
    image: ["part-panel-01.img"],
    life: new o(0.5, 1.5),
    drag: new o(1, 5),
    rotVel: new o(0, Math.PI * 3),
    scale: {
      start: new o(0.25, 0.55),
      end: new o(0.08, 0.18),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0.1, 0.81, t.random(0.78, 0.82)));
    }
  },
  leaf: {
    image: ["part-leaf-01.img"],
    life: new o(0.5, 1),
    drag: new o(1, 5),
    rotVel: new o(Math.PI * 3, Math.PI * 3),
    scale: {
      start: new o(0.04, 0.08),
      end: new o(0.01, 0.02),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0, 0, t.random(0.5, 0.75)));
    }
  },
  leafPrickly: {
    image: ["part-leaf-01sv.img"],
    life: new o(0.5, 1),
    drag: new o(1, 5),
    rotVel: new o(Math.PI * 3, Math.PI * 3),
    scale: {
      start: new o(0.04, 0.08),
      end: new o(0.01, 0.02),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0, 0, t.random(0.8, 0.85)));
    }
  },
  leafRiver: {
    image: ["part-leaf-02.img"],
    life: new o(0.5, 1),
    drag: new o(1, 5),
    rotVel: new o(Math.PI * 3, Math.PI * 3),
    scale: {
      start: new o(0.04, 0.08),
      end: new o(0.01, 0.02),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0, 0, t.random(0.5, 0.75)));
    }
  },
  lockerBreak: {
    image: ["part-plate-01.img"],
    life: new o(0.5, 1),
    drag: new o(7, 8),
    rotVel: new o(0, Math.PI * 3),
    scale: {
      start: new o(0.15, 0.2),
      end: new o(0.12, 0.15),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0.1, 0.23, t.random(0.51, 0.53)));
    }
  },
  ltgreenChip: {
    image: ["part-woodchip-01.img"],
    life: new o(0.5, 1),
    drag: new o(1, 5),
    rotVel: new o(Math.PI * 3, Math.PI * 3),
    scale: {
      start: new o(0.04, 0.08),
      end: new o(0.01, 0.02),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0.2, 0.42, t.random(0.38, 0.42)));
    }
  },
  outhouseChip: {
    image: ["part-woodchip-01.img"],
    life: new o(0.5, 1),
    drag: new o(1, 5),
    rotVel: new o(Math.PI * 3, Math.PI * 3),
    scale: {
      start: new o(0.04, 0.08),
      end: new o(0.01, 0.02),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0.08, 0.57, t.random(0.4, 0.46)));
    }
  },
  outhouseBreak: {
    image: ["part-panel-01.img"],
    life: new o(0.5, 1.5),
    drag: new o(1, 5),
    rotVel: new o(0, Math.PI * 3),
    scale: {
      start: new o(0.25, 0.55),
      end: new o(0.08, 0.18),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0.08, 0.79, t.random(0.52, 0.54)));
    }
  },
  outhousePlank: {
    image: ["part-plank-01.img"],
    life: new o(1, 1.5),
    drag: new o(1, 5),
    rotVel: new o(Math.PI * 3, Math.PI * 3),
    scale: {
      start: new o(0.1, 0.2),
      end: new o(0.08, 0.18),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0.08, 0.57, t.random(0.4, 0.46)));
    }
  },
  potChip: {
    image: ["part-spark-02.img"],
    life: 0.5,
    drag: new o(1, 10),
    rotVel: 0,
    scale: {
      start: new o(0.04, 0.08),
      end: new o(0.01, 0.02),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.95, 1)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0.06, 0.84, t.random(0.73, 0.77)));
    }
  },
  potBreak: {
    image: ["part-pot-01.img"],
    life: new o(0.8, 1),
    drag: new o(1, 5),
    rotVel: 0,
    scale: {
      start: new o(0.07, 0.12),
      end: new o(0.05, 0.1),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0.06, 0.84, t.random(0.73, 0.77)));
    }
  },
  potatoChip: {
    image: ["part-spark-02.img"],
    life: 0.5,
    drag: new o(1, 10),
    rotVel: 0,
    scale: {
      start: new o(0.04, 0.08),
      end: new o(0.01, 0.02),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.95, 1)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0.075, 0.43, t.random(0.48, 0.5)));
    }
  },
  potatoBreak: {
    image: ["part-pumpkin-01.img"],
    life: new o(0.8, 1),
    drag: new o(1, 5),
    rotVel: 0,
    scale: {
      start: new o(0.07, 0.12),
      end: new o(0.05, 0.1),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0.075, 0.43, t.random(0.48, 0.5)));
    }
  },
  pumpkinChip: {
    image: ["part-spark-02.img"],
    life: 0.5,
    drag: new o(1, 10),
    rotVel: 0,
    scale: {
      start: new o(0.04, 0.08),
      end: new o(0.01, 0.02),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.95, 1)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0.07, 1, t.random(0.98, 1)));
    }
  },
  pumpkinBreak: {
    image: ["part-pumpkin-01.img"],
    life: new o(0.8, 1),
    drag: new o(1, 5),
    rotVel: 0,
    scale: {
      start: new o(0.07, 0.12),
      end: new o(0.05, 0.1),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0.08, 1, t.random(0.95, 0.97)));
    }
  },
  squashChip: {
    image: ["part-spark-02.img"],
    life: 0.5,
    drag: new o(1, 10),
    rotVel: 0,
    scale: {
      start: new o(0.04, 0.08),
      end: new o(0.01, 0.02),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.95, 1)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0.31, 0.86, t.random(0.35, 0.36)));
    }
  },
  squashBreak: {
    image: ["part-pumpkin-01.img"],
    life: new o(0.8, 1),
    drag: new o(1, 5),
    rotVel: 0,
    scale: {
      start: new o(0.07, 0.12),
      end: new o(0.05, 0.1),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0.31, 0.86, t.random(0.35, 0.36)));
    }
  },
  redChip: {
    image: ["part-spark-02.img"],
    life: 0.5,
    drag: new o(1, 10),
    rotVel: 0,
    scale: {
      start: new o(0.04, 0.08),
      end: new o(0.01, 0.02),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.95, 1)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0.98, 1, t.random(0.52, 0.54)));
    }
  },
  redBreak: {
    image: ["part-spark-02.img"],
    life: new o(0.8, 1),
    drag: new o(1, 5),
    rotVel: 0,
    scale: {
      start: new o(0.07, 0.12),
      end: new o(0.05, 0.1),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0.98, 1, t.random(0.52, 0.54)));
    }
  },
  redPlank: {
    image: ["part-plank-01.img"],
    life: new o(1, 1.5),
    drag: new o(1, 5),
    rotVel: new o(Math.PI * 3, Math.PI * 3),
    scale: {
      start: new o(0.1, 0.2),
      end: new o(0.08, 0.18),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0.02, 1, t.random(0.26, 0.28)));
    }
  },
  rockChip: {
    image: ["map-stone-01.img"],
    life: 0.5,
    drag: new o(1, 10),
    rotVel: 0,
    scale: {
      start: new o(0.04, 0.08),
      end: new o(0.01, 0.02),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.95, 1)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0, 0, t.random(0.5, 0.75)));
    }
  },
  rockBreak: {
    image: ["map-stone-01.img"],
    life: new o(0.8, 1),
    drag: new o(1, 5),
    rotVel: 0,
    scale: {
      start: new o(0.07, 0.12),
      end: new o(0.05, 0.1),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0, 0, t.random(0.5, 0.75)));
    }
  },
  rockEyeChip: {
    image: ["map-stone-01.img"],
    life: 0.5,
    drag: new o(1, 10),
    rotVel: 0,
    scale: {
      start: new o(0.03, 0.06),
      end: new o(0.01, 0.02),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.95, 1)
    },
    color: 2696225
  },
  rockEyeBreak: {
    image: ["map-stone-01.img"],
    life: new o(0.8, 1),
    drag: new o(4, 12),
    rotVel: 0,
    scale: {
      start: new o(0.05, 0.1),
      end: new o(0.03, 0.06),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: 2696225
  },
  shackBreak: {
    image: ["part-panel-01.img"],
    life: new o(0.5, 1.5),
    drag: new o(1, 5),
    rotVel: new o(0, Math.PI * 3),
    scale: {
      start: new o(0.25, 0.55),
      end: new o(0.08, 0.18),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0.1, 0.24, t.random(0.38, 0.41)));
    }
  },
  shackGreenBreak: {
    image: ["part-panel-01.img"],
    life: new o(0.5, 1.5),
    drag: new o(1, 5),
    rotVel: new o(0, Math.PI * 3),
    scale: {
      start: new o(0.25, 0.55),
      end: new o(0.08, 0.18),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: 5730406
  },
  tanChip: {
    image: ["part-woodchip-01.img"],
    life: new o(0.5, 1),
    drag: new o(1, 5),
    rotVel: new o(Math.PI * 3, Math.PI * 3),
    scale: {
      start: new o(0.04, 0.08),
      end: new o(0.01, 0.02),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0.1, 0.35, t.random(0.48, 0.52)));
    }
  },
  teahouseBreak: {
    image: ["part-panel-01.img"],
    life: new o(0.5, 1.5),
    drag: new o(1, 5),
    rotVel: new o(0, Math.PI * 3),
    scale: {
      start: new o(0.25, 0.55),
      end: new o(0.08, 0.18),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0.6, 0.31, t.random(0.42, 0.45)));
    }
  },
  teapavilionBreak: {
    image: ["part-panel-01.img"],
    life: new o(0.5, 1.5),
    drag: new o(1, 5),
    rotVel: new o(0, Math.PI * 3),
    scale: {
      start: new o(0.25, 0.55),
      end: new o(0.08, 0.18),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0, 0.8, t.random(0.6, 0.62)));
    }
  },
  toiletBreak: {
    image: ["part-spark-02.img"],
    life: new o(0.8, 1),
    drag: new o(1, 5),
    rotVel: 0,
    scale: {
      start: new o(0.07, 0.12),
      end: new o(0.05, 0.1),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0.97, 0, t.random(0.95, 0.97)));
    }
  },
  toiletMetalBreak: {
    image: ["part-spark-02.img"],
    life: new o(0.8, 1),
    drag: new o(4, 5),
    rotVel: 0,
    scale: {
      start: new o(0.07, 0.12),
      end: new o(0.05, 0.1),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0.01, 0.02, t.random(0.38, 0.41)));
    }
  },
  turkeyFeathersHit: {
    image: ["part-feather-01.img", "part-feather-02.img"],
    life: new o(1, 1.5),
    drag: new o(1, 10),
    rotVel: new o(0, Math.PI * 3),
    scale: {
      start: new o(0.1, 0.2),
      end: new o(0.08, 0.12),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.95, 1)
    },
    color: function () {
      return 16777215;
    }
  },
  turkeyFeathersDeath: {
    image: ["part-feather-01.img", "part-feather-02.img"],
    life: new o(1, 1.5),
    drag: new o(1, 10),
    rotVel: new o(0, Math.PI * 3),
    scale: {
      start: new o(0.15, 0.25),
      end: new o(0.12, 0.2),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.95, 1)
    },
    color: function () {
      return 16777215;
    }
  },
  whiteChip: {
    image: ["part-spark-02.img"],
    life: 0.5,
    drag: new o(1, 10),
    rotVel: 0,
    scale: {
      start: new o(0.04, 0.08),
      end: new o(0.01, 0.02),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.95, 1)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0.97, 0, t.random(0.95, 0.97)));
    }
  },
  whitePlank: {
    image: ["part-plank-01.img"],
    life: new o(1, 1.5),
    drag: new o(1, 5),
    rotVel: new o(Math.PI * 3, Math.PI * 3),
    scale: {
      start: new o(0.1, 0.2),
      end: new o(0.08, 0.18),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0.97, 0, t.random(0.95, 0.97)));
    }
  },
  windowBreak: {
    image: ["part-spark-02.img"],
    life: new o(0.4, 0.8),
    drag: new o(1, 4),
    rotVel: new o(Math.PI * 1, Math.PI * 6),
    scale: {
      start: new o(0.07, 0.12),
      end: new o(0.05, 0.1),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 0.8,
      end: 0,
      lerp: new o(0.75, 1)
    },
    color: 8444415
  },
  woodChip: {
    image: ["part-woodchip-01.img"],
    life: new o(0.5, 1),
    drag: new o(1, 5),
    rotVel: new o(Math.PI * 3, Math.PI * 3),
    scale: {
      start: new o(0.04, 0.08),
      end: new o(0.01, 0.02),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0.05, 1, t.random(0.35, 0.45)));
    }
  },
  woodLog: {
    image: ["part-log-01.img"],
    life: new o(1, 1.5),
    drag: new o(1, 5),
    rotVel: new o(Math.PI * 3, Math.PI * 3),
    scale: {
      start: new o(0.1, 0.2),
      end: new o(0.08, 0.18),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0.05, 1, t.random(0.35, 0.45)));
    }
  },
  woodPlank: {
    image: ["part-plank-01.img"],
    life: new o(1, 1.5),
    drag: new o(1, 5),
    rotVel: new o(Math.PI * 3, Math.PI * 3),
    scale: {
      start: new o(0.1, 0.2),
      end: new o(0.08, 0.18),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0.05, 1, t.random(0.25, 0.35)));
    }
  },
  woodShard: {
    image: ["part-spark-02.img"],
    life: new o(1, 1.5),
    drag: new o(3, 5),
    rotVel: new o(Math.PI * 3, Math.PI * 3),
    scale: {
      start: new o(0.06, 0.15),
      end: new o(0.02, 0.1),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0.05, 1, t.random(0.25, 0.35)));
    }
  },
  "9mm": {
    image: ["part-shell-01.img"],
    life: new o(0.5, 0.75),
    drag: new o(3, 4),
    rotVel: new o(Math.PI * 3, Math.PI * 3),
    scale: {
      start: 0.0625,
      end: 0.0325,
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.95, 1)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0, 0, t.random(0.9, 0.95)));
    }
  },
  "9mm_cursed": {
    image: ["part-shell-01.img"],
    life: new o(0.5, 0.75),
    drag: new o(3, 4),
    rotVel: new o(Math.PI * 3, Math.PI * 3),
    scale: {
      start: 0.0625,
      end: 0.0325,
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.95, 1)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0, 0, t.random(0.9, 0.95)));
    }
  },
  "762mm": {
    image: ["part-shell-02.img"],
    life: new o(0.75, 1),
    drag: new o(1.5, 2.5),
    rotVel: new o(Math.PI * 2.5, Math.PI * 2.5),
    scale: {
      start: 0.075,
      end: 0.045,
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.925, 1)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0, 0, t.random(0.9, 0.95)));
    }
  },
  "556mm": {
    image: ["part-shell-04.img"],
    life: new o(0.75, 1),
    drag: new o(1.5, 2.5),
    rotVel: new o(Math.PI * 2.5, Math.PI * 2.5),
    scale: {
      start: 0.075,
      end: 0.045,
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.925, 1)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0, 0, t.random(0.9, 0.95)));
    }
  },
  "12gauge": {
    image: ["part-shell-03.img"],
    life: new o(0.5, 0.75),
    drag: new o(1, 2),
    rotVel: new o(Math.PI * 3, Math.PI * 3),
    scale: {
      start: 0.1,
      end: 0.05,
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.95, 1)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0, 0, t.random(0.9, 0.95)));
    }
  },
  "50AE": {
    image: ["part-shell-01.img"],
    life: new o(0.5, 0.75),
    drag: new o(3, 4),
    rotVel: new o(Math.PI * 3, Math.PI * 3),
    scale: {
      start: 0.0625,
      end: 0.0325,
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.95, 1)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0, 0, t.random(0.9, 0.95)));
    }
  },
  "308sub": {
    image: ["part-shell-05.img"],
    life: new o(0.5, 0.75),
    drag: new o(3, 4),
    rotVel: new o(Math.PI * 3, Math.PI * 3),
    scale: {
      start: 0.0625,
      end: 0.0325,
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.95, 1)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0, 0, t.random(0.9, 0.95)));
    }
  },
  flare: {
    image: ["part-shell-03.img"],
    life: new o(0.5, 0.75),
    drag: new o(1, 2),
    rotVel: new o(Math.PI * 3, Math.PI * 3),
    scale: {
      start: 0.1,
      end: 0.05,
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.95, 1)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0, 0, t.random(0.9, 0.95)));
    }
  },
  "45acp": {
    image: ["part-shell-01.img"],
    life: new o(0.5, 0.75),
    drag: new o(3, 4),
    rotVel: new o(Math.PI * 3, Math.PI * 3),
    scale: {
      start: 0.07,
      end: 0.04,
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.95, 1)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0, 0, t.random(0.9, 0.95)));
    }
  },
  potato_ammo: {
    image: ["part-wedge-01.img"],
    life: new o(0.5, 0.75),
    drag: new o(3, 4),
    rotVel: new o(Math.PI * 3, Math.PI * 3),
    scale: {
      start: 0.07,
      end: 0.04,
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.95, 1)
    },
    color: 16777215
  },
  bugle_ammo: {
    image: ["part-note-02.img"],
    life: new o(1.25, 1.3),
    drag: new o(3, 4),
    rotVel: new o(Math.PI * 1, Math.PI * 1),
    scale: {
      start: 0.1,
      end: 0.14,
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.5, 1)
    },
    color: 16767488
  },
  fragPin: {
    image: ["part-frag-pin-01.img"],
    life: new o(0.5, 0.5),
    drag: new o(0.9, 1),
    rotVel: 0,
    scale: {
      start: 0.18,
      end: 0.14,
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.5, 1)
    },
    color: 16777215
  },
  fragLever: {
    image: ["part-frag-lever-01.img"],
    life: new o(0.5, 0.5),
    drag: new o(0.9, 1),
    rotVel: Math.PI * 9,
    scale: {
      start: 0.18,
      end: 0.14,
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.5, 1)
    },
    color: 16777215
  },
  explosionBurst: {
    image: ["part-frag-burst-01.img"],
    life: 0.5,
    drag: 0,
    rotVel: 0,
    scale: {
      start: 1,
      end: 4,
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.75, 1)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0.065, 1, t.random(0.98, 0.99)));
    }
  },
  explosionMIRV: {
    image: ["part-frag-burst-01.img"],
    life: 0.5,
    drag: 0,
    rotVel: 0,
    scale: {
      start: 1,
      end: 4,
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.75, 1)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0, 1, t.random(0.82, 0.84)));
    }
  },
  explosionSmoke: {
    image: ["part-smoke-01.img"],
    life: new o(2, 3),
    drag: 0,
    rotVel: new o(Math.PI * 0.25, Math.PI * 0.5),
    scale: {
      start: new o(0.07, 0.12),
      end: new o(0.05, 0.1),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0, 0, t.random(0.9, 0.95)));
    }
  },
  explosionUSAS: {
    image: ["part-frag-burst-01.img"],
    life: 0.5,
    drag: 0,
    rotVel: 0,
    scale: {
      start: 1,
      end: 4,
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.75, 1)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0.08, 1, t.random(0.98, 0.99)));
    }
  },
  explosionRounds: {
    image: ["part-frag-burst-03.img"],
    life: 0.5,
    drag: 0,
    rotVel: 0,
    scale: {
      start: 1,
      end: 4,
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.75, 1)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0.08, 0.7, t.random(0.75, 0.8)));
    }
  },
  explosionBomb: {
    image: ["part-frag-burst-02.img"],
    life: 0.5,
    drag: 0,
    rotVel: 0,
    scale: {
      start: 1,
      end: 4,
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.75, 1)
    },
    color: 16777215
  },
  explosionPotato: {
    image: ["part-frag-burst-01.img"],
    life: 0.5,
    drag: 0,
    rotVel: 0,
    scale: {
      start: 1,
      end: 4,
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.75, 1)
    },
    color: 11363866
  },
  explosionPotatoSMG: {
    image: ["part-frag-burst-01.img"],
    life: 0.5,
    drag: 0,
    rotVel: 0,
    scale: {
      start: 1,
      end: 4,
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.75, 1)
    },
    color: 12888074
  },
  airdropSmoke: {
    image: ["part-smoke-02.img", "part-smoke-03.img"],
    zOrd: 499,
    life: new o(1, 1.5),
    drag: 0,
    rotVel: new o(Math.PI * 0.25, Math.PI * 0.5),
    scale: {
      start: new o(0.67, 0.72),
      end: new o(0.55, 0.61),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0, 0, t.random(0.9, 0.95)));
    }
  },
  airdropCrate01: {
    image: ["part-airdrop-01.img"],
    life: new o(0.85, 1.15),
    drag: new o(2, 2.25),
    rotVel: new o(Math.PI * 1, Math.PI * 2),
    scale: {
      start: 0.5,
      end: 0.4,
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: 16777215
  },
  airdropCrate01h: {
    image: ["part-airdrop-01h.img"],
    life: new o(0.85, 1.15),
    drag: new o(2, 2.25),
    rotVel: new o(Math.PI * 1, Math.PI * 2),
    scale: {
      start: 0.5,
      end: 0.4,
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: 16777215
  },
  airdropCrate01x: {
    image: ["part-airdrop-01x.img"],
    life: new o(0.85, 1.15),
    drag: new o(2, 2.25),
    rotVel: new o(Math.PI * 1, Math.PI * 2),
    scale: {
      start: 0.5,
      end: 0.4,
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: 16777215
  },
  airdropCrate02: {
    image: ["part-airdrop-02.img"],
    life: new o(0.85, 1.15),
    drag: new o(1.85, 2.15),
    rotVel: new o(0, Math.PI * 2),
    scale: {
      start: 0.5,
      end: 0.4,
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: 16777215
  },
  airdropCrate02h: {
    image: ["part-airdrop-02h.img"],
    life: new o(0.85, 1.15),
    drag: new o(1.85, 2.15),
    rotVel: new o(0, Math.PI * 2),
    scale: {
      start: 0.5,
      end: 0.4,
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: 16777215
  },
  airdropCrate02x: {
    image: ["part-airdrop-02x.img"],
    life: new o(0.85, 1.15),
    drag: new o(1.85, 2.15),
    rotVel: new o(0, Math.PI * 2),
    scale: {
      start: 0.5,
      end: 0.4,
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: 16777215
  },
  airdropCrate03: {
    image: ["part-airdrop-03.img"],
    life: new o(0.85, 1.15),
    drag: new o(2, 2.25),
    rotVel: new o(Math.PI * 1, Math.PI * 2),
    scale: {
      start: 0.5,
      end: 0.4,
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: 16777215
  },
  airdropCrate04: {
    image: ["part-airdrop-04.img"],
    life: new o(0.85, 1.15),
    drag: new o(1.85, 2.15),
    rotVel: new o(0, Math.PI * 2),
    scale: {
      start: 0.5,
      end: 0.4,
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: 16777215
  },
  classShell01a: {
    image: ["part-class-shell-01a.img"],
    life: new o(0.85, 1.15),
    drag: new o(2, 2.25),
    rotVel: new o(Math.PI * 1, Math.PI * 2),
    scale: {
      start: 0.5,
      end: 0.4,
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: 16777215
  },
  classShell01b: {
    image: ["part-class-shell-01b.img"],
    life: new o(0.85, 1.15),
    drag: new o(1.85, 2.15),
    rotVel: new o(0, Math.PI * 2),
    scale: {
      start: 0.5,
      end: 0.4,
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: 16777215
  },
  classShell02a: {
    image: ["part-class-shell-02a.img"],
    life: new o(0.85, 1.15),
    drag: new o(2, 2.25),
    rotVel: new o(Math.PI * 1, Math.PI * 2),
    scale: {
      start: 0.5,
      end: 0.4,
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: 16777215
  },
  classShell02b: {
    image: ["part-class-shell-02b.img"],
    life: new o(0.85, 1.15),
    drag: new o(1.85, 2.15),
    rotVel: new o(0, Math.PI * 2),
    scale: {
      start: 0.5,
      end: 0.4,
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: 16777215
  },
  classShell03a: {
    image: ["part-class-shell-03a.img"],
    life: new o(0.85, 1.15),
    drag: new o(2, 2.25),
    rotVel: new o(Math.PI * 1, Math.PI * 2),
    scale: {
      start: 0.5,
      end: 0.4,
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: 16777215
  },
  classShell03b: {
    image: ["part-class-shell-03b.img"],
    life: new o(0.85, 1.15),
    drag: new o(1.85, 2.15),
    rotVel: new o(0, Math.PI * 2),
    scale: {
      start: 0.5,
      end: 0.4,
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: 16777215
  },
  cabinSmoke: {
    image: ["part-smoke-02.img", "part-smoke-03.img"],
    life: new o(3, 3.25),
    drag: new o(0.2, 0.22),
    rotVel: new o(Math.PI * 0.25, Math.PI * 0.5),
    scale: {
      start: new o(0.2, 0.25),
      end: new o(0.6, 0.65),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 0.7,
      end: 0,
      lerp: new o(0.9, 1)
    },
    alphaIn: {
      start: 0,
      end: 0.7,
      lerp: new o(0, 0.1)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0, 0, t.random(0.69, 0.695)));
    }
  },
  bathhouseSteam: {
    image: ["part-smoke-02.img", "part-smoke-03.img"],
    life: new o(10, 12),
    drag: new o(0.04, 0.06),
    rotVel: new o(Math.PI * 0.25, Math.PI * 0.5),
    scale: {
      start: new o(0.2, 0.25),
      end: new o(0.9, 0.95),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 0.5,
      end: 0,
      lerp: new o(0.9, 1)
    },
    alphaIn: {
      start: 0,
      end: 0.5,
      lerp: new o(0, 0.1)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0, 0, t.random(0.99, 0.995)));
    }
  },
  bunkerBubbles: {
    image: ["player-ripple-01.img"],
    zOrd: 10,
    life: new o(2.25, 2.5),
    drag: new o(1.85, 2.15),
    rotVel: new o(Math.PI * 0.25, Math.PI * 0.5),
    scale: {
      start: new o(0.2, 0.25),
      end: new o(0.65, 0.7),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 0.25,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0, 0, t.random(0.95, 1)));
    }
  },
  waterRipple: {
    image: ["player-ripple-01.img"],
    zOrd: 10,
    life: 1.75,
    drag: 0,
    rotVel: 0,
    scale: {
      start: 0.15,
      exp: 0.5
    },
    alpha: {
      start: 1,
      exp: -1
    },
    color: 11792639
  },
  leafAutumn: {
    image: ["part-leaf-03.img", "part-leaf-04.img", "part-leaf-05.img", "part-leaf-06.img"],
    life: new o(10, 15),
    drag: new o(0, 0),
    rotVel: new o(Math.PI * 0.25, Math.PI * 0.5),
    scale: {
      start: new o(0.12, 0.15),
      end: new o(0.08, 0.11),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    alphaIn: {
      start: 0,
      end: 1,
      lerp: new o(0, 0.05)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0, 0, t.random(0.9, 0.95)));
    }
  },
  leafHalloween: {
    image: ["part-leaf-03.img", "part-leaf-04.img", "part-leaf-05.img", "part-leaf-06.img"],
    life: new o(10, 15),
    drag: new o(0, 0),
    rotVel: new o(Math.PI * 0.25, Math.PI * 0.5),
    scale: {
      start: new o(0.12, 0.15),
      end: new o(0.08, 0.11),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    alphaIn: {
      start: 0,
      end: 1,
      lerp: new o(0, 0.05)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0, 0, t.random(0.5, 0.55)));
    },
    ignoreValueAdjust: true
  },
  leafSpring: {
    image: ["part-blossom-01.img", "part-blossom-02.img", "part-blossom-03.img", "part-blossom-04.img"],
    life: new o(10, 15),
    drag: new o(0, 0),
    rotVel: new o(Math.PI * 0.25, Math.PI * 0.5),
    scale: {
      start: new o(0.13, 0.15),
      end: new o(0.08, 0.11),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    alphaIn: {
      start: 0,
      end: 1,
      lerp: new o(0, 0.05)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0, 0, t.random(0.9, 0.95)));
    }
  },
  leafSummer: {
    image: ["part-leaf-06.img"],
    life: new o(10, 15),
    drag: new o(0, 0),
    rotVel: new o(Math.PI * 0.25, Math.PI * 0.5),
    scale: {
      start: new o(0.12, 0.15),
      end: new o(0.08, 0.11),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    alphaIn: {
      start: 0,
      end: 1,
      lerp: new o(0, 0.05)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0, 0, t.random(0.7, 0.95)));
    },
    ignoreValueAdjust: true
  },
  leafPotato: {
    image: ["part-blossom-01.img", "part-blossom-02.img", "part-blossom-03.img", "part-blossom-04.img", "part-potato-02.img"],
    life: new o(10, 15),
    drag: new o(0, 0),
    rotVel: new o(Math.PI * 0.25, Math.PI * 0.5),
    scale: {
      start: new o(0.13, 0.15),
      end: new o(0.08, 0.11),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    alphaIn: {
      start: 0,
      end: 1,
      lerp: new o(0, 0.05)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0, 0, t.random(0.9, 0.95)));
    }
  },
  potato: {
    image: ["part-potato-02.img"],
    life: new o(10, 15),
    drag: new o(0, 0),
    rotVel: new o(Math.PI * 0.25, Math.PI * 0.5),
    scale: {
      start: new o(0.13, 0.15),
      end: new o(0.08, 0.11),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    alphaIn: {
      start: 0,
      end: 1,
      lerp: new o(0, 0.05)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0, 0, t.random(0.9, 0.95)));
    }
  },
  snow: {
    image: ["part-snow-01.img"],
    life: new o(10, 15),
    drag: new o(0, 0),
    rotVel: new o(Math.PI * 0.25, Math.PI * 0.5),
    scale: {
      start: new o(0.07, 0.12),
      end: new o(0.05, 0.1),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    alphaIn: {
      start: 0,
      end: 1,
      lerp: new o(0, 0.05)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0, 0, t.random(0.9, 0.95)));
    }
  },
  snowball_impact: {
    image: ["part-snow-01.img"],
    life: new o(0.5, 1),
    drag: new o(0, 0),
    rotVel: new o(Math.PI * 0.25, Math.PI * 0.5),
    scale: {
      start: new o(0.13, 0.23),
      end: new o(0.07, 0.14),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0, 0, t.random(0.9, 0.95)));
    }
  },
  potato_impact: {
    image: ["part-potato-01.img"],
    life: new o(0.5, 1),
    drag: new o(0, 0),
    rotVel: new o(Math.PI * 0.25, Math.PI * 0.5),
    scale: {
      start: new o(0.13, 0.23),
      end: new o(0.07, 0.14),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0, 0, t.random(0.9, 0.95)));
    }
  },
  potato_smg_impact: {
    image: ["part-potato-01.img"],
    life: new o(0.5, 1),
    drag: new o(0, 0),
    rotVel: new o(Math.PI * 0.25, Math.PI * 0.5),
    scale: {
      start: new o(0.13, 0.23),
      end: new o(0.07, 0.14),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.9, 1)
    },
    color: 16770437
  },
  heal_basic: {
    image: ["part-heal-basic.img"],
    life: new o(0.75, 1),
    drag: 0.25,
    rotVel: 0,
    scale: {
      start: new o(0.1, 0.12),
      end: new o(0.05, 0.07),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.7, 1)
    },
    alphaIn: {
      start: 0,
      end: 1,
      lerp: new o(0, 0.05)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0, 1, t.random(0.7, 1)));
    },
    ignoreValueAdjust: true
  },
  heal_heart: {
    image: ["part-heal-heart.img"],
    life: new o(0.75, 1),
    drag: 0.25,
    rotVel: 0,
    scale: {
      start: new o(0.1, 0.12),
      end: new o(0.05, 0.07),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.7, 1)
    },
    alphaIn: {
      start: 0,
      end: 1,
      lerp: new o(0, 0.05)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0, 1, t.random(0.7, 1)));
    },
    ignoreValueAdjust: true
  },
  heal_moon: {
    image: ["part-heal-moon.img"],
    life: new o(0.75, 1),
    drag: 0.25,
    rotVel: new o(Math.PI * 0.25, Math.PI * 0.5),
    scale: {
      start: new o(0.1, 0.12),
      end: new o(0.05, 0.07),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.7, 1)
    },
    alphaIn: {
      start: 0,
      end: 1,
      lerp: new o(0, 0.05)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0, 1, t.random(0.7, 1)));
    },
    ignoreValueAdjust: true
  },
  heal_tomoe: {
    image: ["part-heal-tomoe.img"],
    life: new o(0.75, 1),
    drag: 0.25,
    rotVel: new o(Math.PI * 0.5, Math.PI * 1),
    scale: {
      start: new o(0.1, 0.12),
      end: new o(0.05, 0.07),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.7, 1)
    },
    alphaIn: {
      start: 0,
      end: 1,
      lerp: new o(0, 0.05)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0, 1, t.random(0.7, 1)));
    },
    ignoreValueAdjust: true
  },
  boost_basic: {
    image: ["part-boost-basic.img"],
    life: new o(0.75, 1),
    drag: 0,
    rotVel: new o(Math.PI * 0.25, Math.PI * 0.5),
    scale: {
      start: new o(0.12, 0.14),
      end: new o(0.06, 0.08),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.7, 1)
    },
    alphaIn: {
      start: 0,
      end: 1,
      lerp: new o(0, 0.05)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0.3, 1, t.random(0.7, 1)));
    },
    ignoreValueAdjust: true
  },
  boost_star: {
    image: ["part-boost-star.img"],
    life: new o(0.75, 1),
    drag: 0,
    rotVel: new o(Math.PI * 0.25, Math.PI * 0.5),
    scale: {
      start: new o(0.12, 0.14),
      end: new o(0.06, 0.08),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.7, 1)
    },
    alphaIn: {
      start: 0,
      end: 1,
      lerp: new o(0, 0.05)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0.3, 1, t.random(0.7, 1)));
    },
    ignoreValueAdjust: true
  },
  boost_naturalize: {
    image: ["part-boost-naturalize.img"],
    life: new o(0.75, 1),
    drag: 0,
    rotVel: new o(Math.PI * 0.35, Math.PI * 0.7),
    scale: {
      start: new o(0.12, 0.14),
      end: new o(0.06, 0.08),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.7, 1)
    },
    alphaIn: {
      start: 0,
      end: 1,
      lerp: new o(0, 0.05)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0.3, 1, t.random(0.7, 1)));
    },
    ignoreValueAdjust: true
  },
  boost_shuriken: {
    image: ["part-boost-shuriken.img"],
    life: new o(0.75, 1),
    drag: 0,
    rotVel: new o(Math.PI * 1, Math.PI * 2),
    scale: {
      start: new o(0.12, 0.14),
      end: new o(0.06, 0.08),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.7, 1)
    },
    alphaIn: {
      start: 0,
      end: 1,
      lerp: new o(0, 0.05)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0.3, 1, t.random(0.7, 1)));
    },
    ignoreValueAdjust: true
  },
  revive_basic: {
    image: ["part-heal-basic.img"],
    life: new o(0.75, 1),
    drag: 0.25,
    rotVel: 0,
    scale: {
      start: new o(0.1, 0.12),
      end: new o(0.05, 0.07),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.7, 1)
    },
    alphaIn: {
      start: 0,
      end: 1,
      lerp: new o(0, 0.05)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0.83, 1, t.random(0.7, 1)));
    },
    ignoreValueAdjust: true
  },
  leafStim: {
    image: ["part-blossom-01.img", "part-blossom-02.img", "part-blossom-03.img", "part-blossom-04.img"],
    life: new o(4, 5),
    drag: 0,
    rotVel: new o(Math.PI * 0.25, Math.PI * 0.5),
    scale: {
      start: new o(0.12, 0.14),
      end: new o(0.06, 0.08),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.7, 1)
    },
    alphaIn: {
      start: 0,
      end: 1,
      lerp: new o(0, 0.05)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0.37, 1, t.random(0.95, 1)));
    }
  },
  takedownStim: {
    image: ["part-takedown-01.img"],
    life: new o(4, 5),
    drag: 0,
    rotVel: new o(Math.PI * 0.25, Math.PI * 0.5),
    scale: {
      start: new o(0.12, 0.14),
      end: new o(0.06, 0.08),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.7, 1)
    },
    alphaIn: {
      start: 0,
      end: 1,
      lerp: new o(0, 0.05)
    },
    color: 13107200
  },
  inspireStim: {
    image: ["part-note-01.img"],
    life: new o(4, 5),
    drag: 0,
    rotVel: new o(Math.PI * 0.25, Math.PI * 0.5),
    scale: {
      start: new o(0.12, 0.14),
      end: new o(0.06, 0.08),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.7, 1)
    },
    alphaIn: {
      start: 0,
      end: 1,
      lerp: new o(0, 0.05)
    },
    color: function () {
      return t.rgbToInt(t.hsvToRgb(0.13, 1, t.random(0.98, 1)));
    }
  },
  xp_common: {
    image: ["part-boost-basic.img"],
    life: new o(0.75, 1),
    drag: 0,
    rotVel: new o(Math.PI * 0.25, Math.PI * 0.5),
    scale: {
      start: new o(0.12, 0.14),
      end: new o(0.06, 0.08),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.7, 1)
    },
    alphaIn: {
      start: 0,
      end: 1,
      lerp: new o(0, 0.05)
    },
    color: function () {
      if (Math.random() > 0.5) {
        return t.rgbToInt(t.hsvToRgb(0.12, 0.97, t.random(0.95, 1)));
      } else {
        return t.rgbToInt(t.hsvToRgb(0.16, 1, t.random(0.95, 1)));
      }
    },
    ignoreValueAdjust: true
  },
  xp_rare: {
    image: ["part-boost-basic.img"],
    life: new o(0.75, 1),
    drag: 0,
    rotVel: new o(Math.PI * 0.25, Math.PI * 0.5),
    scale: {
      start: new o(0.12, 0.14),
      end: new o(0.06, 0.08),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.7, 1)
    },
    alphaIn: {
      start: 0,
      end: 1,
      lerp: new o(0, 0.05)
    },
    color: function () {
      if (Math.random() > 0.5) {
        return t.rgbToInt(t.hsvToRgb(0.05, 0.94, t.random(0.85, 0.88)));
      } else {
        return t.rgbToInt(t.hsvToRgb(0.06, 0.95, t.random(0.95, 1)));
      }
    },
    ignoreValueAdjust: true
  },
  xp_mythic: {
    image: ["part-boost-basic.img"],
    life: new o(0.75, 1),
    drag: 0,
    rotVel: new o(Math.PI * 0.25, Math.PI * 0.5),
    scale: {
      start: new o(0.12, 0.14),
      end: new o(0.06, 0.08),
      lerp: new o(0, 1)
    },
    alpha: {
      start: 1,
      end: 0,
      lerp: new o(0.7, 1)
    },
    alphaIn: {
      start: 0,
      end: 1,
      lerp: new o(0, 0.05)
    },
    color: function () {
      if (Math.random() > 0.5) {
        return t.rgbToInt(t.hsvToRgb(0, 0.96, t.random(0.91, 0.94)));
      } else {
        return t.rgbToInt(t.hsvToRgb(0.03, 0.95, t.random(0.92, 0.95)));
      }
    },
    ignoreValueAdjust: true
  }
};
const Ki = {
  smoke_barrel: {
    particle: "explosionSmoke",
    rate: new o(0.2, 0.3),
    radius: 0,
    speed: new o(2, 3),
    angle: Math.PI * 0.1,
    rot: new o(0, Math.PI * 2),
    maxCount: Number.MAX_VALUE
  },
  cabin_smoke_parent: {
    particle: "cabinSmoke",
    rate: new o(0.72, 0.83),
    radius: 0,
    speed: new o(64, 96),
    angle: Math.PI * 0.1,
    rot: new o(0, Math.PI * 2),
    maxCount: Number.MAX_VALUE
  },
  bathhouse_steam: {
    particle: "bathhouseSteam",
    rate: new o(2, 3),
    radius: 1,
    speed: new o(1.5, 2),
    angle: Math.PI * 0.1,
    maxCount: Number.MAX_VALUE
  },
  bunker_bubbles_01: {
    particle: "bunkerBubbles",
    rate: new o(0.3, 0.325),
    radius: 0,
    speed: new o(1.6, 1.8),
    angle: Math.PI * -2.2,
    rot: new o(0, Math.PI * 2),
    maxCount: Number.MAX_VALUE
  },
  bunker_bubbles_02: {
    particle: "bunkerBubbles",
    rate: new o(0.4, 0.425),
    radius: 0,
    speed: new o(1.6, 1.8),
    angle: Math.PI * -2.2,
    rot: new o(0, Math.PI * 2),
    maxCount: Number.MAX_VALUE
  },
  falling_leaf: {
    particle: "leafAutumn",
    rate: new o(0.08, 0.12),
    radius: 120,
    speed: new o(2, 3),
    angle: Math.PI * 0.2,
    rot: new o(0, Math.PI * 2),
    maxCount: Number.MAX_VALUE,
    zOrd: 999
  },
  falling_leaf_halloween: {
    particle: "leafHalloween",
    rate: new o(0.08, 0.12),
    radius: 120,
    speed: new o(2, 3),
    angle: Math.PI * 0.2,
    rot: new o(0, Math.PI * 2),
    maxCount: Number.MAX_VALUE,
    zOrd: 999
  },
  falling_leaf_spring: {
    particle: "leafSpring",
    rate: new o(0.1, 0.14),
    radius: 120,
    speed: new o(2, 3),
    angle: Math.PI * 0.2,
    rot: new o(0, Math.PI * 2),
    maxCount: Number.MAX_VALUE,
    zOrd: 999
  },
  falling_leaf_summer: {
    particle: "leafSummer",
    rate: new o(0.18, 0.24),
    radius: 120,
    speed: new o(1.4, 2.4),
    angle: Math.PI * 0.2,
    maxCount: Number.MAX_VALUE,
    zOrd: 999
  },
  falling_leaf_potato: {
    particle: "leafPotato",
    rate: new o(0.1, 0.14),
    radius: 120,
    speed: new o(2, 3),
    angle: Math.PI * 0.2,
    rot: new o(0, Math.PI * 2),
    maxCount: Number.MAX_VALUE,
    zOrd: 999
  },
  falling_potato: {
    particle: "potato",
    rate: new o(0.2, 0.24),
    radius: 120,
    speed: new o(2, 3),
    angle: Math.PI * 0.2,
    rot: new o(0, Math.PI * 2),
    maxCount: Number.MAX_VALUE,
    zOrd: 999
  },
  falling_snow_fast: {
    particle: "snow",
    rate: new o(0.12, 0.17),
    maxRate: new o(0.05, 0.07),
    maxElapsed: 240,
    radius: 70,
    speed: new o(1, 1.5),
    angle: Math.PI * 0.2,
    rot: new o(0, Math.PI * 2),
    maxCount: Number.MAX_VALUE,
    zOrd: 999
  },
  falling_snow_slow: {
    particle: "snow",
    rate: new o(0.08, 0.12),
    radius: 70,
    speed: new o(1, 1.5),
    angle: Math.PI * 0.2,
    rot: new o(0, Math.PI * 2),
    maxCount: Number.MAX_VALUE,
    zOrd: 999
  },
  heal_basic: {
    particle: "heal_basic",
    rate: new o(0.3, 0.35),
    radius: 1.5,
    speed: new o(1, 1.5),
    angle: 0,
    rot: 0,
    maxCount: Number.MAX_VALUE
  },
  heal_heart: {
    particle: "heal_heart",
    rate: new o(0.3, 0.35),
    radius: 1.5,
    speed: new o(1, 1.5),
    angle: 0,
    rot: 0,
    maxCount: Number.MAX_VALUE
  },
  heal_moon: {
    particle: "heal_moon",
    rate: new o(0.3, 0.35),
    radius: 1.5,
    speed: new o(1, 1.5),
    angle: 0,
    rot: 0,
    maxCount: Number.MAX_VALUE
  },
  heal_tomoe: {
    particle: "heal_tomoe",
    rate: new o(0.3, 0.35),
    radius: 1.5,
    speed: new o(1, 1.5),
    angle: 0,
    rot: 0,
    maxCount: Number.MAX_VALUE
  },
  boost_basic: {
    particle: "boost_basic",
    rate: new o(0.3, 0.35),
    radius: 1.5,
    speed: new o(1, 1.5),
    angle: 0,
    rot: new o(0, Math.PI * 2),
    maxCount: Number.MAX_VALUE
  },
  boost_star: {
    particle: "boost_star",
    rate: new o(0.3, 0.35),
    radius: 1.5,
    speed: new o(1, 1.5),
    angle: 0,
    rot: new o(0, Math.PI * 2),
    maxCount: Number.MAX_VALUE
  },
  boost_naturalize: {
    particle: "boost_naturalize",
    rate: new o(0.3, 0.35),
    radius: 1.5,
    speed: new o(1, 1.5),
    angle: 0,
    rot: new o(0, Math.PI * 2),
    maxCount: Number.MAX_VALUE
  },
  boost_shuriken: {
    particle: "boost_shuriken",
    rate: new o(0.3, 0.35),
    radius: 1.5,
    speed: new o(1, 1.5),
    angle: 0,
    rot: new o(0, Math.PI * 2),
    maxCount: Number.MAX_VALUE
  },
  revive_basic: {
    particle: "revive_basic",
    rate: new o(0.5, 0.55),
    radius: 1.5,
    speed: new o(1, 1.5),
    angle: 0,
    rot: 0,
    maxCount: Number.MAX_VALUE
  },
  windwalk: {
    particle: "leafStim",
    rate: new o(0.1, 0.12),
    radius: 1.5,
    speed: new o(1, 1.5),
    angle: 0,
    rot: 0,
    maxCount: Number.MAX_VALUE
  },
  takedown: {
    particle: "takedownStim",
    rate: new o(0.1, 0.12),
    radius: 1.5,
    speed: new o(1, 1.5),
    angle: 0,
    rot: 0,
    maxCount: Number.MAX_VALUE
  },
  inspire: {
    particle: "inspireStim",
    rate: new o(0.3, 0.35),
    radius: 1.5,
    speed: new o(1, 1.5),
    angle: 0,
    rot: 0,
    maxCount: Number.MAX_VALUE
  },
  xp_common: {
    particle: "xp_common",
    rate: new o(0.3, 0.35),
    radius: 1.5,
    speed: new o(1, 1.5),
    angle: 0,
    rot: 0,
    maxCount: Number.MAX_VALUE
  },
  xp_rare: {
    particle: "xp_rare",
    rate: new o(0.3, 0.35),
    radius: 1.5,
    speed: new o(1, 1.5),
    angle: 0,
    rot: 0,
    maxCount: Number.MAX_VALUE
  },
  xp_mythic: {
    particle: "xp_mythic",
    rate: new o(0.3, 0.35),
    radius: 1.5,
    speed: new o(1, 1.5),
    angle: 0,
    rot: 0,
    maxCount: Number.MAX_VALUE
  }
};
const Ka = 1.25;
const Dt = 0.75;
const Xa = 0.75;
const Xi = 2;
class es {
  active = false;
  sprite = new y();
  soundRangeMult;
  id;
  pos;
  planeDir;
  actionComplete;
  dirty;
  soundInstance;
  soundUpdateThrottle;
  alpha;
  renderAlpha;
  spriteUpdateTime;
  type;
  config;
  rad;
  planeSound;
  constructor() {
    this.sprite.anchor.set(0.5, 0.5);
    this.sprite.visible = false;
  }
  rfNkqZ(p, b) {
    this.id = p.id;
    this.pos = v.copy(p.pos);
    this.planeDir = v.copy(p.planeDir);
    this.actionComplete = p.actionComplete;
    this.active = true;
    this.dirty = false;
    this.soundInstance = null;
    this.soundUpdateThrottle = 0;
    this.alpha = Dt;
    this.renderAlpha = 1;
    this.spriteUpdateTime = 0;
    this.type = p.action;
    this.config = this.type == L.Plane.Airdrop ? L.airdrop : L.airstrike;
    this.rad = this.config.planeRad;
    switch (this.type) {
      case L.Plane.Airdrop:
        this.sprite.texture = x.from(b.getMapDef().biome.airdrop.planeImg);
        this.planeSound = b.getMapDef().biome.airdrop.planeSound;
        break;
      case L.Plane.Airstrike:
        this.sprite.texture = x.from("map-plane-02.img");
        this.planeSound = "fighter_01";
    }
    this.sprite.visible = true;
    this.sprite.rotation = Math.atan2(this.planeDir.x, this.planeDir.y);
  }
  dphRtI(p) {
    if (this.spriteUpdateTime >= Xi) {
      if (this.soundInstance) {
        p.stopSound(this.soundInstance);
        this.soundInstance = null;
      }
      this.sprite.visible = false;
      this.active = false;
    }
  }
}
class ts {
  constructor(p) {
    this.container = p;
    p.addChild(this.gfx);
  }
  active = false;
  pos = v.create(0, 0);
  rad = 0;
  duration = 0;
  ticker = 0;
  gfx = new r();
  renderPos;
  renderRad;
  rfNkqZ(p, b, XT) {
    this.active = true;
    this.pos = v.copy(p);
    this.rad = b;
    this.duration = XT;
    this.ticker = 0;
    this.renderPos = v.create(0, 0);
    this.renderRad = 0;
    this.gfx.visible = true;
  }
  Gxhh(p) {
    this.ticker += p;
    this.gfx.visible = true;
    if (this.ticker >= this.duration) {
      this.gfx.visible = false;
      this.active = false;
    }
  }
  render(p, b, XT) {
    const XY = p.getMapPosFromWorldPos(this.pos, b);
    const XC = p.getMapPosFromWorldPos(v.add(this.pos, v.create(this.rad, 0)), b);
    const Xl = v.length(v.sub(XC, XY));
    const Xd = !v.eq(this.renderPos, XY, 0.0001);
    const Xk = !e.eqAbs(this.renderRad, Xl, 0.0001);
    if (Xd) {
      this.renderPos = v.copy(XY);
    }
    if (Xk) {
      this.renderRad = Xl;
    }
    if (Xd) {
      this.gfx.position.set(this.renderPos.x, this.renderPos.y);
    }
    if (Xk) {
      this.gfx.clear();
      this.gfx.lineStyle(1.5, 15400704);
      this.gfx.beginFill(15400704, 0.2);
      this.gfx.drawCircle(0, 0, this.renderRad);
      this.gfx.endFill();
    }
    const XU = e.smoothstep(this.ticker, 0, 0.5) * (1 - e.smoothstep(this.ticker, this.duration - 0.5, this.duration));
    this.gfx.alpha = XU;
  }
}
class is {
  constructor(p) {
    this.audioManager = p;
  }
  planes = [];
  airstrikeZones = [];
  airstrikeZoneContainer = new f();
  dphRtI() {
    for (let p = 0; p < this.planes.length; p++) {
      this.planes[p].dphRtI(this.audioManager);
    }
  }
  updatePlanes(p, b) {
    for (let XT = 0; XT < this.planes.length; XT++) {
      this.planes[XT].dirty = true;
    }
    for (let XY = 0; XY < p.length; XY++) {
      const XC = p[XY];
      let Xl = null;
      for (let Xd = 0; Xd < this.planes.length; Xd++) {
        const Xk = this.planes[Xd];
        if (Xk.active && Xk.id == XC.id) {
          Xl = Xk;
          break;
        }
      }
      Xl ||= this.addPlane(XC, b);
      Xl.dirty = false;
      Xl.actionComplete = XC.actionComplete;
    }
    for (let XU = 0; XU < this.planes.length; XU++) {
      const XW = this.planes[XU];
      if (XW.active && XW.dirty) {
        XW.dphRtI(this.audioManager);
      }
    }
  }
  addPlane(p, b) {
    let XT = null;
    for (let XY = 0; XY < this.planes.length; XY++) {
      if (!this.planes[XY].active) {
        XT = this.planes[XY];
        break;
      }
    }
    if (!XT) {
      XT = new es();
      this.planes.push(XT);
    }
    XT.rfNkqZ(p, b);
    return XT;
  }
  createAirstrikeZone(p) {
    let b = null;
    for (let XT = 0; XT < this.airstrikeZones.length; XT++) {
      if (!this.airstrikeZones[XT]) {
        b = this.airstrikeZones[XT];
        break;
      }
    }
    if (!b) {
      b = new ts(this.airstrikeZoneContainer);
      this.airstrikeZones.push(b);
    }
    b.rfNkqZ(p.pos, p.rad, p.duration);
    return b;
  }
  Gxhh(b, XT, XY, XC, Xl) {
    for (let Xd = 0; Xd < this.planes.length; Xd++) {
      const Xk = this.planes[Xd];
      if (Xk.active) {
        let XU = 0;
        if ((t.sameLayer(XU, XY.layer) || XY.layer & 2) && (!(XY.layer & 2) || !XC.insideStructureMask(T.createCircle(Xk.pos, 1)))) {
          XU |= 2;
        }
        Xk.pos = v.add(Xk.pos, v.mul(Xk.planeDir, b * Xk.config.planeVel));
        if (Xk.actionComplete) {
          Xk.spriteUpdateTime = Math.min(Xk.spriteUpdateTime + b, Xi);
          Xk.rad = e.lerp(Xk.spriteUpdateTime, Xk.config.planeRad, Xk.config.planeRad * Ka);
          Xk.alpha = e.lerp(Xk.spriteUpdateTime, Dt, Dt * Xa);
          Xk.soundRangeMult = e.max(0, e.lerp(Xk.spriteUpdateTime, Xk.config.soundRangeMult, Xk.config.soundRangeMult - Xk.config.soundRangeDelta));
        }
        if (Xk.soundInstance) {
          if (Xk.soundUpdateThrottle < 0) {
            this.audioManager.updateSound(Xk.soundInstance, "sfx", Xk.pos, {
              layer: XU,
              rangeMult: Xk.config.soundRangeMult,
              ignoreMinAllowable: true,
              fallOff: Xk.config.fallOff
            });
            Xk.soundUpdateThrottle = 0.1;
          } else {
            Xk.soundUpdateThrottle -= b;
          }
        } else {
          const XH = v.length(v.sub(XY.NLYJ, Xk.pos));
          const p0 = Xk.config.soundRangeMax * Xk.config.soundRangeMult;
          let p1 = 0;
          if (Xk.type == L.Plane.Airstrike) {
            const p2 = e.max(150, XH);
            p1 = (1 - e.clamp(e.max(0, p2) / 800, 0, 1)) * 2.25;
          }
          if (XH < p0) {
            Xk.soundInstance = this.audioManager.playSound(Xk.planeSound, {
              channel: "sfx",
              soundPos: Xk.pos,
              layer: XU,
              loop: true,
              rangeMult: 2.5,
              ignoreMinAllowable: true,
              fallOff: Xk.config.fallOff,
              offset: p1
            });
          }
        }
        Xl.addPIXIObj(Xk.sprite, XU, 1501, Xk.id);
        const XW = XT.MobS(Xk.pos);
        const XD = XT.uRFX(Xk.rad / XT.xQaJqu);
        const XG = XC.insideBuildingCeiling(T.createCircle(XY.NLYJ, 0.01), true);
        let XF = Xk.alpha;
        if (XY.layer == 1) {
          XF = 0;
        } else if (XG || XY.layer & 1) {
          XF = 0.15;
        }
        Xk.renderAlpha = e.lerp(b * 3, Xk.renderAlpha, XF);
        Xk.sprite.position.set(XW.x, XW.y);
        Xk.sprite.scale.set(XD, XD);
        Xk.sprite.tint = 16776960;
        Xk.sprite.alpha = Xk.renderAlpha;
        Xk.sprite.visible = true;
      }
    }
    for (let p3 = 0; p3 < this.airstrikeZones.length; p3++) {
      const p4 = this.airstrikeZones[p3];
      if (p4.active) {
        p4.Gxhh(b);
      }
    }
  }
  renderAirstrikeZones(p, b, XT) {
    for (let XY = 0; XY < this.airstrikeZones.length; XY++) {
      const XC = this.airstrikeZones[XY];
      if (XC.active) {
        XC.render(p, b, XT);
      }
    }
  }
}
function F(p, b) {
  return {
    time: p,
    bones: b
  };
}
function K(p, b, XT) {
  return {
    time: p,
    fn: b,
    args: XT
  };
}
class I {
  constructor(p = v.create(0, 0), b = 0, XT = v.create(0, 0)) {
    this.pivot = p;
    this.rot = b;
    this.pos = XT;
    this.pivot = v.copy(p);
    this.rot = 0;
    this.pos = v.copy(XT);
  }
  copy(p) {
    v.set(this.pivot, p.pivot);
    this.rot = p.rot;
    v.set(this.pos, p.pos);
  }
  rotate(p) {
    this.rot = p;
    return this;
  }
  offset(p) {
    this.pos = v.copy(p);
    return this;
  }
  static identity = new I(v.create(0, 0));
  static lerp(p, b, XT) {
    const XY = new I();
    XY.pos = v.lerp(p, b.pos, XT.pos);
    XY.rot = e.lerp(p, b.rot, XT.rot);
    XY.pivot = v.lerp(p, b.pivot, XT.pivot);
    return XY;
  }
}
var Pe = (p => {
  p[p.HandL = 0] = "HandL";
  p[p.HandR = 1] = "HandR";
  p[p.FootL = 2] = "FootL";
  p[p.FootR = 3] = "FootR";
  return p;
})(Pe || {});
X3(Object.keys(Pe).length % 2 == 0);
const ui = {
  fists: {
    0: new I(v.create(14, -12.25)),
    1: new I(v.create(14, 12.25))
  },
  slash: {
    0: new I(v.create(18, -8.25)),
    1: new I(v.create(6, 20.25))
  },
  meleeTwoHanded: {
    0: new I(v.create(10.5, -14.25)),
    1: new I(v.create(18, 6.25))
  },
  meleeKatana: {
    0: new I(v.create(8.5, 13.25)),
    1: new I(v.create(-3, 17.75))
  },
  meleeNaginata: {
    0: new I(v.create(19, -7.25)),
    1: new I(v.create(8.5, 24.25))
  },
  machete: {
    0: new I(v.create(14, -12.25)),
    1: new I(v.create(1, 17.75))
  },
  rifle: {
    0: new I(v.create(28, 5.25)),
    1: new I(v.create(14, 1.75))
  },
  dualRifle: {
    0: new I(v.create(5.75, -16)),
    1: new I(v.create(5.75, 16))
  },
  bullpup: {
    0: new I(v.create(28, 5.25)),
    1: new I(v.create(24, 1.75))
  },
  launcher: {
    0: new I(v.create(20, 10)),
    1: new I(v.create(2, 22))
  },
  pistol: {
    0: new I(v.create(14, 1.75)),
    1: new I(v.create(14, 1.75))
  },
  dualPistol: {
    0: new I(v.create(15.75, -8.75)),
    1: new I(v.create(15.75, 8.75))
  },
  throwable: {
    0: new I(v.create(15.75, -9.625)),
    1: new I(v.create(15.75, 9.625))
  },
  downed: {
    0: new I(v.create(14, -12.25)),
    1: new I(v.create(14, 12.25)),
    2: new I(v.create(-15.75, -9)),
    3: new I(v.create(-15.75, 9))
  }
};
const W = w;
const rs = {
  none: {
    keyframes: [],
    effects: []
  },
  fists: {
    keyframes: [F(0, {
      1: new I(v.create(14, 12.25))
    }), F(W.fists.attack.damageTimes[0], {
      1: new I(v.create(29.75, 1.75))
    }), F(W.fists.attack.cooldownTime, {
      1: new I(v.create(14, 12.25))
    })],
    effects: [K(0, "animPlaySound", {
      sound: "swing"
    }), K(W.fists.attack.damageTimes[0], "animMeleeCollision", {})]
  },
  cut: {
    keyframes: [F(0, {
      1: new I(v.create(14, 12.25))
    }), F(W.fists.attack.damageTimes[0] * 0.25, {
      1: new I(v.create(14, 12.25)).rotate(-Math.PI * 0.35)
    }), F(W.fists.attack.damageTimes[0] * 1.25, {
      1: new I(v.create(14, 12.25)).rotate(Math.PI * 0.35)
    }), F(W.fists.attack.cooldownTime, {
      1: new I(v.create(14, 12.25))
    })],
    effects: [K(0, "animPlaySound", {
      sound: "swing"
    }), K(W.fists.attack.damageTimes[0], "animMeleeCollision", {})]
  },
  cutReverse: {
    keyframes: [F(0, {
      1: new I(v.create(1, 17.75))
    }), F(W.fists.attack.damageTimes[0] * 0.4, {
      1: new I(v.create(25, 6.25)).rotate(Math.PI * 0.3)
    }), F(W.fists.attack.damageTimes[0] * 1.4, {
      1: new I(v.create(25, 6.25)).rotate(-Math.PI * 0.5)
    }), F(W.fists.attack.cooldownTime, {
      1: new I(v.create(1, 17.75))
    })],
    effects: [K(0, "animPlaySound", {
      sound: "swing"
    }), K(W.fists.attack.damageTimes[0], "animMeleeCollision", {})]
  },
  thrust: {
    keyframes: [F(0, {
      1: new I(v.create(14, 12.25))
    }), F(W.fists.attack.damageTimes[0] * 0.4, {
      1: new I(v.create(5, 12.25)).rotate(Math.PI * 0.1)
    }), F(W.fists.attack.damageTimes[0] * 1.4, {
      1: new I(v.create(25, 6.25)).rotate(-Math.PI * 0)
    }), F(W.fists.attack.cooldownTime, {
      1: new I(v.create(14, 12.25))
    })],
    effects: [K(0, "animPlaySound", {
      sound: "swing"
    }), K(W.fists.attack.damageTimes[0], "animMeleeCollision", {})]
  },
  slash: {
    keyframes: [F(0, {
      0: new I(v.create(18, -8.25)),
      1: new I(v.create(6, 20.25))
    }), F(W.fists.attack.damageTimes[0], {
      0: new I(v.create(6, -22.25)),
      1: new I(v.create(6, 20.25)).rotate(-Math.PI * 0.6)
    }), F(W.fists.attack.cooldownTime, {
      0: new I(v.create(18, -8.25)),
      1: new I(v.create(6, 20.25)).rotate(0)
    })],
    effects: [K(0, "animPlaySound", {
      sound: "swing"
    }), K(W.fists.attack.damageTimes[0], "animMeleeCollision", {})]
  },
  hook: {
    keyframes: [F(0, {
      1: new I(v.create(14, 12.25))
    }), F(W.hook.attack.damageTimes[0] * 0.25, {
      1: new I(v.create(14, 12.25)).rotate(Math.PI * 0.1)
    }), F(W.hook.attack.damageTimes[0], {
      1: new I(v.create(24, 1.75))
    }), F(W.hook.attack.damageTimes[0] + 0.05, {
      1: new I(v.create(14, 12.25)).rotate(Math.PI * -0.3)
    }), F(W.hook.attack.damageTimes[0] + 0.1, {
      1: new I(v.create(14, 12.25))
    })],
    effects: [K(0, "animPlaySound", {
      sound: "swing"
    }), K(W.hook.attack.damageTimes[0], "animMeleeCollision", {})]
  },
  pan: {
    keyframes: [F(0, {
      1: new I(v.create(14, 12.25))
    }), F(0.15, {
      1: new I(v.create(22, -8.25)).rotate(-Math.PI * 0.2)
    }), F(0.25, {
      1: new I(v.create(28, -8.25)).rotate(Math.PI * 0.5)
    }), F(0.55, {
      1: new I(v.create(14, 12.25))
    })],
    effects: [K(0, "animPlaySound", {
      sound: "swing"
    }), K(W.pan.attack.damageTimes[0], "animMeleeCollision", {})]
  },
  axeSwing: {
    keyframes: [F(0, {
      0: new I(v.create(10.5, -14.25)),
      1: new I(v.create(18, 6.25))
    }), F(W.woodaxe.attack.damageTimes[0] * 0.4, {
      0: new I(v.create(9, -14.25)).rotate(Math.PI * 0.4),
      1: new I(v.create(18, 6.25)).rotate(Math.PI * 0.4)
    }), F(W.woodaxe.attack.damageTimes[0], {
      0: new I(v.create(9, -14.25)).rotate(-Math.PI * 0.4),
      1: new I(v.create(18, 6.25)).rotate(-Math.PI * 0.4)
    }), F(W.woodaxe.attack.cooldownTime, {
      0: new I(v.create(10.5, -14.25)),
      1: new I(v.create(18, 6.25))
    })],
    effects: [K(W.woodaxe.attack.damageTimes[0], "animPlaySound", {
      sound: "swing"
    }), K(W.woodaxe.attack.damageTimes[0], "animMeleeCollision", {})]
  },
  hammerSwing: {
    keyframes: [F(0, {
      0: new I(v.create(10.5, -14.25)),
      1: new I(v.create(18, 6.25))
    }), F(W.stonehammer.attack.damageTimes[0] * 0.4, {
      0: new I(v.create(9, -14.25)).rotate(Math.PI * 0.4),
      1: new I(v.create(18, 6.25)).rotate(Math.PI * 0.4)
    }), F(W.stonehammer.attack.damageTimes[0], {
      0: new I(v.create(9, -14.25)).rotate(-Math.PI * 0.4),
      1: new I(v.create(18, 6.25)).rotate(-Math.PI * 0.4)
    }), F(W.stonehammer.attack.cooldownTime, {
      0: new I(v.create(10.5, -14.25)),
      1: new I(v.create(18, 6.25))
    })],
    effects: [K(W.stonehammer.attack.damageTimes[0], "animPlaySound", {
      sound: "swing"
    }), K(W.stonehammer.attack.damageTimes[0], "animMeleeCollision", {})]
  },
  katanaSwing: {
    keyframes: [F(0, {
      0: new I(v.create(8.5, 13.25)),
      1: new I(v.create(-3, 17.75))
    }), F(W.katana.attack.damageTimes[0] * 0.3, {
      0: new I(v.create(8.5, 13.25)).rotate(Math.PI * 0.2),
      1: new I(v.create(-3, 17.75)).rotate(Math.PI * 0.2)
    }), F(W.katana.attack.damageTimes[0] * 0.9, {
      0: new I(v.create(8.5, 13.25)).rotate(-Math.PI * 1.2),
      1: new I(v.create(-3, 17.75)).rotate(-Math.PI * 1.2)
    }), F(W.katana.attack.cooldownTime, {
      0: new I(v.create(8.5, 13.25)),
      1: new I(v.create(-3, 17.75))
    })],
    effects: [K(W.katana.attack.damageTimes[0], "animPlaySound", {
      sound: "swing"
    }), K(W.katana.attack.damageTimes[0], "animMeleeCollision", {})]
  },
  naginataSwing: {
    keyframes: [F(0, {
      0: new I(v.create(19, -7.25)),
      1: new I(v.create(8.5, 24.25))
    }), F(W.naginata.attack.damageTimes[0] * 0.3, {
      0: new I(v.create(19, -7.25)).rotate(Math.PI * 0.3),
      1: new I(v.create(8.5, 24.25)).rotate(Math.PI * 0.3)
    }), F(W.naginata.attack.damageTimes[0] * 0.9, {
      0: new I(v.create(19, -7.25)).rotate(-Math.PI * 0.85),
      1: new I(v.create(8.5, 24.25)).rotate(-Math.PI * 0.85)
    }), F(W.naginata.attack.cooldownTime, {
      0: new I(v.create(19, -7.25)),
      1: new I(v.create(8.5, 24.25))
    })],
    effects: [K(W.woodaxe.attack.damageTimes[0], "animPlaySound", {
      sound: "swing"
    }), K(W.woodaxe.attack.damageTimes[0], "animMeleeCollision", {})]
  },
  sawSwing: {
    keyframes: [F(0, {
      1: new I(v.create(1, 17.75))
    }), F(W.saw.attack.damageTimes[0] * 0.4, {
      1: new I(v.create(25, 6.25)).rotate(Math.PI * 0.3)
    }), F(W.saw.attack.damageTimes[0], {
      1: new I(v.create(25, 6.25)).rotate(-Math.PI * 0.3)
    }), F(W.saw.attack.damageTimes[1] - 0.1, {
      1: new I(v.create(25, 17.75)).rotate(-Math.PI * 0.25)
    }), F(W.saw.attack.damageTimes[1] * 0.6, {
      1: new I(v.create(-36, 7.75)).rotate(-Math.PI * 0.25)
    }), F(W.saw.attack.damageTimes[1] + 0.2, {
      1: new I(v.create(1, 17.75))
    })],
    effects: [K(0, "animPlaySound", {
      sound: "swing"
    }), K(0.4, "animPlaySound", {
      sound: "swing"
    }), K(W.saw.attack.damageTimes[0], "animMeleeCollision", {}), K(W.saw.attack.damageTimes[1], "animMeleeCollision", {
      playerHit: "playerHit2"
    })]
  },
  cutReverseShort: {
    keyframes: [F(0, {
      1: new I(v.create(1, 17.75))
    }), F(W.saw.attack.damageTimes[0] * 0.4, {
      1: new I(v.create(25, 6.25)).rotate(Math.PI * 0.3)
    }), F(W.saw.attack.damageTimes[0], {
      1: new I(v.create(25, 6.25)).rotate(-Math.PI * 0.3)
    }), F(W.fists.attack.cooldownTime, {
      1: new I(v.create(14, 17.75))
    })],
    effects: [K(0, "animPlaySound", {
      sound: "swing"
    }), K(W.fists.attack.damageTimes[0], "animMeleeCollision", {})]
  },
  cook: {
    keyframes: [F(0, {
      0: new I(v.create(15.75, -9.625)),
      1: new I(v.create(15.75, 9.625))
    }), F(0.1, {
      0: new I(v.create(14, -1.75)),
      1: new I(v.create(14, 1.75))
    }), F(0.3, {
      0: new I(v.create(14, -1.75)),
      1: new I(v.create(14, 1.75))
    }), F(0.4, {
      0: new I(v.create(22.75, -1.75)),
      1: new I(v.create(1.75, 14))
    }), F(99999, {
      0: new I(v.create(22.75, -1.75)),
      1: new I(v.create(1.75, 14))
    })],
    effects: [K(0, "animPlaySound", {
      sound: "pullPin"
    }), K(0.1, "animSetThrowableState", {
      state: "cook"
    })]
  },
  throw: {
    keyframes: [F(0, {
      0: new I(v.create(22.75, -1.75)),
      1: new I(v.create(1.75, 14.175))
    }), F(0.15, {
      0: new I(v.create(5.25, -15.75)),
      1: new I(v.create(29.75, 1.75))
    }), F(0.15 + L.player.throwTime, {
      0: new I(v.create(15.75, -9.625)),
      1: new I(v.create(15.75, 9.625))
    })],
    effects: [K(0, "animPlaySound", {
      sound: "throwing"
    }), K(0, "animSetThrowableState", {
      state: "throwing"
    }), K(0, "animThrowableParticles", {})]
  },
  crawl_forward: {
    keyframes: [F(0, {
      0: new I(v.create(14, -12.25)),
      2: new I(v.create(-15.75, -9))
    }), F(L.player.crawlTime * 0.33, {
      0: new I(v.create(19.25, -10.5)),
      2: new I(v.create(-20.25, -9))
    }), F(L.player.crawlTime * 0.66, {
      0: new I(v.create(5.25, -15.75)),
      2: new I(v.create(-11.25, -9))
    }), F(L.player.crawlTime * 1, {
      0: new I(v.create(14, -12.25)),
      2: new I(v.create(-15.75, -9))
    })],
    effects: []
  },
  crawl_backward: {
    keyframes: [F(0, {
      0: new I(v.create(14, -12.25)),
      2: new I(v.create(-15.75, -9))
    }), F(L.player.crawlTime * 0.33, {
      0: new I(v.create(5.25, -15.75)),
      2: new I(v.create(-11.25, -9))
    }), F(L.player.crawlTime * 0.66, {
      0: new I(v.create(19.25, -10.5)),
      2: new I(v.create(-20.25, -9))
    }), F(L.player.crawlTime * 1, {
      0: new I(v.create(14, -12.25)),
      2: new I(v.create(-15.75, -9))
    })],
    effects: []
  },
  revive: {
    keyframes: [F(0, {
      0: new I(v.create(14, -12.25)),
      1: new I(v.create(14, 12.25))
    }), F(0.2, {
      0: new I(v.create(24.5, -8.75)),
      1: new I(v.create(5.25, 21))
    }), F(0.2 + L.player.reviveDuration, {
      0: new I(v.create(24.5, -8.75)),
      1: new I(v.create(5.25, 21))
    })],
    effects: []
  }
};
const er = {
  "proj-frag-nopin-01.img": "proj-frag-nopin-02.img",
  "proj-frag-nopin-nolever-01.img": "proj-frag-nopin-nolever-02.img",
  "proj-frag-pin-01.img": "proj-frag-pin-02.img",
  "proj-mirv-mini-01.img": "proj-mirv-mini-02.img"
};
class as {
  __id;
  __type;
  active;
  isNew;
  container = new f();
  trail = y.from("player-bullet-trail-02.img");
  sprite = new y();
  strobeSprite = null;
  layer;
  type;
  rad;
  pos;
  posOld;
  posZ;
  posZOld;
  dir;
  imgScale;
  rot;
  rotVel;
  rotDrag;
  velZ;
  grounded;
  inWater;
  lastSoundObjId;
  playHitSfx;
  alwaysRenderOntop;
  strobeScale;
  strobeScaleMax;
  strobeTicker;
  strobeDir;
  strobeSpeed;
  constructor() {
    this.container.visible = false;
    this.trail.anchor.set(1, 0.5);
    this.trail.scale.set(1, 1);
    this.trail.visible = false;
    this.container.addChild(this.trail);
    this.sprite.anchor.set(0.5, 0.5);
    this.container.addChild(this.sprite);
  }
  rfNkqZ() {}
  dphRtI() {
    this.container.visible = false;
    if (this.strobeSprite) {
      this.strobeSprite.visible = false;
    }
  }
  wzDEnz(p, b, XT, XY) {
    if (b) {
      const XC = w[p.type];
      this.layer = p.layer;
      this.type = p.type;
      this.rad = XC.rad * 0.5;
    }
    this.posOld = XT ? v.copy(p.pos) : v.copy(this.pos);
    this.posZOld = XT ? p.posZ : this.posZ;
    this.pos = v.copy(p.pos);
    this.posZ = p.posZ;
    this.dir = v.copy(p.dir);
    if (XT) {
      const Xl = w[p.type];
      const Xd = Xl.worldImg;
      this.imgScale = Xd.scale;
      this.rot = 0;
      this.rotVel = Xl.throwPhysics.spinVel;
      if (Xl.throwPhysics.randomizeSpinDir && Math.random() < 0.5) {
        this.rotVel *= -1;
      }
      this.rotDrag = Xl.throwPhysics.spinDrag * t.random(1, 2);
      this.velZ = 0;
      this.grounded = false;
      this.inWater = false;
      this.lastSoundObjId = 0;
      this.playHitSfx = !Xl.explodeOnImpact;
      this.alwaysRenderOntop = false;
      let Xk = true;
      if (this.type == "bomb_iron") {
        this.alwaysRenderOntop = true;
        const XW = T.createCircle(this.pos, 0.5);
        if (XY.map.insideBuildingCeiling(XW, true)) {
          Xk = false;
        }
      }
      let XU = Xd.sprite;
      if (XY.map.mapDef.gameMode.spookyKillSounds) {
        XU = er[XU] || XU;
      }
      this.sprite.texture = x.from(XU);
      this.sprite.tint = Xd.tint;
      this.sprite.alpha = 1;
      this.container.visible = Xk;
      if (p.type == "strobe") {
        if (!this.strobeSprite) {
          this.strobeSprite = new y();
          this.strobeSprite.texture = x.from("part-strobe-01.img");
          this.strobeSprite.anchor.set(0.5, 0.5);
          this.container.addChild(this.strobeSprite);
        }
        this.strobeSprite.scale.set(0, 0);
        this.strobeSprite.visible = true;
        this.strobeScale = 0;
        this.strobeScaleMax = 12;
        this.strobeTicker = 0;
        this.strobeDir = 1;
        this.strobeSpeed = 1.25;
      }
    }
  }
}
const ss = {
  grass: "frag_grass",
  sand: "frag_sand",
  water: "frag_water"
};
class os {
  projectilePool = new be(as);
  Gxhh(XT, XY, XC, Xl, Xd, Xk, XU) {
    const XW = this.projectilePool.KGHPNo();
    for (let XD = 0; XD < XW.length; XD++) {
      const XG = XW[XD];
      if (XG.active) {
        const XF = w[XG.type];
        let XH = XG.rotDrag;
        if (XG.inWater) {
          XH *= 3;
        }
        XG.rotVel *= 1 / (1 + XT * XH);
        XG.rot += XG.rotVel * XT;
        const p0 = {
          obj: null,
          pen: 0
        };
        const p1 = {
          obj: null,
          pen: 0
        };
        const p2 = T.createCircle(XG.pos, XG.rad);
        const p3 = Xd.NmwMZ.KGHPNo();
        for (let px = 0; px < p3.length; px++) {
          const py = p3[px];
          if (py.active && !py.dead && t.sameLayer(py.layer, XG.layer)) {
            const pg = T.intersect(py.collider, p2);
            if (pg) {
              const pQ = py.height > XG.posZ ? p0 : p1;
              if (pg.pen > pQ.pen && (!pQ.obj || pQ.obj.height <= py.height)) {
                pQ.obj = py;
                pQ.pen = pg.pen;
              }
            }
          }
        }
        const p4 = v.div(v.sub(XG.pos, XG.posOld), XT);
        const p5 = v.length(p4);
        if (p0.obj && p0.obj.__id != XG.lastSoundObjId && p5 > 7.5 && (XG.lastSoundObjId = p0.obj.__id, XG.playHitSfx)) {
          const pZ = v.mul(v.normalizeSafe(p4, v.create(1, 0)), -1);
          const pq = a[p0.obj.type];
          Ct(pq.hitParticle, pq.sound.bullet, XG.pos, pZ, XG.layer, XY, XC);
        }
        const p6 = Xd.getGroundSurface(XG.pos, XG.layer);
        if (XG.posZ <= 0.01) {
          if (!XG.inWater && p6.type == "water") {
            XY.addRippleParticle(XG.pos, XG.layer, p6.data.rippleColor);
          }
          XG.inWater = p6.type == "water";
        }
        const p7 = XG.velZ;
        XG.velZ = (XG.posZ - XG.posZOld) / XT;
        if (!XG.isNew && !XG.grounded && XG.velZ >= 0 && p7 < 0) {
          const pM = {
            fn: "playGroup",
            channel: "hits",
            name: ""
          };
          if (p1.obj) {
            if (XG.lastSoundObjId != p1.obj.__id) {
              XG.lastSoundObjId = p1.obj.__id;
              const pE = a[p1.obj.type];
              pM.name = pE.sound.bullet;
            }
          } else {
            XG.grounded = true;
            pM.name = ss[p6.type];
            if (pM.name === undefined) {
              pM.name = "footstep_" + p6.type;
              pM.fn = "playGroup";
              pM.channel = "sfx";
            }
          }
          if (pM.name && XG.playHitSfx) {
            XC[pM.fn](pM.name, {
              channel: pM.channel,
              soundPos: XG.pos,
              layer: XG.layer,
              filter: "muffled"
            });
          }
        }
        if (XG.type == "strobe" && XG.strobeSprite) {
          XG.strobeTicker = e.clamp(XG.strobeTicker + XT * XG.strobeDir * XG.strobeSpeed, 0, 1);
          XG.strobeScale = e.easeInExpo(XG.strobeTicker) * XG.strobeScaleMax;
          XG.strobeSprite.scale.set(XG.strobeScale, XG.strobeScale);
          if (XG.strobeScale >= XG.strobeScaleMax || XG.strobeTicker <= 0) {
            XG.strobeDir *= -1;
          }
        }
        XG.sprite.rotation = XG.rot;
        XG.sprite.alpha = XG.inWater ? 0.3 : 1;
        if (XF.trail) {
          const pN = v.length(p4);
          const pn = e.remap(pN, XF.throwPhysics.speed * 0.25, XF.throwPhysics.speed * 1, 0, 1) * e.remap(XG.posZ, 0.1, L.projectile.maxHeight * 0.5, 0, 1);
          XG.trail.scale.set(XF.trail.maxLength * pn, XF.trail.width);
          XG.trail.rotation = -Math.atan2(XG.dir.y, XG.dir.x);
          XG.trail.tint = XF.trail.tint;
          XG.trail.alpha = XF.trail.alpha * pn;
          XG.trail.visible = true;
        } else {
          XG.trail.visible = false;
        }
        let p8 = XG.layer;
        let p9 = XG.posZ < 0.25 ? 14 : 25;
        const pX = T.createCircle(XG.pos, XG.rad * 3);
        const pp = Xd.insideStructureStairs(pX);
        const pb = Xd.insideStructureMask(pX);
        if (XG.posZ >= 0.25 && pp && (XG.layer & 1) == (Xl.layer & 1) && (!pb || !(Xl.layer & 2))) {
          p8 |= 2;
          p9 += 100;
        }
        if (XG.alwaysRenderOntop && Xl.layer == 0) {
          p9 = 1000;
          p8 |= 2;
        }
        Xk.addPIXIObj(XG.container, p8, p9);
        const pI = XG.imgScale * e.remap(XG.posZ, 0, L.projectile.maxHeight, 1, 4.75);
        const pj = XU.MobS(XG.pos);
        const pf = XU.uRFX(pI);
        XG.container.position.set(pj.x, pj.y);
        XG.container.scale.set(pf, pf);
      }
    }
  }
}
function tr(b, XT, XY, XC, Xl, Xd, Xk, XU) {
  const XW = w[b];
  if (XW) {
    let XD = v.rotate(Xl, XT);
    if (XW.particle.shellForward) {
      XD = v.mul(Xl, XW.particle.shellForward);
    }
    let XG = v.mul(XD, XY * 9.5);
    XG = v.rotate(XG, (Math.random() - 0.5) * Math.PI / 3);
    let XF = v.add(XC, v.mul(Xl, L.player.radius + XW.particle.shellOffset));
    if (XW.particle.shellOffsetY) {
      XF = v.add(XF, v.mul(XD, XW.particle.shellOffsetY));
    }
    if (XW.particle.shellReverse) {
      XG = v.mul(XG, -1);
    }
    XU.addParticle(XW.ammo, Xd, XF, XG, XW.particle.shellScale, -Math.atan2(XD.y, XD.x), null, Xk);
  }
}
class ls {
  shots = [];
  addShot(p) {
    let b = null;
    for (let XC = 0; XC < this.shots.length; XC++) {
      if (!this.shots[XC].active) {
        b = this.shots[XC];
        break;
      }
    }
    if (!b) {
      b = {};
      this.shots.push(b);
    }
    const XT = p.shotSourceType;
    const XY = w[XT];
    b.active = true;
    b.pos = v.copy(p.pos);
    b.layer = p.layer;
    b.playerId = p.playerId;
    b.weaponType = XT;
    b.offhand = p.shotOffhand;
    b.lastShot = p.lastShot;
    b.shotAlt = p.shotAlt;
    b.ticker = 0;
    b.pullDelay = XY.pullDelay !== undefined ? XY.pullDelay * 0.45 : 0;
    b.splinter = p.splinter;
    b.trailSaturated = p.trailSaturated;
  }
  Gxhh(b, XT, XY, XC, Xl) {
    for (let Xd = 0; Xd < this.shots.length; Xd++) {
      const Xk = this.shots[Xd];
      if (Xk.active) {
        const XU = w[Xk.weaponType];
        if (Xk.ticker == 0) {
          const XW = XY.getPlayerById(Xk.playerId);
          let XD = XU.sound.shoot;
          if (XU.sound.shootTeam) {
            const XF = XY.getPlayerInfo(Xk.playerId).teamId;
            if (XU.sound.shootTeam[XF]) {
              XD = XU.sound.shootTeam[XF];
            }
          }
          if (Xk.lastShot && XU.sound.shootLast) {
            XD = XU.sound.shootLast;
          }
          if (Xk.shotAlt && XU.sound.shootAlt) {
            XD = XU.sound.shootAlt;
          }
          let XG = 0;
          if (Xk.trailSaturated && !XU.ignoreDetune) {
            XG = 300;
          } else if (Xk.splinter) {
            XG = -300;
          }
          Xl.playSound(XD, {
            channel: Xk.playerId == XT ? "activePlayer" : "otherPlayers",
            soundPos: Xk.pos,
            layer: XW ? XW.layer : Xk.layer,
            filter: "muffled",
            fallOff: XU.sound.fallOff ? XU.sound.fallOff : 0,
            detune: XG,
            volumeScale: Xk.splinter ? 0.75 : 1
          });
          if (Xk.splinter) {
            Xl.playSound(XD, {
              channel: Xk.playerId == XT ? "activePlayer" : "otherPlayers",
              soundPos: Xk.pos,
              layer: XW ? XW.layer : Xk.layer,
              filter: "muffled",
              fallOff: XU.sound.fallOff ? XU.sound.fallOff : 0,
              detune: 1200,
              delay: 30,
              volumeScale: 0.75
            });
          }
          if (XW) {
            if (XW.__id == XT && XU.fireMode == "single" && XU.pullDelay) {
              const p1 = XW.KkvfHn.MDx[XW.KkvfHn.hCoMzm].ammo > 0 ? XU.sound.cycle : XU.sound.pull;
              Xl.stopSound(XW.cycleSoundInstance);
              XW.cycleSoundInstance = Xl.playSound(p1);
            }
            const XH = Xk.offhand || !XU.isDual;
            const p0 = !Xk.offhand || !XU.isDual;
            XW.addRecoil(XU.worldImg.recoil, XH, p0);
            XW.fireDelay = XU.fireDelay;
          }
        }
        Xk.ticker += b;
        if (Xk.ticker >= Xk.pullDelay) {
          const p2 = XY.getPlayerById(Xk.playerId);
          if (p2 && !p2.QDvlP.GUi && p2.QDvlP.PhmiQd == Xk.weaponType && XU.caseTiming == "shoot") {
            tr(Xk.weaponType, Math.PI / 2 * -1, 1, p2.QDvlP.NLYJ, p2.QDvlP.RkcQgd, p2.renderLayer, p2.renderZOrd + 1, XC);
          }
          Xk.active = false;
        }
      }
    }
  }
}
const di = 0.1;
function ms(p, b) {
  if (p.length != b.length) {
    return false;
  }
  for (let XT = 0; XT < p.length; XT++) {
    if (p[XT].type != b[XT].type) {
      return false;
    }
  }
  return true;
}
function ns() {
  const p = {
    fontFamily: "Arial",
    fontWeight: "bold",
    fontSize: k.pixelRatio > 1 ? 30 : 22,
    align: "center",
    fill: 65535,
    stroke: 0,
    strokeThickness: 0,
    dropShadow: true,
    dropShadowColor: "#000000",
    dropShadowBlur: 1,
    dropShadowAngle: Math.PI / 3,
    dropShadowDistance: 1
  };
  const b = new q("", p);
  b.anchor.set(0.5, 0.5);
  b.scale.set(0.5, 0.5);
  b.position.set(0, 30);
  b.visible = false;
  return b;
}
function se() {
  const p = new y();
  p.texture = x.EMPTY;
  p.anchor.set(0.5, 0.5);
  p.scale.set(1, 1);
  p.tint = 16777215;
  p.visible = false;
  return p;
}
const hs = Object.values(L.scopeZoomRadius.desktop);
const cs = Object.values(L.scopeZoomRadius.mobile);
class pi {
  gunBarrel = se();
  gunMag = se();
  container = new f();
  magTop = false;
  constructor() {
    this.container.addChild(this.gunBarrel);
    this.container.addChild(this.gunMag);
    this.container.rotation = Math.PI * 0.5;
    this.container.visible = false;
  }
  setVisible(p) {
    this.container.visible = p;
  }
  setType(p, b) {
    const XT = w[p];
    const XY = XT.worldImg;
    this.gunBarrel.texture = x.from(XY.sprite);
    this.gunBarrel.anchor.set(0.5, 1);
    this.gunBarrel.position.set(0, 0);
    this.gunBarrel.scale.set(XY.scale.x * 0.5 / b, XY.scale.y * 0.5 / b);
    this.gunBarrel.tint = XY.tint;
    this.gunBarrel.visible = true;
    if (XY.magImg) {
      const Xl = XY.magImg;
      this.gunMag.texture = x.from(Xl.sprite);
      this.gunMag.anchor.set(0.5, 0.5);
      this.gunMag.position.set(Xl.pos.x / b, Xl.pos.y / b);
      this.gunMag.scale.set(0.25 / b, 0.25 / b);
      this.gunMag.tint = 16777215;
      this.gunMag.visible = true;
      if (Xl.top) {
        this.container.addChild(this.gunMag);
      } else {
        this.container.addChildAt(this.gunMag, 0);
      }
    } else {
      this.gunMag.visible = false;
    }
    this.magTop = XY.magImg?.top;
    const XC = XT.isDual ? v.create(-5.95, 0) : v.create(-4.25, -1.75);
    if (XY.gunOffset) {
      XC.x += XY.gunOffset.x;
      XC.y += XY.gunOffset.y;
    }
    this.container.position.set(XC.x, XC.y);
  }
}
class us {
  __id;
  __type;
  active;
  bodySprite = se();
  chestSprite = se();
  flakSprite = se();
  steelskinSprite = se();
  helmetSprite = se();
  visorSprite = se();
  backpackSprite = se();
  handLSprite = se();
  handRSprite = se();
  footLSprite = se();
  footRSprite = se();
  hipSprite = se();
  gunLSprites = new pi();
  gunRSprites = new pi();
  objectLSprite = se();
  objectRSprite = se();
  meleeSprite = se();
  bodySubmergeSprite = se();
  handLSubmergeSprite = se();
  handRSubmergeSprite = se();
  footLSubmergeSprite = se();
  footRSubmergeSprite = se();
  bodyEffectSprite = se();
  patchSprite = se();
  handLContainer = new f();
  handRContainer = new f();
  footLContainer = new f();
  footRContainer = new f();
  bodyContainer = new f();
  container = new f();
  nameText = ns();
  auraContainer = new f();
  auraCircle = se();
  bones = [];
  anim = {
    type: XX.None,
    data: {},
    seq: -1,
    ticker: 0,
    bones: []
  };
  perks = [];
  perkTypes = [];
  perksDirty = false;
  surface = null;
  wasInWater = false;
  weapTypeOld = "";
  visualsDirty = false;
  stepDistance = 0;
  zoomFast = false;
  playedDryFire = false;
  lastSwapIdx = -1;
  hasteSeq = -1;
  cycleSoundInstance = null;
  actionSoundInstance = null;
  useItemEmitter = null;
  hasteEmitter = null;
  passiveHealEmitter = null;
  downed = false;
  wasDowned = false;
  bleedTicker = 0;
  submersion = 0;
  gunRecoilL = 0;
  gunRecoilR = 0;
  fireDelay = 0;
  throwableState = "equip";
  lastThrowablePickupSfxTicker = 0;
  isNearDoorError = false;
  doorErrorTicker = 0;
  noCeilingRevealTicker = 0;
  frozenTicker = 0;
  updateFrozenImage = true;
  viewAabb = {
    min: v.create(0, 0),
    max: v.create(0, 0)
  };
  auraViewFade = 0;
  auraPulseTicker = 0;
  auraPulseDir = 1;
  renderLayer = 0;
  renderZOrd = 18;
  renderZIdx = 0;
  TvMV;
  QDvlP;
  KkvfHn;
  throwableStatePrev;
  Guz = L.player.radius;
  qSEd;
  NLYJ = v.create(0, 0);
  tixW = v.create(0, 0);
  RkcQgd = v.create(1, 0);
  Htl = v.create(1, 0);
  layer = 0;
  isLoadoutAvatar = false;
  playActionStartSfx = true;
  isNew;
  wasInsideObstacle;
  insideObstacleType;
  lastInsideObstacleTime;
  dead;
  gunSwitchCooldown;
  constructor() {
    this.bodySprite.addChild(this.bodySubmergeSprite);
    this.handLSprite.addChild(this.handLSubmergeSprite);
    this.handRSprite.addChild(this.handRSubmergeSprite);
    this.footLSprite.addChild(this.footLSubmergeSprite);
    this.footRSprite.addChild(this.footRSubmergeSprite);
    this.handLContainer.addChild(this.gunLSprites.container);
    this.handLContainer.addChild(this.handLSprite);
    this.handLContainer.addChild(this.objectLSprite);
    this.handRContainer.addChild(this.gunRSprites.container);
    this.handRContainer.addChild(this.meleeSprite);
    this.handRContainer.addChild(this.handRSprite);
    this.handRContainer.addChild(this.objectRSprite);
    this.footLContainer.addChild(this.footLSprite);
    this.footRContainer.addChild(this.footRSprite);
    this.bodyContainer.addChild(this.footLContainer);
    this.bodyContainer.addChild(this.footRContainer);
    this.bodyContainer.addChild(this.backpackSprite);
    this.bodyContainer.addChild(this.bodySprite);
    this.bodyContainer.addChild(this.chestSprite);
    this.bodyContainer.addChild(this.flakSprite);
    this.bodyContainer.addChild(this.steelskinSprite);
    this.bodyContainer.addChild(this.hipSprite);
    this.bodyContainer.addChild(this.patchSprite);
    this.bodyContainer.addChild(this.bodyEffectSprite);
    this.bodyContainer.addChild(this.handLContainer);
    this.bodyContainer.addChild(this.handRContainer);
    this.bodyContainer.addChild(this.visorSprite);
    this.bodyContainer.addChild(this.helmetSprite);
    this.container.addChild(this.bodyContainer);
    this.container.addChild(this.nameText);
    this.auraContainer.addChild(this.auraCircle);
    this.initSubmergeSprites();
    const p = Object.keys(Pe).length;
    for (let b = 0; b < p; b++) {
      this.bones.push(new I());
      this.anim.bones.push({
        weight: 0,
        pose: new I()
      });
    }
    this.throwableStatePrev = this.throwableState;
    this.qSEd = this.Guz;
  }
  rfNkqZ() {
    this.isNew = false;
    this.wasInsideObstacle = false;
    this.insideObstacleType = "";
    this.lastInsideObstacleTime = 0;
    this.lastSwapIdx = -1;
    this.hasteSeq = -1;
    this.actionSoundInstance = null;
    this.TvMV = {
      type: Xp.None,
      seq: -1,
      seqOld: -1,
      item: "",
      skin: "",
      targetId: 0,
      time: 0,
      duration: 0,
      throttleCount: 0,
      throttleTicker: 0
    };
    this.QDvlP = {
      NLYJ: v.create(0, 0),
      RkcQgd: v.create(1, 0),
      prHPqq: "",
      wYo: "",
      SMDXye: "",
      JyI: "",
      PhmiQd: "fists",
      fgCE: 0,
      GUi: false,
      RxB: false,
      Snn: XX.None,
      xCRFf: 0,
      bznPCw: Xp.None,
      umykZA: 0,
      arf: false,
      jOdZA: false,
      AVSa: false,
      ewgxY: 0,
      TuU: Xb.None,
      tJxefA: 0,
      fkskYY: "",
      GZTM: 1,
      Evfg: "",
      vJBLNe: []
    };
    this.KkvfHn = {
      izX: L.player.health,
      BsPd: 0,
      ytAUxB: 0,
      CRJZL: "",
      hCoMzm: 0,
      uYAn: {},
      MDx: [],
      kUHxCC: 0
    };
    this.playAnim(XX.None, -1);
  }
  dphRtI() {
    this.container.visible = false;
    this.auraContainer.visible = false;
    if (this.useItemEmitter) {
      this.useItemEmitter.stop();
      this.useItemEmitter = null;
    }
    if (this.hasteEmitter) {
      this.hasteEmitter.stop();
      this.hasteEmitter = null;
    }
    if (this.passiveHealEmitter) {
      this.passiveHealEmitter.stop();
      this.passiveHealEmitter = null;
    }
  }
  wzDEnz(p, b, XT, XY) {
    this.QDvlP.NLYJ = v.copy(p.pos);
    this.QDvlP.RkcQgd = v.copy(p.dir);
    if (b) {
      this.QDvlP.prHPqq = p.outfit;
      this.QDvlP.wYo = p.backpack;
      this.QDvlP.SMDXye = p.helmet;
      this.QDvlP.JyI = p.chest;
      this.QDvlP.PhmiQd = p.activeWeapon;
      this.QDvlP.fgCE = p.layer;
      this.QDvlP.GUi = p.dead;
      this.QDvlP.RxB = p.downed;
      this.QDvlP.Snn = p.animType;
      this.QDvlP.xCRFf = p.animSeq;
      this.QDvlP.bznPCw = p.actionType;
      this.QDvlP.umykZA = p.actionSeq;
      this.QDvlP.arf = p.wearingPan;
      this.QDvlP.jOdZA = p.healEffect;
      this.QDvlP.AVSa = p.frozen;
      this.QDvlP.ewgxY = p.frozenOri;
      this.QDvlP.TuU = p.hasteType;
      this.QDvlP.tJxefA = p.hasteSeq;
      this.QDvlP.fkskYY = p.actionItem;
      this.QDvlP.GZTM = p.scale;
      this.QDvlP.Evfg = p.role;
      if (XT || !ms(this.QDvlP.vJBLNe, p.perks)) {
        this.perksDirty = true;
      }
      this.QDvlP.vJBLNe = p.perks;
      if (p.animSeq != this.anim.seq) {
        this.playAnim(p.animType, p.animSeq);
      }
      this.TvMV.type = p.actionType;
      this.TvMV.seq = p.actionSeq;
      this.TvMV.item = p.actionItem;
      this.visualsDirty = true;
    }
    if (XT) {
      this.isNew = true;
      this.renderLayer = this.QDvlP.fgCE;
      this.renderZOrd = 18;
      this.renderZIdx = this.__id;
    }
  }
  BOCg(p, b) {
    const XT = this.KkvfHn.CRJZL;
    if (p.healthDirty) {
      this.KkvfHn.izX = p.health;
    }
    if (p.boostDirty) {
      this.KkvfHn.ytAUxB = p.boost;
    }
    if (p.zoomDirty) {
      this.KkvfHn.BsPd = p.zoom;
      this.zoomFast = false;
    }
    if (p.actionDirty) {
      this.TvMV.time = p.action.time;
      this.TvMV.duration = p.action.duration;
      this.TvMV.targetId = p.action.targetId;
    }
    if (p.inventoryDirty) {
      this.KkvfHn.CRJZL = p.scope;
      this.KkvfHn.uYAn = {};
      for (const XY in L.bagSizes) {
        if (L.bagSizes.hasOwnProperty(XY)) {
          this.KkvfHn.uYAn[XY] = p.inventory[XY];
        }
      }
    }
    if (p.weapsDirty) {
      this.KkvfHn.hCoMzm = p.curWeapIdx;
      this.KkvfHn.MDx = [];
      for (let XC = 0; XC < L.WeaponSlot.Count; XC++) {
        const Xl = {
          type: p.weapons[XC].type,
          ammo: p.weapons[XC].ammo
        };
        this.KkvfHn.MDx.push(Xl);
      }
    }
    if (p.spectatorCountDirty) {
      this.KkvfHn.kUHxCC = p.spectatorCount;
    }
    if (this.KkvfHn.CRJZL != XT) {
      this.zoomFast = true;
    }
  }
  ulnm() {
    let p = this.KkvfHn.BsPd;
    if (k.mobile) {
      const b = hs.indexOf(p);
      if (b !== -1) {
        p = cs[b];
      }
    }
    return p;
  }
  MrYb() {
    if (this.QDvlP.SMDXye) {
      return w[this.QDvlP.SMDXye].level;
    } else {
      return 0;
    }
  }
  tsugJO() {
    if (this.QDvlP.JyI) {
      return w[this.QDvlP.JyI].level;
    } else {
      return 0;
    }
  }
  Rlf() {
    return w[this.QDvlP.wYo].level;
  }
  lYZ() {
    return w[this.QDvlP.PhmiQd].type;
  }
  CNXJhh(p) {
    return this.KkvfHn.MDx[p].type !== "";
  }
  getMeleeCollider() {
    const p = w[this.QDvlP.PhmiQd];
    const b = Math.atan2(this.RkcQgd.y, this.RkcQgd.x);
    const XT = v.add(p.attack.offset, v.mul(v.create(1, 0), this.QDvlP.GZTM - 1));
    const XY = v.add(this.NLYJ, v.rotate(XT, b));
    const XC = p.attack.rad;
    return T.createCircle(XY, XC, 0);
  }
  Zfl() {
    return this.QDvlP.arf || this.QDvlP.PhmiQd == "pan" && this.currentAnim() != XX.Melee;
  }
  jsGID() {
    const p = this.QDvlP.arf ? "unequipped" : "equipped";
    return w.pan.reflectSurface?.[p];
  }
  canInteract(p) {
    return !this.QDvlP.GUi && (!p.perkMode || this.QDvlP.Evfg);
  }
  yUMDr(p, b, XT) {
    for (let XY = 0; XY < this.perks.length; XY++) {
      this.perks[XY].isNew = false;
    }
    if (this.perksDirty) {
      if (p && !b) {
        for (let Xl = 0; Xl < this.QDvlP.vJBLNe.length; Xl++) {
          const Xd = this.QDvlP.vJBLNe[Xl];
          if (this.perks.findIndex(Xk => Xk.type == Xd.type) === -1) {
            XT.addRareLootMessage(Xd.type);
          }
        }
        for (let Xk = 0; Xk < this.perks.length; Xk++) {
          const XU = this.perks[Xk];
          if (this.QDvlP.vJBLNe.findIndex(XW => XW.type == XU.type) === -1) {
            XT.removeRareLootMessage(XU.type);
          }
        }
      }
      const XC = [];
      for (let XW = 0; XW < this.QDvlP.vJBLNe.length; XW++) {
        const XD = this.QDvlP.vJBLNe[XW];
        const XG = this.perks.findIndex(XF => XF.type == XD.type) === -1;
        XC.push({
          type: XD.type,
          droppable: XD.droppable,
          isNew: XG && !this.isNew
        });
      }
      this.perks = XC;
      this.perkTypes = [];
      for (let XF = 0; XF < this.QDvlP.vJBLNe.length; XF++) {
        this.perkTypes.push(this.QDvlP.vJBLNe[XF].type);
      }
      this.perksDirty = false;
    }
  }
  PsSK(p) {
    return this.perkTypes.includes(p);
  }
  Gxhh(XT, XY, XC, Xl, Xd, Xk, XU, XW, XD, XG, XF, XH, p0) {
    const p1 = w[this.QDvlP.PhmiQd];
    const p2 = this.__id == XG;
    const p3 = XY.getPlayerById(XG);
    this.tixW = v.copy(this.NLYJ);
    this.Htl = v.copy(this.RkcQgd);
    this.NLYJ = v.copy(this.QDvlP.NLYJ);
    this.RkcQgd = v.copy(this.QDvlP.RkcQgd);
    this.layer = this.QDvlP.fgCE;
    this.downed = this.QDvlP.RxB;
    this.Guz = this.QDvlP.GZTM * L.player.radius;
    if (!e.eqAbs(this.Guz, this.qSEd)) {
      const pg = this.Guz - this.qSEd;
      let pQ = Math.abs(pg) > 0.0001 ? pg * XT * 6 : pg;
      if (this.isNew) {
        pQ = pg;
      }
      this.qSEd += pQ;
      this.visualsDirty = true;
    }
    if (p2) {
      const pZ = XU.vrnvjL(v.create(XU.pmhI, 0));
      const pq = v.sub(pZ, XU.NLYJ);
      this.viewAabb.min = v.sub(XU.NLYJ, pq);
      this.viewAabb.max = v.add(XU.NLYJ, pq);
    }
    this.yUMDr(p2, p0, XD);
    const p4 = this.weapTypeOld != this.QDvlP.PhmiQd;
    this.weapTypeOld = this.QDvlP.PhmiQd;
    this.lastThrowablePickupSfxTicker -= XT;
    this.noCeilingRevealTicker -= XT;
    const p5 = XY.getPlayerInfo(XG).groupId;
    const p6 = XY.getPlayerInfo(this.__id);
    const p7 = p6.groupId == p5;
    this.nameText.text = p6.name;
    this.nameText.visible = !p2 && p7;
    let p8 = null;
    let p9 = null;
    const pX = XC.NmwMZ.KGHPNo();
    for (let pM = 0; pM < pX.length; pM++) {
      const pE = pX[pM];
      if (pE.active && !pE.dead && pE.layer == this.QDvlP.fgCE) {
        if (pE.isBush) {
          const pN = this.Guz * 0.25;
          if (T.intersectCircle(pE.collider, this.NLYJ, pN)) {
            p8 = pE;
          }
        } else if (pE.isDoor) {
          const pn = this.Guz + 0.25;
          const ph = v.sub(pE.pos, this.NLYJ);
          const pR = v.rotate(v.create(1, 0), pE.rot);
          if (T.intersectCircle(pE.collider, this.NLYJ, pn) && (pE.door.locked || pE.door.openOneWay && v.dot(ph, pR) < 0)) {
            p9 = pE;
          }
        }
      }
    }
    const pp = p8 != null;
    if (pp) {
      this.insideObstacleType = p8?.type;
    }
    this.lastInsideObstacleTime -= XT;
    if (this.wasInsideObstacle != pp && this.lastInsideObstacleTime < 0 && !this.isNew) {
      const pP = a[this.insideObstacleType];
      this.lastInsideObstacleTime = 0.2;
      Xl.playSound(pP?.sound.enter, {
        channel: "sfx",
        soundPos: this.NLYJ,
        fallOff: 1,
        layer: this.layer,
        filter: "muffled"
      });
      const pA = v.normalizeSafe(v.sub(this.tixW, this.NLYJ), v.create(1, 0));
      const pJ = pp ? 1 : -1;
      const pS = Math.floor(t.random(3, 5));
      for (let pB = 0; pB < pS; pB++) {
        const pc = v.mul(v.rotate(v.mul(pA, pJ), (Math.random() - 0.5) * Math.PI / 1.5), t.random(6, 8));
        Xd.addParticle(pP.hitParticle, this.layer, this.NLYJ, pc);
      }
    }
    this.wasInsideObstacle = pp;
    const pb = this.isNearDoorError;
    this.isNearDoorError = p9 != null;
    this.doorErrorTicker -= XT;
    if (this.isNearDoorError && !pb && this.doorErrorTicker <= 0) {
      this.doorErrorTicker = 0.5;
      const pu = a[p9?.type].door?.sound.error;
      Xl.playSound(pu, {
        channel: "sfx",
        soundPos: this.NLYJ,
        fallOff: 1,
        layer: this.layer,
        filter: "muffled"
      });
    }
    this.surface = XC.getGroundSurface(this.NLYJ, this.layer);
    const pI = this.surface.type == "water";
    this.updateSubmersion(XT, XC);
    this.updateFrozenState(XT);
    if (!this.QDvlP.GUi) {
      this.stepDistance += v.length(v.sub(this.tixW, this.NLYJ));
      if (this.stepDistance > 5 && pI || pI && !this.wasInWater) {
        this.stepDistance = 0;
        Xd.addRippleParticle(this.NLYJ, this.layer, this.surface?.data.rippleColor);
        Xl.playGroup("footstep_water", {
          soundPos: this.NLYJ,
          fallOff: 3,
          layer: this.layer,
          filter: "muffled"
        });
      } else if (this.stepDistance > 4 && !pI) {
        this.stepDistance = 0;
        Xl.playGroup("footstep_" + this.surface.type, {
          soundPos: this.NLYJ,
          fallOff: 3,
          layer: this.layer,
          filter: "muffled"
        });
      }
      this.wasInWater = pI;
    }
    this.bleedTicker -= XT;
    if (!this.QDvlP.GUi && (this.QDvlP.RxB && this.TvMV.type == Xp.None || this.PsSK("trick_drain")) && this.bleedTicker < 0) {
      this.bleedTicker = this.PsSK("trick_drain") ? L.player.bleedTickRate * 3 : L.player.bleedTickRate;
      const pV = v.rotate(v.mul(this.RkcQgd, -1), (Math.random() - 0.5) * Math.PI / 3);
      pV.y *= -1;
      if (!window.CrazyGames) {
        Xd.addParticle("bloodSplat", this.renderLayer, v.create(0, 0), v.mul(pV, XU.xQaJqu), 1, Math.random() * Math.PI * 2, this.container, this.renderZOrd + 1);
      }
      if (!XH) {
        Xl.playSound("player_bullet_hit_02", {
          channel: "hits",
          soundPos: this.NLYJ,
          fallOff: 3,
          layer: this.layer,
          filter: "muffled"
        });
      }
    }
    this.gunSwitchCooldown -= XT;
    this.fireDelay -= XT;
    if (p2 && (p4 || this.lastSwapIdx != this.KkvfHn.hCoMzm)) {
      const pz = this.lastSwapIdx;
      this.lastSwapIdx = this.KkvfHn.hCoMzm;
      const pw = w[this.QDvlP.PhmiQd];
      if (pw.type == "melee" || pw.type == "throwable") {
        if (pw.type != "throwable" || this.lastThrowablePickupSfxTicker <= 0) {
          const pO = this.isLoadoutAvatar ? XU.NLYJ : this.NLYJ;
          Xl.playSound(pw.sound.deploy, {
            channel: "sfx",
            soundPos: pO,
            fallOff: 3
          });
        }
      } else if (pw.type == "gun") {
        let pL = "gun_switch_01";
        let pv = false;
        if ((pz == 0 || pz == 1) && (this.lastSwapIdx == 0 || this.lastSwapIdx == 1) && this.fireDelay > 0) {
          const pK = w[this.KkvfHn.MDx[pz].type];
          if (pw && pK && pw.deployGroup !== undefined && pK.deployGroup !== undefined && pw.deployGroup == pK.deployGroup) {
            pv = true;
          }
        }
        if (this.gunSwitchCooldown > 0 || pv) {
          pL = pw.sound.deploy;
        } else {
          this.gunSwitchCooldown = L.player.freeSwitchCooldown;
        }
        Xl.stopSound(this.cycleSoundInstance);
        this.cycleSoundInstance = Xl.playSound(pL, {
          channel: "activePlayer"
        });
        this.fireDelay = 0;
      }
    }
    if (!Xl.isSoundPlaying(this.cycleSoundInstance)) {
      this.cycleSoundInstance = null;
    }
    if (this.TvMV.seq != this.TvMV.seqOld && !this.isNew) {
      let pm = true;
      if (!p2 && this.TvMV.type != Xp.None) {
        this.TvMV.throttleTicker = 0.5;
        if (this.TvMV.throttleCount < 5) {
          this.TvMV.throttleCount++;
        } else {
          pm = false;
        }
      }
      if (pm) {
        this.playActionStartEffect(p2, Xd, Xl);
      }
    }
    this.TvMV.seqOld = this.TvMV.seq;
    this.updateActionEffect(p2, p6, Xd, Xl);
    this.TvMV.throttleTicker -= XT;
    if (this.TvMV.throttleTicker < 0 && this.TvMV.throttleCount > 0) {
      this.TvMV.throttleCount--;
      this.TvMV.throttleTicker = 0.25;
    }
    if (this.QDvlP.TuU && this.QDvlP.tJxefA != this.hasteSeq) {
      const pT = {
        [Xb.None]: {
          particle: "",
          sound: ""
        },
        [Xb.Windwalk]: {
          particle: "windwalk",
          sound: "ability_stim_01"
        },
        [Xb.Takedown]: {
          particle: "takedown",
          sound: "ability_stim_01"
        },
        [Xb.Inspire]: {
          particle: "inspire",
          sound: "ability_stim_01"
        }
      }[this.QDvlP.TuU];
      if (!this.isNew) {
        Xl.playSound(pT.sound, {
          channel: "sfx",
          soundPos: this.NLYJ,
          fallOff: 1,
          layer: this.layer,
          filter: "muffled"
        });
      }
      this.hasteEmitter?.stop();
      this.hasteEmitter = Xd.addEmitter(pT.particle, {
        pos: this.NLYJ,
        layer: this.layer
      });
      this.hasteSeq = this.QDvlP.tJxefA;
    } else if (!this.QDvlP.TuU && this.hasteEmitter) {
      this.hasteEmitter.stop();
      this.hasteEmitter = null;
    }
    if (this.hasteEmitter) {
      this.hasteEmitter.pos = v.add(this.NLYJ, v.create(0, 0.1));
      this.hasteEmitter.layer = this.renderLayer;
      this.hasteEmitter.zOrd = this.renderZOrd + 1;
    }
    if (this.QDvlP.jOdZA && !this.passiveHealEmitter) {
      this.passiveHealEmitter = Xd.addEmitter("heal_basic", {
        pos: this.NLYJ,
        layer: this.layer
      });
    } else if (!this.QDvlP.jOdZA && this.passiveHealEmitter) {
      this.passiveHealEmitter.stop();
      this.passiveHealEmitter = null;
    }
    if (this.passiveHealEmitter) {
      this.passiveHealEmitter.pos = v.add(this.NLYJ, v.create(0, 0.1));
      this.passiveHealEmitter.layer = this.renderLayer;
      this.passiveHealEmitter.zOrd = this.renderZOrd + 1;
    }
    if (p2 && !p0) {
      const pY = this.KkvfHn.hCoMzm;
      const pC = this.KkvfHn.MDx[pY];
      const pl = w[pC.type];
      if (!this.playedDryFire && this.lYZ() == "gun" && (Xk.isBindPressed(D.Fire) || Xk.isBindDown(D.Fire) && pl.fireMode == "auto") && this.TvMV.type == Xp.None && !XF && !pl.ammoInfinite) {
        const pd = this.KkvfHn.uYAn[pl.ammo] || 0;
        const pk = pC.ammo;
        if (pd == 0 && pk == 0) {
          Xl.playSound(pl.sound.empty);
          this.playedDryFire = true;
        }
      }
      if (!Xk.isBindDown(D.Fire)) {
        this.playedDryFire = false;
      }
    }
    this.gunRecoilL = e.max(0, this.gunRecoilL - this.gunRecoilL * XT * 5 - XT);
    this.gunRecoilR = e.max(0, this.gunRecoilR - this.gunRecoilR * XT * 5 - XT);
    const pj = {
      playerBarn: XY,
      map: XC,
      audioManager: Xl,
      particleBarn: Xd
    };
    this.updateAnim(XT, pj);
    if (this.currentAnim() == XX.None) {
      this.throwableState = "equip";
    }
    if ((this.currentAnim() == XX.Cook || this.currentAnim() == XX.Throw) && p1.type != "throwable") {
      this.playAnim(XX.None, this.anim.seq);
    }
    const pf = this.selectIdlePose();
    const px = ui[pf];
    for (let pU = 0; pU < this.bones.length; pU++) {
      const pW = px[pU] || I.identity;
      const pD = this.anim.bones[pU];
      if (pD.weight > 0) {
        this.bones[pU].copy(I.lerp(pD.weight, pW, pD.pose));
      } else {
        this.bones[pU].copy(pW);
      }
    }
    if (this.throwableStatePrev != this.throwableState) {
      this.visualsDirty = true;
    }
    this.throwableStatePrev = this.throwableState;
    if (this.visualsDirty) {
      this.updateVisuals(XY, XC);
    }
    this.visualsDirty = false;
    this.updateAura(XT, p2, p3);
    this.Zr();
    this.updateRenderLayer(p2, p3, XC);
    XW.addPIXIObj(this.auraContainer, this.renderLayer, this.renderZOrd - 1, this.renderZIdx);
    const py = p3.layer & 2 || (p3.layer & 1) == 1 || (this.layer & 1) == 0;
    this.auraContainer.visible = !this.QDvlP.GUi && !!py;
    XW.addPIXIObj(this.container, this.renderLayer, this.renderZOrd, this.renderZIdx);
    this.isNew = false;
  }
  render(p, b) {
    const XT = p.MobS(this.NLYJ);
    const XY = p.uRFX(1);
    this.container.position.set(XT.x, XT.y);
    this.container.scale.set(XY, XY);
    this.container.visible = !this.QDvlP.GUi;
    this.auraContainer.position.set(XT.x, XT.y);
    this.auraContainer.scale.set(XY, XY);
    if (k.debug && b.players) {
      he.addCircle(this.NLYJ, this.Guz, 16711680, 0);
      const XC = w[this.QDvlP.PhmiQd];
      if (XC.type === "gun") {
        he.addRay(this.NLYJ, this.RkcQgd, XC.barrelLength, 16711680, 0);
      }
    }
  }
  updateRenderLayer(b, XT, XY) {
    const XC = T.createCircle(this.NLYJ, L.player.maxVisualRadius);
    let Xl = false;
    let Xd = false;
    let Xk = false;
    const XU = XY.JCfHy.KGHPNo();
    for (let XF = 0; XF < XU.length; XF++) {
      const XH = XU[XF];
      if (XH.active) {
        for (let p0 = 0; p0 < XH.stairs.length; p0++) {
          const p1 = XH.stairs[p0];
          const p2 = T.intersect(p1.collision, XC);
          if (p2) {
            Xd = true;
            const p3 = v.add(p1.center, v.mul(p1.downDir, -2.5));
            let p4 = v.sub(p3, this.NLYJ);
            const p5 = v.length(p4);
            p4 = p5 > 0.0001 ? v.div(p4, p5) : v.create(1, 0);
            Xk = X1.intersectSegmentDist(XY.NmwMZ.KGHPNo(), this.NLYJ, p4, p5, 0.5, this.layer, false) < p5;
          }
          if (b && p1.noCeilingReveal && p2 && this.layer != 0) {
            this.noCeilingRevealTicker = 0.25;
          }
        }
        for (let p6 = 0; p6 < XH.mask.length; p6++) {
          if (T.intersect(XH.mask[p6], XC)) {
            Xl = true;
            break;
          }
        }
      }
    }
    let XW = this.layer;
    let XD = 18;
    if (Xd && (XW & 1 && (XT.layer & 1 || !Xk) || XT.layer & 2 && !Xl)) {
      XW |= 2;
    }
    if (Xd && (XW & 1) == (XT.layer & 1) && (!Xl || XT.layer == 0)) {
      XW |= 2;
      XD += 100;
    }
    const XG = this.__id + (this.QDvlP.RxB ? 0 : 262144) + (b ? 65536 : 0) + (this.Guz > 1 ? 131072 : 0);
    this.renderLayer = XW;
    this.renderZOrd = XD;
    this.renderZIdx = XG;
  }
  updateVisuals(b, XT) {
    const XY = w[this.QDvlP.prHPqq];
    const XC = XY.skinImg;
    const Xl = this.qSEd / L.player.radius;
    this.bodySprite.texture = x.from(XC.baseSprite);
    this.bodySprite.tint = XY.ghillie ? XT.getMapDef().biome.colors.playerGhillie : XC.baseTint;
    this.bodySprite.scale.set(0.25, 0.25);
    this.bodySprite.visible = true;
    if (this.QDvlP.AVSa && this.updateFrozenImage) {
      const XG = XT.getMapDef().biome.frozenSprites || [];
      if (XG.length > 0) {
        const XF = XG[Math.floor(Math.random() * XG.length)];
        const XH = e.oriToRad(this.QDvlP.ewgxY) + Math.PI * 0.5 + (Math.random() - 0.5) * Math.PI * 0.25;
        this.bodyEffectSprite.texture = x.from(XF);
        this.bodyEffectSprite.rotation = XH;
        this.bodyEffectSprite.tint = 16777215;
        this.bodyEffectSprite.scale.set(0.25, 0.25);
      }
      this.updateFrozenImage = false;
    }
    if (XT.factionMode && !XY.ghillie) {
      const p0 = b.getPlayerInfo(this.__id).teamId;
      const p1 = ["player-patch-01.img", "player-patch-02.img"];
      const p2 = (p0 - 1) % p1.length;
      const p3 = p1[p2];
      const p4 = L.teamColors[p2];
      const p5 = e.oriToRad(3) + Math.PI * 0.5;
      this.patchSprite.texture = x.from(p3);
      this.patchSprite.rotation = p5;
      this.patchSprite.tint = p4;
      this.patchSprite.scale.set(0.25, 0.25);
      this.patchSprite.visible = true;
    } else {
      this.patchSprite.visible = false;
    }
    const Xd = function (p6, p7, p8) {
      p6.texture = x.from(p7);
      p6.scale.set(0.175, 0.175);
      p6.tint = p8;
      p6.visible = true;
    };
    const Xk = XY.ghillie ? XT.getMapDef().biome.colors.playerGhillie : XC.handTint;
    Xd(this.handLSprite, XC.handSprite, Xk);
    Xd(this.handRSprite, XC.handSprite, Xk);
    const XU = function (p6, p7, p8) {
      p6.texture = x.from("player-feet-01.img");
      p6.scale.set(0.45, 0.45);
      p6.rotation = Math.PI * 0.5;
      p6.tint = p7;
      p6.visible = p8;
    };
    const XW = XY.ghillie ? XT.getMapDef().biome.colors.playerGhillie : XC.footTint;
    XU(this.footLSprite, XW, this.downed);
    XU(this.footRSprite, XW, this.downed);
    if (this.PsSK("flak_jacket") && !XY.ghillie) {
      this.flakSprite.texture = x.from("player-armor-base-01.img");
      this.flakSprite.scale.set(0.215, 0.215);
      this.flakSprite.tint = 3671558;
      this.flakSprite.alpha = 0.7;
      this.flakSprite.visible = true;
    } else {
      this.flakSprite.visible = false;
    }
    if (this.QDvlP.JyI == "" || XY.ghillie) {
      this.chestSprite.visible = false;
    } else {
      const p6 = w[this.QDvlP.JyI].skinImg;
      this.chestSprite.texture = x.from(p6.baseSprite);
      this.chestSprite.scale.set(0.25, 0.25);
      this.chestSprite.tint = p6.baseTint;
      this.chestSprite.visible = true;
    }
    if (this.PsSK("steelskin") && !XY.ghillie) {
      this.steelskinSprite.texture = x.from("loot-melee-pan-black.img");
      this.steelskinSprite.scale.set(0.4, 0.4);
      this.steelskinSprite.anchor.set(0.575, 0.5);
      this.steelskinSprite.tint = 16777215;
      this.steelskinSprite.visible = true;
    } else {
      this.steelskinSprite.visible = false;
    }
    if (this.QDvlP.SMDXye == "" || XY.ghillie) {
      this.helmetSprite.visible = false;
    } else {
      const p7 = w[this.QDvlP.SMDXye].skinImg;
      const p8 = (this.downed ? 1 : -1) * 3.33;
      this.helmetSprite.texture = x.from(p7.baseSprite);
      this.helmetSprite.position.set(p8, 0);
      if (p7.spriteScale) {
        this.helmetSprite.scale.set(p7.spriteScale, p7.spriteScale);
      } else {
        this.helmetSprite.scale.set(0.15, 0.15);
      }
      let p9 = p7.baseTint;
      if (XT.factionMode) {
        p9 = b.getPlayerInfo(this.__id).teamId == 1 ? p7.baseTintRed : p7.baseTintBlue;
      }
      this.helmetSprite.tint = p9;
      this.helmetSprite.visible = true;
    }
    if (this.Rlf() > 0 && !XY.ghillie && !this.downed) {
      const pX = [10.25, 11.5, 12.75];
      const pp = this.Rlf();
      const pb = pX[e.min(pp - 1, pX.length - 1)];
      const pI = (0.4 + pp * 0.03) * 0.5;
      this.backpackSprite.texture = x.from("player-circle-base-01.img");
      this.backpackSprite.position.set(-pb, 0);
      this.backpackSprite.scale.set(pI, pI);
      this.backpackSprite.tint = XC.backpackTint;
      this.backpackSprite.visible = true;
      (function (pj, pf, px) {
        pj.texture = x.from(pf);
        pj.tint = px;
      })(this.backpackSprite, XC.backpackSprite, XC.backpackTint);
    } else {
      this.backpackSprite.visible = false;
    }
    if (this.QDvlP.arf) {
      const pj = w.pan.hipImg;
      this.hipSprite.texture = x.from(pj.sprite);
      this.hipSprite.position.set(pj.pos.x, pj.pos.y);
      this.hipSprite.scale.set(pj.scale.x, pj.scale.y);
      this.hipSprite.rotation = pj.rot;
      this.hipSprite.tint = pj.tint;
      this.hipSprite.visible = true;
    } else {
      this.hipSprite.visible = false;
    }
    const XD = w[this.QDvlP.PhmiQd];
    if (XD.type == "gun") {
      this.gunRSprites.setType(this.QDvlP.PhmiQd, Xl);
      this.gunRSprites.setVisible(true);
      if (XD.isDual) {
        this.gunLSprites.setType(this.QDvlP.PhmiQd, Xl);
        this.gunLSprites.setVisible(true);
      } else {
        this.gunLSprites.setVisible(false);
      }
      const pf = this.bodyContainer.getChildIndex(this.handRContainer);
      const px = this.bodyContainer.getChildIndex(this.handRContainer);
      let py = pf + 1;
      if (this.gunRSprites.magTop || XD.worldImg.handsBelow) {
        py = pf - 1;
      }
      py = e.max(py, 0);
      if (px != py) {
        this.bodyContainer.addChildAt(this.handLContainer, py);
      }
      const pg = this.handRContainer.getChildIndex(this.gunRSprites.container);
      const pQ = XD.worldImg.handsBelow ? this.handRContainer.children.length : 0;
      if (pg != pQ) {
        this.handRContainer.addChildAt(this.gunRSprites.container, pQ);
      }
    } else {
      this.gunLSprites.setVisible(false);
      this.gunRSprites.setVisible(false);
    }
    if (this.downed != this.wasDowned) {
      this.wasDowned = this.downed;
      if (this.downed) {
        const pZ = this.bodyContainer.getChildIndex(this.footLContainer);
        this.bodyContainer.addChildAt(this.handLContainer, pZ);
        this.bodyContainer.addChildAt(this.handRContainer, pZ);
      } else {
        this.bodyContainer.addChild(this.handLContainer);
        this.bodyContainer.addChild(this.handRContainer);
      }
    }
    if (XD.type == "melee" && this.QDvlP.PhmiQd != "fists") {
      const pq = XD.worldImg;
      this.meleeSprite.texture = x.from(pq.sprite);
      this.meleeSprite.pivot.set(-pq.pos.x, -pq.pos.y);
      this.meleeSprite.scale.set(pq.scale.x / Xl, pq.scale.y / Xl);
      this.meleeSprite.rotation = pq.rot;
      this.meleeSprite.tint = pq.tint;
      this.meleeSprite.visible = true;
      const pM = this.handRContainer.getChildIndex(this.handRSprite);
      const pE = e.max(pq.renderOnHand ? pM + 1 : pM - 1, 0);
      if (this.handRContainer.getChildIndex(this.meleeSprite) != pE) {
        this.handRContainer.addChildAt(this.meleeSprite, pE);
      }
      const pN = this.bodyContainer.getChildIndex(this.handRContainer);
      const pn = e.max(pq.leftHandOntop ? pN + 1 : pN - 1, 0);
      if (this.bodyContainer.getChildIndex(this.handLContainer) != pn) {
        this.bodyContainer.addChildAt(this.handLContainer, pn);
      }
    } else {
      this.meleeSprite.visible = false;
    }
    if (XD.type == "throwable") {
      const ph = function (pP, pA) {
        if (pA.sprite && pA.sprite != "none") {
          let pJ = pA.sprite;
          if (XT.mapDef.gameMode.spookyKillSounds) {
            pJ = er[pJ] || pJ;
          }
          pP.texture = x.from(pJ);
          pP.position.set(pA.pos?.x, pA.pos?.y);
          pP.scale.set(pA.scale, pA.scale);
          pP.rotation = Math.PI * 0.5;
          pP.visible = true;
        } else {
          pP.visible = false;
        }
      };
      const pR = XD.handImg?.[this.throwableState];
      ph(this.objectLSprite, pR.left);
      ph(this.objectRSprite, pR.right);
    } else {
      this.objectLSprite.visible = false;
      this.objectRSprite.visible = false;
    }
    if (this.downed || this.currentAnim() == XX.Revive) {
      this.gunLSprites.setVisible(false);
      this.gunRSprites.setVisible(false);
      this.meleeSprite.visible = false;
      this.objectLSprite.visible = false;
      this.objectRSprite.visible = false;
    }
    if (this.downed) {
      this.backpackSprite.visible = false;
    }
    if (this.TvMV.type != Xp.UseItem && this.TvMV.type != Xp.Revive || this.QDvlP.GUi || this.QDvlP.RxB && !this.PsSK("self_revive") || !this.PsSK("aoe_heal")) {
      this.auraPulseTicker = 0;
      this.auraPulseDir = 1;
      this.auraCircle.visible = false;
    } else {
      const pP = w[this.TvMV.item];
      const pA = pP?.aura ? pP.aura.sprite : "part-aura-circle-01.img";
      const pJ = pP?.aura ? pP.aura.tint : 16711935;
      const pS = 0.125;
      let pB = pP ? L.player.medicHealRange : L.player.medicReviveRange;
      pB *= pS;
      this.auraCircle.texture = x.from(pA);
      this.auraCircle.scale.set(pB, pB);
      this.auraCircle.tint = pJ;
      this.auraCircle.visible = true;
    }
    if (XT.perkMode && this.QDvlP.Evfg != "" && this.QDvlP.SMDXye != "" && !XY.ghillie) {
      const pc = w[this.QDvlP.Evfg].visorImg;
      if (pc) {
        const pu = (this.downed ? 1 : -1) * 3.33;
        this.visorSprite.texture = x.from(pc.baseSprite);
        this.visorSprite.position.set(pu, 0);
      }
      if (pc.spriteScale) {
        this.visorSprite.scale.set(pc.spriteScale, pc.spriteScale);
      } else {
        this.visorSprite.scale.set(0.15, 0.15);
      }
      this.visorSprite.visible = true;
    } else {
      this.visorSprite.visible = false;
    }
    this.bodyContainer.scale.set(Xl, Xl);
  }
  updateAura(p, b, XT) {
    let XY = true;
    if (!b) {
      XY = G.testCircleAabb(this.NLYJ, this.Guz, XT.viewAabb.min, XT.viewAabb.max);
    }
    this.auraViewFade = e.lerp(p * 6, this.auraViewFade, XY ? 1 : 0);
    if (this.auraCircle.visible) {
      this.auraPulseTicker = e.clamp(this.auraPulseTicker + p * this.auraPulseDir * 1.5, 0, 1);
      const XC = e.easeOutExpo(this.auraPulseTicker) * 0.75 + 0.25;
      if (this.auraPulseTicker >= 1 || this.auraPulseTicker <= 0) {
        this.auraPulseDir *= -1;
      }
      this.auraCircle.alpha = XC * this.auraViewFade;
    }
  }
  Zr() {
    const p = function (XT, XY) {
      XT.position.set(XY.pos.x, XY.pos.y);
      XT.pivot.set(-XY.pivot.x, -XY.pivot.y);
      XT.rotation = XY.rot;
    };
    p(this.handLContainer, this.bones[Pe.HandL]);
    p(this.handRContainer, this.bones[Pe.HandR]);
    p(this.footLContainer, this.bones[Pe.FootL]);
    p(this.footRContainer, this.bones[Pe.FootR]);
    const b = w[this.QDvlP.PhmiQd];
    if (!this.downed && this.currentAnim() != XX.Revive && b.type == "gun" && b.worldImg.leftHandOffset) {
      this.handLContainer.position.x += b.worldImg.leftHandOffset.x;
      this.handLContainer.position.y += b.worldImg.leftHandOffset.y;
    }
    this.handLContainer.position.x -= this.gunRecoilL * 1.125;
    this.handRContainer.position.x -= this.gunRecoilR * 1.125;
    this.bodyContainer.rotation = -Math.atan2(this.RkcQgd.y, this.RkcQgd.x);
  }
  playActionStartEffect(p, b, XT) {
    let XY = null;
    switch (this.TvMV.type) {
      case Xp.Reload:
      case Xp.ReloadAlt:
        {
          const XC = w[this.TvMV.item];
          if (XC) {
            XY = {
              sound: this.TvMV.type == Xp.ReloadAlt ? XC.sound.reloadAlt : XC.sound.reload,
              channel: p ? "activePlayer" : "otherPlayers"
            };
          }
        }
        break;
      case Xp.UseItem:
        {
          const Xl = w[this.TvMV.item];
          if (Xl) {
            XY = {
              sound: Xl.sound.use,
              channel: p ? "activePlayer" : "otherPlayers"
            };
          }
        }
    }
    XT.stopSound(this.actionSoundInstance);
    if (XY && this.playActionStartSfx) {
      this.actionSoundInstance = XT.playSound(XY.sound, {
        channel: XY.channel,
        soundPos: this.NLYJ,
        fallOff: 2,
        layer: this.layer,
        filter: "muffled"
      });
    }
    if (this.TvMV.type == Xp.Reload || this.TvMV.type == Xp.ReloadAlt) {
      const Xd = w[this.TvMV.item];
      if (Xd && Xd.caseTiming == "reload") {
        for (let Xk = 0; Xk < Xd.maxReload; Xk++) {
          const XU = Xk % 2 == 0 ? -1 : 1;
          const XW = Math.PI + Math.PI / 4 * XU;
          const XD = Xd.maxReload <= 2 ? 1 : e.lerp(Math.random(), 0.8, 1.2);
          tr(this.TvMV.item, XW, XD, this.NLYJ, this.RkcQgd, this.renderLayer, this.renderZOrd + 1, b);
        }
      }
    }
  }
  updateActionEffect(p, b, XT, XY) {
    let XC = "";
    const Xl = {};
    switch (this.TvMV.type) {
      case Xp.UseItem:
        {
          const Xd = w[this.TvMV.item];
          const Xk = b.loadout;
          if (Xd.type == "heal") {
            XC = w[Xk.heal].emitter;
          } else if (Xd.type == "boost") {
            XC = w[Xk.boost].emitter;
          }
          if (this.PsSK("aoe_heal")) {
            Xl.scale = 1.5;
            Xl.radius = L.player.medicHealRange / Xl.scale;
            Xl.rateMult = 0.25;
          }
          break;
        }
      case Xp.Revive:
        {
          if (this.QDvlP.RxB) {
            XC = "revive_basic";
          }
          break;
        }
    }
    if (XC && (!this.useItemEmitter || this.useItemEmitter.type != XC)) {
      this.useItemEmitter?.stop();
      Xl.pos = this.NLYJ;
      Xl.layer = this.layer;
      this.useItemEmitter = XT.addEmitter(XC, Xl);
    }
    if (this.useItemEmitter) {
      this.useItemEmitter.pos = v.add(this.NLYJ, v.create(0, 0.1));
      this.useItemEmitter.layer = this.renderLayer;
      this.useItemEmitter.zOrd = this.renderZOrd + 1;
    }
    if (this.useItemEmitter && !XC) {
      this.useItemEmitter.stop();
      this.useItemEmitter = null;
    }
    if (!XY.isSoundPlaying(this.actionSoundInstance)) {
      this.actionSoundInstance = null;
    }
    if (this.actionSoundInstance && !p) {
      XY.updateSound(this.actionSoundInstance, "otherPlayers", this.NLYJ, {
        layer: this.layer,
        fallOff: 2,
        filter: "muffled"
      });
    }
  }
  playItemPickupSound(p, b) {
    const XT = w[p];
    if (XT) {
      b.playSound(XT.sound?.pickup, {
        channel: "ui"
      });
      if (XT.type == "throwable") {
        this.lastThrowablePickupSfxTicker = 0.3;
      }
    }
  }
  selectIdlePose() {
    const p = w[this.QDvlP.PhmiQd];
    let b = "fists";
    if (this.downed) {
      b = "downed";
    } else if ("anim" in p && p.anim.idlePose) {
      b = p.anim.idlePose;
    } else if (p.type == "gun") {
      if (p.pistol) {
        b = p.isDual ? "dualPistol" : "pistol";
      } else if (p.isBullpup) {
        b = "bullpup";
      } else if (p.isLauncher) {
        b = "launcher";
      } else {
        b = p.isDual ? "dualRifle" : "rifle";
      }
    } else if (p.type == "throwable") {
      b = "throwable";
    } else {
      b = "fists";
    }
    if (ui[b]) {
      return b;
    } else {
      return "fists";
    }
  }
  selectAnim(p) {
    const b = function (XT, XY) {
      return {
        type: XT,
        mirror: !!XY && Math.random() < 0.5
      };
    };
    switch (p) {
      case XX.None:
        return b("none", false);
      case XX.Cook:
        return b("cook", false);
      case XX.Throw:
        return b("throw", false);
      case XX.Revive:
        return b("revive", false);
      case XX.CrawlForward:
        return b("crawl_forward", true);
      case XX.CrawlBackward:
        return b("crawl_backward", true);
      case XX.Melee:
        {
          const XT = w[this.QDvlP.PhmiQd];
          if (!XT.anim?.attackAnims) {
            return b("fists", true);
          }
          const XY = XT.anim.attackAnims;
          const XC = Math.floor(Math.random() * XY.length);
          const Xl = XY[XC];
          return b(Xl, Xl == "fists" && XY.length == 1);
        }
      default:
        return b("none", false);
    }
  }
  currentAnim() {
    return this.anim.type;
  }
  playAnim(p, b) {
    this.anim.type = p;
    this.anim.data = this.selectAnim(p);
    this.anim.seq = b;
    this.anim.ticker = 0;
    for (let XT = 0; XT < this.bones.length; XT++) {
      const XY = this.anim.bones[XT];
      XY.weight = 0;
      XY.pose.copy(this.bones[XT]);
    }
  }
  updateAnim(b, XT) {
    if (this.anim.data.type == "none") {
      this.playAnim(XX.None, this.anim.seq);
    }
    if (this.currentAnim() != XX.None) {
      const XY = this.anim.ticker;
      this.anim.ticker += b * 1;
      const XC = rs[this.anim.data.type];
      const Xl = XC.keyframes;
      let Xd = -1;
      let Xk = 0;
      while (this.anim.ticker >= Xl[Xk].time && Xk < Xl.length - 1) {
        Xd++;
        Xk++;
      }
      Xd = e.max(Xd, 0);
      const XU = Xl[Xd].time;
      const XW = Xl[Xk].time;
      const XD = e.min((this.anim.ticker - XU) / (XW - XU), 1);
      const XG = Xl[Xd].bones;
      const XF = Xl[Xk].bones;
      const XH = this.anim.data.mirror;
      for (let p2 = 0; p2 < this.anim.bones.length; p2++) {
        const p3 = this.anim.bones[p2];
        let p4 = p2;
        if (XH) {
          p4 = p2 % 2 == 0 ? p2 + 1 : p2 - 1;
        }
        if (XG[p4] !== undefined && XF[p4] !== undefined) {
          p3.weight = Xd == Xk ? XD : 1;
          p3.pose.copy(I.lerp(XD, XG[p4], XF[p4]));
          if (XH) {
            p3.pose.pos.y *= -1;
            p3.pose.pivot.y *= -1;
            p3.pose.rot *= -1;
          }
        }
      }
      const p0 = Xk == Xl.length - 1 && e.eqAbs(XD, 1);
      let p1 = this.anim.ticker;
      if (p0) {
        p1 += 1;
      }
      for (let p5 = 0; p5 < XC.effects.length; p5++) {
        const p6 = XC.effects[p5];
        if (p6.time >= XY && p6.time < p1) {
          this[p6.fn].apply(this, [XT, p6.args]);
        }
      }
      if (p0) {
        this.playAnim(XX.None, this.anim.seq);
      }
    }
  }
  animPlaySound(p, b) {
    const XT = w[this.QDvlP.PhmiQd].sound[b.sound];
    if (XT) {
      p.audioManager?.playSound(XT, {
        channel: "sfx",
        soundPos: this.NLYJ,
        fallOff: 3,
        layer: this.layer,
        filter: "muffled"
      });
    }
  }
  animSetThrowableState(p, b) {
    this.throwableState = b.state;
  }
  animThrowableParticles(p, b) {
    if (w[this.QDvlP.PhmiQd].useThrowParticles) {
      const XT = v.rotate(v.create(0.75, 0.75), Math.atan2(this.RkcQgd.y, this.RkcQgd.x));
      p.particleBarn?.addParticle("fragPin", this.renderLayer, v.add(this.NLYJ, XT), v.mul(v.rotate(this.RkcQgd, Math.PI * 0.5), 4.5), 1, Math.random() * Math.PI * 2, null, this.renderZOrd + 1);
      const XY = v.rotate(v.create(0.75, -0.75), Math.atan2(this.RkcQgd.y, this.RkcQgd.x));
      p.particleBarn?.addParticle("fragLever", this.renderLayer, v.add(this.NLYJ, XY), v.mul(v.rotate(this.RkcQgd, -Math.PI * 0.25), 3.5), 1, Math.random() * Math.PI * 2, null, this.renderZOrd + 1);
    }
  }
  animMeleeCollision(b, XT) {
    const XY = w[this.QDvlP.PhmiQd];
    if (XY && XY.type == "melee") {
      const XC = this.getMeleeCollider();
      const Xl = XC.rad + v.length(v.sub(this.NLYJ, XC.pos));
      const Xd = [];
      const Xk = b.map?.NmwMZ.KGHPNo();
      for (let XG = 0; XG < Xk.length; XG++) {
        const XF = Xk[XG];
        if (XF.active && !XF.dead && !XF.isSkin && XF.height >= L.player.meleeHeight && t.sameLayer(XF.layer, this.layer & 1)) {
          let XH = T.intersectCircle(XF.collider, XC.pos, XC.rad);
          if (XY.cleave || XY.wallCheck) {
            const p0 = v.normalizeSafe(v.sub(XF.pos, this.NLYJ), v.create(1, 0));
            const p1 = X1.intersectSegment(b.map?.NmwMZ.KGHPNo(), this.NLYJ, p0, Xl, 1, this.layer, false);
            if (p1 && p1.id !== XF.__id) {
              XH = null;
            }
          }
          if (XH) {
            const p2 = a[XF.type];
            const p3 = v.add(XC.pos, v.mul(v.neg(XH.dir), XC.rad - XH.pen));
            const p4 = v.rotate(v.mul(XH.dir, 7.5), (Math.random() - 0.5) * Math.PI / 3);
            Xd.push({
              pen: XH.pen,
              prio: 1,
              pos: p3,
              vel: p4,
              layer: this.renderLayer,
              zOrd: this.renderZOrd,
              particle: p2.hitParticle,
              sound: p2.sound.punch,
              soundFn: "playGroup"
            });
          }
        }
      }
      const XU = b.playerBarn?.getPlayerInfo(this.__id).teamId;
      const XW = b.playerBarn?.playerPool.KGHPNo();
      for (let p5 = 0; p5 < XW.length; p5++) {
        const p6 = XW[p5];
        if (p6.active && p6.__id != this.__id && !p6.QDvlP.GUi && t.sameLayer(p6.layer, this.layer)) {
          const p7 = v.normalizeSafe(v.sub(p6.NLYJ, this.NLYJ), v.create(1, 0));
          const p8 = G.intersectCircleCircle(XC.pos, XC.rad, p6.NLYJ, p6.Guz);
          if (p8 && e.eqAbs(Xl, X1.intersectSegmentDist(b.map?.NmwMZ.KGHPNo(), this.NLYJ, p7, Xl, L.player.meleeHeight, this.layer, false))) {
            const p9 = b.playerBarn?.getPlayerInfo(p6.__id).teamId;
            const pX = v.rotate(p7, (Math.random() - 0.5) * Math.PI / 3);
            const pp = XY.sound[XT.playerHit] || XY.sound.playerHit;
            if (!window.CrazyGames) {
              Xd.push({
                pen: p8.pen,
                prio: p9 == XU ? 2 : 0,
                pos: v.copy(p6.NLYJ),
                vel: pX,
                layer: p6.renderLayer,
                zOrd: p6.renderZOrd,
                particle: "bloodSplat",
                sound: pp,
                soundFn: "playSound"
              });
            }
          }
        }
      }
      Xd.sort((pb, pI) => pb.prio == pI.prio ? pI.pen - pb.pen : pb.prio - pI.prio);
      let XD = Xd.length;
      if (!XY.cleave) {
        XD = e.min(XD, 1);
      }
      for (let pb = 0; pb < XD; pb++) {
        const pI = Xd[pb];
        b.particleBarn?.addParticle(pI.particle, pI.layer, pI.pos, pI.vel, 1, Math.random() * Math.PI * 2, null, pI.zOrd + 1);
        b.audioManager?.[pI.soundFn](pI.sound, {
          channel: "hits",
          soundPos: pI.pos,
          layer: this.layer,
          filter: "muffled"
        });
      }
    }
  }
  initSubmergeSprites() {
    const p = function (XT, XY) {
      XT.texture = x.from(XY);
      XT.anchor.set(0.5, 0.5);
      XT.tint = 16777215;
      XT.alpha = 0;
      XT.visible = false;
    };
    p(this.bodySubmergeSprite, "player-wading-01.img");
    p(this.handLSubmergeSprite, "player-hands-01.img");
    p(this.handRSubmergeSprite, "player-hands-01.img");
    p(this.footLSubmergeSprite, "player-feet-01.img");
    p(this.footRSubmergeSprite, "player-feet-01.img");
    const b = new r();
    b.beginFill(16711680, 0.5);
    b.drawCircle(0, 0, di * 76);
    b.position.set(0, 0);
    this.bodySubmergeSprite.addChild(b);
    this.bodySubmergeSprite.mask = b;
    this.bodySubmergeSprite.scale.set(0.5, 0.5);
  }
  updateSubmersion(b, XT) {
    const XY = this.surface?.type == "water";
    let XC = 0;
    if (XY) {
      const XW = this.surface?.data.river;
      const XD = XW && !XT.isInOcean(this.NLYJ);
      const XG = XD ? XW.distanceToShore(this.NLYJ) : XT.distanceToShore(this.NLYJ);
      const XF = XD ? 12 : 16;
      XC = e.remap(XG, 0, XF, 0.6, 1);
    }
    this.submersion = e.lerp(b * 4, this.submersion, XC);
    const Xl = this.submersion * 0.8;
    const Xd = (0.9 - this.submersion * 0.4) * 2;
    const Xk = 1 / (Xd * di);
    this.bodySubmergeSprite.scale.set(Xd, Xd);
    this.bodySubmergeSprite.mask.scale.set(Xk, Xk);
    this.bodySubmergeSprite.alpha = Xl;
    this.bodySubmergeSprite.visible = Xl > 0.001;
    if (XY) {
      this.bodySubmergeSprite.tint = this.surface?.data.waterColor;
    }
    const XU = [this.handLSubmergeSprite, this.handRSubmergeSprite, this.footLSubmergeSprite, this.footRSubmergeSprite];
    for (let XH = 0; XH < XU.length; XH++) {
      const p0 = XU[XH];
      p0.alpha = this.downed ? Xl : 0;
      p0.visible = p0.alpha > 0.001;
      if (XY) {
        p0.tint = this.surface?.data.waterColor;
      }
    }
  }
  updateFrozenState(p) {
    if (this.QDvlP.AVSa) {
      this.frozenTicker = 0.25;
    } else {
      this.frozenTicker -= p;
      this.updateFrozenImage = true;
    }
    this.bodyEffectSprite.alpha = this.QDvlP.AVSa ? 1 : e.remap(this.frozenTicker, 0, 0.25, 0, 1);
    this.bodyEffectSprite.visible = this.frozenTicker > 0;
  }
  addRecoil(p, b, XT) {
    if (b) {
      this.gunRecoilL += p;
    }
    if (XT) {
      this.gunRecoilR += p;
    }
  }
  isUnderground(p) {
    if (this.layer != 1) {
      return false;
    }
    const b = p.JCfHy.KGHPNo();
    for (let XT = 0; XT < b.length; XT++) {
      const XY = b[XT];
      if (XY.layers.length >= 2) {
        const XC = XY.layers[1];
        if (T.intersectCircle(XC.collision, this.NLYJ, this.Guz)) {
          return XC.underground;
        }
      }
    }
    return true;
  }
}
class ir {
  playerPool = new be(us);
  playerInfo = {};
  playerIds = [];
  teamInfo = {};
  groupInfo = {};
  playerStatus = {};
  anonPlayerNames = false;
  onMapLoad(p) {}
  Gxhh(XT, XY, XC, Xl, Xd, Xk, XU, XW, XD, XG, XF, XH, p0) {
    const p1 = this.playerPool.KGHPNo();
    for (let p6 = 0; p6 < p1.length; p6++) {
      const p7 = p1[p6];
      if (p7.active) {
        p7.Gxhh(XT, this, XU, XD, Xd, XW, Xk, Xl, XG, XY, XF, XH, p0);
      }
    }
    const p2 = this.getPlayerInfo(XY);
    const p3 = this.getPlayerById(XY);
    this.setPlayerStatus(XY, {
      pos: v.copy(p3.QDvlP.NLYJ),
      health: p3.KkvfHn.izX,
      disconnected: false,
      dead: p3.QDvlP.GUi,
      downed: p3.QDvlP.RxB,
      role: p3.QDvlP.Evfg,
      visible: true
    });
    const p4 = X9(XU.factionMode);
    const p5 = Object.keys(this.playerStatus);
    for (let p8 = 0; p8 < p5.length; p8++) {
      const p9 = this.playerStatus[p5[p8]];
      const pX = p9.playerId;
      const pp = this.getPlayerInfo(pX);
      const pb = this.getPlayerById(pX);
      if (pb) {
        p9.posDelta = v.length(v.sub(pb.QDvlP.NLYJ, p9.pos));
        p9.posTarget = v.copy(pb.QDvlP.NLYJ);
        p9.posInterp = e.clamp(p9.posInterp + XT * 0.2, XT / p4, 1);
        p9.dead = pb.QDvlP.GUi;
        p9.downed = pb.QDvlP.RxB;
      } else {
        p9.posInterp = XT / p4;
      }
      const pI = v.sub(p9.posTarget, p9.pos);
      const pj = v.length(pI);
      const pf = pj > 0.0001 ? v.div(pI, pj) : v.create(1, 0);
      const px = e.min(pj, p9.posDelta * p9.posInterp);
      p9.pos = v.add(p9.pos, v.mul(pf, px));
      p9.timeSinceVisible += XT;
      p9.timeSinceUpdate += XT;
      const py = !p9.dead || pp.teamId != p2.teamId && p9.role != "leader" ? 0 : 0.6;
      p9.minimapAlpha = e.smoothstep(p9.timeSinceVisible, 0, 0.1) * e.lerp(e.smoothstep(p9.timeSinceUpdate, 2, 2.5), 1, py);
      if (!XU.factionMode && pp.teamId != p2.teamId) {
        p9.minimapAlpha = 0;
      }
      p9.minimapVisible = p9.minimapAlpha > 0.01;
    }
  }
  Dgc(p, b) {
    const XT = this.playerPool.KGHPNo();
    for (let XY = 0; XY < XT.length; XY++) {
      const XC = XT[XY];
      if (XC.active) {
        XC.render(p, b);
      }
    }
  }
  getPlayerById(p) {
    const b = this.playerPool.KGHPNo();
    for (let XT = 0; XT < b.length; XT++) {
      const XY = b[XT];
      if (XY.active && XY.__id === p) {
        return XY;
      }
    }
    return null;
  }
  setPlayerInfo(p) {
    this.playerInfo[p.playerId] = {
      playerId: p.playerId,
      teamId: p.teamId,
      groupId: p.groupId,
      name: p.name,
      nameTruncated: Q.truncateString(p.name || "", "bold 16px arial", 180),
      anonName: "Player" + (p.playerId - 2750),
      loadout: t.cloneDeep(p.loadout)
    };
    this.playerIds.push(p.playerId);
    this.playerIds.sort((b, XT) => b - XT);
  }
  deletePlayerInfo(p) {
    const b = this.playerIds.indexOf(p);
    if (b !== -1) {
      this.playerIds.splice(b, 1);
    }
    delete this.playerInfo[p];
    delete this.playerStatus[p];
  }
  getPlayerInfo(p) {
    return this.playerInfo[p] || {
      playerId: 0,
      group: 0,
      teamId: 0,
      name: "",
      nameTruncated: "",
      anonName: "",
      loadout: {}
    };
  }
  recomputeTeamData() {
    this.teamInfo = {};
    this.groupInfo = {};
    const p = Object.keys(this.playerInfo);
    for (let XY = 0; XY < p.length; XY++) {
      const XC = this.playerInfo[p[XY]];
      const Xl = XC.playerId;
      const Xd = XC.teamId;
      this.teamInfo[Xd] = this.teamInfo[Xd] || {
        teamId: Xd,
        playerIds: []
      };
      this.teamInfo[Xd].playerIds.push(Xl);
      const Xk = XC.groupId;
      this.groupInfo[Xk] = this.groupInfo[Xk] || {
        groupId: Xk,
        playerIds: []
      };
      this.groupInfo[Xk].playerIds.push(Xl);
    }
    const b = Object.keys(this.teamInfo);
    for (let XU = 0; XU < b.length; XU++) {
      this.teamInfo[b[XU]].playerIds.sort((XW, XD) => XW - XD);
    }
    const XT = Object.keys(this.groupInfo);
    for (let XW = 0; XW < XT.length; XW++) {
      this.groupInfo[XT[XW]].playerIds.sort((XD, XG) => XD - XG);
    }
  }
  getTeamInfo(p) {
    return this.teamInfo[p];
  }
  getGroupInfo(p) {
    return this.groupInfo[p];
  }
  updatePlayerStatus(p, b, XT) {
    const XY = this.getTeamInfo(p);
    const XC = XT ? this.playerIds : XY.playerIds;
    if (XC.length != b.players.length) {
      console.error("PlayerIds and playerStatus.players out of sync. OurLen: " + XC.length + " MsgLen: " + b.players.length + " FactionMode: " + XT);
      return;
    }
    for (let Xl = 0; Xl < XC.length; Xl++) {
      const Xd = XC[Xl];
      const Xk = b.players[Xl];
      if (Xk.hasData) {
        this.setPlayerStatus(Xd, Xk);
      }
    }
  }
  setPlayerStatus(p, b) {
    const XT = this.playerStatus[p] || {
      playerId: p,
      pos: v.copy(b.pos),
      posTarget: v.copy(b.pos),
      posDelta: v.create(0, 0),
      health: 100,
      posInterp: 0,
      visible: false,
      dead: false,
      downed: false,
      disconnected: false,
      role: "",
      timeSinceUpdate: 0,
      timeSinceVisible: 0,
      minimapAlpha: 0,
      minimapVisible: false
    };
    if (!XT.minimapVisible) {
      XT.pos = v.copy(b.pos);
      if (!XT.visible && b.visible) {
        XT.timeSinceVisible = 0;
      }
    }
    XT.visible = b.visible;
    if (XT.visible) {
      XT.timeSinceUpdate = 0;
    }
    XT.posTarget = v.copy(b.pos);
    XT.posDelta = v.length(v.sub(b.pos, XT.pos));
    XT.dead = b.dead;
    XT.downed = b.downed;
    XT.role = b.role;
    if (b.health !== undefined) {
      XT.health = b.health;
    }
    if (b.disconnected !== undefined) {
      XT.disconnected = b.disconnected;
    }
    this.playerStatus[p] = XT;
  }
  getPlayerStatus(p) {
    return this.playerStatus[p];
  }
  updateGroupStatus(p, b) {
    const XT = this.getGroupInfo(p);
    if (XT.playerIds.length != b.players.length) {
      console.error("PlayerIds and groupStatus.players out of sync");
      return;
    }
    for (let XY = 0; XY < XT.playerIds.length; XY++) {
      const XC = XT.playerIds[XY];
      const Xl = b.players[XY];
      const Xd = this.getPlayerStatus(XC);
      if (Xd) {
        Xd.health = Xl.health;
        Xd.disconnected = Xl.disconnected;
      }
    }
  }
  getGroupColor(p) {
    const b = this.getPlayerInfo(p);
    const XT = this.getGroupInfo(b.groupId);
    const XY = XT ? XT.playerIds.indexOf(p) : 0;
    if (XY >= 0 && XY < L.groupColors.length) {
      return L.groupColors[XY];
    } else {
      return 16777215;
    }
  }
  getTeamColor(p) {
    const b = p - 1;
    if (b >= 0 && b < L.teamColors.length) {
      return L.teamColors[b];
    } else {
      return 16777215;
    }
  }
  getPlayerName(p, b, XT) {
    const XY = this.getPlayerInfo(p);
    if (!XY) {
      return "";
    }
    let XC = XY.name;
    if (XT) {
      XC = XY.nameTruncated;
    }
    if (this.anonPlayerNames && this.getPlayerInfo(b).groupId != XY.groupId) {
      XC = XY.anonName;
    }
    return XC;
  }
  addDeathEffect(p, b, XT, XY, XC) {
    const Xl = this.getPlayerById(p);
    const Xd = this.getPlayerById(b);
    if (Xl && Xd?.PsSK("turkey_shoot")) {
      XY.playGroup("cluck", {
        soundPos: Xl.NLYJ,
        layer: Xl.layer,
        muffled: true
      });
      XY.playSound("feather_01", {
        channel: "sfx",
        soundPos: Xl.NLYJ,
        layer: Xl.layer,
        muffled: true
      });
      const Xk = Math.floor(t.random(30, 35));
      for (let XU = 0; XU < Xk; XU++) {
        const XW = v.mul(v.randomUnit(), t.random(5, 15));
        XC.addParticle("turkeyFeathersDeath", Xl.layer, Xl.NLYJ, XW);
      }
    }
  }
}
class ds {
  __id;
  __type;
  active;
  zesp;
  NLYJ;
  Guz;
  fgCE;
  SOkbZe;
  rfNkqZ() {}
  dphRtI() {
    this.zesp.fadeOut();
    this.zesp = null;
  }
  wzDEnz(p, b, XT, XY) {
    this.NLYJ = v.copy(p.pos);
    this.Guz = p.rad;
    if (b) {
      this.fgCE = p.layer;
      this.SOkbZe = p.interior;
    }
    if (XT) {
      this.zesp = XY.smokeBarn.vQFXJ();
      this.zesp?.rfNkqZ(this.NLYJ, this.Guz, this.fgCE, this.SOkbZe);
    }
    this.zesp.posTarget = v.copy(this.NLYJ);
    this.zesp.radTarget = this.Guz;
  }
}
const fi = ["part-smoke-02.img", "part-smoke-03.img"];
class ps {
  active = false;
  zIdx = 0;
  sprite = y.from(fi[Math.floor(Math.random() * fi.length)]);
  pos;
  posTarget;
  rad;
  radTarget;
  rot;
  rotVel;
  fade;
  fadeTicker;
  fadeDuration;
  tint;
  layer;
  interior;
  constructor() {
    this.sprite.anchor = new h(0.5, 0.5);
    this.sprite.visible = false;
  }
  rfNkqZ(p, b, XT, XY) {
    this.pos = v.copy(p);
    this.posTarget = v.copy(this.pos);
    this.rad = b;
    this.radTarget = this.rad;
    this.rot = t.random(0, Math.PI * 2);
    this.rotVel = Math.PI * t.random(0.25, 0.5) * (Math.random() < 0.5 ? -1 : 1);
    this.fade = false;
    this.fadeTicker = 0;
    this.fadeDuration = t.random(0.5, 0.75);
    this.tint = t.rgbToInt(t.hsvToRgb(0, 0, t.random(0.9, 0.95)));
    this.layer = XT;
    this.interior = XY;
  }
  fadeOut() {
    this.fade = true;
  }
}
class rr {
  LbSzdS = new be(ds);
  yNawk = [];
  zIdx = 2147483647;
  vQFXJ() {
    let p = null;
    for (let b = 0; b < this.yNawk.length; b++) {
      if (!this.yNawk[b].active) {
        p = this.yNawk[b];
        break;
      }
    }
    if (!p) {
      p = new ps();
      this.yNawk.push(p);
    }
    p.active = true;
    p.zIdx = this.zIdx--;
    return p;
  }
  Gxhh(b, XT, XY, XC, Xl) {
    for (let Xd = 0; Xd < this.yNawk.length; Xd++) {
      const Xk = this.yNawk[Xd];
      if (Xk.active) {
        Xk.rad = e.lerp(b * 3, Xk.rad, Xk.radTarget);
        Xk.pos = e.v2lerp(b * 3, Xk.pos, Xk.posTarget);
        Xk.rotVel *= 1 / (1 + b * 0.1);
        Xk.rot += Xk.rotVel * b;
        Xk.fadeTicker += Xk.fade ? b : 0;
        Xk.active = Xk.fadeTicker < Xk.fadeDuration;
        const XU = e.clamp(1 - Xk.fadeTicker / Xk.fadeDuration, 0, 1) * 0.9;
        let XW = Xk.layer;
        if ((t.sameLayer(Xk.layer, XY.layer) || XY.layer & 2) && (Xk.layer == 1 || !(XY.layer & 2) || !XC.insideStructureMask(T.createCircle(Xk.pos, 1)))) {
          XW |= 2;
        }
        const XD = Xk.interior ? 500 : 1000;
        Xl.addPIXIObj(Xk.sprite, XW, XD, Xk.zIdx);
        const XG = XT.MobS(Xk.pos);
        const XF = XT.uRFX(Xk.rad * 2 / XT.xQaJqu);
        Xk.sprite.position.set(XG.x, XG.y);
        Xk.sprite.scale.set(XF, XF);
        Xk.sprite.rotation = Xk.rot;
        Xk.sprite.tint = Xk.tint;
        Xk.sprite.alpha = XU;
        Xk.sprite.visible = Xk.active;
      }
    }
  }
}
function wi(p, b, XT) {
  const XY = b - p;
  const XC = XY * XT;
  if (Math.abs(XC) < 0.01) {
    return XY;
  } else {
    return XC;
  }
}
function fs() {
  const p = new r();
  p.position.set(0, 0);
  p.scale.set(1, 1);
  p.__zOrd = 0;
  p.__zIdx = 0;
  return p;
}
function gt(p, b, XT, XY, XC) {
  p.moveTo(b, XT);
  p.lineTo(b, XT + XC);
  p.lineTo(b + XY, XT + XC);
  p.lineTo(b + XY, XT);
  p.lineTo(b, XT);
  p.closePath();
}
class ar {
  constructor(p, b) {
    this.game = p;
    this.canvasMode = b;
    for (let XT = 0; XT < 4; XT++) {
      this.layers.push(new ws("layer_" + XT));
    }
    this.ground.alpha = 0;
  }
  zIdx = 0;
  layer = 0;
  layerAlpha = 0;
  groundAlpha = 0;
  underground = false;
  layers = [];
  ground = new r();
  layerMask = fs();
  debugLayerMask = null;
  layerMaskDirty = true;
  layerMaskActive = false;
  dphRtI() {
    this.layerMask.parent?.removeChild(this.layerMask);
    this.layerMask.destroy(true);
  }
  addPIXIObj(p, b, XT, XY) {
    if (!p.transform) {
      const Xl = new Error();
      const Xd = JSON.stringify({
        type: "addChild",
        stack: Xl.stack,
        browser: navigator.userAgent,
        playing: this.game.ONPnmU,
        gameOver: this.game.LSU,
        spectating: this.game.vQHD,
        time: this.game.TmD,
        mode: this.game.teamMode,
        layer: b,
        zOrd: XT,
        zIdx: XY
      });
      console.error(Xd);
    }
    if (p.__layerIdx === undefined) {
      p.__layerIdx = -1;
      p.__zOrd = -1;
      p.__zIdx = -1;
    }
    let XC = b;
    if (b & 2) {
      XC = XT >= 100 ? 3 : 2;
    }
    if (p.parent != this.layers[XC] || p.__zOrd != XT || XY !== undefined && p.__zIdx != XY) {
      p.__layerIdx = XC;
      p.__zOrd = XT;
      p.__zIdx = XY !== undefined ? XY : this.zIdx++;
      this.layers[XC].addSortedChild(p);
    }
  }
  setActiveLayer(p) {
    this.layer = p;
  }
  setUnderground(p) {
    this.underground = p;
  }
  resize(p, b) {
    const XT = p.mapLoaded ? p.getMapDef().biome.colors.underground : 1772803;
    this.ground.clear();
    this.ground.beginFill(XT);
    this.ground.drawRect(0, 0, b.pmhI, b.lZjK);
    this.ground.endFill();
    this.layerMaskDirty = true;
  }
  redrawLayerMask(b, XT) {
    const XY = this.layerMask;
    if (this.canvasMode) {
      XY.clear();
      if (this.layerMaskActive) {
        XY.beginFill(16777215, 1);
        XY.drawRect(0, 0, b.pmhI, b.lZjK);
        const XC = XT.JCfHy.KGHPNo();
        for (let Xl = 0; Xl < XC.length; Xl++) {
          const Xd = XC[Xl];
          if (Xd.active) {
            for (let Xk = 0; Xk < Xd.mask.length; Xk++) {
              const XU = Xd.mask[Xk];
              const XW = v.mul(v.sub(XU.max, XU.min), 0.5);
              const XD = v.add(XU.min, XW);
              const XG = b.MobS(v.sub(XD, XW));
              const XF = b.MobS(v.add(XD, XW));
              XY.drawRect(XG.x, XG.y, XF.x - XG.x, XF.y - XG.y);
            }
          }
        }
        XY.endFill();
      }
    } else {
      if (this.layerMaskDirty) {
        this.layerMaskDirty = false;
        XY.clear();
        XY.beginFill(16777215, 1);
        gt(XY, 0, 0, 1024, 1024);
        const p1 = XT.JCfHy.KGHPNo();
        for (let p2 = 0; p2 < p1.length; p2++) {
          const p3 = p1[p2];
          if (p3.active) {
            for (let p4 = 0; p4 < p3.mask.length; p4++) {
              const p5 = p3.mask[p4];
              const p6 = v.mul(v.sub(p5.max, p5.min), 0.5);
              const p7 = v.add(p5.min, p6);
              const p8 = p7.x - p6.x;
              const p9 = p7.y - p6.y;
              const pX = p6.x * 2;
              const pp = p6.y * 2;
              XY.beginHole();
              gt(XY, p8, p9, pX, pp);
              XY.endHole();
            }
          }
        }
        XY.endFill();
      }
      const XH = b.MobS(v.create(0, 0));
      const p0 = b.KlhiR(1);
      XY.position.set(XH.x, XH.y);
      XY.scale.set(p0, -p0);
    }
  }
  redrawDebugLayerMask(b, XT) {
    const XY = this.debugLayerMask;
    XY.clear();
    XY.beginFill(16711935, 1);
    const XC = XT.JCfHy.KGHPNo();
    for (let Xk = 0; Xk < XC.length; Xk++) {
      const XU = XC[Xk];
      if (XU.active) {
        for (let XW = 0; XW < XU.mask.length; XW++) {
          const XD = XU.mask[XW];
          const XG = v.mul(v.sub(XD.max, XD.min), 0.5);
          const XF = v.add(XD.min, XG);
          const XH = XF.x - XG.x;
          const p0 = XF.y - XG.y;
          const p1 = XG.x * 2;
          const p2 = XG.y * 2;
          gt(XY, XH, p0, p1, p2);
        }
      }
    }
    XY.endFill();
    const Xl = b.MobS(v.create(0, 0));
    b.MobS(v.create(1, 0));
    const Xd = b.KlhiR(1);
    XY.position.set(Xl.x, Xl.y);
    XY.scale.set(Xd, -Xd);
  }
  Gxhh(p, b, XT, XY) {
    const XC = this.layer > 0 ? 1 : 0;
    this.layerAlpha += wi(this.layerAlpha, XC, p * 12);
    const Xl = this.layer == 1 && this.underground ? 1 : 0;
    this.groundAlpha += wi(this.groundAlpha, Xl, p * 12);
    this.layers[0].alpha = 1;
    this.layers[1].alpha = this.layerAlpha;
    this.layers[2].alpha = 1;
    this.layers[3].alpha = 1;
    this.ground.alpha = this.groundAlpha;
    this.layers[0].visible = this.groundAlpha < 1;
    this.layers[1].visible = this.layerAlpha > 0;
    this.ground.visible = this.groundAlpha > 0;
    this.redrawLayerMask(b, XT);
    const Xd = this.layer == 0;
    if (Xd && !this.layerMaskActive) {
      this.layers[2].mask = this.layerMask;
      this.layers[2].addChild(this.layerMask);
      this.layerMaskActive = true;
    } else if (!Xd && this.layerMaskActive) {
      this.layers[2].mask = null;
      this.layers[2].removeChild(this.layerMask);
      this.layerMaskActive = false;
    }
    for (let Xk = 0; Xk < this.layers.length; Xk++) {
      this.layers[Xk].checkSort();
    }
  }
}
class ws extends f {
  constructor(p = "") {
    super();
    this.debugName = p;
  }
  dirty = true;
  addSortedChild(p) {
    this.addChild(p);
    this.dirty = true;
  }
  checkSort() {
    if (this.dirty) {
      this.children.sort((p, b) => p.__zOrd == b.__zOrd ? p.__zIdx - b.__zIdx : p.__zOrd - b.__zOrd);
      this.dirty = false;
      return true;
    } else {
      return false;
    }
  }
}
const Xe = 2;
const gi = 0.00001;
class gs {
  constructor(p, b) {
    this.input = p;
    this.config = b;
    const XT = function (Xk, XU) {
      const XW = y.from("pad.img");
      XW.anchor.set(0.5, 0.5);
      XW.scale.set(1, 1);
      XW.alpha = 0.2;
      XW.visible = false;
      XW.tint = XU;
      Xk.addChild(XW);
      return XW;
    };
    const XY = () => ({
      touched: false,
      centerPos: v.create(0, 0),
      touchPos: v.create(0, 0),
      centerSprite: XT(this.container, 0),
      touchSprite: XT(this.container, 16777215)
    });
    this.touchPads = [XY(), XY()];
    const XC = function (Xk) {
      if (["locked", "anywhere"].includes(Xk)) {
        return Xk;
      } else {
        return "anywhere";
      }
    };
    const Xl = XC(b.get("touchMoveStyle"));
    const Xd = XC(b.get("touchAimStyle"));
    this.setMoveStyle(Xl);
    this.setAimStyle(Xd);
    this.setTouchAimLine(!!b.get("touchAimLine"));
    this.init();
  }
  container = new f();
  lineSprites = new Ss();
  padScaleBase = 1;
  padScaleDown = 0.6;
  padScalePos = 0.25;
  moveDetected = false;
  shotDetected = false;
  shotDetectedOld = false;
  touchingAim = false;
  display = true;
  moveStyle = "locked";
  aimStyle = "locked";
  touchAimLine = true;
  touchPads;
  playerMovement = {
    left: false,
    right: false,
    up: false,
    down: false,
    moveLen: 0
  };
  analogMovement = {
    toMoveDir: v.create(1, 0),
    toMoveLen: 0
  };
  aimMovement = {
    toAimDir: v.create(1, 0),
    toAimLen: 0
  };
  leftLockedPadCenter = v.create(0, 0);
  rightLockedPadCenter = v.create(0, 0);
  padPosBase = 48;
  padPosRange = 0;
  movePadDetectMult = 1;
  shotPadDetectMult = 1.075;
  turnDirCooldown = 0.5;
  turnDirTicker = 0;
  mobileOffsetLandscape = 25;
  mobileOffsetPortrait = 100;
  lockedPadOffsetLandscape = v.create(126, 100);
  lockedPadOffsetPortrait = v.create(96, 160);
  lockedPadOffsetYLandscapeSafari = 120;
  lockedPadOffsetYPortraitSafari = 240;
  getTouchMovement(p) {
    return this.getMovement(p);
  }
  getAimMovement(p, b) {
    const XT = p.KkvfHn.hCoMzm == L.WeaponSlot.Throwable;
    return this.getAim(XT, b);
  }
  setAimDir(p) {
    this.aimMovement.toAimDir = v.copy(p);
  }
  getMovement(b) {
    let XT = null;
    let XY = null;
    let XC = false;
    let Xl;
    this.moveDetected = false;
    for (let Xk = 0; Xk < this.input.touches.length; Xk++) {
      const XU = this.input.touches[Xk];
      if (!XU.isDead && this.isLeftSideTouch(XU.posDown.x, b)) {
        const XW = this.moveStyle == "anywhere" ? XU.posDown : this.leftLockedPadCenter;
        const XD = v.sub(XU.pos, XW);
        const XG = v.length(XD);
        if (XG > Xe) {
          const XF = (XG - Xe) / (this.padPosRange / this.movePadDetectMult - Xe);
          Xl = XF > gi ? v.div(XD, XF) : this.analogMovement.toMoveDir;
          this.analogMovement = {
            toMoveDir: v.create(Xl.x, Xl.y * -1),
            toMoveLen: XF
          };
          this.moveDetected = true;
        }
        XY = this.getConstrainedPos(XW, XU.pos, XG);
        XT = XW;
        XC = true;
        break;
      }
    }
    const Xd = this.touchPads[0];
    Xd.touched = XC;
    if (XC && this.moveStyle == "anywhere") {
      Xd.centerPos = v.copy(XT);
    } else {
      Xd.centerPos = v.copy(this.leftLockedPadCenter);
    }
    Xd.touchPos.x = XC ? XY.x : this.leftLockedPadCenter.x;
    Xd.touchPos.y = XC ? XY.y : this.leftLockedPadCenter.y;
    return this.analogMovement;
  }
  getAim(b, XT) {
    let XY = false;
    let XC = null;
    let Xl = null;
    let Xd;
    for (let XU = 0; XU < this.input.touches.length; XU++) {
      const XW = this.input.touches[XU];
      if (!XW.isDead && !this.isLeftSideTouch(XW.posDown.x, XT)) {
        const XD = this.aimStyle == "anywhere" ? XW.posDown : this.rightLockedPadCenter;
        const XG = v.sub(XW.pos, XD);
        const XF = v.length(XG);
        if (XF > Xe) {
          const XH = v.sub(XW.pos, XD);
          const p0 = v.length(XH);
          Xd = p0 > gi ? v.div(XH, p0) : this.aimMovement.toAimDir;
          this.aimMovement = {
            toAimDir: v.create(Xd.x, Xd.y * -1),
            toAimLen: p0
          };
        } else {
          this.aimMovement.toAimLen = 0;
        }
        Xl = this.getConstrainedPos(XD, XW.pos, XF);
        XC = XD;
        XY = true;
        break;
      }
    }
    this.shotDetectedOld = this.shotDetected;
    this.shotDetected = this.aimMovement.toAimLen > this.padPosRange / this.shotPadDetectMult && XY;
    this.touchingAim = XY;
    if (b && this.shotDetectedOld && XY) {
      this.shotDetected = true;
    }
    const Xk = this.touchPads[1];
    Xk.touched = XY;
    if (XY && this.aimStyle == "anywhere") {
      Xk.centerPos = v.copy(XC);
    } else {
      Xk.centerPos = v.copy(this.rightLockedPadCenter);
    }
    Xk.touchPos.x = XY ? Xl.x : this.rightLockedPadCenter.x;
    Xk.touchPos.y = XY ? Xl.y : this.rightLockedPadCenter.y;
    return {
      aimMovement: this.aimMovement,
      touched: Xk.touched
    };
  }
  Gxhh(p, b, XT, XY, XC) {
    for (let Xl = 0; Xl < this.touchPads.length; Xl++) {
      const Xd = this.touchPads[Xl];
      Xd.centerSprite.position.x = Xd.centerPos.x;
      Xd.centerSprite.position.y = Xd.centerPos.y;
      Xd.centerSprite.scale.x = this.padScaleBase * this.padScaleDown;
      Xd.centerSprite.scale.y = this.padScaleBase * this.padScaleDown;
      Xd.centerSprite.visible = k.touch && this.display;
      Xd.touchSprite.position.x = Xd.touchPos.x;
      Xd.touchSprite.position.y = Xd.touchPos.y;
      Xd.touchSprite.scale.x = this.padScaleBase * this.padScalePos;
      Xd.touchSprite.scale.y = this.padScaleBase * this.padScalePos;
      Xd.touchSprite.visible = k.touch && this.display;
    }
    this.lineSprites.update(this, b, XT, XY, XC);
  }
  isLeftSideTouch(p, b) {
    return p < b.pmhI * 0.5;
  }
  getConstrainedPos(p, b, XT) {
    if (XT <= this.padPosRange) {
      return b;
    }
    const XY = b.x - p.x;
    const XC = b.y - p.y;
    const Xl = Math.atan2(XC, XY);
    return v.create(Math.cos(Xl) * this.padPosRange + p.x, Math.sin(Xl) * this.padPosRange + p.y);
  }
  getConstrainedPosDown(p, b, XT) {
    const XY = v.normalizeSafe(b);
    return v.add(p, v.mul(XY, Math.max(0, XT - this.padPosRange)));
  }
  toggleMoveStyle() {
    this.setMoveStyle(this.moveStyle == "locked" ? "anywhere" : "locked");
  }
  setMoveStyle(p) {
    this.moveStyle = p;
    this.config.set("touchMoveStyle", p);
    const b = document.getElementById("btn-game-move-style");
    if (b) {
      if (this.moveStyle == "locked") {
        b.classList.remove("unlocked-on-icon");
        b.classList.add("locked-on-icon");
      } else {
        b.classList.remove("locked-on-icon");
        b.classList.add("unlocked-on-icon");
      }
    }
  }
  toggleAimStyle() {
    this.setAimStyle(this.aimStyle == "locked" ? "anywhere" : "locked");
  }
  setAimStyle(p) {
    this.aimStyle = p;
    this.config.set("touchAimStyle", p);
    const b = document.getElementById("btn-game-aim-style");
    if (this.aimStyle == "locked") {
      b.classList.remove("unlocked-on-icon");
      b.classList.add("locked-on-icon");
    } else {
      b.classList.remove("locked-on-icon");
      b.classList.add("unlocked-on-icon");
    }
  }
  toggleAimLine() {
    this.setTouchAimLine(!this.touchAimLine);
  }
  setTouchAimLine(p) {
    this.touchAimLine = p;
    this.config.set("touchAimLine", this.touchAimLine);
    const b = document.getElementById("btn-game-aim-line");
    if (this.touchAimLine) {
      b.classList.remove("aim-line-off-icon");
      b.classList.add("aim-line-on-icon");
    } else {
      b.classList.remove("aim-line-on-icon");
      b.classList.add("aim-line-off-icon");
    }
  }
  init() {
    this.resize();
  }
  resize() {
    const b = k.isLandscape;
    const XT = this.lockedPadOffsetLandscape;
    const XY = this.lockedPadOffsetPortrait;
    if (k.tablet) {
      XT.x = XT.x * 1;
      XY.x = XY.x * 1.25;
    }
    const XC = v.create(XT.x, XT.y);
    const Xl = v.create(XY.x, XY.y);
    const Xd = v.create(k.screenWidth - XT.x, XT.y);
    const Xk = v.create(k.screenWidth - XY.x, XY.y);
    if (k.os == "ios") {
      if (k.model == "iphonex") {
        XC.x = XC.x + 56;
        Xd.x = Xd.x - 56;
        XC.y = XC.y * 0.9;
        Xd.y = Xd.y * 0.9;
      } else {
        let XD = this.lockedPadOffsetYLandscapeSafari;
        let XG = this.lockedPadOffsetYPortraitSafari;
        if (k.tablet) {
          XD *= 1;
          XG *= 1;
        }
        XC.y = XD;
        Xl.y = XG;
        Xd.y = XD;
        Xk.y = XG;
      }
    }
    this.padScaleBase = b ? 1 : 0.8;
    this.padPosRange = this.padPosBase * this.padScaleBase;
    const XU = b ? XC : Xl;
    this.leftLockedPadCenter = v.create(XU.x, k.screenHeight - XU.y);
    const XW = b ? Xd : Xk;
    this.rightLockedPadCenter = v.create(XW.x, k.screenHeight - XW.y);
    this.setMobileStyling(b);
  }
  setMobileStyling(p) {
    if (k.touch) {
      j("#btn-touch-styles").find(".btn-game-container").css("display", "inline-block");
      j("#ui-emote-button").css("display", "block");
    }
    if (k.uiLayout == k.UiLayout.Sm) {
      j("#ui-map-wrapper").addClass("ui-map-wrapper-mobile").removeClass("ui-map-wrapper-desktop");
      j("#ui-settings-container-mobile").css("display", "block");
      j("#ui-settings-container-desktop").css("display", "none");
      j("#ui-right-center").addClass("ui-right-center-mobile").removeClass("ui-right-center-desktop");
      j("#ui-leaderboard-wrapper").css("display", "none");
      j("#big-map-close").css("display", "block");
      j("#ui-game-menu").removeClass("ui-game-menu-desktop");
      j("#btn-game-tabs").css("display", "none");
      j("#ui-game-tab-settings").removeClass("ui-game-tab-settings-desktop");
      j(".ui-ability-key").css("display", "none");
    } else {
      j("#ui-map-wrapper").removeClass("ui-map-wrapper-mobile").addClass("ui-map-wrapper-desktop");
      j("#ui-settings-container-mobile").css("display", "none");
      j("#ui-settings-container-desktop").css("display", "block");
      j("#ui-right-center").removeClass("ui-right-center-mobile").addClass("ui-right-center-desktop");
      j("#ui-leaderboard-wrapper").css("display", "block");
      j("#big-map-close").css("display", "none");
      j("#ui-game-menu").addClass("ui-game-menu-desktop");
      j("#btn-game-tabs").css("display", "flex");
      j("#ui-game-tab-settings").addClass("ui-game-tab-settings-desktop");
      j(".ui-ability-key").css("display", "block");
    }
    if (k.tablet) {
      if (p) {
        if (k.os == "ios") {
          j("#ui-bottom-right").addClass("ui-bottom-right-tablet-ipad-browser");
          j("#ui-right-center").addClass("ui-right-center-tablet-ipad-browser");
        } else {
          j("#ui-bottom-right").addClass("ui-bottom-right-tablet");
          j("#ui-right-center").addClass("ui-right-center-tablet");
        }
        j("#ui-bottom-center-left").addClass("ui-bottom-center-left-tablet");
        j("#ui-bottom-center-right").addClass("ui-bottom-center-right-tablet");
        j("#ui-top-left").addClass("ui-top-left-tablet");
        j("#ui-spectate-options-wrapper").addClass("ui-spectate-options-wrapper-tablet");
        j("#ui-killfeed-wrapper").addClass("ui-killfeed-wrapper-tablet");
        j("#ui-kill-leader-wrapper").css("right", 144);
      } else {
        j("#ui-bottom-left").removeClass("ui-bottom-left-tablet");
        j("#ui-bottom-right").removeClass("ui-bottom-right-tablet");
        j("#ui-right-center").removeClass("ui-right-center-tablet");
        j("#ui-bottom-center-right").removeClass("ui-bottom-center-right-tablet");
        j("#ui-top-left").removeClass("ui-top-left-tablet");
        j("#ui-spectate-options-wrapper").removeClass("ui-spectate-options-wrapper-tablet");
        j("#ui-killfeed-wrapper-wrapper").removeClass("ui-killfeed-wrapper-tablet");
      }
    }
    if (k.os == "ios") {
      if (k.model == "iphonex") {
        const b = k.isLandscape ? "99%" : "90%";
        const XT = k.isLandscape ? 0 : 32;
        j("#ui-game").css({
          height: b,
          top: XT
        });
        j("#ui-stats-contents").css({
          transform: "translate(-50%) scale(0.95)",
          "transform-origin": "top"
        });
        if (p) {
          j("#ui-game").css({
            left: "50%",
            transform: "translateX(-50%)",
            width: "93%"
          });
        } else {
          j("#ui-game").css({
            left: "",
            transform: "",
            width: ""
          });
        }
      } else if (window.navigator.standalone && !k.tablet) {
        j("#ui-game").css({
          height: "95%"
        });
      } else {
        let XY = k.isLandscape ? "86%" : "82%";
        if (k.tablet) {
          XY = "100%";
        }
        j("#ui-game").css({
          height: XY
        });
        j("#ui-right-center, #ui-top-center-scopes-wrapper, #ui-top-center, #ui-menu-display").css({
          "margin-top": 6
        });
      }
    }
    if (k.tablet || p) {
      j("#ui-loot-50AE").insertBefore("#ui-loot-556mm");
      j("#ui-loot-9mm").insertBefore("#ui-loot-556mm");
      j("#ui-loot-308sub").insertBefore("#ui-loot-556mm");
      j("#ui-loot-12gauge").insertBefore("#ui-loot-556mm");
      j("#ui-loot-flare").insertBefore("#ui-loot-556mm");
      j("#ui-loot-762mm").insertBefore("#ui-loot-556mm");
      j("#ui-loot-45acp").insertBefore("#ui-loot-556mm");
    } else {
      j("#ui-loot-9mm").insertBefore("#ui-loot-45acp");
      j("#ui-loot-12gauge").insertBefore("#ui-loot-45acp");
      j("#ui-loot-762mm").insertBefore("#ui-loot-45acp");
      j("#ui-loot-556mm").insertBefore("#ui-loot-45acp");
      j("#ui-loot-50AE").insertBefore("#ui-loot-45acp");
      j("#ui-loot-308sub").insertBefore("#ui-loot-45acp");
      j("#ui-loot-flare").insertBefore("#ui-loot-45acp");
    }
  }
  hideAll() {
    this.display = false;
  }
}
class Ss {
  container = new f();
  dots = [];
  constructor() {
    this.container.visible = false;
  }
  createDot() {
    const p = new y();
    p.texture = x.from("dot.img");
    p.anchor.set(0.5, 0.5);
    p.position.set(0, 0);
    p.scale.set(1, 1);
    p.tint = 16777215;
    p.alpha = 1;
    p.visible = false;
    return p;
  }
  update(XT, XY, XC, Xl, Xd) {
    const Xk = k.touch && XT.touchingAim && XT.touchAimLine;
    if (Xk) {
      const XU = XY.QDvlP.PhmiQd;
      const XW = w[XU];
      let XD = 30;
      if (XW.type == "gun") {
        const p9 = X7[XW.bulletType].distance;
        XD = XW.barrelLength + p9;
      }
      const XG = XY.ulnm();
      const XF = Math.sqrt(XG * 1.414 * XG);
      XD = e.min(XD, XF);
      const XH = v.copy(XY.NLYJ);
      let p0 = v.add(XH, v.mul(XY.RkcQgd, XD));
      const p1 = XC.NmwMZ.KGHPNo();
      for (let pX = 0; pX < p1.length; pX++) {
        const pp = p1[pX];
        if (pp.active && !pp.dead && pp.height >= L.bullet.height && pp.collidable && !pp.isWindow && t.sameLayer(XY.layer, pp.layer) && (XW.type != "throwable" || pp.height > L.projectile.maxHeight)) {
          const pb = T.intersectSegment(pp.collider, XH, p0);
          if (pb) {
            const pI = v.length(v.sub(pb.point, XH));
            if (pI < XD) {
              XD = pI;
              p0 = pb.point;
            }
          }
        }
      }
      const p2 = 3.5;
      const p3 = 1.5;
      const p4 = v.length(v.sub(p0, XH));
      const p5 = Math.max(Math.ceil((p4 - p2) / p3), 0);
      while (this.dots.length < p5) {
        const pj = this.createDot();
        this.container.addChild(pj);
        this.dots.push(pj);
      }
      for (let pf = 0; pf < this.dots.length; pf++) {
        const px = this.dots[pf];
        const py = p2 + pf * p3;
        const pg = v.add(XY.NLYJ, v.mul(XY.RkcQgd, py));
        const pQ = 1 / 32 * 0.375;
        px.position.set(pg.x, pg.y);
        px.scale.set(pQ, pQ);
        px.visible = pf < p5;
      }
      const p6 = Xl.MobS(v.create(0, 0));
      const p7 = Xl.MobS(v.create(1, 1));
      const p8 = v.sub(p7, p6);
      this.container.position.set(p6.x, p6.y);
      this.container.scale.set(p8.x, p8.y);
      this.container.alpha = 0.3;
      Xd.addPIXIObj(this.container, XY.layer, 19, 0);
    }
    this.container.visible = Xk;
  }
}
class ys {
  constructor(p) {
    this.mapSpriteBarn = p;
  }
  mapIndicators = [];
  idToMapIdicator = {};
  updateIndicatorData(p) {
    for (let b = 0; b < p.length; b++) {
      const XT = p[b];
      if (XT.dead) {
        this.removeIndicator(XT.id);
      } else {
        this.updateIndicator(XT);
      }
    }
  }
  addIndicator(p) {
    const b = {
      id: p.id,
      type: p.type,
      pos: v.copy(p.pos),
      equipped: p.equipped,
      mapSprite: this.mapSpriteBarn.addSprite(),
      pulseSprite: this.mapSpriteBarn.addSprite(),
      pulseScale: 0.5,
      pulseScaleMin: 0.5,
      pulseScaleMax: 1,
      pulseTicker: 0,
      pulseDir: 1,
      pulseSpeed: 0.3
    };
    this.mapIndicators.push(b);
    this.idToMapIdicator[p.id] = b;
    return b;
  }
  removeIndicator(p) {
    for (let b = 0; b < this.mapIndicators.length; b++) {
      const XT = this.mapIndicators[b];
      if (XT.id == p) {
        XT.mapSprite.free();
        XT.pulseSprite.free();
        this.mapIndicators.splice(b, 1);
        delete this.idToMapIdicator[p];
        break;
      }
    }
  }
  updateIndicator(p) {
    let b = this.idToMapIdicator[p.id];
    b ||= this.addIndicator(p);
    b.pos = v.copy(p.pos);
    b.equipped = p.equipped;
    const XT = w[b.type];
    const XY = (k.uiLayout == k.UiLayout.Sm ? 0.15 : 0.2) * 1.25;
    const XC = b.equipped ? 655350 : 1;
    const Xl = b.mapSprite;
    Xl.pos = v.copy(b.pos);
    Xl.scale = XY;
    Xl.alpha = 1;
    Xl.zOrder = XC;
    Xl.visible = true;
    Xl.sprite.texture = x.from(XT.mapIndicator?.sprite);
    Xl.sprite.tint = XT.mapIndicator?.tint ?? 16777215;
    if (XT.mapIndicator?.pulse) {
      const Xd = b.pulseSprite;
      Xd.pos = v.copy(b.pos);
      Xd.scale = 1;
      Xd.zOrder = XC - 1;
      Xd.visible = true;
      Xd.sprite.texture = x.from("part-pulse-01.img");
      Xd.sprite.tint = XT.mapIndicator.pulseTint;
    }
  }
  updateIndicatorPulses(p) {
    for (let b = 0; b < this.mapIndicators.length; b++) {
      const XT = this.mapIndicators[b];
      XT.pulseTicker = e.clamp(XT.pulseTicker + p * XT.pulseDir * XT.pulseSpeed, XT.pulseScaleMin, 1);
      XT.pulseScale = XT.pulseTicker * XT.pulseScaleMax;
      if (XT.pulseScale >= XT.pulseScaleMax || XT.pulseTicker <= XT.pulseScaleMin) {
        XT.pulseDir *= -1;
      }
      XT.pulseSprite.scale = XT.pulseScale;
      XT.pulseSprite.visible = XT.equipped;
    }
  }
}
class xs extends y {
  __zOrder = -1;
  constructor() {
    super();
  }
}
class zs {
  active = false;
  retained = true;
  sprite = new xs();
  pos = v.create(0, 0);
  scale = 1;
  alpha = 1;
  visible = true;
  pulse = false;
  lifetime = 0;
  ticker = 0;
  zOrder = 0;
  constructor() {
    this.sprite.anchor.set(0.5, 0.5);
    this.sprite.scale.set(1, 1);
    this.sprite.visible = false;
  }
  init() {
    this.active = true;
    this.retained = true;
    this.pos = v.create(0, 0);
    this.scale = 1;
    this.alpha = 1;
    this.pulse = false;
    this.visible = true;
    this.lifetime = Number.MAX_VALUE;
    this.ticker = 0;
    this.zOrder = 0;
  }
  free() {
    this.active = false;
    this.sprite.visible = false;
  }
  release() {
    this.retained = false;
  }
}
class bs {
  container = new f();
  mapSprites = [];
  free() {
    for (let p = 0; p < this.mapSprites.length; p++) {
      const b = this.mapSprites[p].sprite;
      b.parent?.removeChild(b);
      b.destroy({
        children: true
      });
    }
  }
  addSprite() {
    let p = null;
    for (let b = 0; b < this.mapSprites.length; b++) {
      if (!this.mapSprites[b].active) {
        p = this.mapSprites[b];
        break;
      }
    }
    if (!p) {
      p = new zs();
      this.mapSprites.push(p);
      this.container.addChild(p.sprite);
    }
    p.init();
    return p;
  }
  update(p, b, XT) {
    let XY = false;
    for (let XC = 0; XC < this.mapSprites.length; XC++) {
      const Xl = this.mapSprites[XC];
      if (Xl.active) {
        if (Xl.zOrder != Xl.sprite.__zOrder) {
          Xl.sprite.__zOrder = Xl.zOrder;
          XY = true;
        }
        Xl.ticker += p;
        if (Xl.pulse) {
          Xl.scale += p / 2.5;
        }
        const Xd = b.getMapPosFromWorldPos(Xl.pos, XT);
        const Xk = Xl.scale;
        const XU = e.smoothstep(Xl.ticker, 0, 0.1) * (1 - e.smoothstep(Xl.ticker, Xl.lifetime - 0.5, Xl.lifetime));
        Xl.sprite.position.set(Xd.x, Xd.y);
        Xl.sprite.scale.set(Xk, Xk);
        Xl.sprite.alpha = Xl.alpha * XU;
        Xl.sprite.visible = Xl.visible && Xl.sprite.alpha > 0.0001;
        if (Xl.ticker >= Xl.lifetime && !Xl.retained) {
          Xl.free();
        }
      }
    }
    if (XY) {
      this.container.children.sort((XW, XD) => XW.__zOrder - XD.__zOrder);
    }
  }
}
const et = 24;
class ks {
  container = new f();
  timerBackground = y.from("timer-background.img");
  counterText = new q();
  gfx = new r();
  labelText = new q();
  screenScaleFactor = 1;
  mobileOffset = 0;
  active = false;
  label = "";
  elapsed = 0;
  duration = 0;
  constructor() {
    this.container.visible = false;
    this.timerBackground.anchor.set(0.5, 0.5);
    this.timerBackground.scale.set(1, 1);
    this.container.addChild(this.timerBackground);
    this.container.addChild(this.gfx);
    this.counterText.anchor.set(0.5, 0.5);
    this.counterText.style = {
      fontFamily: "Roboto Condensed, Arial, sans-serif",
      fontWeight: "bold",
      fontSize: et,
      align: "center",
      fill: 16777215,
      stroke: 0,
      strokeThickness: 3
    };
    this.container.addChild(this.counterText);
    this.labelText.anchor.set(0.5, 0.5);
    this.labelText.style = {
      fontFamily: "Roboto Condensed, Arial, sans-serif",
      fontWeight: "100",
      fontSize: et,
      align: "center",
      fill: 16777215
    };
    this.container.addChild(this.labelText);
  }
  destroy() {
    this.container.removeChild(this.timerBackground);
    this.timerBackground.destroy({
      children: true
    });
    this.container.destroy({
      children: true,
      texture: true
    });
  }
  start(p, b, XT) {
    this.active = true;
    this.label = p;
    this.elapsed = b;
    this.duration = XT;
  }
  stop() {
    this.active = false;
  }
  resize(p, b) {
    this.screenScaleFactor = b;
    if (k.uiLayout == k.UiLayout.Sm) {
      if (!k.tablet) {
        this.container.scale.set(0.5, 0.5);
      }
      this.mobileOffset = k.isLandscape ? p.mobileOffsetLandscape : p.mobileOffsetPortrait;
    } else {
      this.container.scale.set(1, 1);
      this.mobileOffset = 0;
    }
  }
  update(p, b) {
    if (!this.active) {
      this.container.visible = false;
      return;
    }
    this.elapsed = e.min(this.elapsed + p, this.duration);
    const XT = 56 + this.label.length * et * 0.45;
    const XY = et * 1.5;
    const XC = 0 - XT / 2;
    const Xl = 87.5 - XY / 2;
    const Xd = e.min(this.elapsed / this.duration, 1) * Math.PI * 2 - Math.PI * 0.5;
    this.gfx.clear();
    this.gfx.beginFill(0, 0.5);
    this.gfx.drawRoundedRect(XC, Xl, XT, XY, 5);
    this.gfx.endFill();
    this.gfx.lineStyle(6, 16777215);
    this.gfx.arc(0, 0, 35, -Math.PI * 0.5, Xd, false);
    this.counterText.text = e.max(0, this.duration - this.elapsed).toFixed(1);
    this.labelText.position.y = 87.5;
    this.labelText.text = this.label;
    this.container.position.set(b.pmhI / 2, b.lZjK / 3 * this.screenScaleFactor + this.mobileOffset);
    this.container.visible = true;
  }
}
function Si(p) {
  const b = Math.floor(p / 3600);
  const XT = Math.floor(p / 60) % 60;
  const XY = Math.floor(p) % 60;
  let XC = "";
  if (b > 0) {
    XC += b + "h ";
  }
  if (b > 0 || XT > 0) {
    XC += XT + "m ";
  }
  return XC += XY + "s";
}
function St(p, b, XT, XY) {
  const XC = p + (b - p) / XT * XY;
  return Math.floor(XC);
}
class je {
  constructor(p, b, XT) {
    this.r = p;
    this.g = b;
    this.b = XT;
  }
  getColors() {
    return {
      r: this.r,
      g: this.g,
      b: this.b
    };
  }
}
class vs {
  constructor(b, XT, XY, XC, Xl, Xd, Xk, XU, XW) {
    this.game = b;
    this.audioManager = XT;
    this.particleBarn = XY;
    this.planeBarn = XC;
    this.localization = Xl;
    this.canvasMode = Xd;
    this.touch = Xk;
    this.inputBinds = XU;
    this.inputBindUi = XW;
    this.game = b;
    this.particleBarn = XY;
    this.localization = Xl;
    this.touch = Xk;
    this.inputBinds = XU;
    this.inputBindUi = XW;
    this.roleMenuConfirm.on("click", XH => {
      XH.stopPropagation();
      this.roleSelected = this.roleDisplayed;
      this.setRoleMenuActive(false);
    });
    j("#ui-map-wrapper").css("display", "block");
    j("#ui-team").css("display", "block");
    j(".ui-map-expand").on("mousedown", XH => {
      XH.stopPropagation();
    });
    j(".ui-map-expand").on("click", XH => {
      if (k.touch) {
        if (!this.bigmapDisplayed) {
          this.displayMapLarge();
        }
      } else if (k.uiLayout == k.UiLayout.Lg) {
        this.displayMapLarge(this.bigmapDisplayed);
      }
    });
    j("#ui-map-minimize").on("mousedown", XH => {
      XH.stopPropagation();
    });
    j("#ui-map-minimize").on("click", XH => {
      XH.stopPropagation();
      this.toggleMiniMap();
    });
    j("#ui-menu-display").on("click", XH => {
      XH.stopPropagation();
      this.toggleEscMenu();
    });
    this.moveStyleButton.on("touchstart", () => {
      Xk.toggleMoveStyle();
    });
    this.aimStyleButton.on("touchstart", () => {
      Xk.toggleAimStyle();
    });
    this.aimLineButton.on("touchstart", () => {
      Xk.toggleAimLine();
    });
    this.onTouchScreen = XH => {
      if (XH.target?.id == "cvs") {
        this.toggleEscMenu(true);
      }
    };
    j(document).on("touchstart", this.onTouchScreen);
    this.bigmapClose = j("#big-map-close");
    this.bigmapClose.on("touchend", XH => {
      XH.stopPropagation();
      this.displayMapLarge(true);
    });
    this.bigmapClose.on("mousedown", XH => {
      XH.stopPropagation();
    });
    this.bigmapClose.on("click", XH => {
      XH.stopPropagation();
      this.displayMapLarge(true);
    });
    this.gameTabBtns.on("click", XH => {
      this.setCurrentGameTab(j(XH.target).data("tab"));
    });
    this.setCurrentGameTab(this.currentGameTab);
    this.fullScreenButton.on("mousedown", XH => {
      XH.stopPropagation();
    });
    this.fullScreenButton.on("click", () => {
      Q.toggleFullScreen();
      this.toggleEscMenu();
    });
    k.os == "ios";
    k.touch;
    this.resumeButton.on("mousedown", XH => {
      XH.stopPropagation();
    });
    this.resumeButton.on("click", () => {
      this.toggleEscMenu();
    });
    if (k.touch) {
      this.resumeButton.css("display", "none");
    }
    j("#btn-spectate-quit").on("click", () => {
      this.quitGame();
    });
    j("#btn-game-quit").on("mousedown", XH => {
      XH.stopPropagation();
    });
    j("#btn-game-quit").on("click", () => {
      this.game.OSRLcj = true;
      this.game.HTzAB = 1;
      this.quitGame();
    });
    this.specStatsButton.on("click", () => {
      this.toggleLocalStats();
    });
    this.specNextButton.on("click", () => {
      this.specNext = true;
    });
    this.specPrevButton.on("click", () => {
      this.specPrev = true;
    });
    this.interactionElems.css("pointer-events", "auto");
    this.interactionElems.on("touchstart", XH => {
      XH.stopPropagation();
      this.interactionTouched = true;
    });
    this.reloadElems.css("pointer-events", "auto");
    this.reloadElems.on("touchstart", XH => {
      XH.stopPropagation();
      this.reloadTouched = true;
    });
    this.gasRenderer = new Hi(Xd, 0);
    this.resetWeapSlotStyling = () => {
      if (this.weapDraggedDiv) {
        this.weapSwitches.css({
          left: "",
          top: ""
        });
        j("#ui-game").css({
          "pointer-events": ""
        });
      }
      this.weapDraggedDiv = null;
      this.weapDragging = false;
      this.weapDropped = false;
      if (this.weapSwitches.hasClass("ui-weapon-dragged")) {
        this.weapSwitches.removeClass("ui-weapon-dragged");
      }
      if (!this.weapNoSwitches.hasClass("ui-outline-hover")) {
        this.weapNoSwitches.addClass("ui-outline-hover");
      }
    };
    if (!k.touch) {
      this.weapSwitches.on("mousedown", XH => {
        const p0 = XH.currentTarget;
        if (XH.button == 0) {
          this.weapDraggedDiv = j(p0);
          this.weapDraggedId = j(p0).data("slot");
        }
      });
      j("#ui-game").on("mousemove", XH => {
        if (this.weapDraggedDiv && !this.weapDropped) {
          if (this.weapDragging) {
            this.weapDraggedDiv.css({
              left: XH.pageX - 80,
              top: XH.pageY - 30
            });
            this.weapDraggedDiv.addClass("ui-weapon-dragged");
          } else {
            j("#ui-game").css({
              "pointer-events": "initial"
            });
            this.weapNoSwitches.removeClass("ui-outline-hover");
            this.weapDragging = true;
          }
        }
      });
      j("#ui-game, #ui-weapon-id-1, #ui-weapon-id-2").on("mouseup", XH => {
        if (XH.button == 0 && this.weapDraggedDiv != null) {
          this.weapSwitches.each(() => {
            const p0 = j(XH.currentTarget).data("slot");
            if (j(XH.currentTarget).is(":hover") && this.weapDraggedId != p0) {
              this.swapWeapSlots = true;
              this.weapDropped = true;
            }
          });
          if (!this.swapWeapSlots) {
            this.resetWeapSlotStyling();
          }
        }
      });
    }
    this.mapIndicatorBarn = new ys(this.mapSpriteBarn);
    this.container.mask = new r();
    this.display = {
      gas: this.gasRenderer.display,
      gasSafeZone: this.gasSafeZoneRenderer.display,
      airstrikeZones: XC.airstrikeZoneContainer,
      mapSprites: this.mapSpriteBarn.container,
      teammates: new f(),
      player: new f(),
      border: new r()
    };
    this.mapSprite.anchor = new h(0.5, 0.5);
    this.container.addChild(this.mapSprite);
    this.container.addChild(this.display.gas);
    this.container.addChild(this.display.gasSafeZone);
    this.container.addChild(this.display.airstrikeZones);
    this.container.addChild(this.display.mapSprites);
    this.container.addChild(this.display.teammates);
    this.container.addChild(this.display.player);
    this.container.addChild(this.display.border);
    const XD = this.getMinimapMargin();
    const XG = this.getMinimapSize();
    this.minimapPos = v.create(XD + XG / 2, b.Solrb.lZjK - XG / 2 - XD);
    this.muteButtonImage = this.muteButton.find("img");
    const XF = this.audioManager.mute;
    this.muteButtonImage.attr("src", XF ? this.muteOffImg : this.muteOnImg);
    this.muteButton.on("mousedown", XH => {
      XH.stopPropagation();
    });
    this.muteButton.on("click", XH => {
      let p0 = this.audioManager.muteToggle();
      this.muteButtonImage.attr("src", p0 ? this.muteOffImg : this.muteOnImg);
      p0 = null;
    });
    this.teamMemberHealthBarWidth = parseInt(j(".ui-team-member-health").find(".ui-bar-inner").css("width"));
    for (let XH = 0; XH < 4; XH++) {
      const p0 = this.topLeft;
      const p1 = XH;
      this.teamSelectors.push({
        teamNameHtml: "",
        groupId: j(p0).find("[data-id=" + p1 + "]"),
        groupIdDisplayed: false,
        teamName: j(p0).find("[data-id=" + p1 + "]").find(".ui-team-member-name"),
        teamIcon: j(p0).find("[data-id=" + p1 + "]").find(".ui-team-member-icon"),
        teamStatus: j(p0).find("[data-id=" + p1 + "]").find(".ui-team-member-status"),
        teamHealthInner: j(p0).find("[data-id=" + p1 + "]").find(".ui-health-actual"),
        teamColor: j(p0).find("[data-id=" + p1 + "]").find(".ui-team-member-color"),
        playerId: 0,
        prevHealth: 0,
        prevStatus: {
          disconnected: false,
          dead: false,
          downed: false,
          role: ""
        },
        indicators: {
          main: {
            elem: j("#ui-team-indicators").find(".ui-indicator-main[data-id=" + p1 + "]"),
            displayed: false
          }
        }
      });
    }
    this.init();
  }
  Skv = new ks();
  gameElem = j("#ui-game");
  statsMain = j("#ui-stats");
  statsElem = j("#ui-stats-bg");
  statsContentsContainer = j("#ui-stats-contents");
  statsContents = j("#ui-stats-contents-inner");
  statsHeader = j("#ui-stats-header");
  statsInfoBox = j("#ui-stats-info-box");
  statsOptions = j("#ui-stats-options");
  statsAds = j(".ui-stats-ad-container");
  statsLogo = j("#ui-stats-logo");
  escMenuElem = j("#ui-game-menu");
  escMenuDisplayed = false;
  roleMenuElemWrapper = j("#ui-role-menu-wrapper");
  roleMenuElem = j("#ui-role-menu");
  roleMenuFooterEnterElem = j("#ui-role-footer-enter");
  roleMenuFooterHtml = "";
  roleMenuActive = false;
  roleMenuDisplayed = false;
  roleMenuTicker = 0;
  roleDisplayed = "";
  roleSelected = "";
  roleMenuConfirm = j("#ui-role-footer-enter");
  roleMenuInst = null;
  topLeft = j("#ui-top-left");
  waitingForPlayers = true;
  waitingText = j("#ui-waiting-text");
  spectating = false;
  prevSpectatorCount = 0;
  spectatorCount = 0;
  spectatorCounterDisplayed = false;
  spectatorCounterContainer = j("#ui-spec-counter");
  spectatorCounter = j("#ui-spec-counter-number");
  spectateMode = j(".ui-spectate-mode");
  spectatedPlayerText = j("#ui-spectate-text");
  spectatedPlayerName = "";
  spectatedPlayerId = 0;
  spectateModeStats = j("#ui-spectate-stats");
  spectateModeStatsData = j("#ui-spectate-stats-data");
  spectateOptionsWrapper = j("#ui-spectate-options-wrapper");
  rightCenter = j("#ui-right-center");
  leaderboardAlive = j("#ui-leaderboard-alive");
  playersAlive = j(".js-ui-players-alive");
  leaderboardAliveFaction = j("#ui-leaderboard-alive-faction");
  playersAliveRed = j(".js-ui-players-alive-red");
  playersAliveBlue = j(".js-ui-players-alive-blue");
  playersAliveRedCounter = 0;
  playersAliveBlueCounter = 0;
  playerKills = j(".js-ui-player-kills");
  announcement = j("#ui-announcement");
  killLeaderName = j("#ui-kill-leader-name");
  killLeaderCount = j("#ui-kill-leader-count");
  mapContainer = j("#ui-map-container");
  mapContainerBottom = 52;
  mapInfo = j("#ui-map-info");
  mapInfoBottom = 218;
  gasState = {};
  gasIcon = j("#ui-gas-icon");
  gasTimer = j("#ui-gas-timer");
  mapMinimizeButton = j("#ui-map-minimize");
  menuDisplayButton = j("#ui-menu-display");
  bottomCenterRight = j("#ui-bottom-center-right");
  actionSeq = -1;
  displayMapDirty = false;
  displayMapClear = false;
  gameTabs = j(".ui-game-tab");
  gameTabBtns = j(".btn-game-tab-select");
  gameKeybindBtns = j(".btn-keybind-desc");
  currentGameTab = "settings";
  onTouchScreen;
  bigmap = j("#big-map");
  bigmapCollision = j("#big-map-collision");
  bigmapClose = j("#big-map-close");
  moveStyleButton = j("#btn-game-move-style");
  aimLineButton = j("#btn-game-aim-line");
  aimStyleButton = j("#btn-game-aim-style");
  fullScreenButton = j("#btn-game-fullscreen");
  resumeButton = j("#btn-game-resume");
  specStatsButton = j("#btn-spectate-view-stats");
  specBegin = false;
  specNext = false;
  specPrev = false;
  specNextButton = j("#btn-spectate-next-player");
  specPrevButton = j("#btn-spectate-prev-player");
  interactionElems = j("#ui-interaction-press, #ui-interaction");
  interactionTouched = false;
  reloadElems = j("#ui-current-clip, #ui-remaining-ammo, #ui-reload-button-container");
  reloadTouched = false;
  flairElems = j(".ui-health-flair");
  flairId = 0;
  healthRed = new je(255, 0, 0);
  healthDarkpink = new je(255, 45, 45);
  healthLightpink = new je(255, 112, 112);
  healthWhite = new je(255, 255, 255);
  healthGrey = new je(179, 179, 179);
  minimapDisplayed = true;
  visibilityMode = 0;
  hudVisible = true;
  gasRenderer;
  gasSafeZoneRenderer = new ka();
  sentAdStatus = false;
  frame = 0;
  weapsDirty = false;
  weapSwitches = j("#ui-weapon-id-1, #ui-weapon-id-2");
  weapNoSwitches = j("#ui-weapon-id-3, #ui-weapon-id-4");
  weapDraggedId = 0;
  swapWeapSlots = false;
  weapDraggedDiv = null;
  weapDragging = false;
  weapDropped = false;
  mapSpriteBarn = new bs();
  mapIndicatorBarn;
  playerMapSprites = [];
  playerPingSprites = {};
  container = new f();
  resetWeapSlotStyling;
  display;
  mapSprite = new y(x.EMPTY);
  bigmapDisplayed = false;
  screenScaleFactor = 1;
  minimapPos;
  dead = false;
  muteButton = j("#ui-mute-ingame");
  muteButtonImage;
  muteOffImg = "audio-off.img";
  muteOnImg = "audio-on.img";
  displayingStats = false;
  teamMemberHealthBarWidth;
  teamMemberHeight = 48;
  groupPlayerCount = 0;
  teamSelectors = [];
  displayOldMapSprites = false;
  dphRtI() {
    this.gasRenderer.free();
    this.clearUI();
    this.roleMenuConfirm.off("click");
    j(".ui-role-option").off("click");
    j(".ui-map-expand").off("mousedown");
    j(".ui-map-expand").off("click");
    j("#ui-map-minimize").off("mousedown");
    j("#ui-map-minimize").off("click");
    j("#ui-menu-display").off("click");
    this.moveStyleButton.off("touchstart");
    this.aimStyleButton.off("touchstart");
    this.aimLineButton.off("touchstart");
    j(document).off("touchstart", this.onTouchScreen);
    this.bigmapClose.off("touchend");
    this.bigmapClose.off("mousedown");
    this.bigmapClose.off("click");
    this.gameTabBtns.off("click");
    this.fullScreenButton.off("mousedown");
    this.fullScreenButton.off("click");
    this.resumeButton.off("mousedown");
    this.resumeButton.off("click");
    j("#btn-spectate-quit").off("click");
    j("#btn-game-quit").off("mousedown");
    j("#btn-game-quit").off("click");
    this.specStatsButton.off("click");
    this.specNextButton.off("click");
    this.specPrevButton.off("click");
    this.interactionElems.off("touchstart");
    this.reloadElems.off("touchstart");
    this.weapSwitches.off("mousedown");
    j("#ui-game").off("mousemove");
    j("#ui-game").off("mouseup");
    j("#ui-weapon-id-1").off("mouseup");
    j("#ui-weapon-id-2").off("mouseup");
    this.muteButton.off("mousedown");
    this.muteButton.off("click");
    j(".ui-team-member-health").find(".ui-bar-inner").css("width", this.teamMemberHealthBarWidth);
    j("#ui-center").off("mouseenter mouseleave");
    this.inputBinds.menuHovered = false;
    if (!this.hudVisible) {
      this.cycleHud();
    }
    this.Skv.destroy();
    this.clearStatsElems();
    this.setRoleMenuActive(false);
    this.init();
  }
  init() {
    j(".js-ui-map-hidden").css("display", "block");
    j("#ui-map-counter-default").css("display", "inline-block");
    j("#ui-map-counter-faction").css("display", "none");
    this.flairElems.css("display", "none");
    this.clearStatsElems();
    this.setSpectating(false);
    this.updateSpectatorCountDisplay(true);
    this.resetWeapSlotStyling();
    this.dead = false;
    for (let p = 0; p < this.teamSelectors.length; p++) {
      this.teamSelectors[p].teamColor.removeAttr("style");
    }
  }
  onMapLoad(p, b) {
    this.resize(p, b);
    const XT = p.getMapDef().gameMode.killLeaderEnabled;
    j("#ui-kill-leader-container").css("display", XT ? "block" : "none");
    if (!k.mobile) {
      j("#ui-killfeed-wrapper").css("top", XT ? "60px" : "12px");
    }
  }
  Gxhh(XT, XY, XC, Xl, Xd, Xk, XU, XW, XD) {
    const XG = XY;
    if (this.weapsDirty) {
      this.resetWeapSlotStyling();
    }
    this.weapsDirty = false;
    this.mapIndicatorBarn.updateIndicatorPulses(XT);
    const XF = e.max(Math.floor(Xl.duration * (1 - Xl.circleT)), 0);
    const XH = {
      mode: Xl.mode,
      time: XF
    };
    if (this.gasState.mode != XH.mode || this.gasState.time != XH.time) {
      this.gasState = XH;
      const p6 = this.gasState.mode == XI.Moving;
      this.mapInfo.removeClass("icon-pulse");
      this.gasIcon.removeClass("gas-icon");
      this.gasIcon.removeClass("danger-icon");
      if (p6) {
        this.mapInfo.addClass("icon-pulse");
      }
      this.gasIcon.addClass(p6 ? "danger-icon" : "gas-icon");
      const p7 = Math.floor(this.gasState.time / 60);
      const p8 = ("0" + this.gasState.time % 60).slice(-2);
      this.gasTimer.html(p7 + ":" + p8);
    }
    this.spectatorCount = XY.KkvfHn.kUHxCC;
    this.updateSpectatorCountDisplay(false);
    if (XY.QDvlP.GUi && !this.dead) {
      this.dead = true;
      this.Skv.stop();
    }
    if (XG.downed || this.dead) {
      this.resetWeapSlotStyling();
    }
    if (this.actionSeq != XY.TvMV.seq && (this.actionSeq = XY.TvMV.seq, this.Skv.stop(), XY.TvMV.type != Xp.None && !this.displayingStats)) {
      let p9 = "";
      let pX = "";
      let pp = "";
      switch (XY.TvMV.type) {
        case Xp.Reload:
        case Xp.ReloadAlt:
          if (w[XY.TvMV.item]) {
            pX = this.localization.translate("game-reloading");
          }
          break;
        case Xp.UseItem:
          if (w[XY.TvMV.item]) {
            pX = this.localization.translate("game-using");
            pp = this.localization.translate("game-" + XY.TvMV.item);
          }
          break;
        case Xp.Revive:
          {
            const pb = Xk.getPlayerInfo(XY.TvMV.targetId).name;
            pX = this.localization.translate("game-reviving");
            pp = XG.downed ? "" : pb;
            break;
          }
      }
      if (pX != "" || pp != "") {
        if (this.localization.translate("word-order") == "svo") {
          p9 += pX || "";
          p9 += pp ? " " + pp : "";
        } else if (this.localization.translate("word-order") == "sov") {
          p9 += pp ? pp + " " : "";
          p9 += pX ? " " + pX : "";
        }
        this.Skv.start(p9, XY.TvMV.time, XY.TvMV.duration);
      }
    }
    if (!this.bigmapDisplayed) {
      this.mapSprite.x = this.minimapPos.x + this.mapSprite.width / 2 - XY.NLYJ.x / XC.width * this.mapSprite.width;
      this.mapSprite.y = this.minimapPos.y - this.mapSprite.height / 2 + XY.NLYJ.y / XC.height * this.mapSprite.height;
    }
    const p0 = v.create(XU.pmhI * 0.5 / XU.cUxbv(), XU.lZjK * 0.5 / XU.cUxbv());
    const p1 = {
      min: v.sub(XU.NLYJ, p0),
      max: v.add(XU.NLYJ, p0)
    };
    const p2 = Xk.getPlayerInfo(XY.__id).groupId;
    const p3 = Xk.getGroupInfo(p2);
    if (!p3) {
      const pI = {
        playerId: XY.__id,
        groupId: p2,
        spectating: this.spectating,
        playing: this.game.TmD,
        groupInfo: Xk.groupInfo
      };
      console.error("badTeamInfo_1: " + JSON.stringify(pI));
    }
    const p4 = k.uiLayout == k.UiLayout.Sm;
    const p5 = p3.playerIds.length;
    for (let pj = 0; pj < p5; pj++) {
      const pf = this.teamSelectors[pj];
      const px = p3.playerIds[pj];
      const py = Xk.getPlayerInfo(px);
      const pg = px == XG.__id;
      const pQ = Xk.getPlayerStatus(px);
      if (pQ && XW > Xj.Solo) {
        if (!pf.groupIdDisplayed) {
          pf.groupId.css("display", "block");
          pf.groupIdDisplayed = true;
        }
        this.updateTeam(pj, Q.htmlEscape(py.name), pQ.health, {
          disconnected: pQ.disconnected,
          dead: pQ.dead,
          downed: pQ.downed,
          role: pQ.role
        }, py.playerId, py.teamId, Xk);
        for (const pZ in pf.indicators) {
          if (pf.indicators.hasOwnProperty(pZ)) {
            const pq = pf.indicators[pZ];
            const pM = pq.elem;
            let pE = true;
            if ((!pg || pq.displayAll) && !XD) {
              const pN = pQ.pos;
              const pn = v.normalizeSafe(v.sub(pN, XU.NLYJ), v.create(1, 0));
              const ph = G.intersectRayAabb(XU.NLYJ, pn, p1.min, p1.max);
              const pR = Math.atan2(pn.y, -pn.x) + Math.PI * 0.5;
              const pP = XU.MobS(ph);
              const pA = G.testCircleAabb(pN, L.player.radius, p1.min, p1.max);
              if (!pQ.dead && !pA) {
                let pJ = 32;
                let pS = "translate(-50%, -50%) rotate(" + pR + "rad)";
                if (p4) {
                  pJ = 16;
                  pS += " scale(0.5)";
                }
                pE = false;
                pM.css({
                  left: e.clamp(pP.x, pJ, XU.pmhI - pJ),
                  top: e.clamp(pP.y, pJ, XU.lZjK - pJ - 0),
                  transform: pS
                });
                if (!pq.displayed) {
                  pM.css("display", "block");
                  pq.displayed = true;
                }
              }
            }
            if (pE && pq.displayed) {
              pM.css("display", "none");
              pq.displayed = false;
            }
          }
        }
      }
    }
    for (let pB = p5; pB < this.teamSelectors.length; pB++) {
      const pc = this.teamSelectors[pB];
      for (const pu in pc.indicators) {
        if (pc.indicators.hasOwnProperty(pu)) {
          const pV = pc.indicators[pu];
          if (pV.displayed) {
            pV.elem.css("display", "none");
            pV.displayed = false;
          }
        }
      }
      if (pc.groupIdDisplayed) {
        pc.groupId.css("display", "none");
        pc.groupIdDisplayed = false;
      }
    }
    if (XC.factionMode) {
      const pz = Xk.getPlayerInfo(XG.__id);
      if (this.flairId != pz.teamId) {
        this.flairId = pz.teamId;
        const pw = this.flairId == 1 ? "red" : "blue";
        this.flairElems.css({
          display: "block",
          "background-image": "url(../img/gui/player-patch-" + pw + ".svg)"
        });
      }
    }
    if (XW > Xj.Solo && this.groupPlayerCount != p5 && k.uiLayout == k.UiLayout.Lg) {
      this.groupPlayerCount = p5;
      this.spectateOptionsWrapper.css({
        top: this.groupPlayerCount * this.teamMemberHeight + 12
      });
    } else if (XW == Xj.Solo) {
      this.spectateOptionsWrapper.css({
        top: 12
      });
    }
    this.updatePlayerMapSprites(XT, XY, Xk, XC);
    this.mapSpriteBarn.update(XT, this, XC);
    this.Skv.update(XT, XU);
    if (this.roleMenuActive) {
      this.roleMenuTicker -= XT;
      const pO = Math.ceil(this.roleMenuTicker);
      const pL = this.localization.translate("game-enter-game") + " (" + pO + ")";
      if (pL != this.roleMenuFooterHtml) {
        this.roleMenuFooterEnterElem.html(pL);
        this.roleMenuFooterHtml = pL;
      }
      if (!this.roleMenuInst && this.audioManager.isSoundLoaded("ambient_lab_01", "ambient")) {
        this.roleMenuInst = this.audioManager.playSound("ambient_lab_01", {
          channel: "ambient"
        });
      }
      if (this.roleMenuTicker <= 0) {
        this.roleSelected = this.roleDisplayed;
        this.setRoleMenuActive(false);
      }
    }
  }
  updatePlayerMapSprites(XT, XY, XC, Xl) {
    const Xd = XC.getPlayerInfo(XY.__id);
    let Xk = 0;
    const XU = (XD, XG, XF, XH, p0, p1, p2) => {
      if (Xk >= this.playerMapSprites.length) {
        const p4 = this.mapSpriteBarn.addSprite();
        this.playerMapSprites.push(p4);
      }
      const p3 = this.playerMapSprites[Xk++];
      p3.pos = v.copy(XD);
      p3.scale = XG;
      p3.alpha = XF;
      p3.visible = XH;
      p3.zOrder = p0;
      p3.sprite.texture = x.from(p1);
      p3.sprite.tint = p2;
    };
    const XW = Object.keys(XC.playerStatus);
    for (let XD = 0; XD < XW.length; XD++) {
      const XG = XC.playerStatus[XW[XD]];
      const XF = XG.playerId;
      const XH = XC.getPlayerInfo(XF);
      const p0 = XH.groupId == Xd.groupId;
      let p1 = 65535 + XF * 2;
      if (XF == Xd.playerId) {
        p1 += 131070;
      }
      const p2 = Xf[XG.role];
      const p3 = p2?.mapIcon;
      if (p3) {
        p1 += 65535;
      }
      let p4 = "player-map-inner.img";
      if (p3) {
        p4 = p2.mapIcon.alive;
      }
      if (XG.dead) {
        p4 = "skull-outlined.img";
        if (p3) {
          p4 = p2.mapIcon.dead;
        }
      } else if (XG.downed) {
        p4 = p0 ? "player-map-inner.img" : "player-map-downed.img";
      }
      let p5 = p0 ? XC.getGroupColor(XF) : XC.getTeamColor(XH.teamId);
      if (Xl.factionMode && p3) {
        p5 = XC.getTeamColor(XH.teamId);
      }
      const p6 = k.uiLayout == k.UiLayout.Sm ? 0.15 : 0.2;
      let p7 = p6;
      p7 = p0 ? XG.dead ? p6 * 1.5 : p3 ? p6 * 1.25 : p6 * 1 : XG.dead || XG.downed || p3 ? p6 * 1.25 : p6 * 0.75;
      XU(XG.pos, p7, XG.minimapAlpha, XG.minimapVisible, p1, p4, p5);
      if (p0) {
        const p8 = k.uiLayout == k.UiLayout.Sm ? 0.25 : 0.3;
        const p9 = XG.minimapVisible && !p3;
        XU(XG.pos, p8, XG.minimapAlpha, p9, p1 - 1, "player-map-outer.img", 16777215);
      }
    }
    for (let pX = this.playerMapSprites.length - 1; pX >= Xk; pX--) {
      this.playerMapSprites[pX].visible = false;
    }
  }
  getMinimapMargin() {
    if (k.uiLayout == k.UiLayout.Sm) {
      return 4;
    } else {
      return 16;
    }
  }
  getMinimapSize() {
    if (k.uiLayout == k.UiLayout.Sm) {
      return 192;
    } else {
      return 256;
    }
  }
  getMinimapBorderWidth() {
    if (k.uiLayout == k.UiLayout.Sm) {
      return 1;
    } else {
      return 4;
    }
  }
  createPing(b, XT, XY, XC, Xl, Xd) {
    const Xk = C[b];
    if (Xk) {
      const XU = (XD, XG) => {
        const XF = this.mapSpriteBarn.addSprite();
        XF.pos = v.copy(XT);
        XF.scale = XD;
        XF.lifetime = Xk.mapLife;
        XF.pulse = false;
        XF.zOrder = 100;
        XF.sprite.texture = x.from(Xk.mapTexture);
        XF.sprite.tint = XG;
        return XF;
      };
      const XW = XD => {
        const XG = this.mapSpriteBarn.addSprite();
        XG.pos = v.copy(XT);
        XG.scale = 0;
        XG.lifetime = Xk.pingLife;
        XG.pulse = true;
        XG.zOrder = 99;
        XG.sprite.texture = x.from("ping-map-pulse.img");
        XG.sprite.tint = XD;
        return XG;
      };
      if (Xk.mapEvent) {
        const XD = (k.uiLayout == k.UiLayout.Sm ? 0.15 : 0.2) * 1.5;
        XU(XD, Xk.tint).release();
        XW(Xk.tint).release();
      } else {
        let XG = 16777215;
        const XF = Xl.getPlayerInfo(XC);
        const XH = Xl.getPlayerInfo(XY);
        const p0 = Xl.getPlayerStatus(XY);
        if (XF && XH && p0) {
          if (p0.role == "leader") {
            XG = 65280;
          } else if (XF.groupId == XH.groupId) {
            XG = Xl.getGroupColor(XY);
          } else {
            XG = Xl.getTeamColor(XH.teamId);
          }
        }
        this.playerPingSprites[XY] ||= [];
        const p1 = this.playerPingSprites[XY];
        for (let p5 = 0; p5 < p1.length; p5++) {
          p1[p5].free();
        }
        const p2 = k.uiLayout == k.UiLayout.Sm ? 0.15 : 0.2;
        const p3 = XU(p2, XG);
        const p4 = XW(XG);
        p1.push(p3);
        p1.push(p4);
      }
    }
  }
  updateMapSprite(p, b, XT, XY) {
    if (p.displayed) {
      if (p.life != null) {
        p.life -= XY;
        p.displayed = p.life > 0;
        if (p.maxLife - p.life < 0.1) {
          b.alpha = (p.maxLife - p.life) / 0.1;
        } else if (p.life < 0.5) {
          b.alpha = e.max(p.life / 0.5, 0);
        } else {
          b.alpha = 1;
        }
      }
      if (p.pulse && p.displayed) {
        p.scale = p.scale + XY / 2.5;
        b.scale.set(p.scale, p.scale);
      }
      b.visible = XT && b.alpha > 0;
    }
  }
  updateMapIndicators(p) {
    this.mapIndicatorBarn.updateIndicatorData(p);
  }
  getMapPosFromWorldPos(p, b) {
    const XT = this.mapSprite.x - this.mapSprite.width / 2 + p.x / b.width * this.mapSprite.width;
    const XY = this.mapSprite.y + this.mapSprite.height / 2 - p.y / b.height * this.mapSprite.height;
    return v.create(XT, XY);
  }
  getWorldPosFromMapPos(p, b, XT) {
    let XY = false;
    if (this.bigmapDisplayed) {
      const XC = (XT.pmhI - this.mapSprite.width) / 2;
      let Xl = (XT.lZjK - this.mapSprite.height) / 2;
      if (k.uiLayout == k.UiLayout.Sm && !k.isLandscape) {
        Xl = 0;
      }
      XY = p.x > XC && p.x < XT.pmhI - XC && p.y > Xl && p.y < XT.lZjK - Xl;
    } else if (this.minimapDisplayed) {
      const Xd = this.getMinimapSize();
      const Xk = this.getMinimapMargin();
      const XU = (Xd * this.screenScaleFactor + Xk) * 0.5;
      XY = p.x > this.minimapPos.x - XU && p.x < this.minimapPos.x + XU && p.y > this.minimapPos.y - XU && p.y < this.minimapPos.y + XU;
    }
    if (XY) {
      const XW = v.create(this.mapSprite.x - this.mapSprite.width / 2, this.mapSprite.y + this.mapSprite.height / 2);
      const XD = (p.x - XW.x) / this.mapSprite.width * b.width;
      const XG = (XW.y - p.y) / this.mapSprite.height * b.height;
      return v.create(XD, XG);
    }
    return false;
  }
  hideAll() {
    this.gameElem.css("display", "none");
  }
  showAll() {
    this.gameElem.css("display", "block");
  }
  setLocalKills(p) {
    this.playerKills.html(p);
  }
  removeAds() {
    if (window.CrazyGames) {
      window.CrazyGames.SDK.banner.clearAllBanners();
    } else {
      if (!window.aiptag) {
        return;
      }
      const p = ["728x90", "300x250_2"];
      for (let b = 0; b < p.length; b++) {
        const XT = p[b];
        window.aiptag.cmd.display.push(() => {
          window.aipDisplayTag.destroy("survev-io_" + XT);
        });
      }
    }
  }
  refreshMainPageAds() {
    const p = ["728x90"];
    if (window.CrazyGames) {
      for (let b = 0; b < p.length; b++) {
        const XT = p[b];
        const XY = XT.split("x").map(Number);
        It("survev-io_" + XT, XY[0], XY[1]);
      }
    }
    if (window.aiptag) {
      for (let XC = 0; XC < p.length; XC++) {
        const Xl = p[XC];
        window.aiptag.cmd.display.push(() => {
          window.aipDisplayTag.display("survev-io_" + Xl);
        });
      }
    }
  }
  clearUI() {
    this.Skv.stop();
    this.curAction = {
      type: Xp.None
    };
    this.displayMapLarge(true);
    this.displayMiniMap();
    this.clearStatsElems();
    this.clearTeamUI();
    this.toggleEscMenu(true);
    this.toggleLocalStats(true);
    this.visibilityMode = 0;
    this.spectatorCount = 0;
    this.setLocalKills(0);
  }
  beginSpectating() {
    this.specBegin = true;
  }
  hideStats() {
    this.displayingStats = false;
    this.statsMain.css("display", "none");
    this.statsElem.stop().css({
      display: "none",
      opacity: 0
    });
    this.statsContents.stop().hide();
  }
  teamModeToString(p) {
    const b = {
      unknown: "game-rank",
      [Xj.Solo]: "game-solo-rank",
      [Xj.Duo]: "game-duo-rank",
      [Xj.Squad]: "game-squad-rank"
    };
    const XT = b[p] || b.unknown;
    return this.localization.translate(XT);
  }
  getTitleVictoryText(p, b) {
    if (p) {
      return this.spectatedPlayerName + " " + this.localization.translate("game-won-the-game");
    }
    let XT = "game-chicken";
    if (b.turkeyMode) {
      XT = "game-turkey";
    }
    return this.localization.translate(XT);
  }
  getTitleDefeatText(p, b) {
    if (b) {
      return this.spectatedPlayerName + " " + this.localization.translate("game-player-died") + ".";
    } else if (p > Xj.Solo) {
      return this.localization.translate("game-team-eliminated");
    } else {
      return this.localization.translate("game-You") + " " + this.localization.translate("game-you-died") + ".";
    }
  }
  getOverviewElems(p, b, XT, XY) {
    if (XY) {
      const XC = this.localization.translate("game-red-team");
      const Xl = this.localization.translate("game-blue-team");
      return "<div class=\"ui-stats-header-right ui-stats-header-red-team\"><span class=\"ui-stats-header-stat\">" + XC + " </span><span class=\"ui-stats-header-value\">" + this.playersAliveRedCounter + "</span></div><div class=\"ui-stats-header-left ui-stats-header-blue-team\"><span class=\"ui-stats-header-stat\">" + Xl + " </span><span class=\"ui-stats-header-value\">" + this.playersAliveBlueCounter + "</span></div>";
    }
    if (p == Xj.Solo) {
      return "<div><span class=\"ui-stats-header-stat\">" + this.teamModeToString(p) + " </span><span class=\"ui-stats-header-value\">#" + b + "</span></div>";
    } else {
      return "<div class=\"ui-stats-header-right\"><span class=\"ui-stats-header-stat\">" + this.teamModeToString(p) + " </span><span class=\"ui-stats-header-value\">#" + b + "</span></div><div class=\"ui-stats-header-left\"><span class=\"ui-stats-header-stat\">" + this.localization.translate("game-team-kills") + " </span><span class=\"ui-stats-header-value\">" + XT + "</span></div>";
    }
  }
  quitGame() {
    this.game.LSU = true;
    this.refreshMainPageAds();
    this.game.onQuit();
    this.game.respawns.push(performance.now());
  }
  showStats(XT, XY, XC, Xl, Xd, Xk, XU, XW, XD, XG, XF, XH) {
    if (!XW || XY == Xk || Xd) {
      this.toggleEscMenu(true);
      this.displayingStats = true;
      this.Skv.stop();
      this.displayMapLarge(true);
      this.clearStatsElems();
      this.setSpectating(false, XU);
      this.removeAds();
      this.statsMain.css("display", "block");
      this.statsLogo.css("display", "block");
      this.statsContentsContainer.css({
        top: ""
      });
      this.statsInfoBox.css({
        height: ""
      });
      const p0 = Xk == Xl ? 1750 : 2500;
      this.setBannerAd(p0, XH);
      const p1 = Xk == Xl || XW && Xl == XY;
      const p2 = XW && Xk != XY;
      const p3 = p1 ? this.getTitleVictoryText(p2, XF.getMapDef().gameMode) : this.getTitleDefeatText(XU, p2);
      let p4 = 0;
      for (let pf = 0; pf < XT.length; pf++) {
        p4 += XT[pf].kills;
      }
      const p5 = this.getOverviewElems(XU, XC, p4, XF.getMapDef().gameMode.factionMode);
      const p6 = j("<div/>").append(j("<div/>", {
        class: "ui-stats-header-title",
        html: p3
      })).append(j("<div/>", {
        class: "ui-stats-header-overview",
        html: p5
      }));
      this.statsHeader.html(p6);
      const p7 = (px, py) => j("<div/>", {
        class: "ui-stats-info"
      }).append(j("<div/>", {
        html: px
      })).append(j("<div/>", {
        html: py
      }));
      const p8 = k.uiLayout != k.UiLayout.Sm || k.tablet ? 250 : 125;
      let p9 = 0;
      p9 -= (XT.length - 1) * p8 / 2;
      p9 -= (XT.length - 1) * 10;
      for (let px = 0; px < XT.length; px++) {
        const py = XT[px];
        const pg = XD.getPlayerInfo(py.playerId);
        const pQ = Si(py.timeAlive);
        let pZ = "ui-stats-info-player";
        pZ += py.dead ? " ui-stats-info-status" : "";
        const pq = (pM => j("<div/>", {
          class: pM
        }))(pZ);
        pq.css("left", p9);
        pq.append(j("<div/>", {
          class: "ui-stats-info-player-name",
          html: Q.htmlEscape(pg.name)
        }));
        pq.append(p7(this.localization.translate("game-kills"), "" + py.kills)).append(p7(this.localization.translate("game-damage-dealt"), py.damageDealt)).append(p7(this.localization.translate("game-damage-taken"), py.damageTaken)).append(p7(this.localization.translate("game-survived"), pQ));
        if (XF.getMapDef().gameMode.factionMode && Xd) {
          switch (px) {
            case 1:
              pq.append(j("<div/>", {
                class: "ui-stats-info-player-badge ui-stats-info-player-red-leader"
              }));
              break;
            case 2:
              pq.append(j("<div/>", {
                class: "ui-stats-info-player-badge ui-stats-info-player-blue-leader"
              }));
              break;
            case 3:
              {
                const pM = pg.teamId == 1 ? "ui-stats-info-player-red-ribbon" : "ui-stats-info-player-blue-ribbon";
                pq.append(j("<div/>", {
                  class: "ui-stats-info-player-badge " + pM
                }));
              }
          }
        }
        this.statsInfoBox.append(pq);
        p9 += 10;
      }
      const pX = j("<a/>", {
        class: "ui-stats-restart btn-green btn-darken menu-option",
        html: this.localization.translate("game-play-new-game")
      });
      pX.on("click", () => {
        this.quitGame();
      });
      this.statsOptions.append(pX);
      if (Xd || this.waitingForPlayers) {
        pX.css({
          width: k.uiLayout != k.UiLayout.Sm || k.tablet ? 225 : 130
        });
      } else {
        pX.css({
          left: k.uiLayout != k.UiLayout.Sm || k.tablet ? -72 : -46
        });
        const pE = j("<a/>", {
          class: "btn-green btn-darken menu-option ui-stats-spectate",
          html: this.localization.translate("game-spectate")
        });
        pE.on("click", this.beginSpectating.bind(this));
        this.statsOptions.append(pE);
      }
      let pp = 0;
      const pb = 500;
      const pI = 250 / e.max(1, XT.length);
      const pj = 750 / e.max(1, XT.length);
      this.statsInfoBox.children().each((pN, pn) => {
        const ph = j(pn);
        ph.css("opacity", 0);
        ph.delay(p0 + pj + (pp + pN) * pI).animate({
          opacity: 1
        }, pb, () => {
          ph.children().each((pR, pP) => {
            j(pP).delay(pR * pI).animate({
              opacity: 1
            }, pb);
          });
        });
        ph.children().each((pR, pP) => {
          j(pP).css("opacity", 0);
          pp++;
        });
        pp++;
      });
      this.statsOptions.children().each((pN, pn) => {
        const ph = j(pn);
        ph.hide();
        const pR = p0 + pj + (pp + pN) * pI + 500;
        ph.delay(pR).fadeIn(pb);
        pp++;
      });
      this.statsElem.stop();
      this.statsElem.css("display", "block");
      this.statsElem.delay(p0).animate({
        opacity: 1
      }, 1000);
      this.statsContents.stop();
      this.statsContents.css("display", "block");
      this.statsContents.delay(p0).animate({
        opacity: 1
      }, 1000);
    }
  }
  clearStatsElems() {
    this.statsHeader.empty();
    this.statsInfoBox.empty();
    this.statsOptions.empty();
    this.statsAds.css("display", "none");
    this.statsContents.stop();
    this.statsContents.css({
      display: "none",
      opacity: 0
    });
    this.statsElem.stop();
    this.statsElem.css({
      display: "none",
      opacity: 0
    });
    this.statsMain.css("display", "none");
  }
  showTeamAd(p, b) {
    this.toggleEscMenu(true);
    this.displayMapLarge(true);
    this.clearStatsElems();
    this.statsMain.css("display", "block");
    this.statsLogo.css("display", "none");
    this.Skv.stop();
    this.displayingStats = true;
    this.statsHeader.html((() => {
      let Xl = this.localization.translate("game-You");
      Xl += " ";
      Xl += this.localization.translate("game-you-died");
      Xl += ".";
      let Xd = "<div><span class=\"ui-stats-header-stat\">" + this.localization.translate("game-kills") + " </span>";
      Xd += "<span class=\"ui-stats-header-value\">" + p.kills + "</span></div>";
      return j("<div/>", {
        class: ""
      }).append(j("<div/>", {
        class: "ui-stats-header-title",
        html: Xl
      })).append(j("<div/>", {
        class: "ui-stats-header-overview",
        html: Xd
      }));
    })());
    this.statsContentsContainer.css({
      top: "10%"
    });
    this.statsInfoBox.css({
      height: 0
    });
    const XT = j("<a/>", {
      class: "ui-stats-restart btn-green btn-darken menu-option",
      html: this.localization.translate("game-play-new-game")
    });
    XT.on("click", () => {
      this.quitGame();
    });
    this.statsOptions.append(XT);
    XT.css({
      left: k.uiLayout != k.UiLayout.Sm || k.tablet ? -72 : -46
    });
    const XY = j("<a/>", {
      class: "btn-green btn-darken menu-option ui-stats-spectate",
      html: this.localization.translate("game-spectate")
    });
    XY.on("click", this.beginSpectating.bind(this));
    this.statsOptions.append(XY);
    let XC = 0;
    this.statsOptions.children().each((Xl, Xd) => {
      const Xk = j(Xd);
      Xk.hide();
      const XU = 4100 + (XC + Xl) * 300 + 300;
      Xk.delay(XU).fadeIn(750);
      XC++;
    });
    this.statsElem.stop();
    this.statsElem.css("display", "block");
    this.statsElem.delay(2500).animate({
      opacity: 1
    }, 1000);
    this.statsContents.stop();
    this.statsContents.css("display", "block");
    this.statsContents.delay(2500).animate({
      opacity: 1
    }, 1000);
  }
  setBannerAd(p, b) {
    if (!window.aiptag) {
      return;
    }
    let XT = Math.max(p - 150, 0);
    setTimeout(() => {
      j("#ui-stats-ad-container-desktop").css("display", "inline-block");
      window.aiptag.cmd.display.push(() => {
        window.aipDisplayTag.display("survev-io_300x250_2");
      });
      b.hideKillMessage();
    }, XT);
  }
  setSpectateTarget(p, b, XT, XY) {
    if (p != this.spectatedPlayerId) {
      this.setSpectating(true, XT);
      const XC = XY.getPlayerName(p, b, false);
      this.spectatedPlayerId = p;
      this.spectatedPlayerName = Q.htmlEscape(XC);
      this.spectatedPlayerText.find("#spectate-player").html(this.spectatedPlayerName);
      this.actionSeq = -1;
      this.Skv.stop();
    }
  }
  setSpectating(p, b) {
    if (this.spectating != p) {
      this.spectating = p;
      if (this.spectating) {
        this.spectateMode.css("display", "block");
        j(".ui-zoom").removeClass("ui-zoom-hover");
        const XT = b == Xj.Solo;
        this.specPrevButton.css("display", XT ? "none" : "block");
        this.specNextButton.css("display", XT ? "none" : "block");
        this.hideStats();
      } else {
        this.spectateMode.css("display", "none");
        j(".ui-zoom").addClass("ui-zoom-hover");
      }
    }
  }
  setLocalStats(p) {
    const b = {
      kills: this.localization.translate("game-kills"),
      damageDealt: this.localization.translate("game-damage-dealt"),
      damageTaken: this.localization.translate("game-damage-taken"),
      timeAlive: this.localization.translate("game-survived")
    };
    this.spectateModeStatsData.empty();
    for (const XT in b) {
      if (b.hasOwnProperty(XT)) {
        const XY = b[XT];
        const XC = XT == "timeAlive" ? Si(p[XT]) : p[XT];
        const Xl = "<tr><td class=\"ui-spectate-stats-category\">" + XY + "</td><td class=\"ui-spectate-stats-value\">" + XC + "</td></tr>";
        this.spectateModeStatsData.append(Xl);
      }
    }
  }
  toggleLocalStats(p = false) {
    const b = this.spectateModeStats.css("display") == "none" && !p;
    this.spectateModeStats.css("display", b ? "inline-block" : "none");
    this.specStatsButton.html(b ? this.localization.translate("game-hide-match-stats") : this.localization.translate("game-view-match-stats"));
  }
  updatePlayersAlive(p) {
    this.playersAlive.html(p);
    this.leaderboardAlive.css("display", "block");
    this.leaderboardAliveFaction.css("display", "none");
  }
  updatePlayersAliveRed(p) {
    this.playersAliveRed.html(p);
    this.playersAliveRedCounter = p;
    this.leaderboardAlive.css("display", "none");
    this.leaderboardAliveFaction.css("display", "block");
    j("#ui-map-counter-default").css("display", "none");
    j("#ui-map-counter-faction").css("display", "inline-block");
  }
  updatePlayersAliveBlue(p) {
    this.playersAliveBlue.html(p);
    this.playersAliveBlueCounter = p;
    this.leaderboardAlive.css("display", "none");
    this.leaderboardAliveFaction.css("display", "block");
    j("#ui-map-counter-default").css("display", "none");
    j("#ui-map-counter-faction").css("display", "inline-block");
  }
  updateKillLeader(p, b, XT, XY) {
    const XC = p != 0;
    const Xl = XY?.sniperMode ? this.localization.translate("game-waiting-for-hunted") : this.localization.translate("game-waiting-for-new-leader");
    this.killLeaderName.html(XC ? b : Xl);
    this.killLeaderCount.html(XC ? XT : 0);
  }
  displayMapLarge(p) {
    this.bigmapDisplayed = !p && !this.bigmapDisplayed;
    if (this.bigmapDisplayed) {
      this.container.alpha = 1;
    } else {
      this.container.alpha = this.minimapDisplayed ? 1 : 0;
    }
    let b = k.uiLayout == k.UiLayout.Sm ? ".js-ui-mobile-map-hidden" : "js-ui-desktop-map-hidden";
    b += ", .js-ui-map-hidden";
    j(this.visibilityMode == 2 ? ".js-ui-hud-show" : b).css("display", this.bigmapDisplayed ? "none" : "block");
    j(".js-ui-map-show").css("display", this.bigmapDisplayed ? "block" : "none");
    this.updateSpectatorCountDisplay(true);
    this.redraw(this.game.Solrb);
  }
  updateSpectatorCountDisplay(p) {
    const b = !this.bigmapDisplayed && this.spectatorCount > 0;
    p = p || this.spectatorCount > 0 && !this.spectatorCounterDisplayed || this.spectatorCount == 0 && this.spectatorCounterDisplayed;
    if (this.spectatorCount != this.prevSpectatorCount) {
      this.spectatorCounter.html(this.spectatorCount);
      this.prevSpectatorCount = this.spectatorCount;
    }
    if (p) {
      this.spectatorCounterContainer.css("display", b ? "block" : "none");
      this.spectatorCounterDisplayed = b;
    }
  }
  toggleMiniMap() {
    if (this.minimapDisplayed) {
      this.hideMiniMap();
    } else {
      this.displayMiniMap();
    }
  }
  cycleVisibilityMode() {
    if (!this.bigmapDisplayed) {
      switch (this.visibilityMode) {
        case 0:
          this.hideMiniMap();
          this.visibilityMode = 1;
          break;
        case 1:
          this.displayMiniMap();
          this.visibilityMode = 0;
      }
    }
  }
  cycleHud() {
    if (this.gameElem.css("display") == "none") {
      this.gameElem.css("display", "block");
      this.displayMiniMap();
      this.hudVisible = true;
    } else {
      this.gameElem.css("display", "none");
      this.hideMiniMap();
      this.hudVisible = false;
    }
  }
  hideMiniMap() {
    if (!this.bigmapDisplayed) {
      this.minimapDisplayed = false;
      this.container.alpha = 0;
      this.mapInfo.css("bottom", "auto");
      this.spectatorCounterContainer.css({
        bottom: 6,
        left: 98
      });
    }
  }
  displayMiniMap() {
    if (!this.bigmapDisplayed) {
      const p = k.uiLayout == k.UiLayout.Sm;
      this.minimapDisplayed = true;
      this.container.alpha = 1;
      this.mapInfo.css("bottom", this.mapInfoBottom);
      this.spectatorCounterContainer.css({
        bottom: p ? 0 : 218,
        left: p ? 0 : 6
      });
    }
  }
  displayAnnouncement(p) {
    if (p) {
      this.announcement.html(p);
      this.announcement.fadeIn(400, () => {
        setTimeout(() => {
          this.announcement.fadeOut(800);
        }, 3000);
      });
    }
  }
  displayGasAnnouncement(p, b) {
    let XT = "";
    switch (p) {
      case XI.Waiting:
        {
          XT = this.localization.translate("game-red-zone-advances");
          const XY = Math.floor(b / 60);
          const XC = b - XY * 60;
          XT += XY > 1 ? " " + XY + " " + this.localization.translate("game-minutes") : "";
          XT += XY == 1 ? " " + XY + " " + this.localization.translate("game-minute") : "";
          XT += XC > 0 ? " " + Math.floor(XC) + " " + this.localization.translate("game-seconds") : "";
          break;
        }
      case XI.Moving:
        XT = this.localization.translate("game-red-zone-advancing");
        break;
    }
    this.displayAnnouncement(XT);
  }
  setWaitingForPlayers(p) {
    this.waitingForPlayers = p;
    this.waitingText.css("display", p ? "block" : "none");
  }
  Dgc(b, XT, XY, XC, Xl, Xd) {
    const Xk = XT.getCircle();
    const XU = this.getMapPosFromWorldPos(Xk.pos, XC);
    const XW = this.getMapPosFromWorldPos(v.add(Xk.pos, v.create(Xk.rad, 0)), XC);
    const XD = v.length(v.sub(XW, XU));
    this.gasRenderer.render(XU, XD, XT.isActive());
    const XG = XT.circleNew;
    const XF = this.getMapPosFromWorldPos(XG.pos, XC);
    const XH = this.getMapPosFromWorldPos(v.add(XG.pos, v.create(XG.rad, 0)), XC);
    const p0 = v.length(v.sub(XH, XF));
    const p1 = this.getMapPosFromWorldPos(b, XC);
    const p2 = XT.isActive();
    const p3 = XT.isActive() && !this.bigmapDisplayed;
    this.gasSafeZoneRenderer.render(XF, p0, p1, p2, p3);
    Xl.renderAirstrikeZones(this, XC, Xd);
  }
  updateHealthBar(b, XT, XY, XC) {
    const Xl = b;
    let Xd = XC.health * 0.01 * Xl;
    Xd = XC.dead ? 0 : e.max(Xd, 1);
    XT.css("width", Xd);
    if (Xd > 0) {
      XY?.css("width", Xd);
    }
    const Xk = XC.health;
    let XU = this.healthRed;
    let XW = this.healthDarkpink;
    if (Xk > 25) {
      if (XC.downed) {
        XT.css({
          backgroundColor: "red"
        });
      } else {
        if (e.eqAbs(Xk, 100, 0.2)) {
          XU = this.healthGrey;
          XW = this.healthGrey;
        } else if (e.eqAbs(Xk, 75, 0.2) || Xk >= 75) {
          XU = this.healthWhite;
          XW = this.healthWhite;
        } else {
          XU = this.healthDarkpink;
          XW = this.healthLightpink;
        }
        const XD = XU.getColors();
        const XG = XW.getColors();
        const XF = St(XD.r, XG.r, 45, Xk);
        const XH = St(XD.g, XG.g, 45, Xk);
        const p0 = St(XD.b, XG.b, 45, Xk);
        XT.css({
          backgroundColor: "rgba(" + XF + "," + XH + "," + p0 + ",1)"
        });
      }
      XT.removeClass("ui-bar-danger");
    } else {
      XT.addClass("ui-bar-danger");
    }
  }
  updateTeam(b, XT, XY, XC, Xl, Xd, Xk) {
    const XU = this.teamSelectors[b].groupId;
    const XW = this.teamSelectors[b].teamName;
    const XD = this.teamSelectors[b].prevHealth;
    const XG = this.teamSelectors[b].prevStatus;
    const XF = XC.dead != XG.dead || XC.disconnected != XG.disconnected || XC.downed != XG.downed || XC.role != XG.role;
    if (this.teamSelectors[b].playerId != Xl || XY != XD || XF) {
      const XH = this.teamSelectors[b].teamStatus;
      const p0 = this.teamSelectors[b].teamHealthInner;
      this.teamSelectors[b].playerId = Xl;
      this.teamSelectors[b].teamNameHtml = XT;
      XW.html(XT);
      this.updateHealthBar(this.teamMemberHealthBarWidth, p0, null, {
        health: XY,
        dead: XC.dead,
        downed: XC.downed
      });
      if (XF) {
        XH.attr("class", "ui-team-member-status");
        if (XC.disconnected) {
          XH.addClass("ui-team-member-status-disconnected");
        } else if (XC.dead) {
          XH.addClass("ui-team-member-status-dead");
        } else if (XC.downed) {
          XH.addClass("ui-team-member-status-downed").addClass("icon-pulse");
        }
        XW.css("opacity", XC.disconnected || XC.dead ? 0.3 : 1);
      }
      XU.css("display", "block");
      this.teamSelectors[b].prevStatus = XC;
      this.teamSelectors[b].prevHealth = XY;
    }
  }
  clearTeamUI() {
    j(".ui-team-member").css("display", "none");
    j(".ui-team-indicator").css("display", "none");
    j(".ui-team-member-name").removeAttr("style");
    j(".ui-team-member-status").removeAttr("style");
    j(".ui-team-member-status").removeClass("ui-team-member-status-downed ui-team-member-status-dead ui-team-member-status-disconnected icon-pulse");
    this.teamSelectors = [];
  }
  resize(p, b) {
    this.screenScaleFactor = k.uiLayout == k.UiLayout.Sm ? 0.5626 : e.min(1, e.clamp(b.pmhI / 1280, 0.75, 1) * e.clamp(b.lZjK / 1024, 0.75, 1));
    this.Skv.resize(this.touch, this.screenScaleFactor);
    this.gasRenderer.resize();
    this.mapSprite.texture = p.getMapTexture();
    const XT = e.min(1, e.min(b.pmhI / 1200, b.lZjK / 900));
    this.roleMenuElem.css("transform", "translateX(-50%) translateY(-50%) scale(" + XT + ")");
    this.redraw(b);
  }
  redraw(b) {
    const XT = b.pmhI;
    const XY = b.lZjK;
    const XC = this.getMinimapMargin();
    let Xl = 0;
    let Xd = 0;
    if (k.model == "iphonex") {
      if (k.isLandscape) {
        Xl += 28;
      } else {
        Xd += 32;
      }
    }
    const Xk = this.getMinimapSize();
    const XU = this.getMinimapBorderWidth();
    const XW = k.uiLayout == k.UiLayout.Sm;
    this.display.border.clear();
    this.container.mask?.clear();
    if (this.bigmapDisplayed) {
      const XD = e.min(XT, XY);
      this.mapSprite.width = XD;
      this.mapSprite.height = XD;
      this.mapSprite.x = XT / 2;
      this.mapSprite.y = XY / 2;
      this.mapSprite.alpha = 1;
      this.container.mask.beginFill(16777215, 1);
      this.container.mask.drawRect(this.mapSprite.x - this.mapSprite.width / 2, this.mapSprite.y - this.mapSprite.height / 2, this.mapSprite.width, this.mapSprite.height);
      this.container.mask.endFill();
      if (k.touch) {
        this.bigmapCollision.css({
          width: XY,
          height: XT
        });
      }
    } else {
      const XG = this.screenScaleFactor * 1600 / 1.2;
      const XF = Xk * this.screenScaleFactor;
      this.mapSprite.width = XG;
      this.mapSprite.height = XG;
      this.mapSprite.alpha = 0.8;
      let XH = {
        zoom: this.screenScaleFactor
      };
      if (document.body) {
        if ("WebkitTransform" in document.body.style) {
          XH = {
            "-webkit-transform": "scale(" + this.screenScaleFactor + ")"
          };
        } else if ("transform" in document.body.style) {
          XH = {
            transform: "scale(" + this.screenScaleFactor + ")"
          };
        }
      }
      this.mapContainer.css(XH);
      this.mapContainer.css("bottom", this.mapContainerBottom * this.screenScaleFactor);
      const p0 = XW ? XF / 2 + XC : XY - XF / 2 - XC;
      this.minimapPos.x = XC + XF / 2 + Xl;
      this.minimapPos.y = p0 + Xd;
      this.display.border.lineStyle(XU, 0);
      this.display.border.beginFill(0, 0);
      const p1 = XW ? XC + XU / 2 : XY - XF - XC + XU / 2;
      this.display.border.drawRect(XC + XU / 2 + Xl, p1 + Xd, XF - XU, XF - XU);
      this.display.border.endFill();
      const p2 = XW ? XC : XY - XF - XC;
      this.container.mask.beginFill(16777215, 1);
      this.container.mask.drawRect(XC + Xl, p2 - 0.5 + Xd, XF, XF);
      this.container.mask.endFill();
    }
  }
  toggleEscMenu(p = false) {
    if (!this.displayingStats) {
      if (this.escMenuDisplayed || p) {
        this.escMenuDisplayed = false;
        this.escMenuElem.css("display", "none");
        this.setCurrentGameTab("settings");
        j("#ui-center").off("mouseenter mouseleave");
        this.inputBinds.menuHovered = false;
        if (this.roleMenuActive) {
          this.displayRoleMenu();
        }
      } else if (this.bigmapDisplayed) {
        this.displayMapLarge(true);
      } else {
        if (this.visibilityMode == 2) {
          this.cycleVisibilityMode();
        }
        this.escMenuDisplayed = true;
        this.escMenuElem.css("display", "block");
        j("#ui-center").hover(() => {
          this.inputBinds.menuHovered = true;
        }, () => {
          this.inputBinds.menuHovered = false;
        });
        this.inputBinds.menuHovered = false;
        if (this.roleMenuActive) {
          this.hideRoleMenu();
        }
      }
    }
  }
  setCurrentGameTab(p) {
    this.currentGameTab = p;
    this.gameTabs.css("display", "none");
    this.gameTabBtns.removeClass("btn-game-menu-selected");
    j("#ui-game-tab-" + this.currentGameTab).css("display", "block");
    j("#btn-game-" + this.currentGameTab).addClass("btn-game-menu-selected");
    if (this.currentGameTab == "keybinds") {
      this.inputBindUi.refresh();
    } else {
      this.inputBindUi.cancelBind();
    }
  }
  setRoleMenuActive(p) {
    this.roleMenuActive = p;
    if (this.roleMenuActive) {
      this.roleMenuTicker = 20;
      this.displayRoleMenu();
    } else {
      if (this.roleMenuInst) {
        this.audioManager.stopSound(this.roleMenuInst);
        this.roleMenuInst = null;
      }
      this.hideRoleMenu();
    }
  }
  displayRoleMenu() {
    this.roleMenuElemWrapper.css("display", "block");
  }
  hideRoleMenu() {
    this.roleMenuElemWrapper.css("display", "none");
  }
  setRoleMenuOptions(p, b) {
    j("#ui-role-header").html("");
    for (let XY = 0; XY < b.length; XY++) {
      const XC = b[XY];
      const Xl = w[XC];
      const Xd = j("<div/>", {
        class: "ui-role-option",
        "data-role": XC
      });
      Xd.css({
        "background-image": "url('" + Xl.guiImg + "')"
      });
      j("#ui-role-header").append(Xd);
    }
    j(".ui-role-option").on("click", Xk => {
      Xk.stopPropagation();
      const XU = j(Xk.currentTarget);
      this.setRoleMenuInfo(XU.data("role"));
    });
    let XT = b[0];
    if (b.includes(p)) {
      XT = p;
    }
    this.setRoleMenuInfo(XT);
  }
  setRoleMenuInfo(b) {
    const XT = w[b];
    j(".ui-role-option").css({
      "background-size": 132,
      opacity: 0.5
    });
    j("#ui-role-header").find("[data-role=" + b + "]").css({
      "background-size": 164,
      opacity: 1
    });
    const XY = j("<div/>", {
      class: "ui-role-body-left"
    });
    const XC = j("<div/>", {
      class: "ui-role-body-name"
    });
    const Xl = j("<div/>", {
      class: "ui-role-body-image"
    });
    const Xd = this.localization.translate("game-" + b);
    XC.html(Xd);
    Xl.css({
      "background-image": "url('" + XT.guiImg + "')"
    });
    const Xk = XT.color ? Q.colorToHexString(XT.color) : "default";
    this.roleMenuElem.css("border-color", Xk);
    XY.append(XC).append(Xl);
    const XU = j("<div/>", {
      class: "ui-role-body-right"
    });
    const XW = XT.perks;
    for (let XD = 0; XD < XW.length; XD++) {
      const XG = XW[XD];
      const XF = j("<div/>", {
        class: "ui-role-body-perk"
      });
      const XH = j("<div/>", {
        class: "ui-role-body-perk-image-wrapper"
      }).append(j("<div/>", {
        class: "ui-role-body-perk-image-icon"
      }));
      const p0 = j("<div/>", {
        class: "ui-role-body-perk-name"
      });
      const p1 = Q.getSvgFromGameType(XG instanceof Function ? XG() : XG);
      XH.find(".ui-role-body-perk-image-icon").css({
        "background-image": "url('" + p1 + "')"
      });
      const p2 = this.localization.translate("game-" + XG);
      p0.html(p2);
      XF.append(XH).append(p0);
      XU.append(XF);
    }
    j("#ui-role-body").html("").append(XY).append(XU);
    this.roleDisplayed = b;
  }
}
const sr = 6;
const yi = 750;
const or = 3;
const _s = {
  [L.WeaponSlot.Primary]: D.EquipPrimary,
  [L.WeaponSlot.Secondary]: D.EquipSecondary,
  [L.WeaponSlot.Melee]: D.EquipMelee,
  [L.WeaponSlot.Throwable]: D.EquipThrowable
};
function Y(p) {
  return document.getElementById(p);
}
function xi(p) {
  return p.button == 0;
}
function zi(p) {
  if ("which" in p) {
    return p.which == 3;
  } else {
    return p.button == 2;
  }
}
function Lt(p, b, XT) {
  if (p instanceof Array) {
    for (let XY = 0; XY < p.length; XY++) {
      Lt(p[XY], XT !== undefined ? b[XT] : b, XY);
    }
  } else if (p instanceof Object) {
    const XC = Object.keys(p);
    for (let Xl = 0; Xl < XC.length; Xl++) {
      const Xd = XC[Xl];
      Lt(p[Xd], XT !== undefined ? b[XT] : b, Xd);
    }
  } else {
    b[XT] = p;
  }
}
function At(p, b, XT) {
  if (b instanceof Array) {
    const XY = [];
    for (let XC = 0; XC < b.length; XC++) {
      XY[XC] = At(p[XC], b[XC], XT);
    }
    return XY;
  }
  if (b instanceof Object) {
    const Xl = {};
    const Xd = Object.keys(b);
    for (let Xk = 0; Xk < Xd.length; Xk++) {
      const XU = Xd[Xk];
      Xl[XU] = At(p[XU], b[XU], XT);
    }
    return Xl;
  }
  return p != b || XT;
}
function lr() {
  const p = Object.keys(w);
  const b = [];
  for (let XT = 0; XT < p.length; XT++) {
    const XY = p[XT];
    const XC = w[XY];
    if (!XC.hideUi && (XC.type == "heal" || XC.type == "boost" || XC.type == "ammo")) {
      b.push(XY);
    }
  }
  return b;
}
class bi {
  mobile = false;
  touch = false;
  rareLootMessage = {
    lootType: "",
    ticker: 0,
    duration: 0,
    opacity: 0
  };
  pickupMessage = {
    message: "",
    ticker: 0,
    duration: 0,
    opacity: 0
  };
  killMessage = {
    text: "",
    count: "",
    ticker: 0,
    duration: 0,
    opacity: 0
  };
  killFeed = Array.from({
    length: sr
  }, () => ({
    text: "",
    color: "#000000",
    offset: 0,
    opacity: 0,
    ticker: Number.MAX_VALUE
  }));
  ammo = {
    current: 0,
    remaining: 0,
    displayCurrent: false,
    displayRemaining: false
  };
  interaction = {
    type: 0,
    text: "",
    key: "",
    usable: false
  };
  weapons = Array.from({
    length: L.WeaponSlot.Count
  }, (e, t) => ({
    slot: t,
    type: "",
    ammo: 0,
    equipped: false,
    selectable: false,
    opacity: 0,
    width: 0,
    ticker: 0,
    bind: _s[t],
    bindStr: ""
  }));
  scopes = Xx.map(e => ({
    type: e,
    visible: false,
    equipped: false,
    selectable: false
  }));
  loot = lr().map(e => ({
    type: e,
    count: 0,
    maximum: 0,
    selectable: false,
    width: 0,
    ticker: 0
  }));
  perks = Array.from({
    length: or
  }, () => ({
    type: "",
    droppable: false,
    width: 0,
    ticker: 0,
    pulse: false
  }));
  gear = Xy.map(e => ({
    type: e,
    item: "",
    selectable: false,
    width: 0,
    ticker: 0,
    rot: 0
  }));
  health = L.player.health;
  boost = 0;
  downed = false;
}
class Is {
  constructor(b, XT) {
    this.localization = b;
    this.inputBinds = XT;
    const XY = this;
    for (let Xk = 0; Xk < sr; Xk++) {
      const XU = "ui-killfeed-" + Xk;
      let XW = Y(XU);
      if (!XW) {
        XW = document.createElement("div");
        XW.id = XU;
        XW.classList.add("killfeed-div");
        const XD = document.createElement("div");
        XD.classList.add("killfeed-text");
        XW.appendChild(XD);
        this.dom.killFeed.div.appendChild(XW);
      }
      this.dom.killFeed.lines.push({
        line: XW,
        text: XW.firstElementChild
      });
    }
    for (let XG = 0; XG < L.WeaponSlot.Count; XG++) {
      const XF = Y("ui-weapon-id-" + (XG + 1));
      const XH = {
        div: XF,
        type: XF.getElementsByClassName("ui-weapon-name")[0],
        number: XF.getElementsByClassName("ui-weapon-number")[0],
        image: XF.getElementsByClassName("ui-weapon-image")[0],
        ammo: XF.getElementsByClassName("ui-weapon-ammo-counter")[0]
      };
      this.dom.weapons.push(XH);
    }
    for (let p0 = 0; p0 < Xx.length; p0++) {
      const p1 = Xx[p0];
      const p2 = {
        scopeType: p1,
        div: Y("ui-scope-" + p1)
      };
      this.dom.scopes.push(p2);
    }
    for (let p3 = lr(), p4 = 0; p4 < p3.length; p4++) {
      const p5 = p3[p4];
      const p6 = Y("ui-loot-" + p5);
      if (p6) {
        const p7 = {
          lootType: p5,
          div: p6,
          count: p6.getElementsByClassName("ui-loot-count")[0],
          image: p6.getElementsByClassName("ui-loot-image")[0],
          overlay: p6.getElementsByClassName("ui-loot-overlay")[0]
        };
        this.dom.loot.push(p7);
      }
    }
    for (let p8 = 0; p8 < Xy.length; p8++) {
      const p9 = Xy[p8];
      const pX = Y("ui-armor-" + p9);
      const pp = {
        gearType: p9,
        div: pX,
        level: pX.getElementsByClassName("ui-armor-level")[0],
        image: pX.getElementsByClassName("ui-armor-image")[0]
      };
      this.dom.gear.push(pp);
    }
    for (let pb = 0; pb < or; pb++) {
      const pI = Y("ui-perk-" + pb);
      const pj = {
        perkType: "",
        div: pI,
        divTitle: pI.getElementsByClassName("tooltip-title")[0],
        divDesc: pI.getElementsByClassName("tooltip-desc")[0],
        image: pI.getElementsByClassName("ui-armor-image")[0]
      };
      this.dom.perks.push(pj);
    }
    const XC = (pf, px, py) => {
      this.eventListeners.push({
        event: pf,
        elem: px,
        fn: py
      });
      px.addEventListener(pf, py);
    };
    const Xl = (pf, px, py, pg) => {
      this.itemActions.push({
        action: pf,
        type: px,
        data: py,
        div: pg,
        actionQueued: false,
        actionTime: 0
      });
    };
    for (let pf = 0; pf < this.dom.weapons.length; pf++) {
      Xl("use", "weapon", pf, this.dom.weapons[pf].div);
      Xl("drop", "weapon", pf, this.dom.weapons[pf].div);
    }
    for (let px = 0; px < this.dom.scopes.length; px++) {
      const py = this.dom.scopes[px];
      Xl("use", "scope", py.scopeType, py.div);
      if (py.scopeType != "1xscope") {
        Xl("drop", "loot", py.scopeType, py.div);
      }
    }
    for (let pg = 0; pg < this.dom.loot.length; pg++) {
      const pQ = this.dom.loot[pg];
      const pZ = w[pQ.lootType];
      if (pZ.type == "heal" || pZ.type == "boost") {
        Xl("use", "loot", pQ.lootType, pQ.div);
      }
      Xl("drop", "loot", pQ.lootType, pQ.div);
    }
    for (let pq = 0; pq < this.dom.gear.length; pq++) {
      const pM = this.dom.gear[pq];
      if (pM.gearType != "backpack") {
        Xl("drop", "loot", pM.gearType, pM.div);
      }
    }
    for (let pE = 0; pE < this.dom.perks.length; pE++) {
      Xl("drop", "perk", pE, this.dom.perks[pE].div);
    }
    for (let pN = 0; pN < this.itemActions.length; pN++) {
      const pn = this.itemActions[pN];
      XC("mousedown", pn.div, ph => {
        if (pn.action == "use" && xi(ph) || pn.action == "drop" && zi(ph)) {
          ph.stopPropagation();
          pn.actionQueued = true;
        }
      });
      XC("mouseup", pn.div, ph => {
        if (pn.actionQueued && (pn.action == "use" && xi(ph) || pn.action == "drop" && zi(ph))) {
          ph.stopPropagation();
          this.pushAction(pn);
          pn.actionQueued = false;
        }
      });
      XC("touchstart", pn.div, ph => {
        if (ph.changedTouches.length > 0) {
          ph.stopPropagation();
          pn.actionQueued = true;
          pn.actionTime = new Date().getTime();
          pn.touchOsId = ph.changedTouches[0].identifier;
        }
      });
      XC("touchend", pn.div, ph => {
        if (new Date().getTime() - pn.actionTime < yi && pn.actionQueued && pn.action == "use") {
          this.pushAction(pn);
        }
        pn.actionQueued = false;
      });
      XC("touchcancel", pn.div, ph => {
        pn.actionQueued = false;
      });
    }
    const Xd = document.getElementById("cvs");
    this.clearQueuedItemActions = () => {
      for (let ph = 0; ph < this.itemActions.length; ph++) {
        this.itemActions[ph].actionQueued = false;
      }
      if (k.touch) {
        Xd.focus();
      }
    };
    window.addEventListener("mouseup", this.clearQueuedItemActions);
    window.addEventListener("focus", this.clearQueuedItemActions);
    this.onKeyUp = ph => {
      const pR = ph.which || ph.keyCode;
      const pP = XY.inputBinds.getBind(D.Fullscreen);
      if (pP && pR == pP.code) {
        Q.toggleFullScreen();
      }
    };
    window.addEventListener("keyup", this.onKeyUp);
  }
  oldState = new bi();
  newState = new bi();
  frameCount = 0;
  dom = {
    debugButton: Y("ui-debug-button"),
    emoteButton: Y("ui-emote-button"),
    menu: {
      touchStyles: Y("btn-touch-styles"),
      aimLine: Y("btn-game-aim-line")
    },
    rareLootMessage: {
      icon: Y("ui-perk-message-image-icon"),
      imageWrapper: Y("ui-perk-message-image-wrapper"),
      wrapper: Y("ui-perk-message-wrapper"),
      name: Y("ui-perk-message-name"),
      desc: Y("ui-perk-message-acquired")
    },
    pickupMessage: Y("ui-pickup-message"),
    killMessage: {
      div: Y("ui-kills"),
      text: Y("ui-kill-text"),
      count: Y("ui-kill-count")
    },
    killFeed: {
      div: Y("ui-killfeed-contents"),
      lines: []
    },
    weapons: [],
    ammo: {
      current: Y("ui-current-clip"),
      remaining: Y("ui-remaining-ammo"),
      reloadButton: Y("ui-reload-button-container")
    },
    interaction: {
      div: Y("ui-interaction"),
      key: Y("ui-interaction-press"),
      text: Y("ui-interaction-description")
    },
    health: {
      inner: Y("ui-health-actual"),
      depleted: Y("ui-health-depleted")
    },
    boost: {
      div: Y("ui-boost-counter"),
      bars: [Y("ui-boost-counter-0").firstElementChild, Y("ui-boost-counter-1").firstElementChild, Y("ui-boost-counter-2").firstElementChild, Y("ui-boost-counter-3").firstElementChild]
    },
    scopes: [],
    loot: [],
    gear: [],
    perks: []
  };
  rareLootMessageQueue = [];
  uiEvents = [];
  eventListeners = [];
  clearQueuedItemActions;
  onKeyUp;
  itemActions = [];
  dphRtI() {
    for (let p = 0; p < this.eventListeners.length; p++) {
      const b = this.eventListeners[p];
      b.elem.removeEventListener(b.event, b.fn);
    }
    window.removeEventListener("focus", this.clearQueuedItemActions);
    window.removeEventListener("mouseup", this.clearQueuedItemActions);
    window.removeEventListener("keyup", this.onKeyUp);
  }
  pushAction(p) {
    this.uiEvents.push({
      action: p.action,
      type: p.type,
      data: p.data
    });
  }
  flushInput() {
    this.uiEvents = [];
  }
  Gxhh(XT, XY, XC, Xl, Xd, Xk, XU) {
    const XW = this.newState;
    XW.mobile = k.mobile;
    XW.touch = k.touch;
    if (XW.touch) {
      for (let pp = 0; pp < this.itemActions.length; pp++) {
        const pb = this.itemActions[pp];
        if (pb.actionQueued && pb.action == "drop") {
          const pI = new Date().getTime();
          if (pI - pb.actionTime >= yi) {
            this.pushAction(pb);
            pb.actionTime = pI;
            pb.actionQueued = false;
          }
        }
      }
    }
    if (XW.rareLootMessage.ticker >= XW.rareLootMessage.duration && this.rareLootMessageQueue.length > 0) {
      const pj = this.rareLootMessageQueue.shift();
      XW.rareLootMessage.lootType = pj;
      XW.rareLootMessage.ticker = 0;
      XW.rareLootMessage.duration = this.rareLootMessageQueue.length > 0 ? 2 : 4;
      XW.rareLootMessage.opacity = 0;
    }
    XW.rareLootMessage.ticker += XT;
    const XD = XW.rareLootMessage.ticker;
    const XG = XW.rareLootMessage.duration;
    XW.rareLootMessage.opacity = 1 - e.smoothstep(XD, XG - 0.2, XG);
    XW.pickupMessage.ticker += XT;
    const XF = XW.pickupMessage.ticker;
    const XH = XW.pickupMessage.duration;
    XW.pickupMessage.opacity = e.smoothstep(XF, 0, 0.2) * (1 - e.smoothstep(XF, XH, XH + 0.2)) * (1 - XW.rareLootMessage.opacity);
    XW.killMessage.ticker += XT;
    const p0 = XW.killMessage.ticker;
    const p1 = XW.killMessage.duration;
    XW.killMessage.opacity = (1 - e.smoothstep(p0, p1 - 0.2, p1)) * (1 - XW.rareLootMessage.opacity);
    let p2 = 0;
    for (let pf = 0; pf < XW.killFeed.length; pf++) {
      const px = XW.killFeed[pf];
      px.ticker += XT;
      const py = px.ticker;
      px.offset = p2;
      px.opacity = e.smoothstep(py, 0, 0.25) * (1 - e.smoothstep(py, 6, 6.5));
      p2 += e.min(py / 0.25, 1);
      if (k.mobile) {
        px.opacity = py < 6.5 ? 1 : 0;
      }
    }
    XW.health = XY.QDvlP.GUi ? 0 : e.max(XY.KkvfHn.izX, 1);
    XW.boost = XY.KkvfHn.ytAUxB;
    XW.downed = XY.QDvlP.RxB;
    let p3 = 0;
    let p4 = null;
    let p5 = true;
    if (XY.canInteract(Xk)) {
      let pg = null;
      let pQ = 0;
      const pZ = Xk.NmwMZ.KGHPNo();
      for (let pE = 0; pE < pZ.length; pE++) {
        const pN = pZ[pE];
        if (pN.active && !pN.dead && t.sameLayer(pN.layer, XY.layer)) {
          const pn = pN.getInteraction();
          if (pn) {
            const ph = T.intersectCircle(pN.collider, XY.QDvlP.NLYJ, pn.rad + XY.Guz);
            if (ph && ph.pen >= pQ) {
              pg = pN;
              pQ = ph.pen;
            }
          }
        }
      }
      if (pg) {
        p3 = 4;
        p4 = pg;
        p5 = true;
      }
      const pq = Xd.getClosestLoot();
      if (pq && !XY.QDvlP.RxB) {
        const pR = w[pq.type];
        const pP = XY.CNXJhh(L.WeaponSlot.Primary);
        const pA = XY.CNXJhh(L.WeaponSlot.Secondary);
        const pJ = pP && pA;
        const pS = pR.type != "gun" || !pJ || XY.lYZ() == "gun";
        let pB = false;
        if (XW.touch && pR.type == "helmet" && XY.MrYb() == pR.level && pq.type != XY.QDvlP.SMDXye || pR.type == "chest" && XY.tsugJO() == pR.level && pq.type != XY.QDvlP.JyI) {
          pB = true;
        }
        if (pS || k.uiLayout == k.UiLayout.Sm) {
          p3 = 2;
          p4 = pq;
        }
        p5 = pS && (!XW.touch || pR.type == "gun" || pR.type == "melee" || pR.type == "outfit" || pR.type == "perk" || pB);
      }
      const pM = XY.PsSK("self_revive");
      if (XY.TvMV.type == Xp.None && (!XY.QDvlP.RxB || pM)) {
        const pc = Xl.getPlayerInfo(XY.__id).teamId;
        const pu = Xl.playerPool.KGHPNo();
        for (let pV = 0; pV < pu.length; pV++) {
          const pz = pu[pV];
          if (pz.active) {
            const pw = Xl.getPlayerInfo(pz.__id).teamId;
            if ((pz.__id != XY.__id || pM) && pc == pw && pz.QDvlP.RxB && !pz.QDvlP.GUi && pz.TvMV.type != Xp.Revive && v.length(v.sub(pz.QDvlP.NLYJ, XY.QDvlP.NLYJ)) < L.player.reviveRange && t.sameLayer(pz.layer, XY.layer)) {
              p3 = 3;
              p4 = pz;
              p5 = true;
            }
          }
        }
      }
      if (XY.TvMV.type == Xp.Revive && XY.QDvlP.RxB && !pM) {
        p3 = 0;
        p4 = null;
        p5 = false;
      }
      if ((XY.TvMV.type == Xp.UseItem || XY.TvMV.type == Xp.Revive && (!XY.QDvlP.RxB || pM)) && !XC) {
        p3 = 1;
        p4 = null;
        p5 = true;
      }
    }
    XW.interaction.type = p3;
    XW.interaction.text = this.getInteractionText(p3, p4, XY);
    XW.interaction.key = this.getInteractionKey(p3);
    XW.interaction.usable = p5 && !XC;
    for (let pO = 0; pO < XY.KkvfHn.MDx.length; pO++) {
      const pL = XY.KkvfHn.MDx[pO];
      const pv = XW.weapons[pO];
      pv.type = pL.type;
      pv.ammo = pL.ammo;
      if (pO == L.WeaponSlot.Throwable) {
        pv.ammo = XY.KkvfHn.uYAn[pL.type] || 0;
      }
      const pK = pv.equipped;
      pv.equipped = pO == XY.KkvfHn.hCoMzm;
      pv.selectable = (pL.type != "" || pO == 0 || pO == 1) && !XC;
      const pm = pv.equipped ? 1 : 0.6;
      const pT = pm - pv.opacity;
      const pY = e.min(pT, e.sign(pT) * XT / 0.15);
      pv.opacity = e.clamp(pv.opacity + pY, 0, 1);
      if (k.mobile) {
        pv.opacity = pm;
      }
      if (pv.type == "bugle" && pv.ammo == 0) {
        pv.opacity = 0.25;
      }
      pv.ticker += XT;
      if (!pv.equipped || !pK) {
        pv.ticker = 0;
      }
      if (this.frameCount < 2) {
        pv.ticker = 1;
      }
      const pC = e.min(pv.ticker / 0.09, Math.PI);
      const pl = Math.sin(pC);
      pv.width = pl < 0.001 ? 0 : pl;
      if (k.mobile) {
        pv.width = 0;
      }
      const pd = XU.getBind(pv.bind);
      pv.bindStr = pd ? pd.toString() : "";
    }
    const p6 = XW.weapons[XY.KkvfHn.hCoMzm];
    const p7 = w[p6.type];
    const p8 = p6.ammo;
    const p9 = p7.type == "gun" ? p7.ammoInfinite || XY.PsSK("endless_ammo") && !p7.ignoreEndlessAmmo ? Number.MAX_VALUE : XY.KkvfHn.uYAn[p7.ammo] : 0;
    XW.ammo.current = p8;
    XW.ammo.remaining = p9;
    XW.ammo.displayCurrent = p7.type != "melee";
    XW.ammo.displayRemaining = p9 > 0;
    for (let pk = 0; pk < XW.scopes.length; pk++) {
      const pU = XW.scopes[pk];
      pU.visible = XY.KkvfHn.uYAn[pU.type] > 0;
      pU.equipped = pU.visible && XY.KkvfHn.CRJZL == pU.type;
      pU.selectable = pU.visible && !XC;
    }
    for (let pW = XY.Rlf(), pD = 0; pD < XW.loot.length; pD++) {
      const pG = XW.loot[pD];
      const pF = pG.count;
      pG.count = XY.KkvfHn.uYAn[pG.type] || 0;
      pG.maximum = L.bagSizes[pG.type][pW];
      pG.selectable = pG.count > 0 && !XC;
      if (pG.count > pF) {
        pG.ticker = 0;
      }
      if (this.frameCount < 2) {
        pG.ticker = 1;
      }
      pG.ticker += XT;
      const pH = e.min(pG.ticker / 0.05, Math.PI);
      const b0 = Math.sin(pH);
      pG.width = b0 < 0.001 ? 0 : b0;
      if (k.mobile) {
        pG.width = 0;
      }
    }
    for (let b1 = 0; b1 < XW.gear.length; b1++) {
      const b2 = XW.gear[b1];
      let b3 = "";
      if (b2.type == "chest") {
        b3 = XY.QDvlP.JyI;
      } else if (b2.type == "helmet") {
        b3 = XY.QDvlP.SMDXye;
      } else if (b2.type == "backpack" && (b3 = XY.QDvlP.wYo) == "backpack00") {
        b3 = "";
      }
      const b4 = b2.item;
      b2.item = b3;
      b2.selectable = b3 != "" && !XC;
      if (b4 != b2.item) {
        b2.ticker = 0;
      }
      if (this.frameCount < 2) {
        b2.ticker = 1;
      }
      b2.ticker += XT;
      const b5 = e.min(b2.ticker / 0.05, Math.PI);
      const b6 = Math.sin(b5);
      b2.width = b6 < 0.001 ? 0 : b6;
      if (k.mobile) {
        b2.width = 0;
      }
    }
    for (let b7 = 0; b7 < XW.perks.length; b7++) {
      const b8 = XW.perks[b7];
      if (XY.perks.length > b7) {
        const b9 = XY.perks[b7];
        b8.type = b9.type;
        b8.droppable = b9.droppable;
        if (b9.isNew) {
          b8.ticker = 0;
        }
        if (this.frameCount < 2) {
          b8.ticker = 1;
        }
        b8.ticker += XT;
        const bX = e.min(b8.ticker / 0.05, Math.PI);
        const bp = Math.sin(bX);
        b8.width = bp < 0.001 ? 0 : bp;
        if (k.mobile) {
          b8.width = 0;
        }
        b8.pulse = !k.mobile && b8.ticker < 4;
      } else {
        b8.type = "";
      }
    }
    const pX = At(this.oldState, this.newState, this.frameCount++ == 0);
    this.render(pX, this.newState);
    Lt(this.newState, this.oldState);
  }
  render(p, b) {
    const XT = this.dom;
    if (p.touch) {
      XT.interaction.key.style.backgroundImage = b.touch ? "url('img/gui/tap.svg')" : "none";
      if (b.touch) {
        XT.interaction.key.innerHTML = "";
      }
      XT.menu.touchStyles.style.display = b.touch ? "flex" : "none";
      XT.menu.aimLine.style.display = b.touch ? "block" : "none";
      XT.ammo.reloadButton.style.display = b.touch ? "block" : "none";
      XT.emoteButton.style.display = b.touch ? "block" : "none";
      if (XT.debugButton) {
        XT.debugButton.style.display = b.touch ? "block" : "none";
      }
    }
    if (p.rareLootMessage.lootType) {
      const XY = b.rareLootMessage.lootType;
      const XC = w[XY];
      if (XC && XC.type == "xp") {
        const XU = this.localization.translate("game-xp-drop-desc");
        XT.rareLootMessage.desc.innerHTML = "+" + XC.xp + " " + XU;
      } else {
        XT.rareLootMessage.desc.innerHTML = "";
      }
      const Xl = XC?.lootImg?.border ? "url(img/loot/" + XC.lootImg.border.slice(0, -4) + ".svg)" : "none";
      XT.rareLootMessage.imageWrapper.style.backgroundImage = Xl;
      const Xd = Q.getSvgFromGameType(XY);
      XT.rareLootMessage.icon.style.backgroundImage = Xd ? "url('" + Xd + "')" : "none";
      const Xk = this.localization.translate("game-" + XY);
      XT.rareLootMessage.name.innerHTML = Xk;
    }
    if (p.rareLootMessage.opacity) {
      XT.rareLootMessage.wrapper.style.opacity = String(b.rareLootMessage.opacity);
    }
    if (p.pickupMessage.message) {
      XT.pickupMessage.innerHTML = b.pickupMessage.message;
    }
    if (p.pickupMessage.opacity) {
      XT.pickupMessage.style.opacity = String(b.pickupMessage.opacity);
    }
    if (p.killMessage.text || p.killMessage.count) {
      XT.killMessage.text.innerHTML = b.killMessage.text;
      XT.killMessage.count.innerHTML = b.killMessage.count;
    }
    if (p.killMessage.opacity) {
      XT.killMessage.div.style.opacity = String(b.killMessage.opacity);
    }
    for (let XW = 0; XW < p.killFeed.length; XW++) {
      const XD = p.killFeed[XW];
      const XG = XT.killFeed.lines[XW];
      const XF = b.killFeed[XW];
      if (XD.text) {
        XG.text.innerHTML = XF.text;
      }
      if (XD.offset) {
        const XH = k.uiLayout != k.UiLayout.Sm || k.tablet ? 35 : 15;
        XG.line.style.top = Math.floor(XF.offset * XH) + "px";
      }
      if (XD.color) {
        XG.text.style.color = XF.color;
      }
      if (XD.opacity) {
        XG.line.style.opacity = String(XF.opacity);
      }
    }
    if (p.health || p.downed) {
      const p0 = [{
        health: 100,
        color: [179, 179, 179]
      }, {
        health: 100,
        color: [255, 255, 255]
      }, {
        health: 75,
        color: [255, 255, 255]
      }, {
        health: 75,
        color: [255, 158, 158]
      }, {
        health: 25,
        color: [255, 82, 82]
      }, {
        health: 25,
        color: [255, 0, 0]
      }, {
        health: 0,
        color: [255, 0, 0]
      }];
      let p1 = 0;
      const p2 = Math.ceil(b.health);
      while (p0[p1].health > p2 && p1 < p0.length - 1) {
        p1++;
      }
      const p3 = p0[e.max(p1 - 1, 0)];
      const p4 = p0[p1];
      const p5 = e.delerp(b.health, p3.health, p4.health);
      let p6 = [Math.floor(e.lerp(p5, p3.color[0], p4.color[0])), Math.floor(e.lerp(p5, p3.color[1], p4.color[1])), Math.floor(e.lerp(p5, p3.color[2], p4.color[2]))];
      if (b.downed) {
        p6 = [255, 0, 0];
      }
      XT.health.inner.style.backgroundColor = "rgba(" + p6[0] + ", " + p6[1] + ", " + p6[2] + ", 1.0)";
      XT.health.inner.style.width = b.health + "%";
      XT.health.depleted.style.width = b.health + "%";
      XT.health.depleted.style.display = b.health > 0 ? "block" : "none";
      if (b.health > 25) {
        XT.health.inner.classList.remove("ui-bar-danger");
      } else {
        XT.health.inner.classList.add("ui-bar-danger");
      }
    }
    if (p.boost) {
      const p7 = L.player.boostBreakpoints;
      let p8 = 0;
      for (let p9 = 0; p9 < p7.length; p9++) {
        p8 += p7[p9];
      }
      for (let pX = b.boost / 100, pp = 0; pp < XT.boost.bars.length; pp++) {
        const pb = p7[pp] / p8;
        const pI = e.clamp(pX / pb, 0, 1);
        pX = e.max(pX - pb, 0);
        XT.boost.bars[pp].style.width = pI * 100 + "%";
      }
      XT.boost.div.style.opacity = String(b.boost == 0 ? 0 : 1);
    }
    if (p.interaction.type) {
      XT.interaction.div.style.display = b.interaction.type == 0 ? "none" : "flex";
    }
    if (p.interaction.text) {
      XT.interaction.text.innerHTML = b.interaction.text;
    }
    if (p.interaction.key) {
      XT.interaction.key.innerHTML = b.touch ? "" : b.interaction.key;
      XT.interaction.key.className = XT.interaction.key.innerHTML.length > 1 ? "ui-interaction-small" : "ui-interaction-large";
    }
    if (p.interaction.usable) {
      XT.interaction.key.style.display = b.interaction.usable ? "block" : "none";
    }
    for (let pj = 0; pj < p.weapons.length; pj++) {
      const pf = p.weapons[pj];
      const px = XT.weapons[pj];
      const py = b.weapons[pj];
      if (pf.type) {
        let pg = "";
        let pQ = "";
        const pZ = w[py.type];
        if (pZ) {
          pg = this.localization.translate("game-hud-" + py.type) || this.localization.translate("game-" + py.type);
          pQ = Q.getCssTransformFromGameType(py.type);
        }
        px.type.innerHTML = pg;
        px.image.src = Q.getSvgFromGameType(py.type);
        px.image.style.display = pZ ? "inline" : "none";
        px.image.style.transform = pQ;
      }
      if (pf.equipped) {
        px.div.style.backgroundColor = py.equipped ? "rgba(0, 0, 0, 0.4)" : "rgba(0, 0, 0, 0)";
      }
      if (pf.selectable) {
        px.div.style.pointerEvents = py.type != "" || py.selectable ? "auto" : "none";
      }
      if (pf.width) {
        const pq = e.lerp(py.width, 83.33, 100);
        px.div.style.width = pq + "%";
      }
      if (pf.opacity) {
        px.div.style.opacity = String(py.opacity);
      }
      if (pf.ammo && px.ammo) {
        px.ammo.innerHTML = String(py.ammo);
        px.ammo.style.display = py.ammo > 0 ? "block" : "none";
      }
      if (pf.bindStr) {
        px.number.innerHTML = py.bindStr[0] || "";
      }
    }
    if (p.ammo.current) {
      const pM = b.ammo.current;
      XT.ammo.current.innerHTML = String(pM);
      XT.ammo.current.style.color = pM > 0 ? "white" : "red";
    }
    if (p.ammo.remaining) {
      const pE = b.ammo.remaining;
      XT.ammo.remaining.innerHTML = String(pE == Number.MAX_VALUE ? "&#8734;" : pE);
      XT.ammo.remaining.style.color = pE != 0 ? "white" : "red";
    }
    if (p.ammo.displayCurrent) {
      XT.ammo.current.style.opacity = String(b.ammo.displayCurrent ? 1 : 0);
    }
    if (p.ammo.displayRemaining) {
      XT.ammo.remaining.style.opacity = String(b.ammo.displayRemaining ? 1 : 0);
      XT.ammo.reloadButton.style.opacity = String(b.ammo.displayRemaining ? 1 : 0);
    }
    for (let pN = 0; pN < p.scopes.length; pN++) {
      const pn = p.scopes[pN];
      const ph = XT.scopes[pN];
      const pR = b.scopes[pN];
      if (pn.visible) {
        if (pR.visible) {
          ph.div.classList.remove("ui-hidden");
        } else {
          ph.div.classList.add("ui-hidden");
        }
      }
      if (pn.equipped) {
        if (pR.equipped) {
          ph.div.classList.add("ui-zoom-active");
          ph.div.classList.remove("ui-zoom-inactive");
        } else {
          ph.div.classList.remove("ui-zoom-active");
          ph.div.classList.add("ui-zoom-inactive");
        }
      }
      if (pn.selectable) {
        ph.div.style.pointerEvents = pR.selectable ? "auto" : "none";
      }
    }
    for (let pP = 0; pP < p.loot.length; pP++) {
      const pA = p.loot[pP];
      const pJ = XT.loot[pP];
      const pS = b.loot[pP];
      if (pA && pJ && pS) {
        if (pA.count || pA.maximum) {
          pJ.count.innerHTML = String(pS.count);
          pJ.div.style.opacity = String(w[pJ.lootType].special && pS.count == 0 ? 0 : pS.count > 0 ? 1 : 0.25);
          pJ.div.style.color = pS.count == pS.maximum ? "#ff9900" : "#ffffff";
        }
        if (pA.width) {
          const pB = 1 + pS.width * 0.33;
          const pc = "scale(" + pB + ", " + pB + ")";
          pJ.image.style.transform = pc;
          if (pJ.overlay) {
            pJ.overlay.style.transform = pc;
          }
        }
        if (pA.selectable) {
          pJ.div.style.pointerEvents = pS.selectable ? "auto" : "none";
        }
      }
    }
    for (let pu = 0; pu < p.gear.length; pu++) {
      const pV = p.gear[pu];
      const pz = XT.gear[pu];
      const pw = b.gear[pu];
      if (pV.item) {
        const pO = pw.item ? w[pw.item] : null;
        const pL = pO ? pO.level : 0;
        pz.div.style.display = pO ? "block" : "none";
        pz.level.innerHTML = this.localization.translate("game-level-" + pL);
        pz.level.style.color = pL >= 3 ? "#ff9900" : "#ffffff";
        pz.image.src = Q.getSvgFromGameType(pw.item);
      }
      if (pV.selectable) {
        pz.div.style.pointerEvents = pw.selectable ? "auto" : "none";
      }
      if (pV.width) {
        const pv = 1 + pw.width * 0.33;
        let pK = "scale(" + pv + ", " + pv + ")";
        const pm = w[pw.item];
        if (pm?.lootImg.rot !== undefined) {
          pK += " rotate(" + pm.lootImg.rot + "rad)";
        }
        pz.image.style.transform = pK;
      }
    }
    for (let pT = 0; pT < p.perks.length; pT++) {
      const pY = p.perks[pT];
      const pC = XT.perks[pT];
      const pl = b.perks[pT];
      if (pY.type) {
        pC.perkType = pl.type;
        pC.divTitle.innerHTML = this.localization.translate("game-" + pl.type);
        pC.divDesc.innerHTML = this.localization.translate("game-" + pl.type + "-desc");
        pC.div.style.display = pl.type ? "block" : "none";
        pC.image.src = pl.type ? Q.getSvgFromGameType(pl.type) : "";
      }
      if (pY.droppable) {
        if (pl.droppable) {
          pC.div.classList.add("ui-outline-hover");
          pC.div.classList.remove("ui-perk-no-drop");
        } else {
          pC.div.classList.remove("ui-outline-hover");
          pC.div.classList.add("ui-perk-no-drop");
        }
      }
      if (pY.pulse) {
        if (pl.pulse) {
          pC.div.classList.add("ui-perk-pulse");
        } else {
          pC.div.classList.remove("ui-perk-pulse");
        }
      }
      if (pY.width) {
        const pd = 1 + pl.width * 0.33;
        pC.image.style.transform = "scale(" + pd + ", " + pd + ")";
      }
    }
  }
  displayPickupMessage(p) {
    const b = this.newState.pickupMessage;
    b.message = this.getPickupMessageText(p);
    b.ticker = 0;
    b.duration = 3;
  }
  displayKillMessage(p, b) {
    const XT = this.newState.killMessage;
    XT.text = p;
    XT.count = b;
    XT.ticker = 0;
    XT.duration = 7;
  }
  hideKillMessage() {
    this.newState.killMessage.ticker = e.max(this.newState.killMessage.ticker, this.newState.killMessage.duration - 0.2);
  }
  addRareLootMessage(p, b) {
    if (b) {
      this.newState.rareLootMessage.ticker = this.newState.rareLootMessage.duration;
      this.rareLootMessageQueue = [];
    }
    this.rareLootMessageQueue.push(p);
  }
  removeRareLootMessage(p) {
    const b = this.rareLootMessageQueue.indexOf(p);
    if (b >= 0) {
      this.rareLootMessageQueue.splice(b, 1);
    }
    if (this.newState.rareLootMessage.lootType == p) {
      this.newState.rareLootMessage.ticker = this.newState.rareLootMessage.duration;
    }
  }
  getRareLootMessageText(p) {
    if (w[p]) {
      return "Acquired perk: " + this.localization.translate("game-" + p);
    } else {
      return "";
    }
  }
  addKillFeedMessage(p, b) {
    const XT = this.newState.killFeed;
    const XY = XT[XT.length - 1];
    XY.text = p;
    XY.color = b;
    XY.ticker = 0;
    XT.sort((XC, Xl) => XC.ticker - Xl.ticker);
  }
  getKillFeedText(p, b, XT, XY, XC) {
    switch (XY) {
      case Xg.Player:
        return b + " " + this.localization.translate(XC ? "game-knocked-out" : "game-killed") + " " + p + " " + this.localization.translate("game-with") + " " + this.localization.translate("game-" + XT);
      case Xg.Bleeding:
        {
          const Xl = this.localization.translate(b ? "game-finally-killed" : "game-finally-bled-out");
          if (b) {
            return b + " " + Xl + " " + p;
          } else {
            return p + " " + Xl;
          }
        }
      case Xg.Gas:
        {
          let Xd;
          let Xk;
          if (XC) {
            Xd = this.localization.translate("game-the-red-zone");
            Xk = this.localization.translate("game-knocked-out");
          } else {
            Xk = this.localization.translate(b ? "game-finally-killed" : "game-died-outside");
          }
          if (Xd) {
            return Xd + " " + Xk + " " + p;
          } else {
            return p + " " + Xk;
          }
        }
      case Xg.Airdrop:
        {
          const XU = a[XT];
          const XW = this.localization.translate("game-the-air-drop");
          const XD = XC ? this.localization.translate("game-knocked-out") : XU && !XU.airdropCrate ? this.localization.translate("game-killed") : this.localization.translate("game-crushed");
          return XW + " " + XD + " " + p;
        }
      case Xg.Airstrike:
        {
          const XG = this.localization.translate(XC ? "game-knocked-out" : "game-killed");
          if (b) {
            return b + " " + XG + " " + p + " " + this.localization.translate("game-with") + " " + this.localization.translate("game-an-air-strike");
          } else {
            return this.localization.translate("game-the-air-strike") + " " + XG + " " + p;
          }
        }
      default:
        return "";
    }
  }
  getKillFeedColor(p, b, XT, XY) {
    if (XY) {
      return "#efeeee";
    } else if (p == b) {
      return "#d1777c";
    } else if (p == XT) {
      return "#00bfff";
    } else {
      return "#efeeee";
    }
  }
  getRoleKillFeedColor(p, b, XT) {
    const XY = w[p];
    if (XY?.killFeed?.color) {
      return XY.killFeed.color;
    } else {
      return Q.colorToHexString(XT.getTeamColor(b));
    }
  }
  getRoleTranslation(p, b) {
    let XT = "game-" + p;
    if (p == "leader") {
      XT = b == 1 ? "game-red-leader" : "game-blue-leader";
    }
    return this.localization.translate(XT);
  }
  getRoleAnnouncementText(p, b) {
    return this.localization.translate("game-youve-been-promoted-to") + " " + this.getRoleTranslation(p, b) + "!";
  }
  getRoleAssignedKillFeedText(p, b, XT) {
    const XY = this.getRoleTranslation(p, b);
    return XT + " " + this.localization.translate("game-promoted-to") + " " + XY + "!";
  }
  getRoleKilledKillFeedText(p, b, XT) {
    const XY = this.getRoleTranslation(p, b);
    if (XT) {
      return XT + " " + this.localization.translate("game-killed") + " " + XY + "!";
    } else {
      return XY + " " + this.localization.translate("game-is-dead") + "!";
    }
  }
  getKillText(b, XT, XY, XC, Xl, Xd, Xk, XU, XW) {
    const XD = XC && !Xl;
    const XG = XW ? b : this.localization.translate("game-you").toUpperCase();
    const XF = XD ? "game-knocked-out" : XY ? "game-killed" : "game-finally-killed";
    const XH = this.localization.translate(XF);
    const p0 = Xd ? XW ? this.localization.translate("game-themselves") : this.localization.translate("game-yourself").toUpperCase() : XT;
    const p1 = this.localization.translate(XU == L.DamageType.Airstrike ? "game-an-air-strike" : "game-" + Xk);
    const p2 = this.localization.translate("game-with");
    if (p1 && (XY || XD)) {
      return XG + " " + XH + " " + p0 + " " + p2 + " " + p1;
    } else {
      return XG + " " + XH + " " + p0;
    }
  }
  getKillCountText(p) {
    return p + " " + this.localization.translate(p != 1 ? "game-kills" : "game-kill");
  }
  getDownedText(p, b, XT, XY, XC) {
    const Xl = XC ? b : this.localization.translate("game-you").toUpperCase();
    let Xd = p;
    if (!Xd) {
      if (XY == L.DamageType.Gas) {
        Xd = this.localization.translate("game-the-red-zone");
      } else if (XY == L.DamageType.Airdrop) {
        Xd = this.localization.translate("game-the-air-drop");
      } else if (XY == L.DamageType.Airstrike) {
        Xd = this.localization.translate("game-the-air-strike");
      }
    }
    let Xk = this.localization.translate("game-" + XT);
    if (p && XY == L.DamageType.Airstrike) {
      Xk = this.localization.translate("game-an-air-strike");
    }
    const XU = this.localization.translate("game-with");
    if (Xk) {
      return Xd + " knocked " + Xl + " out " + XU + " " + Xk;
    } else {
      return Xd + " knocked " + Xl + " out";
    }
  }
  getPickupMessageText(p) {
    const b = {
      [XQ.Full]: "game-not-enough-space",
      [XQ.AlreadyOwned]: "game-item-already-owned",
      [XQ.AlreadyEquipped]: "game-item-already-equipped",
      [XQ.BetterItemEquipped]: "game-better-item-equipped",
      [XQ.GunCannotFire]: "game-gun-cannot-fire"
    };
    const XT = b[p] || b[XQ.Full];
    return this.localization.translate(XT);
  }
  getInteractionText(p, b, XT) {
    switch (p) {
      case 0:
        return "";
      case 1:
        return this.localization.translate("game-cancel");
      case 3:
        if (b && XT && b == XT && XT.PsSK("self_revive")) {
          return this.localization.translate("game-revive-self");
        } else {
          return this.localization.translate("game-revive-teammate");
        }
      case 4:
        {
          const XY = b.getInteraction();
          return this.localization.translate(XY.action) + " " + this.localization.translate(XY.object);
        }
      case 2:
        {
          const XC = b;
          let Xl = this.localization.translate("game-" + XC.type) || XC.type;
          if (XC.count > 1) {
            Xl += " (" + XC.count + ")";
          }
          return Xl;
        }
      default:
        return "";
    }
  }
  getInteractionKey(p) {
    let b = null;
    switch (p) {
      case 1:
        b = this.inputBinds.getBind(D.Cancel);
        break;
      case 2:
        b = this.inputBinds.getBind(D.Loot) || this.inputBinds.getBind(D.Interact);
        break;
      case 4:
        b = this.inputBinds.getBind(D.Use) || this.inputBinds.getBind(D.Interact);
        break;
      case 3:
        b = this.inputBinds.getBind(D.Revive) || this.inputBinds.getBind(D.Interact);
        break;
      case 0:
      default:
        b = this.inputBinds.getBind(D.Use);
    }
    if (b) {
      return b.toString();
    } else {
      return "<Unbound>";
    }
  }
}
function Ms() {
  const p = {
    "ui-loot-bandage": "img/loot/loot-medical-bandage.svg",
    "ui-loot-healthkit": "img/loot/loot-medical-healthkit.svg",
    "ui-loot-soda": "img/loot/loot-medical-soda.svg",
    "ui-loot-painkiller": "img/loot/loot-medical-pill.svg",
    "ui-loot-9mm": "img/loot/loot-ammo-box.svg",
    "ui-loot-12gauge": "img/loot/loot-ammo-box.svg",
    "ui-loot-762mm": "img/loot/loot-ammo-box.svg",
    "ui-loot-556mm": "img/loot/loot-ammo-box.svg",
    "ui-loot-50AE": "img/loot/loot-ammo-box.svg",
    "ui-loot-308sub": "img/loot/loot-ammo-box.svg",
    "ui-loot-flare": "img/loot/loot-ammo-box.svg",
    "ui-loot-45acp": "img/loot/loot-ammo-box.svg"
  };
  for (const [b, XT] of Object.entries(p)) {
    Y(b).getElementsByClassName("ui-loot-image")[0].src = XT;
  }
  Y("mag-glass-white").src = "img/gui/mag-glass.svg";
  Y("ui-minimize-img").src = "img/gui/minimize.svg";
}
class Ts {
  constructor(b, XT, XY, XC, Xl, Xd, Xk, XU, XW, XD, XG, XF) {
    this.cehf = b;
    this.GcFc = XT;
    this.nXcQdw = XY;
    this.sfj = XC;
    this.oTycZ = Xl;
    this.zsT = Xd;
    this.zie = Xk;
    this.nCO = XU;
    this.dGucoK = XW;
    this.respawns = XD;
    this.onJoin = XG;
    this.onQuit = XF;
    this.cehf = b;
    this.GcFc = XT;
    this.nCO = XU;
    this.nXcQdw = XY;
    this.sfj = XC;
    this.oTycZ = Xl;
    this.zsT = Xd;
    this.zie = Xk;
    this.dGucoK = XW;
  }
  initialized = false;
  teamMode = Xj.Solo;
  victoryMusic = null;
  hwpWO = null;
  connecting = false;
  connected = false;
  XpRJqf;
  Solrb;
  eBew;
  tetX;
  qfLfG;
  xdZjN;
  MTkCb;
  NDV;
  ACF;
  hpFatr;
  UYCd;
  NfHGD;
  NgtzXw;
  jLzt;
  QfnjIN;
  NOCRp;
  AqOEo;
  cfYfi;
  PqZq;
  DxRdO;
  tCoR;
  GsClp;
  pOSlOC;
  rjYbuw;
  OSRLcj;
  HTzAB;
  FtXCz;
  ONPnmU;
  LSU;
  vQHD;
  LzLNO;
  PkRzLK;
  TmD;
  xBFht;
  vCsfL;
  Lnf;
  Nqo;
  kEfsQ;
  QwZT;
  OPKT;
  hIBMF;
  seq;
  seqInFlight;
  seqSendTime;
  pings;
  debugPingTime;
  lastUpdateTime;
  updateIntervals;
  tryJoinGame(p, b, XT, XY, XC) {
    if (!this.connecting && !this.connected && !this.initialized) {
      if (this.hwpWO) {
        this.hwpWO.onerror = function () {};
        this.hwpWO.onopen = function () {};
        this.hwpWO.onmessage = function () {};
        this.hwpWO.onclose = function () {};
        this.hwpWO.close();
        this.hwpWO = null;
      }
      this.connecting = true;
      this.connected = false;
      try {
        this.hwpWO = new WebSocket(p);
        this.hwpWO.binaryType = "arraybuffer";
        this.hwpWO.onerror = Xl => {
          this.hwpWO?.close();
        };
        this.hwpWO.onopen = () => {
          this.connecting = false;
          this.connected = true;
          const Xl = this.sfj.get("playerName");
          const Xd = new XZ();
          Xd.protocol = L.protocolVersion;
          Xd.matchPriv = b;
          Xd.loadoutPriv = XT;
          Xd.questPriv = XY;
          Xd.name = Xl;
          Xd.useTouch = k.touch;
          Xd.isMobile = k.mobile || window.mobile;
          Xd.bot = false;
          Xd.loadout = this.sfj.get("loadout");
          this.onRgH(Xq.Join, Xd, 8192);
        };
        this.hwpWO.onmessage = Xl => {
          const Xd = new XM(Xl.data);
          while (true) {
            const Xk = Xd.deserializeMsgType();
            if (Xk == Xq.None) {
              break;
            }
            this.hMOHjl(Xk, Xd.getStream());
          }
        };
        this.hwpWO.onclose = () => {
          const Xl = this.cfYfi?.displayingStats;
          const Xd = this.connecting;
          const Xk = this.connected;
          this.connecting = false;
          this.connected = false;
          if (Xd) {
            XC();
          } else if (Xk && !this.LSU && !Xl) {
            const XU = this.FtXCz || "index-host-closed";
            this.onQuit(XU);
          }
        };
      } catch (Xl) {
        console.error(Xl);
        this.connecting = false;
        this.connected = false;
        XC();
      }
    }
  }
  init() {
    this.rjYbuw = this.cehf.renderer.type == R.CANVAS;
    this.XpRJqf = new gs(this.oTycZ, this.sfj);
    this.Solrb = new Ui();
    this.eBew = new ar(this, this.rjYbuw);
    this.tetX = new Ji(this.eBew);
    this.qfLfG = new Yi();
    this.xdZjN = new Zi(this.qfLfG);
    this.MTkCb = new ir();
    this.NDV = new Ba();
    this.ACF = new $a();
    this.hpFatr = new os();
    this.UYCd = new Wa();
    this.NfHGD = new is(this.GcFc);
    this.NgtzXw = new Ea();
    this.jLzt = new rr();
    this.QfnjIN = new Fa();
    this.NOCRp = new Za();
    this.AqOEo = new va(this.rjYbuw);
    this.cfYfi = new vs(this, this.GcFc, this.tetX, this.NfHGD, this.nXcQdw, this.rjYbuw, this.XpRJqf, this.zsT, this.zie);
    this.PqZq = new Is(this.nXcQdw, this.zsT);
    this.DxRdO = new ba(this.GcFc, this.cfYfi, this.MTkCb, this.Solrb, this.xdZjN);
    this.tCoR = new ls();
    const p = {
      [X2.Player]: this.MTkCb.playerPool,
      [X2.Obstacle]: this.xdZjN.NmwMZ,
      [X2.Loot]: this.NOCRp.lootPool,
      [X2.DeadBody]: this.QfnjIN.deadBodyPool,
      [X2.Building]: this.xdZjN.nNUjss,
      [X2.Structure]: this.xdZjN.JCfHy,
      [X2.Decal]: this.qfLfG.decalPool,
      [X2.Projectile]: this.hpFatr.projectilePool,
      [X2.Smoke]: this.jLzt.LbSzdS,
      [X2.Airdrop]: this.NgtzXw.airdropPool
    };
    this.GsClp = new Qi();
    for (const XT in p) {
      if (p.hasOwnProperty(XT)) {
        this.GsClp.ACE(XT, p[XT]);
      }
    }
    this.pOSlOC = new r();
    const b = [this.xdZjN.display.ground, this.eBew.layers[0], this.eBew.ground, this.eBew.layers[1], this.eBew.layers[2], this.eBew.layers[3], this.pOSlOC, this.AqOEo.gasRenderer.display, this.XpRJqf.container, this.DxRdO.container, this.cfYfi.container, this.cfYfi.Skv.container, this.DxRdO.indContainer];
    for (let XY = 0; XY < b.length; XY++) {
      const XC = b[XY];
      if (XC) {
        XC.interactiveChildren = false;
        this.cehf.stage.addChild(XC);
      }
    }
    this.FtXCz = "";
    this.ONPnmU = false;
    this.LSU = false;
    this.vQHD = false;
    this.LzLNO = 0;
    this.PkRzLK = new XE();
    this.TmD = 0;
    this.xBFht = 0;
    this.OSRLcj = false;
    this.HTzAB = 0;
    this.vCsfL = 0;
    this.Lnf = 0;
    this.Nqo = null;
    this.kEfsQ = false;
    this.QwZT = 1;
    this.OPKT = 1;
    this.hIBMF = false;
    this.seq = 0;
    this.seqInFlight = false;
    this.seqSendTime = 0;
    this.pings = [];
    this.updateIntervals = [];
    this.lastUpdateTime = 0;
    this.debugPingTime = 0;
    this.Solrb.UIu(this.sfj.get("screenShake"));
    this.MTkCb.anonPlayerNames = this.sfj.get("anonPlayerNames");
    this.initialized = true;
  }
  free() {
    if (this.hwpWO) {
      this.hwpWO.onmessage = function () {};
      this.hwpWO.close();
      this.hwpWO = null;
    }
    this.connecting = false;
    this.connected = false;
    if (this.initialized) {
      this.initialized = false;
      this.OSRLcj = false;
      this.HTzAB = 0;
      this.DxRdO.dphRtI();
      this.PqZq.dphRtI();
      this.cfYfi.dphRtI();
      this.AqOEo.dphRtI();
      this.NgtzXw.dphRtI();
      this.NfHGD.dphRtI();
      this.xdZjN.dphRtI();
      this.tetX.dphRtI();
      this.eBew.dphRtI();
      this.oTycZ.dphRtI();
      this.GcFc.stopAll();
      while (this.cehf.stage.children.length > 0) {
        const p = this.cehf.stage.children[0];
        this.cehf.stage.removeChild(p);
        p.destroy({
          children: true
        });
      }
    }
  }
  warnPageReload() {
    return this.initialized && this.ONPnmU && !this.vQHD && !this.cfYfi.displayingStats;
  }
  update(XT) {
    const XY = this.jLzt.yNawk;
    const XC = {};
    if (this.ONPnmU) {
      this.TmD += XT;
    }
    this.MTkCb.Gxhh(XT, this.Lnf, this.teamMode, this.eBew, this.tetX, this.Solrb, this.xdZjN, this.zsT, this.GcFc, this.PqZq, this.DxRdO.wheelKeyTriggered, this.cfYfi.displayingStats, this.vQHD);
    this.updateAmbience();
    this.Solrb.NLYJ = v.copy(this.Nqo.NLYJ);
    this.Solrb.CgpTt();
    const Xl = this.Nqo.ulnm();
    const Xd = e.min(this.Solrb.pmhI, this.Solrb.lZjK);
    const Xk = e.max(this.Solrb.pmhI, this.Solrb.lZjK);
    const XU = e.max(Xd * (16 / 9), Xk);
    this.Solrb.QwZT = XU * 0.5 / (Xl * this.Solrb.xQaJqu);
    const XW = this.Nqo.zoomFast ? 3 : 2;
    const XD = this.Nqo.zoomFast ? 3 : 1.4;
    const XG = this.Solrb.QwZT > this.Solrb.BsPd ? XW : XD;
    this.Solrb.BsPd = e.lerp(XT * XG, this.Solrb.BsPd, this.Solrb.QwZT);
    this.GcFc.cameraPos = v.copy(this.Solrb.NLYJ);
    if (this.oTycZ.keyPressed(H.Escape)) {
      this.cfYfi.toggleEscMenu();
    }
    if (this.zsT.isBindPressed(D.ToggleMap) || this.oTycZ.keyPressed(H.G) && !this.zsT.isKeyBound(H.G)) {
      this.cfYfi.displayMapLarge(false);
    }
    if (this.zsT.isBindPressed(D.CycleUIMode)) {
      this.cfYfi.cycleVisibilityMode();
    }
    if (this.zsT.isBindPressed(D.HideUI) || this.oTycZ.keyPressed(H.Escape) && !this.cfYfi.hudVisible) {
      this.cfYfi.cycleHud();
    }
    const XF = this.Nqo.NLYJ;
    const XH = this.Solrb.vrnvjL(this.oTycZ.mousePos);
    const p0 = v.sub(XH, XF);
    let p1 = v.length(p0);
    let p2 = p1 > 0.00001 ? v.div(p0, p1) : v.create(1, 0);
    if (this.DxRdO.wheelDisplayed) {
      p1 = this.PkRzLK.toMouseLen;
      p2 = this.PkRzLK.toMouseDir;
    }
    const p3 = new XE();
    p3.seq = this.seq;
    if (!this.vQHD) {
      if (k.touch) {
        const pb = this.XpRJqf.getTouchMovement(this.Solrb);
        const pI = this.XpRJqf.getAimMovement(this.Nqo, this.Solrb);
        let pj = v.copy(pI.aimMovement.toAimDir);
        this.XpRJqf.turnDirTicker -= XT;
        if (this.XpRJqf.moveDetected && !pI.touched) {
          const py = v.normalizeSafe(pb.toMoveDir, v.create(1, 0));
          const pg = this.XpRJqf.turnDirTicker < 0 ? py : pI.aimMovement.toAimDir;
          this.XpRJqf.setAimDir(pg);
          pj = pg;
        }
        if (pI.touched) {
          this.XpRJqf.turnDirTicker = this.XpRJqf.turnDirCooldown;
        }
        if (this.XpRJqf.moveDetected) {
          p3.touchMoveDir = v.normalizeSafe(pb.toMoveDir, v.create(1, 0));
          p3.touchMoveLen = Math.round(e.clamp(pb.toMoveLen, 0, 1) * 255);
        } else {
          p3.touchMoveLen = 0;
        }
        p3.touchMoveActive = true;
        const pf = pI.aimMovement.toAimLen;
        const px = e.clamp(pf / this.XpRJqf.padPosRange, 0, 1) * L.player.throwableMaxMouseDist;
        p3.toMouseLen = px;
        p3.toMouseDir = pj;
      } else {
        p3.moveLeft = this.zsT.isBindDown(D.MoveLeft) || this.oTycZ.keyDown(H.Left) && !this.zsT.isKeyBound(H.Left);
        p3.moveRight = this.zsT.isBindDown(D.MoveRight) || this.oTycZ.keyDown(H.Right) && !this.zsT.isKeyBound(H.Right);
        p3.moveUp = this.zsT.isBindDown(D.MoveUp) || this.oTycZ.keyDown(H.Up) && !this.zsT.isKeyBound(H.Up);
        p3.moveDown = this.zsT.isBindDown(D.MoveDown) || this.oTycZ.keyDown(H.Down) && !this.zsT.isKeyBound(H.Down);
        p3.toMouseDir = v.copy(p2);
        p3.toMouseLen = p1;
      }
      p3.touchMoveDir = v.normalizeSafe(p3.touchMoveDir, v.create(1, 0));
      p3.touchMoveLen = e.clamp(p3.touchMoveLen, 0, 255);
      p3.toMouseDir = v.normalizeSafe(p3.toMouseDir, v.create(1, 0));
      p3.toMouseLen = e.clamp(p3.toMouseLen, 0, m.MouseMaxDist);
      p3.shootStart = this.zsT.isBindPressed(D.Fire) || this.XpRJqf.shotDetected;
      p3.shootHold = this.zsT.isBindDown(D.Fire) || this.XpRJqf.shotDetected;
      p3.portrait = this.Solrb.pmhI < this.Solrb.lZjK;
      const pX = [D.Reload, D.Revive, D.Use, D.Loot, D.Cancel, D.EquipPrimary, D.EquipSecondary, D.EquipThrowable, D.EquipMelee, D.EquipNextWeap, D.EquipPrevWeap, D.EquipLastWeap, D.EquipOtherGun, D.EquipPrevScope, D.EquipNextScope, D.StowWeapons];
      for (let pQ = 0; pQ < pX.length; pQ++) {
        const pZ = pX[pQ];
        if (this.zsT.isBindPressed(pZ)) {
          p3.addInput(pZ);
        }
      }
      if (this.zsT.isBindPressed(D.Interact)) {
        const pq = [];
        const pM = [D.Revive, D.Use, D.Loot];
        for (let pE = 0; pE < pM.length; pE++) {
          const pN = pM[pE];
          if (!this.zsT.getBind(pN)) {
            pq.push(pN);
          }
        }
        if (pq.length == pM.length) {
          p3.addInput(D.Interact);
        } else {
          for (let pn = 0; pn < pq.length; pn++) {
            p3.addInput(pq[pn]);
          }
        }
      }
      if (this.zsT.isBindPressed(D.SwapWeapSlots) || this.cfYfi.swapWeapSlots) {
        p3.addInput(D.SwapWeapSlots);
        this.Nqo.gunSwitchCooldown = 0;
      }
      if (this.cfYfi.reloadTouched) {
        p3.addInput(D.Reload);
      }
      if (this.cfYfi.interactionTouched) {
        p3.addInput(D.Interact);
        p3.addInput(D.Cancel);
      }
      for (let ph = 0; ph < this.PqZq.uiEvents.length; ph++) {
        const pR = this.PqZq.uiEvents[ph];
        if (pR.action == "use") {
          if (pR.type == "weapon") {
            const pP = {
              [XN.Primary]: D.EquipPrimary,
              [XN.Secondary]: D.EquipSecondary,
              [XN.Melee]: D.EquipMelee,
              [XN.Throwable]: D.EquipThrowable
            }[pR.data];
            if (pP) {
              p3.addInput(pP);
            }
          } else {
            p3.useItem = pR.data;
          }
        }
      }
      if (this.zsT.isBindPressed(D.UseBandage)) {
        p3.useItem = "bandage";
      } else if (this.zsT.isBindPressed(D.UseHealthKit)) {
        p3.useItem = "healthkit";
      } else if (this.zsT.isBindPressed(D.UseSoda)) {
        p3.useItem = "soda";
      } else if (this.zsT.isBindPressed(D.UsePainkiller)) {
        p3.useItem = "painkiller";
      }
      let pp = false;
      for (let pA = 0; pA < this.PqZq.uiEvents.length; pA++) {
        const pJ = this.PqZq.uiEvents[pA];
        if (pJ.action == "drop") {
          const pS = new Xn();
          if (pJ.type == "weapon") {
            const pB = pJ.data;
            const pc = this.Nqo.KkvfHn.MDx;
            pS.item = pc[pB].type;
            pS.weapIdx = pB;
          } else if (pJ.type == "perk") {
            const pu = pJ.data;
            const pV = this.Nqo.QDvlP.vJBLNe;
            const pz = pV.length > pu ? pV[pu] : null;
            if (pz?.droppable) {
              pS.item = pz.type;
            }
          } else {
            const pw = pJ.data == "helmet" ? this.Nqo.QDvlP.SMDXye : pJ.data == "chest" ? this.Nqo.QDvlP.JyI : pJ.data;
            pS.item = pw;
          }
          if (pS.item != "") {
            this.onRgH(Xq.DropItem, pS, 128);
            if (pS.item != "fists") {
              pp = true;
            }
          }
        }
      }
      if (pp) {
        this.GcFc.playSound("loot_drop_01", {
          channel: "ui"
        });
      }
      if (this.cfYfi.roleSelected) {
        const pO = new Xh();
        pO.role = this.cfYfi.roleSelected;
        this.onRgH(Xq.PerkModeRoleSelect, pO, 128);
        this.sfj.set("perkModeRole", pO.role);
      }
    }
    const p4 = this.cfYfi.specBegin;
    const p5 = this.cfYfi.specNext || this.vQHD && this.oTycZ.keyPressed(H.Right);
    const p6 = this.cfYfi.specPrev || this.vQHD && this.oTycZ.keyPressed(H.Left);
    const p7 = this.oTycZ.keyPressed(H.Right) || this.oTycZ.keyPressed(H.Left);
    if (p4 || this.vQHD && p5 || p6) {
      const pL = new XR();
      pL.specBegin = p4;
      pL.specNext = p5;
      pL.specPrev = p6;
      pL.specForce = p7;
      this.onRgH(Xq.Spectate, pL, 128);
    }
    this.cfYfi.specBegin = false;
    this.cfYfi.specNext = false;
    this.cfYfi.specPrev = false;
    this.cfYfi.reloadTouched = false;
    this.cfYfi.interactionTouched = false;
    this.cfYfi.swapWeapSlots = false;
    this.cfYfi.roleSelected = "";
    let p8 = false;
    for (const pv in p3) {
      if (p3.hasOwnProperty(pv)) {
        if (pv == "inputs") {
          p8 = p3[pv].length > 0;
        } else if (pv == "toMouseDir" || pv == "touchMoveDir") {
          const pK = e.clamp(v.dot(p3[pv], this.PkRzLK[pv]), -1, 1);
          p8 = e.rad2deg(Math.acos(pK)) > 0.1;
        } else if (pv == "toMouseLen") {
          p8 = Math.abs(this.PkRzLK[pv] - p3[pv]) > 0.5;
        } else if (pv == "shootStart") {
          p8 = p3[pv] || p3[pv] != this.PkRzLK[pv];
        } else if (this.PkRzLK[pv] != p3[pv]) {
          p8 = true;
        }
        if (p8) {
          break;
        }
      }
    }
    this.LzLNO -= XT;
    if (p8 || this.LzLNO < 0) {
      if (!this.seqInFlight) {
        this.seq = (this.seq + 1) % 256;
        this.seqSendTime = Date.now();
        this.seqInFlight = true;
        p3.seq = this.seq;
      }
      this.onRgH(Xq.Input, p3, 128);
      this.LzLNO = 1;
      this.PkRzLK = p3;
    }
    this.PqZq.flushInput();
    this.xdZjN.Gxhh(XT, this.Nqo, this.MTkCb, this.tetX, this.GcFc, this.nCO, this.eBew, this.Solrb, XY, XC);
    this.NOCRp.Gxhh(XT, this.Nqo, this.xdZjN, this.GcFc, this.Solrb, XC);
    this.NDV.Gxhh(XT, this.MTkCb, this.xdZjN, this.Solrb, this.Nqo, this.eBew, this.tetX, this.GcFc);
    this.ACF.Gxhh(XT, this.MTkCb, this.xdZjN, this.Solrb, this.Nqo, this.eBew, this.tetX, this.GcFc);
    this.hpFatr.Gxhh(XT, this.tetX, this.GcFc, this.Nqo, this.xdZjN, this.eBew, this.Solrb);
    this.UYCd.Gxhh(XT, this.xdZjN, this.MTkCb, this.Solrb, this.tetX, this.GcFc, XC);
    this.NgtzXw.Gxhh(XT, this.Nqo, this.Solrb, this.xdZjN, this.tetX, this.eBew, this.GcFc);
    this.NfHGD.Gxhh(XT, this.Solrb, this.Nqo, this.xdZjN, this.eBew);
    this.jLzt.Gxhh(XT, this.Solrb, this.Nqo, this.xdZjN, this.eBew);
    this.tCoR.Gxhh(XT, this.Lnf, this.MTkCb, this.tetX, this.GcFc);
    this.tetX.Gxhh(XT, this.Solrb, XC);
    this.QfnjIN.Gxhh(XT, this.MTkCb, this.Nqo, this.xdZjN, this.Solrb, this.eBew);
    this.qfLfG.Gxhh(XT, this.Solrb, this.eBew, XC);
    this.cfYfi.Gxhh(XT, this.Nqo, this.xdZjN, this.AqOEo, this.NOCRp, this.MTkCb, this.Solrb, this.teamMode, this.xdZjN.factionMode);
    this.PqZq.Gxhh(XT, this.Nqo, this.vQHD, this.MTkCb, this.NOCRp, this.xdZjN, this.zsT);
    this.DxRdO.Gxhh(XT, this.vCsfL, this.Nqo, this.teamMode, this.QfnjIN, this.xdZjN, this.eBew, this.oTycZ, this.zsT, this.vQHD);
    this.XpRJqf.Gxhh(XT, this.Nqo, this.xdZjN, this.Solrb, this.eBew);
    this.eBew.Gxhh(XT, this.Solrb, this.xdZjN, XC);
    for (let pm = 0; pm < this.DxRdO.newPings.length; pm++) {
      const pT = this.DxRdO.newPings[pm];
      const pY = new XP();
      pY.type = pT.type;
      pY.pos = pT.pos;
      pY.isPing = true;
      this.onRgH(Xq.Emote, pY, 128);
    }
    this.DxRdO.newPings = [];
    for (let pC = 0; pC < this.DxRdO.newEmotes.length; pC++) {
      const pl = this.DxRdO.newEmotes[pC];
      const pd = new XP();
      pd.type = pl.type;
      pd.pos = pl.pos;
      pd.isPing = false;
      this.onRgH(Xq.Emote, pd, 128);
    }
    this.DxRdO.newEmotes = [];
    const p9 = Date.now();
    if (p9 > this.debugPingTime) {
      let pk = function (pF, pH) {
        return (" ".repeat(pH) + pF).slice(-7);
      };
      this.debugPingTime = p9 + 20000;
      const pU = this.pings.sort((pF, pH) => pF - pH);
      const pW = pU.length;
      if (pW > 0) {
        const pF = pU[Math.floor(pW * 0.5)];
        const pH = pU[Math.floor(pW * 0.95)];
        const b0 = pU[pW - 1];
        console.log("Ping     min:", pk(pU[0].toFixed(2), 7), "med:", pk(pF.toFixed(2), 7), "p95:", pk(pH.toFixed(2), 7), "max:", pk(b0.toFixed(2), 7));
      }
      this.pings = [];
      const pD = this.updateIntervals.sort((b1, b2) => b1 - b2);
      const pG = pD.length;
      if (pG > 0) {
        const b1 = pD[Math.floor(pG * 0.5)];
        const b2 = pD[Math.floor(pG * 0.95)];
        const b3 = pD[pG - 1];
        console.log("Interval min:", pk(pD[0].toFixed(2), 7), "med:", pk(b1.toFixed(2), 7), "p95:", pk(b2.toFixed(2), 7), "max:", pk(b3.toFixed(2), 7));
      }
      this.updateIntervals = [];
    }
    this.Dgc(XT, XC);
  }
  Dgc(p, b) {
    const XT = this.xdZjN.mapLoaded ? this.xdZjN.getMapDef().biome.colors.grass : 8433481;
    this.cehf.renderer.background.color = XT;
    this.MTkCb.Dgc(this.Solrb, b);
    this.NDV.Dgc(this.Solrb, b);
    this.ACF.Dgc(this.Solrb);
    this.qfLfG.Dgc(this.Solrb, b, this.Nqo.layer);
    this.xdZjN.Dgc(this.Solrb);
    this.AqOEo.Dgc(this.Solrb);
    this.cfYfi.Dgc(this.Nqo.NLYJ, this.AqOEo, this.Solrb, this.xdZjN, this.NfHGD, b);
    this.DxRdO.Dgc(this.Solrb);
    if (k.debug) {
      he.Dgc(this.Solrb, this.pOSlOC);
    }
    he.flush();
  }
  updateAmbience() {
    const b = this.Nqo.NLYJ;
    let XT = 0;
    let XY = 0;
    let XC = 1;
    if (this.xdZjN.isInOcean(b)) {
      XT = 1;
      XY = 0;
      XC = 0;
    } else {
      const Xl = this.xdZjN.distanceToShore(b);
      XT = e.delerp(Xl, 50, 0);
      XY = 0;
      for (let Xd = 0; Xd < this.xdZjN.terrain.rivers.length; Xd++) {
        const Xk = this.xdZjN.terrain?.rivers[Xd];
        const XU = Xk.spline.getClosestTtoPoint(b);
        const XW = Xk.spline.getPos(XU);
        const XD = v.length(v.sub(XW, b));
        const XG = Xk.waterWidth + 2;
        const XF = e.delerp(XD, 30 + XG, XG);
        const XH = e.clamp(Xk.waterWidth / 8, 0.25, 1);
        XY = e.max(XF * XH, XY);
      }
      if (this.Nqo.layer == 1) {
        XY = 0;
      }
      XC = 1;
    }
    this.nCO.getTrack("wind").weight = XC;
    this.nCO.getTrack("river").weight = XY;
    this.nCO.getTrack("waves").weight = XT;
  }
  resize() {
    this.Solrb.pmhI = k.screenWidth;
    this.Solrb.lZjK = k.screenHeight;
    this.xdZjN.resize(this.cehf.renderer, this.rjYbuw);
    this.AqOEo.resize();
    this.cfYfi.resize(this.xdZjN, this.Solrb);
    this.XpRJqf.resize();
    this.eBew.resize(this.xdZjN, this.Solrb);
  }
  miJMX(p) {
    const b = {
      audioManager: this.GcFc,
      renderer: this.eBew,
      particleBarn: this.tetX,
      map: this.xdZjN,
      smokeBarn: this.jLzt,
      decalBarn: this.qfLfG
    };
    if (p.activePlayerIdDirty) {
      this.Lnf = p.activePlayerId;
    }
    for (let XC = 0; XC < p.playerInfos.length; XC++) {
      this.MTkCb.setPlayerInfo(p.playerInfos[XC]);
    }
    for (let Xl = 0; Xl < p.deletedPlayerIds.length; Xl++) {
      const Xd = p.deletedPlayerIds[Xl];
      this.MTkCb.deletePlayerInfo(Xd);
    }
    if (p.playerInfos.length > 0 || p.deletedPlayerIds.length > 0) {
      this.MTkCb.recomputeTeamData();
    }
    if (p.playerStatusDirty) {
      const Xk = this.MTkCb.getPlayerInfo(this.Lnf).teamId;
      this.MTkCb.updatePlayerStatus(Xk, p.playerStatus, this.xdZjN.factionMode);
    }
    if (p.groupStatusDirty) {
      const XU = this.MTkCb.getPlayerInfo(this.Lnf).groupId;
      this.MTkCb.updateGroupStatus(XU, p.groupStatus);
    }
    for (let XW = 0; XW < p.delObjIds.length; XW++) {
      this.GsClp.DaWtm(p.delObjIds[XW]);
    }
    for (let XD = 0; XD < p.fullObjects.length; XD++) {
      const XG = p.fullObjects[XD];
      this.GsClp.gLpEK(XG.__type, XG.__id, XG, b);
    }
    for (let XF = 0; XF < p.partObjects.length; XF++) {
      const XH = p.partObjects[XF];
      this.GsClp.cZVtOf(XH.__id, XH, b);
    }
    this.vQHD = this.Lnf != this.vCsfL;
    this.Nqo = this.MTkCb.getPlayerById(this.Lnf);
    this.Nqo.BOCg(p.activePlayerData, this.MTkCb);
    if (p.activePlayerData.weapsDirty) {
      this.cfYfi.weapsDirty = true;
    }
    if (this.vQHD) {
      this.cfYfi.setSpectateTarget(this.Lnf, this.vCsfL, this.teamMode, this.MTkCb);
      this.XpRJqf.hideAll();
    }
    this.Nqo.layer = this.Nqo.QDvlP.fgCE;
    this.eBew.setActiveLayer(this.Nqo.layer);
    this.GcFc.activeLayer = this.Nqo.layer;
    const XT = this.Nqo.isUnderground(this.xdZjN);
    this.eBew.setUnderground(XT);
    this.GcFc.underground = XT;
    if (p.gasDirty) {
      this.AqOEo.setFullState(p.gasT, p.gasData, this.xdZjN, this.cfYfi);
    }
    if (p.gasTDirty) {
      this.AqOEo.setProgress(p.gasT);
    }
    for (let p0 = 0; p0 < p.bullets.length; p0++) {
      const p1 = p.bullets[p0];
      Oa(p1, this.NDV, this.ACF, this.MTkCb, this.eBew);
      if (p1.shotFx) {
        this.tCoR.addShot(p1);
      }
    }
    for (let p2 = 0; p2 < p.explosions.length; p2++) {
      const p3 = p.explosions[p2];
      this.UYCd.addExplosion(p3.type, p3.pos, p3.layer);
    }
    for (let p4 = 0; p4 < p.emotes.length; p4++) {
      const p5 = p.emotes[p4];
      if (p5.isPing) {
        this.DxRdO.addPing(p5, this.xdZjN.factionMode);
      } else {
        this.DxRdO.addEmote(p5);
      }
    }
    this.NfHGD.updatePlanes(p.planes, this.xdZjN);
    for (let p6 = 0; p6 < p.airstrikeZones.length; p6++) {
      this.NfHGD.createAirstrikeZone(p.airstrikeZones[p6]);
    }
    this.cfYfi.updateMapIndicators(p.mapIndicators);
    if (p.killLeaderDirty) {
      const p7 = Q.htmlEscape(this.MTkCb.getPlayerName(p.killLeaderId, this.Lnf, true));
      this.cfYfi.updateKillLeader(p.killLeaderId, p7, p.killLeaderKills, this.xdZjN.getMapDef().gameMode);
    }
    const XY = Date.now();
    this.xBFht++;
    if (p.ack == this.seq && this.seqInFlight) {
      this.seqInFlight = false;
      const p8 = XY - this.seqSendTime;
      this.pings.push(p8);
    }
    if (this.lastUpdateTime > 0) {
      const p9 = XY - this.lastUpdateTime;
      this.updateIntervals.push(p9);
    }
    this.lastUpdateTime = XY;
  }
  hMOHjl(b, XT) {
    switch (b) {
      case Xq.Joined:
        {
          const XY = new XO();
          XY.deserialize(XT);
          this.onJoin();
          this.teamMode = XY.teamMode;
          this.vCsfL = XY.playerId;
          this.kEfsQ = true;
          this.DxRdO.updateEmoteWheel(XY.emotes);
          if (!XY.started) {
            this.cfYfi.setWaitingForPlayers(true);
          }
          this.cfYfi.removeAds();
          if (this.victoryMusic) {
            this.victoryMusic.stop();
            this.victoryMusic = null;
          }
          if (!document.hasFocus()) {
            this.GcFc.playSound("notification_start_01", {
              channel: "ui"
            });
          }
          if (this.sfj.get("ENV") === "CrazyGames") {
            window.CrazyGames.SDK.game.gameplayStart();
          } else if (this.sfj.get("ENV") === "POKI") {
            window.PokiSDK.gameplayStart();
          }
          break;
        }
      case Xq.Map:
        {
          const XC = new Xw();
          XC.deserialize(XT);
          this.xdZjN.loadMap(XC, this.Solrb, this.rjYbuw, this.tetX);
          this.dGucoK.loadMapAssets(this.xdZjN.mapName);
          this.xdZjN.renderMap(this.cehf.renderer, this.rjYbuw);
          this.MTkCb.onMapLoad(this.xdZjN);
          this.NDV.onMapLoad(this.xdZjN);
          this.tetX.onMapLoad(this.xdZjN);
          this.cfYfi.onMapLoad(this.xdZjN, this.Solrb);
          if (this.xdZjN.perkMode) {
            const Xl = this.sfj.get("perkModeRole");
            this.cfYfi.setRoleMenuOptions(Xl, this.xdZjN.getMapDef().gameMode.perkModeRoles);
            this.cfYfi.setRoleMenuActive(true);
          } else {
            this.cfYfi.setRoleMenuActive(false);
          }
          break;
        }
      case Xq.Update:
        {
          const Xd = new Xo();
          Xd.deserialize(XT, this.GsClp);
          this.ONPnmU = true;
          this.miJMX(Xd);
          break;
        }
      case Xq.Kill:
        {
          const Xk = new Xz();
          Xk.deserialize(XT);
          const XU = Xk.itemSourceType || Xk.mapSourceType;
          const XW = this.MTkCb.getPlayerInfo(this.Lnf).teamId;
          const XD = Xk.downed && !Xk.killed || Xk.damageType == L.DamageType.Gas || Xk.damageType == L.DamageType.Bleeding || Xk.damageType == L.DamageType.Airdrop;
          const XG = this.MTkCb.getPlayerInfo(Xk.targetId);
          const XF = this.MTkCb.getPlayerInfo(Xk.killCreditId);
          const XH = XD ? XF : this.MTkCb.getPlayerInfo(Xk.killerId);
          let p0 = this.MTkCb.getPlayerName(XG.playerId, this.Lnf, true);
          let p1 = this.MTkCb.getPlayerName(XF.playerId, this.Lnf, true);
          let p2 = this.MTkCb.getPlayerName(XH.playerId, this.Lnf, true);
          p0 = Q.htmlEscape(p0);
          p1 = Q.htmlEscape(p1);
          p2 = Q.htmlEscape(p2);
          if (Xk.killCreditId == this.Lnf) {
            const p5 = Xk.killerId == this.Lnf;
            const p6 = Xk.killerId == Xk.targetId || Xk.killCreditId == Xk.targetId;
            const p7 = this.PqZq.getKillText(p1, p0, p5, Xk.downed, Xk.killed, p6, XU, Xk.damageType, this.vQHD);
            const p8 = Xk.killed && !p6 ? this.PqZq.getKillCountText(Xk.killerKills) : "";
            this.PqZq.displayKillMessage(p7, p8);
          } else if (Xk.targetId == this.Lnf && Xk.downed && !Xk.killed) {
            const p9 = this.PqZq.getDownedText(p1, p0, XU, Xk.damageType, this.vQHD);
            this.PqZq.displayKillMessage(p9, "");
          }
          if (Xk.killCreditId == this.vCsfL && Xk.killed) {
            this.cfYfi.setLocalKills(Xk.killerKills);
          }
          const p3 = this.PqZq.getKillFeedText(p0, XH.teamId ? p2 : "", XU, Xk.damageType, Xk.downed && !Xk.killed);
          const p4 = this.PqZq.getKillFeedColor(XW, XG.teamId, XF.teamId, this.xdZjN.factionMode);
          this.PqZq.addKillFeedMessage(p3, p4);
          if (Xk.killed) {
            this.MTkCb.addDeathEffect(Xk.targetId, Xk.killerId, XU, this.GcFc, this.tetX);
          }
          if (Xk.damageType == L.DamageType.Player) {
            this.NDV.createBulletHit(this.MTkCb, Xk.targetId, this.GcFc);
          }
          break;
        }
      case Xq.RoleAnnouncement:
        {
          const pX = new XV();
          pX.deserialize(XT);
          const pp = Xf[pX.role];
          if (!pp) {
            break;
          }
          const pb = this.MTkCb.getPlayerInfo(pX.playerId);
          const pI = Q.htmlEscape(this.MTkCb.getPlayerName(pX.playerId, this.Lnf, true));
          if (pX.assigned) {
            if (pp.sound?.assign) {
              if (pX.role == "kill_leader" && this.xdZjN.getMapDef().gameMode.spookyKillSounds) {
                this.GcFc.playGroup("kill_leader_assigned", {
                  channel: "ui"
                });
              } else if (pX.role == "kill_leader" || !this.xdZjN.perkMode || this.vCsfL == pX.playerId) {
                this.GcFc.playSound(pp.sound.assign, {
                  channel: "ui"
                });
              }
            }
            if (this.xdZjN.perkMode && this.vCsfL == pX.playerId) {
              this.cfYfi.setRoleMenuActive(false);
            }
            if (pp.killFeed?.assign) {
              const pj = this.PqZq.getRoleAssignedKillFeedText(pX.role, pb.teamId, pI);
              const pf = this.PqZq.getRoleKillFeedColor(pX.role, pb.teamId, this.MTkCb);
              this.PqZq.addKillFeedMessage(pj, pf);
            }
            if (pp.announce && this.vCsfL == pX.playerId) {
              const px = this.PqZq.getRoleAnnouncementText(pX.role, pb.teamId);
              this.cfYfi.displayAnnouncement(px.toUpperCase());
            }
          } else if (pX.killed) {
            if (pp.killFeed?.dead) {
              let py = Q.htmlEscape(this.MTkCb.getPlayerName(pX.killerId, this.Lnf, true));
              if (pX.playerId == pX.killerId) {
                py = "";
              }
              const pg = this.PqZq.getRoleKilledKillFeedText(pX.role, pb.teamId, py);
              const pQ = this.PqZq.getRoleKillFeedColor(pX.role, pb.teamId, this.MTkCb);
              this.PqZq.addKillFeedMessage(pg, pQ);
            }
            if (pp.sound?.dead) {
              if (this.xdZjN.getMapDef().gameMode.spookyKillSounds) {
                this.GcFc.playGroup("kill_leader_dead", {
                  channel: "ui"
                });
              } else {
                this.GcFc.playSound(pp.sound.dead, {
                  channel: "ui"
                });
              }
            }
          }
          break;
        }
      case Xq.PlayerStats:
        {
          const pZ = new Xu();
          pZ.deserialize(XT);
          this.cfYfi.setLocalStats(pZ.playerStats);
          this.cfYfi.showTeamAd(pZ.playerStats, this.PqZq);
          break;
        }
      case Xq.Stats:
        {
          XT.readString();
          break;
        }
      case Xq.GameOver:
        {
          const pq = new Xc();
          pq.deserialize(XT);
          this.LSU = pq.gameOver;
          const pM = this.MTkCb.getPlayerInfo(this.vCsfL).teamId;
          for (let pE = 0; pE < pq.playerStats.length; pE++) {
            const pN = pq.playerStats[pE];
            if (pN.playerId == this.vCsfL) {
              this.cfYfi.setLocalStats(pN);
              break;
            }
          }
          this.cfYfi.showStats(pq.playerStats, pq.teamId, pq.teamRank, pq.winningTeamId, pq.gameOver, pM, this.teamMode, this.vQHD, this.MTkCb, this.GcFc, this.xdZjN, this.PqZq);
          if (pM == pq.winningTeamId) {
            this.victoryMusic = this.GcFc.playSound("menu_music", {
              channel: "music",
              delay: 1300,
              forceStart: true
            });
          }
          this.XpRJqf.hideAll();
          break;
        }
      case Xq.Pickup:
        {
          const pn = new XB();
          pn.deserialize(XT);
          if (pn.type == XQ.Success && pn.item) {
            this.Nqo.playItemPickupSound(pn.item, this.GcFc);
            const ph = w[pn.item];
            if (ph && ph.type == "xp") {
              this.PqZq.addRareLootMessage(pn.item, true);
            }
          } else {
            this.PqZq.displayPickupMessage(pn.type);
          }
          break;
        }
      case Xq.UpdatePass:
        {
          new XS().deserialize(XT);
          this.OSRLcj = true;
          this.HTzAB = 0;
          break;
        }
      case Xq.AliveCounts:
        {
          const pR = new XJ();
          pR.deserialize(XT);
          if (pR.teamAliveCounts.length == 1) {
            this.cfYfi.updatePlayersAlive(pR.teamAliveCounts[0]);
          } else if (pR.teamAliveCounts.length >= 2) {
            this.cfYfi.updatePlayersAliveRed(pR.teamAliveCounts[0]);
            this.cfYfi.updatePlayersAliveBlue(pR.teamAliveCounts[1]);
          }
          break;
        }
      case Xq.Disconnect:
        {
          const pP = new XA();
          pP.deserialize(XT);
          this.FtXCz = pP.reason;
        }
    }
  }
  onRgH(p, b, XT) {
    const XY = XT || 128;
    const XC = new XM(new ArrayBuffer(XY));
    XC.serializeMsg(p, b);
    this.colHd(XC);
  }
  colHd(p) {
    if (this.hwpWO && this.hwpWO.readyState == this.hwpWO.OPEN) {
      try {
        this.hwpWO.send(p.getBuffer());
      } catch (b) {
        console.error("sendMessageException", b);
        this.hwpWO.close();
      }
    }
  }
}
const Ps = [0, 49345, 49537, 320, 49921, 960, 640, 49729, 50689, 1728, 1920, 51009, 1280, 50625, 50305, 1088, 52225, 3264, 3456, 52545, 3840, 53185, 52865, 3648, 2560, 51905, 52097, 2880, 51457, 2496, 2176, 51265, 55297, 6336, 6528, 55617, 6912, 56257, 55937, 6720, 7680, 57025, 57217, 8000, 56577, 7616, 7296, 56385, 5120, 54465, 54657, 5440, 55041, 6080, 5760, 54849, 53761, 4800, 4992, 54081, 4352, 53697, 53377, 4160, 61441, 12480, 12672, 61761, 13056, 62401, 62081, 12864, 13824, 63169, 63361, 14144, 62721, 13760, 13440, 62529, 15360, 64705, 64897, 15680, 65281, 16320, 16000, 65089, 64001, 15040, 15232, 64321, 14592, 63937, 63617, 14400, 10240, 59585, 59777, 10560, 60161, 11200, 10880, 59969, 60929, 11968, 12160, 61249, 11520, 60865, 60545, 11328, 58369, 9408, 9600, 58689, 9984, 59329, 59009, 9792, 8704, 58049, 58241, 9024, 57601, 8640, 8320, 57409, 40961, 24768, 24960, 41281, 25344, 41921, 41601, 25152, 26112, 42689, 42881, 26432, 42241, 26048, 25728, 42049, 27648, 44225, 44417, 27968, 44801, 28608, 28288, 44609, 43521, 27328, 27520, 43841, 26880, 43457, 43137, 26688, 30720, 47297, 47489, 31040, 47873, 31680, 31360, 47681, 48641, 32448, 32640, 48961, 32000, 48577, 48257, 31808, 46081, 29888, 30080, 46401, 30464, 47041, 46721, 30272, 29184, 45761, 45953, 29504, 45313, 29120, 28800, 45121, 20480, 37057, 37249, 20800, 37633, 21440, 21120, 37441, 38401, 22208, 22400, 38721, 21760, 38337, 38017, 21568, 39937, 23744, 23936, 40257, 24320, 40897, 40577, 24128, 23040, 39617, 39809, 23360, 39169, 22976, 22656, 38977, 34817, 18624, 18816, 35137, 19200, 35777, 35457, 19008, 19968, 36545, 36737, 20288, 36097, 19904, 19584, 35905, 17408, 33985, 34177, 17728, 34561, 18368, 18048, 34369, 33281, 17088, 17280, 33601, 16640, 33217, 32897, 16448];
function ki(p) {
  let b = 0;
  for (let XT = 0; XT < p.length; XT++) {
    const XY = p[XT];
    b = (Ps[(b ^ XY) & 255] ^ b >> 8) & 65535;
  }
  return b;
}
function J(p, b) {
  return {
    name: p,
    defaultValue: b
  };
}
function oe(p) {
  return new Ze(ve.Key, p);
}
function vi(p) {
  return new Ze(ve.MouseButton, p);
}
function _i(p) {
  return new Ze(ve.MouseWheel, p);
}
const Ue = {
  [D.MoveLeft]: J("Move Left", oe(H.A)),
  [D.MoveRight]: J("Move Right", oe(H.D)),
  [D.MoveUp]: J("Move Up", oe(H.W)),
  [D.MoveDown]: J("Move Down", oe(H.S)),
  [D.Fire]: J("Fire", vi(Tt.Left)),
  [D.Reload]: J("Reload", oe(H.R)),
  [D.Cancel]: J("Cancel", oe(H.X)),
  [D.Interact]: J("Interact", oe(H.F)),
  [D.Revive]: J("Revive", null),
  [D.Use]: J("Open/Use", null),
  [D.Loot]: J("Loot", null),
  [D.EquipPrimary]: J("Equip Primary", oe(H.One)),
  [D.EquipSecondary]: J("Equip Secondary", oe(H.Two)),
  [D.EquipMelee]: J("Equip Melee", oe(H.Three)),
  [D.EquipThrowable]: J("Equip Throwable", oe(H.Four)),
  [D.EquipNextWeap]: J("Equip Next Weapon", _i(Pt.Down)),
  [D.EquipPrevWeap]: J("Equip Previous Weapon", _i(Pt.Up)),
  [D.EquipLastWeap]: J("Equip Last Weapon", oe(H.Q)),
  [D.StowWeapons]: J("Stow Weapons", oe(H.E)),
  [D.EquipPrevScope]: J("Equip Previous Scope", null),
  [D.EquipNextScope]: J("Equip Next Scope", null),
  [D.UseBandage]: J("Use Bandage", oe(H.Seven)),
  [D.UseHealthKit]: J("Use Med Kit", oe(H.Eight)),
  [D.UseSoda]: J("Use Soda", oe(H.Nine)),
  [D.UsePainkiller]: J("Use Pills", oe(H.Zero)),
  [D.SwapWeapSlots]: J("Switch Gun Slots", oe(H.T)),
  [D.ToggleMap]: J("Toggle Map", oe(H.M)),
  [D.CycleUIMode]: J("Toggle Minimap", oe(H.V)),
  [D.EmoteMenu]: J("Emote Menu", vi(Tt.Right)),
  [D.TeamPingMenu]: J("Team Ping Hold", oe(H.C)),
  [D.EquipOtherGun]: J("Equip Other Gun", null),
  [D.Fullscreen]: J("Full Screen", oe(H.L)),
  [D.HideUI]: J("Hide UI", null),
  [D.TeamPingSingle]: J("Team Ping Menu", null)
};
class Cs {
  constructor(p, b) {
    this.input = p;
    this.config = b;
    this.input = p;
    this.config = b;
    this.loadBinds();
  }
  binds = [];
  boundKeys = {};
  menuHovered = false;
  toArray() {
    const p = new ArrayBuffer(this.binds.length * 2 + 1);
    const b = new P.BitStream(p);
    b.writeUint8(1);
    for (let Xl = 0; Xl < this.binds.length; Xl++) {
      const Xd = this.binds[Xl];
      const Xk = Xd ? Xd.type : 0;
      const XU = Xd ? Xd.code : 0;
      b.writeBits(Xk & 3, 2);
      b.writeUint8(XU & 255);
    }
    const XT = new Uint8Array(p, 0, b.byteIndex);
    const XY = ki(XT);
    const XC = new Uint8Array(XT.length + 2);
    XC.set(XT);
    XC[XC.length - 2] = XY >> 8 & 255;
    XC[XC.length - 1] = XY & 255;
    return XC;
  }
  fromArray(b) {
    let XT = new Uint8Array(b);
    if (!XT || XT.length < 3) {
      return false;
    }
    const XY = XT[XT.length - 2] << 8 | XT[XT.length - 1];
    XT = XT.slice(0, XT.length - 2);
    if (ki(XT) != XY) {
      return false;
    }
    const XC = new ArrayBuffer(XT.length);
    const Xl = new Uint8Array(XC);
    for (let XU = 0; XU < XT.length; XU++) {
      Xl[XU] = XT[XU];
    }
    const Xd = new P.BitStream(XC);
    const Xk = Xd.readUint8();
    this.clearAllBinds();
    for (let XW = 0; Xd.length - Xd.index >= 10;) {
      const XD = XW++;
      const XG = Xd.readBits(2);
      const XF = Xd.readUint8();
      if (XD >= 0 && XD < D.Count && XG != ve.None) {
        this.setBind(XD, XG != 0 ? new Ze(XG, XF) : null);
      }
    }
    if (Xk < 1) {
      this.upgradeBinds(Xk);
      this.saveBinds();
    }
    return true;
  }
  toBase64() {
    return i.fromByteArray(this.toArray());
  }
  fromBase64(p) {
    let b = false;
    try {
      b = this.fromArray(i.toByteArray(p));
    } catch (XT) {
      console.error("Error", XT);
    }
    return b;
  }
  saveBinds() {
    this.config.set("binds", this.toBase64());
  }
  loadBinds() {
    if (!this.fromBase64(this.config.get("binds") || "")) {
      this.loadDefaultBinds();
      this.saveBinds();
    }
  }
  upgradeBinds(p) {
    const b = [];
    for (let XT = 0; XT < b.length; XT++) {
      const XY = b[XT];
      const XC = Ue[XY].defaultValue;
      for (let Xl = 0; Xl < this.binds.length && !this.binds[Xl]?.equals(XC); Xl++);
      this.setBind(XY, XC);
    }
  }
  clearAllBinds() {
    for (let p = 0; p < D.Count; p++) {
      this.binds[p] = null;
    }
    this.boundKeys = {};
  }
  setBind(p, b) {
    if (b) {
      for (let XY = 0; XY < this.binds.length; XY++) {
        if (this.binds[XY]?.equals(b)) {
          this.binds[XY] = null;
        }
      }
    }
    const XT = this.binds[p];
    if (XT && XT.type == ve.Key) {
      this.boundKeys[XT.code] = null;
    }
    this.binds[p] = b;
    if (b && b.type == ve.Key) {
      this.boundKeys[b.code] = true;
    }
  }
  getBind(p) {
    return this.binds[p];
  }
  preventMenuBind(p) {
    return p && this.menuHovered && (p.type == 2 || p.type == 3);
  }
  isKeyBound(p) {
    return this.boundKeys[p];
  }
  isBindPressed(p) {
    const b = this.binds[p];
    return !this.preventMenuBind(b) && b && this.input.isInputValuePressed(b);
  }
  isBindReleased(p) {
    const b = this.binds[p];
    return !this.preventMenuBind(b) && b && this.input.isInputValueReleased(b);
  }
  isBindDown(p) {
    const b = this.binds[p];
    return !this.preventMenuBind(b) && b && this.input.isInputValueDown(b);
  }
  loadDefaultBinds() {
    this.clearAllBinds();
    const p = Object.keys(Ue);
    for (let b = 0; b < p.length; b++) {
      const XT = p[b];
      const XY = Ue[XT];
      this.setBind(parseInt(XT), XY.defaultValue);
    }
  }
}
class Ds {
  constructor(p, b) {
    this.input = p;
    this.inputBinds = b;
    this.input = p;
    this.inputBinds = b;
    j(".js-btn-keybind-restore").on("click", () => {
      this.inputBinds.loadDefaultBinds();
      this.inputBinds.saveBinds();
      this.refresh();
    });
  }
  cancelBind() {
    this.input.captureNextInput(null);
  }
  refresh() {
    const p = Object.keys(Ue);
    const b = this.inputBinds.binds;
    const XT = j(".js-keybind-list");
    XT.empty();
    for (let XY = 0; XY < p.length; XY++) {
      const XC = p[XY];
      const Xl = Ue[XC];
      const Xd = b[XC];
      const Xk = j("<a/>", {
        class: "btn-game-menu btn-darken btn-keybind-desc",
        text: Xl.name
      });
      const XU = j("<div/>", {
        class: "btn-keybind-display",
        text: Xd ? Xd.toString() : ""
      });
      Xk.on("click", XW => {
        const XD = j(XW.target);
        XD.addClass("btn-keybind-desc-selected");
        this.input.captureNextInput((XG, XF) => {
          XG.preventDefault();
          XG.stopPropagation();
          const XH = [H.Control, H.Shift, H.Alt, H.Windows, H.ContextMenu, H.F1, H.F2, H.F3, H.F4, H.F5, H.F6, H.F7, H.F8, H.F9, H.F10, H.F11, H.F12];
          if (XF.type == ve.Key && XH.includes(XF.code)) {
            return false;
          }
          XD.removeClass("btn-keybind-desc-selected");
          if (!XF.equals(oe(H.Escape))) {
            let p0 = XF;
            if (XF.equals(oe(H.Backspace))) {
              p0 = null;
            }
            this.inputBinds.setBind(parseInt(XC), p0);
            this.inputBinds.saveBinds();
            this.refresh();
          }
          return true;
        });
      });
      XT.append(j("<div/>", {
        class: "ui-keybind-container"
      }).append(Xk).append(XU));
    }
    j("#keybind-link").html(this.inputBinds.toBase64());
  }
}
var yt = [{
  region: "na",
  zone: "na",
  url: "usr.mathsiscoolfun.com:8001",
  https: true
}, {
  region: "eu",
  zone: "eu",
  url: "eur.mathsiscoolfun.com:8001",
  https: true
}, {
  region: "asia",
  zone: "asia",
  url: "asr.mathsiscoolfun.com:8001",
  https: true
}, {
  region: "sa",
  zone: "sa",
  url: "sa.mathsiscoolfun.com:8001",
  https: true
}];
class Ls {
  ptcDataBuf = new ArrayBuffer(1);
  tests = yt.map(e => ({
    region: e.region,
    zone: e.zone,
    url: e.url,
    https: e.https,
    ping: 9999,
    active: false,
    complete: false,
    ws: null,
    sendDelay: 0,
    sendTime: 0,
    sendCount: 0,
    recvCount: 0,
    recvCountMax: 6,
    retryCount: 0,
    retryCountMax: 1
  }));
  testsStarted = 0;
  testsCompleted = 0;
  printSummary = true;
  start(p) {
    if ("WebSocket" in window) {
      let b = 0;
      for (let XT = 0; XT < this.tests.length; XT++) {
        const XY = this.tests[XT];
        if (!XY.active && !XY.complete && p.includes(XY.region)) {
          XY.active = true;
          this.testsStarted++;
          b++;
        }
      }
      if (b > 0) {
        this.printSummary = true;
      }
    }
  }
  update(p) {
    const b = XY => {
      XY.active = false;
      XY.complete = true;
      this.testsCompleted++;
    };
    const XT = function (XY) {
      if (XY.ws) {
        XY.ws.close();
        XY.ws = null;
      }
      if (!XY.complete) {
        if (XY.retryCount++ >= XY.retryCountMax) {
          b(XY);
        }
      }
    };
    for (let XY = 0; XY < this.tests.length; XY++) {
      const XC = this.tests[XY];
      if (!XC.active) {
        return "continue";
      }
      if (!XC.ws) {
        const Xl = new WebSocket("ws" + (XC.https ? "s" : "") + "://" + XC.url + "/ptc");
        Xl.binaryType = "arraybuffer";
        Xl.onopen = function () {};
        Xl.onmessage = function (Xd) {
          const Xk = (Date.now() - XC.sendTime) / 1000;
          XC.ping = Math.min(XC.ping, Xk);
          XC.recvCount++;
          XC.sendDelay = 0.125;
        };
        Xl.onerror = function (Xd) {
          XT(XC);
        };
        Xl.onclose = function () {
          XT(XC);
        };
        XC.ws = Xl;
        XC.sendDelay = 0;
        XC.sendCount = 0;
        XC.recvCount = 0;
      }
      if (XC.ws.readyState == XC.ws.OPEN) {
        XC.sendDelay -= p;
        if (XC.sendCount == XC.recvCount && XC.sendDelay < 0) {
          XC.sendTime = Date.now();
          XC.sendCount++;
          try {
            XC.ws.send(this.ptcDataBuf);
          } catch {
            XC.ws.close();
          }
        }
        if (XC.recvCount >= XC.recvCountMax) {
          b(XC);
          XC.ws.close();
        }
      }
    }
    if (this.printSummary && this.isComplete()) {
      const Xd = this.tests.sort((Xk, XU) => Xk.ping - XU.ping);
      console.log("Ping test results");
      console.log("----------------------------------------");
      for (let Xk = 0; Xk < Xd.length; Xk++) {
        const XU = Xd[Xk];
        console.log("region", XU.region, "zone  ", XU.zone, "ping  ", XU.ping);
      }
      this.printSummary = false;
    }
  }
  isComplete() {
    return this.testsCompleted == this.testsStarted && this.testsStarted > 0;
  }
  getRegionList() {
    const p = [];
    for (let b = 0; b < yt.length; b++) {
      const XT = yt[b].region;
      if (!p.includes(XT)) {
        p.push(XT);
      }
    }
    return p;
  }
  getRegion() {
    this.tests.sort((p, b) => p.ping - b.ping);
    return this.tests[0].region;
  }
  getZones(p) {
    const b = this.tests.sort((XY, XC) => XY.ping - XC.ping);
    const XT = [];
    for (let XY = 0; XY < b.length; XY++) {
      const XC = b[XY];
      if (XC.region == p) {
        XT.push(XC.zone);
      }
    }
    return XT;
  }
}
const As = [{
  meta: {
    image: "loadout-0-100-71653988.png",
    size: {
      w: 4096,
      h: 4096
    },
    scale: 1
  },
  frames: {
    "part-aura-circle-01.img": {
      frame: {
        x: 508,
        y: 2,
        w: 284,
        h: 282
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 3,
        w: 284,
        h: 282
      },
      sourceSize: {
        w: 288,
        h: 288
      }
    },
    "ping-map-pulse.img": {
      frame: {
        x: 2,
        y: 2,
        w: 502,
        h: 502
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 5,
        w: 502,
        h: 502
      },
      sourceSize: {
        w: 512,
        h: 512
      }
    },
    "part-shell-05.img": {
      frame: {
        x: 2,
        y: 508,
        w: 63,
        h: 260
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 63,
        h: 260
      },
      sourceSize: {
        w: 63,
        h: 260
      }
    },
    "emote-circle-outer.img": {
      frame: {
        x: 69,
        y: 508,
        w: 252,
        h: 254
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 1,
        w: 252,
        h: 254
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "part-smoke-03.img": {
      frame: {
        x: 325,
        y: 508,
        w: 255,
        h: 251
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 1,
        w: 255,
        h: 251
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "part-smoke-02.img": {
      frame: {
        x: 796,
        y: 2,
        w: 256,
        h: 250
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 3,
        w: 256,
        h: 250
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "gun-scarssr-01.img": {
      frame: {
        x: 796,
        y: 256,
        w: 62,
        h: 250
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: -1,
        w: 62,
        h: 250
      },
      sourceSize: {
        w: 60,
        h: 248
      }
    },
    "gun-potato-cannon-01.img": {
      frame: {
        x: 862,
        y: 256,
        w: 58,
        h: 250
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: -1,
        w: 58,
        h: 250
      },
      sourceSize: {
        w: 56,
        h: 248
      }
    },
    "gun-awc-02.img": {
      frame: {
        x: 924,
        y: 256,
        w: 47,
        h: 228
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 9,
        w: 47,
        h: 228
      },
      sourceSize: {
        w: 60,
        h: 236
      }
    },
    "gun-awc-01.img": {
      frame: {
        x: 975,
        y: 256,
        w: 47,
        h: 228
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 9,
        w: 47,
        h: 228
      },
      sourceSize: {
        w: 60,
        h: 236
      }
    },
    "gun-m249-top-01.img": {
      frame: {
        x: 796,
        y: 510,
        w: 38,
        h: 216
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 17,
        w: 38,
        h: 216
      },
      sourceSize: {
        w: 56,
        h: 232
      }
    },
    "gun-garand-01.img": {
      frame: {
        x: 838,
        y: 510,
        w: 34,
        h: 214
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 19,
        w: 34,
        h: 214
      },
      sourceSize: {
        w: 48,
        h: 232
      }
    },
    "gun-potato-smg-01.img": {
      frame: {
        x: 876,
        y: 510,
        w: 101,
        h: 212
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 18,
        y: 37,
        w: 101,
        h: 212
      },
      sourceSize: {
        w: 176,
        h: 248
      }
    },
    "gun-usas-01.img": {
      frame: {
        x: 981,
        y: 510,
        w: 43,
        h: 210
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 23,
        w: 43,
        h: 210
      },
      sourceSize: {
        w: 56,
        h: 232
      }
    },
    "gun-vss-01.img": {
      frame: {
        x: 508,
        y: 288,
        w: 40,
        h: 210
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: -1,
        w: 40,
        h: 210
      },
      sourceSize: {
        w: 48,
        h: 208
      }
    },
    "pad.img": {
      frame: {
        x: 552,
        y: 288,
        w: 208,
        h: 208
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 208,
        h: 208
      },
      sourceSize: {
        w: 208,
        h: 208
      }
    },
    "gun-scorpion-01.img": {
      frame: {
        x: 584,
        y: 508,
        w: 41,
        h: 200
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 9,
        w: 41,
        h: 200
      },
      sourceSize: {
        w: 48,
        h: 208
      }
    },
    "gun-pkp-top-01.img": {
      frame: {
        x: 629,
        y: 508,
        w: 36,
        h: 194
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 13,
        y: 39,
        w: 36,
        h: 194
      },
      sourceSize: {
        w: 56,
        h: 232
      }
    },
    "gun-grozas-01.img": {
      frame: {
        x: 669,
        y: 508,
        w: 40,
        h: 191
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 18,
        w: 40,
        h: 191
      },
      sourceSize: {
        w: 48,
        h: 208
      }
    },
    "part-shell-02.img": {
      frame: {
        x: 713,
        y: 508,
        w: 63,
        h: 190
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 63,
        h: 190
      },
      sourceSize: {
        w: 63,
        h: 190
      }
    },
    "gun-m4a1-01.img": {
      frame: {
        x: 2,
        y: 772,
        w: 44,
        h: 189
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 8,
        w: 44,
        h: 189
      },
      sourceSize: {
        w: 48,
        h: 196
      }
    },
    "gun-long-01.img": {
      frame: {
        x: 50,
        y: 772,
        w: 31,
        h: 186
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 31,
        h: 186
      },
      sourceSize: {
        w: 32,
        h: 188
      }
    },
    "part-shell-03.img": {
      frame: {
        x: 85,
        y: 772,
        w: 63,
        h: 180
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 63,
        h: 180
      },
      sourceSize: {
        w: 63,
        h: 180
      }
    },
    "player-helmet-forest.img": {
      frame: {
        x: 152,
        y: 772,
        w: 150,
        h: 178
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: -1,
        w: 150,
        h: 178
      },
      sourceSize: {
        w: 176,
        h: 176
      }
    },
    "gun-saiga-01.img": {
      frame: {
        x: 306,
        y: 772,
        w: 40,
        h: 174
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 6,
        w: 40,
        h: 174
      },
      sourceSize: {
        w: 48,
        h: 196
      }
    },
    "player-wading-01.img": {
      frame: {
        x: 350,
        y: 772,
        w: 170,
        h: 170
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 170,
        h: 170
      },
      sourceSize: {
        w: 172,
        h: 172
      }
    },
    "gun-famas-01.img": {
      frame: {
        x: 524,
        y: 772,
        w: 38,
        h: 168
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 41,
        w: 38,
        h: 168
      },
      sourceSize: {
        w: 48,
        h: 208
      }
    },
    "part-shell-04.img": {
      frame: {
        x: 566,
        y: 772,
        w: 55,
        h: 164
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 55,
        h: 164
      },
      sourceSize: {
        w: 55,
        h: 164
      }
    },
    "loot-melee-machete-taiga.img": {
      frame: {
        x: 625,
        y: 772,
        w: 44,
        h: 164
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 60,
        y: 3,
        w: 44,
        h: 164
      },
      sourceSize: {
        w: 168,
        h: 168
      }
    },
    "part-airdrop-03.img": {
      frame: {
        x: 673,
        y: 772,
        w: 160,
        h: 160
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 160
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "part-airdrop-02x.img": {
      frame: {
        x: 837,
        y: 772,
        w: 38,
        h: 160
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 38,
        h: 160
      },
      sourceSize: {
        w: 38,
        h: 160
      }
    },
    "part-airdrop-02.img": {
      frame: {
        x: 879,
        y: 772,
        w: 38,
        h: 160
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 38,
        h: 160
      },
      sourceSize: {
        w: 38,
        h: 160
      }
    },
    "proj-bomb-iron-01.img": {
      frame: {
        x: 921,
        y: 772,
        w: 66,
        h: 157
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 47,
        y: 2,
        w: 66,
        h: 157
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "proj-smoke-nopin.img": {
      frame: {
        x: 1056,
        y: 2,
        w: 152,
        h: 155
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 3,
        w: 152,
        h: 155
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "proj-smoke-pin.img": {
      frame: {
        x: 1056,
        y: 161,
        w: 152,
        h: 155
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 3,
        w: 152,
        h: 155
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "loot-melee-bonesaw-healer.img": {
      frame: {
        x: 1056,
        y: 320,
        w: 60,
        h: 155
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 64,
        y: 10,
        w: 60,
        h: 155
      },
      sourceSize: {
        w: 168,
        h: 168
      }
    },
    "loot-melee-bonesaw-rusted.img": {
      frame: {
        x: 1120,
        y: 320,
        w: 54,
        h: 155
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 81,
        y: 22,
        w: 54,
        h: 155
      },
      sourceSize: {
        w: 192,
        h: 192
      }
    },
    "loot-melee-kukri-sniper.img": {
      frame: {
        x: 1056,
        y: 479,
        w: 40,
        h: 155
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 54,
        y: 3,
        w: 40,
        h: 155
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "loot-melee-kukri-trad.img": {
      frame: {
        x: 1100,
        y: 479,
        w: 40,
        h: 155
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 54,
        y: 3,
        w: 40,
        h: 155
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "loot-melee-spade-assault.img": {
      frame: {
        x: 1144,
        y: 479,
        w: 54,
        h: 150
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 53,
        y: 5,
        w: 54,
        h: 150
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "gun-groza-01.img": {
      frame: {
        x: 1056,
        y: 638,
        w: 40,
        h: 148
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 61,
        w: 40,
        h: 148
      },
      sourceSize: {
        w: 48,
        h: 208
      }
    },
    "player-circle-base-01.img": {
      frame: {
        x: 1056,
        y: 790,
        w: 146,
        h: 146
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 146,
        h: 146
      },
      sourceSize: {
        w: 148,
        h: 148
      }
    },
    "player-circle-base-02.img": {
      frame: {
        x: 2,
        y: 965,
        w: 146,
        h: 146
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 146,
        h: 146
      },
      sourceSize: {
        w: 148,
        h: 148
      }
    },
    "player-armor-base-01.img": {
      frame: {
        x: 152,
        y: 965,
        w: 146,
        h: 146
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 146,
        h: 146
      },
      sourceSize: {
        w: 148,
        h: 148
      }
    },
    "player-helmet-moon.img": {
      frame: {
        x: 302,
        y: 965,
        w: 120,
        h: 146
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 15,
        w: 120,
        h: 146
      },
      sourceSize: {
        w: 176,
        h: 176
      }
    },
    "proj-smoke-nopin-nolever.img": {
      frame: {
        x: 1100,
        y: 638,
        w: 76,
        h: 146
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 42,
        y: 7,
        w: 76,
        h: 146
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "loot-circle-outer-05.img": {
      frame: {
        x: 426,
        y: 965,
        w: 144,
        h: 144
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 144,
        h: 144
      },
      sourceSize: {
        w: 146,
        h: 146
      }
    },
    "ping-border.img": {
      frame: {
        x: 574,
        y: 965,
        w: 144,
        h: 144
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 144
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "loot-circle-outer-02.img": {
      frame: {
        x: 722,
        y: 965,
        w: 144,
        h: 144
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 144,
        h: 144
      },
      sourceSize: {
        w: 146,
        h: 146
      }
    },
    "loot-circle-outer-01.img": {
      frame: {
        x: 870,
        y: 965,
        w: 144,
        h: 144
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 144,
        h: 144
      },
      sourceSize: {
        w: 146,
        h: 146
      }
    },
    "proj-mirv-nopin.img": {
      frame: {
        x: 1018,
        y: 965,
        w: 102,
        h: 144
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 26,
        y: 2,
        w: 102,
        h: 144
      },
      sourceSize: {
        w: 128,
        h: 148
      }
    },
    "proj-mirv-pin.img": {
      frame: {
        x: 1212,
        y: 2,
        w: 102,
        h: 144
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 2,
        w: 102,
        h: 144
      },
      sourceSize: {
        w: 128,
        h: 148
      }
    },
    "proj-mirv-nopin-nolever.img": {
      frame: {
        x: 1212,
        y: 150,
        w: 76,
        h: 144
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 26,
        y: 2,
        w: 76,
        h: 144
      },
      sourceSize: {
        w: 128,
        h: 148
      }
    },
    "gun-bugle-01.img": {
      frame: {
        x: 1212,
        y: 298,
        w: 64,
        h: 143
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 89,
        w: 64,
        h: 143
      },
      sourceSize: {
        w: 96,
        h: 232
      }
    },
    "player-star.img": {
      frame: {
        x: 2,
        y: 1115,
        w: 148,
        h: 142
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 3,
        w: 148,
        h: 142
      },
      sourceSize: {
        w: 148,
        h: 148
      }
    },
    "star.img": {
      frame: {
        x: 154,
        y: 1115,
        w: 148,
        h: 142
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 3,
        w: 148,
        h: 142
      },
      sourceSize: {
        w: 148,
        h: 148
      }
    },
    "player-ripple-01.img": {
      frame: {
        x: 306,
        y: 1115,
        w: 142,
        h: 142
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 142,
        h: 142
      },
      sourceSize: {
        w: 142,
        h: 142
      }
    },
    "part-plank-01.img": {
      frame: {
        x: 452,
        y: 1115,
        w: 142,
        h: 142
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 142,
        h: 142
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "part-panel-01.img": {
      frame: {
        x: 598,
        y: 1115,
        w: 142,
        h: 142
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 142,
        h: 142
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "part-woodchip-01.img": {
      frame: {
        x: 744,
        y: 1115,
        w: 141,
        h: 140
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 1,
        w: 141,
        h: 140
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "player-the-hunted.img": {
      frame: {
        x: 889,
        y: 1115,
        w: 140,
        h: 138
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 3,
        w: 140,
        h: 138
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "part-book-01.img": {
      frame: {
        x: 1033,
        y: 1115,
        w: 104,
        h: 138
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 20,
        y: 3,
        w: 104,
        h: 138
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "loot-melee-crowbar-scout.img": {
      frame: {
        x: 1212,
        y: 445,
        w: 37,
        h: 138
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 54,
        y: 7,
        w: 37,
        h: 138
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "loot-melee-crowbar-recon.img": {
      frame: {
        x: 1253,
        y: 445,
        w: 37,
        h: 138
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 54,
        y: 7,
        w: 37,
        h: 138
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "player-helmet-last-man-01.img": {
      frame: {
        x: 1141,
        y: 1115,
        w: 139,
        h: 136
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 27,
        y: 20,
        w: 139,
        h: 136
      },
      sourceSize: {
        w: 176,
        h: 176
      }
    },
    "player-helmet-last-man-02.img": {
      frame: {
        x: 1318,
        y: 2,
        w: 139,
        h: 136
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 27,
        y: 20,
        w: 139,
        h: 136
      },
      sourceSize: {
        w: 176,
        h: 176
      }
    },
    "player-base-02.img": {
      frame: {
        x: 1318,
        y: 142,
        w: 136,
        h: 136
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 136,
        h: 136
      },
      sourceSize: {
        w: 140,
        h: 140
      }
    },
    "player-base-01.img": {
      frame: {
        x: 1318,
        y: 282,
        w: 136,
        h: 136
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 136,
        h: 136
      },
      sourceSize: {
        w: 140,
        h: 140
      }
    },
    "part-pot-01.img": {
      frame: {
        x: 1318,
        y: 422,
        w: 94,
        h: 136
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 25,
        y: 4,
        w: 94,
        h: 136
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "player-base-outfitParmaPrestige.img": {
      frame: {
        x: 1318,
        y: 562,
        w: 134,
        h: 134
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 5,
        w: 134,
        h: 134
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "player-base-outfitLumber.img": {
      frame: {
        x: 1318,
        y: 700,
        w: 134,
        h: 134
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 134,
        h: 134
      },
      sourceSize: {
        w: 140,
        h: 140
      }
    },
    "player-base-outfitWheat.img": {
      frame: {
        x: 1318,
        y: 838,
        w: 134,
        h: 134
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 134,
        h: 134
      },
      sourceSize: {
        w: 140,
        h: 140
      }
    },
    "player-base-outfitHeaven.img": {
      frame: {
        x: 1318,
        y: 976,
        w: 134,
        h: 134
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 134,
        h: 134
      },
      sourceSize: {
        w: 140,
        h: 140
      }
    },
    "player-base-outfitTurkey.img": {
      frame: {
        x: 1318,
        y: 1114,
        w: 134,
        h: 134
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 134,
        h: 134
      },
      sourceSize: {
        w: 140,
        h: 140
      }
    },
    "player-base-outfitDC.img": {
      frame: {
        x: 2,
        y: 1261,
        w: 134,
        h: 134
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 134,
        h: 134
      },
      sourceSize: {
        w: 140,
        h: 140
      }
    },
    "player-base-outfitSpetsnaz.img": {
      frame: {
        x: 140,
        y: 1261,
        w: 134,
        h: 134
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 134,
        h: 134
      },
      sourceSize: {
        w: 140,
        h: 140
      }
    },
    "loot-circle-outer-04.img": {
      frame: {
        x: 278,
        y: 1261,
        w: 140,
        h: 133
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 0,
        w: 140,
        h: 133
      },
      sourceSize: {
        w: 146,
        h: 146
      }
    },
    "part-shell-01.img": {
      frame: {
        x: 1212,
        y: 587,
        w: 56,
        h: 133
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 56,
        h: 133
      },
      sourceSize: {
        w: 56,
        h: 133
      }
    },
    "player-king-woods.img": {
      frame: {
        x: 422,
        y: 1261,
        w: 140,
        h: 132
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 8,
        w: 140,
        h: 132
      },
      sourceSize: {
        w: 148,
        h: 148
      }
    },
    "part-plate-01.img": {
      frame: {
        x: 566,
        y: 1261,
        w: 138,
        h: 132
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 6,
        w: 138,
        h: 132
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "loot-melee-warhammer-tank.img": {
      frame: {
        x: 708,
        y: 1261,
        w: 255,
        h: 130
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 18,
        w: 255,
        h: 130
      },
      sourceSize: {
        w: 264,
        h: 152
      }
    },
    "part-splat-02.img": {
      frame: {
        x: 967,
        y: 1261,
        w: 123,
        h: 130
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 15,
        y: 8,
        w: 123,
        h: 130
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "gun-mp220-01.img": {
      frame: {
        x: 1416,
        y: 422,
        w: 40,
        h: 130
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: -1,
        w: 40,
        h: 130
      },
      sourceSize: {
        w: 40,
        h: 128
      }
    },
    "flag-colombia.img": {
      frame: {
        x: 1094,
        y: 1261,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-croatia.img": {
      frame: {
        x: 1226,
        y: 1261,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-czech-republic.img": {
      frame: {
        x: 1461,
        y: 2,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-denmark.img": {
      frame: {
        x: 1461,
        y: 134,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-dominican-republic.img": {
      frame: {
        x: 1461,
        y: 266,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-ecuador.img": {
      frame: {
        x: 1461,
        y: 398,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-egypt.img": {
      frame: {
        x: 1461,
        y: 530,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-estonia.img": {
      frame: {
        x: 1461,
        y: 662,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-finland.img": {
      frame: {
        x: 1461,
        y: 794,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-france.img": {
      frame: {
        x: 1461,
        y: 926,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-georgia.img": {
      frame: {
        x: 1461,
        y: 1058,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-germany.img": {
      frame: {
        x: 1461,
        y: 1190,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-greece.img": {
      frame: {
        x: 2,
        y: 1399,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-guatemala.img": {
      frame: {
        x: 134,
        y: 1399,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-honduras.img": {
      frame: {
        x: 266,
        y: 1399,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-scope-00.img": {
      frame: {
        x: 398,
        y: 1399,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-hungary.img": {
      frame: {
        x: 530,
        y: 1399,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-india.img": {
      frame: {
        x: 662,
        y: 1399,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-indonesia.img": {
      frame: {
        x: 794,
        y: 1399,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-israel.img": {
      frame: {
        x: 926,
        y: 1399,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-italy.img": {
      frame: {
        x: 1058,
        y: 1399,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-japan.img": {
      frame: {
        x: 1190,
        y: 1399,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-kazakhstan.img": {
      frame: {
        x: 1322,
        y: 1399,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-latvia.img": {
      frame: {
        x: 1454,
        y: 1399,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-lithuania.img": {
      frame: {
        x: 1593,
        y: 2,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-malaysia.img": {
      frame: {
        x: 1593,
        y: 134,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-mexico.img": {
      frame: {
        x: 1593,
        y: 266,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-moldova.img": {
      frame: {
        x: 1593,
        y: 398,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-morocco.img": {
      frame: {
        x: 1593,
        y: 530,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-netherlands.img": {
      frame: {
        x: 1593,
        y: 662,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-new-zealand.img": {
      frame: {
        x: 1593,
        y: 794,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-norway.img": {
      frame: {
        x: 1593,
        y: 926,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-peru.img": {
      frame: {
        x: 1593,
        y: 1058,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-philippines.img": {
      frame: {
        x: 1593,
        y: 1190,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-portugal.img": {
      frame: {
        x: 1593,
        y: 1322,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-republic-of-poland.img": {
      frame: {
        x: 2,
        y: 1531,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-romania.img": {
      frame: {
        x: 134,
        y: 1531,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-russia.img": {
      frame: {
        x: 266,
        y: 1531,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-serbia.img": {
      frame: {
        x: 398,
        y: 1531,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-singapore.img": {
      frame: {
        x: 530,
        y: 1531,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-slovakia.img": {
      frame: {
        x: 662,
        y: 1531,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-south-korea.img": {
      frame: {
        x: 794,
        y: 1531,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-spain.img": {
      frame: {
        x: 926,
        y: 1531,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-sweden.img": {
      frame: {
        x: 1058,
        y: 1531,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-switzerland.img": {
      frame: {
        x: 1190,
        y: 1531,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-taiwan.img": {
      frame: {
        x: 1322,
        y: 1531,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-thailand.img": {
      frame: {
        x: 1454,
        y: 1531,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-trinidad-and-tobago.img": {
      frame: {
        x: 1586,
        y: 1531,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-turkey.img": {
      frame: {
        x: 1725,
        y: 2,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-ukraine.img": {
      frame: {
        x: 1725,
        y: 134,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-united-arab-emirates.img": {
      frame: {
        x: 1725,
        y: 266,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-united-kingdom.img": {
      frame: {
        x: 1725,
        y: 398,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-united-states-of-america.img": {
      frame: {
        x: 1725,
        y: 530,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-uruguay.img": {
      frame: {
        x: 1725,
        y: 662,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-venezuela.img": {
      frame: {
        x: 1725,
        y: 794,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-vietnam.img": {
      frame: {
        x: 1725,
        y: 926,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-scope-02.img": {
      frame: {
        x: 1725,
        y: 1058,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-hong-kong.img": {
      frame: {
        x: 1725,
        y: 1190,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-scope-01.img": {
      frame: {
        x: 1725,
        y: 1322,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "face-angel-treat.img": {
      frame: {
        x: 1725,
        y: 1454,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-scope-03.img": {
      frame: {
        x: 2,
        y: 1663,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loadout-crosshair.img": {
      frame: {
        x: 134,
        y: 1663,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-ammo-box.img": {
      frame: {
        x: 266,
        y: 1663,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-albania.img": {
      frame: {
        x: 398,
        y: 1663,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-scope-04.img": {
      frame: {
        x: 530,
        y: 1663,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-algeria.img": {
      frame: {
        x: 662,
        y: 1663,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-argentina.img": {
      frame: {
        x: 794,
        y: 1663,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-deagle-dual.img": {
      frame: {
        x: 926,
        y: 1663,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-australia.img": {
      frame: {
        x: 1058,
        y: 1663,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-austria.img": {
      frame: {
        x: 1190,
        y: 1663,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-azerbaijan.img": {
      frame: {
        x: 1322,
        y: 1663,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-belarus.img": {
      frame: {
        x: 1454,
        y: 1663,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-m93r-dual.img": {
      frame: {
        x: 1586,
        y: 1663,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-belgium.img": {
      frame: {
        x: 1718,
        y: 1663,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-bolivia.img": {
      frame: {
        x: 1857,
        y: 2,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-bosnia-and-herzegovina.img": {
      frame: {
        x: 1857,
        y: 134,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-brazil.img": {
      frame: {
        x: 1857,
        y: 266,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-canada.img": {
      frame: {
        x: 1857,
        y: 398,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-chile.img": {
      frame: {
        x: 1857,
        y: 530,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flag-china.img": {
      frame: {
        x: 1857,
        y: 662,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "ping-map-coming.img": {
      frame: {
        x: 1857,
        y: 794,
        w: 112,
        h: 128
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 8,
        w: 112,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 256
      }
    },
    "loot-weapon-flare-gun-dual.img": {
      frame: {
        x: 1857,
        y: 926,
        w: 110,
        h: 128
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 0,
        w: 110,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-m93r.img": {
      frame: {
        x: 1857,
        y: 1058,
        w: 100,
        h: 128
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 14,
        y: 0,
        w: 100,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "player-helmet-potato.img": {
      frame: {
        x: 1857,
        y: 1190,
        w: 99,
        h: 128
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 27,
        y: 24,
        w: 99,
        h: 128
      },
      sourceSize: {
        w: 176,
        h: 176
      }
    },
    "player-helmet-medic.img": {
      frame: {
        x: 1857,
        y: 1322,
        w: 97,
        h: 128
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 27,
        y: 24,
        w: 97,
        h: 128
      },
      sourceSize: {
        w: 176,
        h: 176
      }
    },
    "player-helmet-lieutenant.img": {
      frame: {
        x: 1857,
        y: 1454,
        w: 97,
        h: 128
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 27,
        y: 24,
        w: 97,
        h: 128
      },
      sourceSize: {
        w: 176,
        h: 176
      }
    },
    "player-helmet-leader.img": {
      frame: {
        x: 1857,
        y: 1586,
        w: 97,
        h: 128
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 27,
        y: 24,
        w: 97,
        h: 128
      },
      sourceSize: {
        w: 176,
        h: 176
      }
    },
    "indicator.img": {
      frame: {
        x: 1212,
        y: 724,
        w: 90,
        h: 128
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 19,
        y: 0,
        w: 90,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "part-airdrop-04.img": {
      frame: {
        x: 1212,
        y: 856,
        w: 54,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 54,
        h: 128
      },
      sourceSize: {
        w: 54,
        h: 128
      }
    },
    "ping-map-danger.img": {
      frame: {
        x: 1272,
        y: 587,
        w: 40,
        h: 128
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 44,
        y: 0,
        w: 40,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-perk-aoe-heal.img": {
      frame: {
        x: 2,
        y: 1795,
        w: 127,
        h: 127
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 127,
        h: 127
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-circle-outer-03.img": {
      frame: {
        x: 133,
        y: 1795,
        w: 146,
        h: 126
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 10,
        w: 146,
        h: 126
      },
      sourceSize: {
        w: 146,
        h: 146
      }
    },
    "ping-team-danger.img": {
      frame: {
        x: 283,
        y: 1795,
        w: 126,
        h: 126
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 126,
        h: 126
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "face-poo.img": {
      frame: {
        x: 413,
        y: 1795,
        w: 126,
        h: 126
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 0,
        w: 126,
        h: 126
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "ping-team-unlock.img": {
      frame: {
        x: 543,
        y: 1795,
        w: 126,
        h: 126
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 126,
        h: 126
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "ping-team-airdrop.img": {
      frame: {
        x: 673,
        y: 1795,
        w: 126,
        h: 126
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 126,
        h: 126
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "ping-team-help.img": {
      frame: {
        x: 803,
        y: 1795,
        w: 126,
        h: 126
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 126,
        h: 126
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "ping-team-coming.img": {
      frame: {
        x: 933,
        y: 1795,
        w: 126,
        h: 126
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 126,
        h: 126
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "ping-team-airstrike.img": {
      frame: {
        x: 1063,
        y: 1795,
        w: 126,
        h: 126
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 126,
        h: 126
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "face-imp-trick.img": {
      frame: {
        x: 1193,
        y: 1795,
        w: 124,
        h: 126
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 1,
        w: 124,
        h: 126
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "face-thinking.img": {
      frame: {
        x: 1321,
        y: 1795,
        w: 124,
        h: 126
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 124,
        h: 126
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-grozas.img": {
      frame: {
        x: 1449,
        y: 1795,
        w: 122,
        h: 126
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 1,
        w: 122,
        h: 126
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-ot38-dual.img": {
      frame: {
        x: 1575,
        y: 1795,
        w: 121,
        h: 126
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 1,
        w: 121,
        h: 126
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-colt45-dual.img": {
      frame: {
        x: 1700,
        y: 1795,
        w: 120,
        h: 126
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 1,
        w: 120,
        h: 126
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-mkg45.img": {
      frame: {
        x: 1824,
        y: 1795,
        w: 116,
        h: 126
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 1,
        w: 116,
        h: 126
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-m4a1.img": {
      frame: {
        x: 1989,
        y: 2,
        w: 116,
        h: 126
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 1,
        w: 116,
        h: 126
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-m1014.img": {
      frame: {
        x: 1989,
        y: 132,
        w: 110,
        h: 126
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 1,
        w: 110,
        h: 126
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-svd.img": {
      frame: {
        x: 1989,
        y: 262,
        w: 110,
        h: 126
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 1,
        w: 110,
        h: 126
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-vss.img": {
      frame: {
        x: 1989,
        y: 392,
        w: 108,
        h: 126
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 10,
        y: 1,
        w: 108,
        h: 126
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-ots38-dual.img": {
      frame: {
        x: 1989,
        y: 522,
        w: 105,
        h: 126
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 1,
        w: 105,
        h: 126
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "player-helmet-grenadier.img": {
      frame: {
        x: 1989,
        y: 652,
        w: 95,
        h: 126
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 28,
        y: 25,
        w: 95,
        h: 126
      },
      sourceSize: {
        w: 176,
        h: 176
      }
    },
    "player-helmet-bugler.img": {
      frame: {
        x: 1989,
        y: 782,
        w: 95,
        h: 126
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 28,
        y: 25,
        w: 95,
        h: 126
      },
      sourceSize: {
        w: 176,
        h: 176
      }
    },
    "player-helmet-recon.img": {
      frame: {
        x: 1989,
        y: 912,
        w: 95,
        h: 126
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 28,
        y: 25,
        w: 95,
        h: 126
      },
      sourceSize: {
        w: 176,
        h: 176
      }
    },
    "player-visor-scout.img": {
      frame: {
        x: 1989,
        y: 1042,
        w: 77,
        h: 126
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 76,
        y: 25,
        w: 77,
        h: 126
      },
      sourceSize: {
        w: 176,
        h: 176
      }
    },
    "gun-deagle-01.img": {
      frame: {
        x: 1989,
        y: 1172,
        w: 42,
        h: 126
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 107,
        w: 42,
        h: 126
      },
      sourceSize: {
        w: 56,
        h: 232
      }
    },
    "gun-med-01.img": {
      frame: {
        x: 2070,
        y: 1042,
        w: 30,
        h: 126
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 30,
        h: 126
      },
      sourceSize: {
        w: 32,
        h: 128
      }
    },
    "proj-strobe-unarmed.img": {
      frame: {
        x: 2,
        y: 1926,
        w: 147,
        h: 125
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 25,
        w: 147,
        h: 125
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "star-red.img": {
      frame: {
        x: 153,
        y: 1926,
        w: 132,
        h: 125
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 6,
        w: 132,
        h: 125
      },
      sourceSize: {
        w: 148,
        h: 148
      }
    },
    "star-blue.img": {
      frame: {
        x: 289,
        y: 1926,
        w: 132,
        h: 125
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 6,
        w: 132,
        h: 125
      },
      sourceSize: {
        w: 148,
        h: 148
      }
    },
    "face-alien.img": {
      frame: {
        x: 425,
        y: 1926,
        w: 124,
        h: 125
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 124,
        h: 125
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "snowflake.img": {
      frame: {
        x: 1989,
        y: 1302,
        w: 114,
        h: 125
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 2,
        w: 114,
        h: 125
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-dp28.img": {
      frame: {
        x: 1989,
        y: 1431,
        w: 114,
        h: 125
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 2,
        w: 114,
        h: 125
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "part-boost-naturalize.img": {
      frame: {
        x: 1989,
        y: 1560,
        w: 94,
        h: 125
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 17,
        y: 2,
        w: 94,
        h: 125
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "face-imp.img": {
      frame: {
        x: 553,
        y: 1926,
        w: 126,
        h: 124
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 2,
        w: 126,
        h: 124
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "face-heart.img": {
      frame: {
        x: 683,
        y: 1926,
        w: 124,
        h: 124
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 124,
        h: 124
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "face-sob.img": {
      frame: {
        x: 811,
        y: 1926,
        w: 124,
        h: 124
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 124,
        h: 124
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "face-sad.img": {
      frame: {
        x: 939,
        y: 1926,
        w: 124,
        h: 124
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 124,
        h: 124
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "face-upsidedown.img": {
      frame: {
        x: 1067,
        y: 1926,
        w: 124,
        h: 124
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 124,
        h: 124
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "face-monocle.img": {
      frame: {
        x: 1195,
        y: 1926,
        w: 124,
        h: 124
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 124,
        h: 124
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "face-joy.img": {
      frame: {
        x: 1323,
        y: 1926,
        w: 124,
        h: 124
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 124,
        h: 124
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "part-log-01.img": {
      frame: {
        x: 1451,
        y: 1926,
        w: 124,
        h: 124
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 124,
        h: 124
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loadout-emote.img": {
      frame: {
        x: 1579,
        y: 1926,
        w: 124,
        h: 124
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 124,
        h: 124
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "face-sunglass.img": {
      frame: {
        x: 1707,
        y: 1926,
        w: 124,
        h: 124
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 124,
        h: 124
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "face-happy.img": {
      frame: {
        x: 1835,
        y: 1926,
        w: 124,
        h: 124
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 124,
        h: 124
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "face-disappoint.img": {
      frame: {
        x: 1963,
        y: 1926,
        w: 124,
        h: 124
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 124,
        h: 124
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-perk-targeting.img": {
      frame: {
        x: 2109,
        y: 2,
        w: 124,
        h: 124
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 124,
        h: 124
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "face-bandaged.img": {
      frame: {
        x: 2109,
        y: 130,
        w: 124,
        h: 124
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 124,
        h: 124
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "face-angry.img": {
      frame: {
        x: 2109,
        y: 258,
        w: 124,
        h: 124
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 124,
        h: 124
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "face-picasso.img": {
      frame: {
        x: 2109,
        y: 386,
        w: 122,
        h: 124
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 2,
        w: 122,
        h: 124
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-perk-splinter.img": {
      frame: {
        x: 2109,
        y: 514,
        w: 116,
        h: 124
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 2,
        w: 116,
        h: 124
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "campfire.img": {
      frame: {
        x: 2109,
        y: 642,
        w: 116,
        h: 124
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 2,
        w: 116,
        h: 124
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-an94.img": {
      frame: {
        x: 2109,
        y: 770,
        w: 114,
        h: 124
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 2,
        w: 114,
        h: 124
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-pkp.img": {
      frame: {
        x: 2109,
        y: 898,
        w: 114,
        h: 124
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 2,
        w: 114,
        h: 124
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-m1a1.img": {
      frame: {
        x: 2109,
        y: 1026,
        w: 113,
        h: 124
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 2,
        w: 113,
        h: 124
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-scorpion.img": {
      frame: {
        x: 2109,
        y: 1154,
        w: 113,
        h: 124
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 2,
        w: 113,
        h: 124
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-potato-smg.img": {
      frame: {
        x: 2109,
        y: 1282,
        w: 111,
        h: 124
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 2,
        w: 111,
        h: 124
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "reload.img": {
      frame: {
        x: 2109,
        y: 1410,
        w: 108,
        h: 124
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 10,
        y: 2,
        w: 108,
        h: 124
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "trash.img": {
      frame: {
        x: 2109,
        y: 1538,
        w: 108,
        h: 124
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 10,
        y: 2,
        w: 108,
        h: 124
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "thumbs-up.img": {
      frame: {
        x: 2109,
        y: 1666,
        w: 104,
        h: 124
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 2,
        w: 104,
        h: 124
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "bullets.img": {
      frame: {
        x: 2109,
        y: 1794,
        w: 86,
        h: 124
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 21,
        y: 2,
        w: 86,
        h: 124
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "part-splat-01.img": {
      frame: {
        x: 2,
        y: 2055,
        w: 126,
        h: 123
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 9,
        w: 126,
        h: 123
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "loot-weapon-saiga.img": {
      frame: {
        x: 2109,
        y: 1922,
        w: 112,
        h: 123
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 3,
        w: 112,
        h: 123
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "tombstone.img": {
      frame: {
        x: 1989,
        y: 1689,
        w: 112,
        h: 123
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 0,
        w: 112,
        h: 123
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-m39.img": {
      frame: {
        x: 132,
        y: 2055,
        w: 108,
        h: 123
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 10,
        y: 3,
        w: 108,
        h: 123
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "police.img": {
      frame: {
        x: 1212,
        y: 988,
        w: 100,
        h: 123
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 14,
        y: 2,
        w: 100,
        h: 123
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-perk-gotw.img": {
      frame: {
        x: 244,
        y: 2055,
        w: 128,
        h: 122
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 3,
        w: 128,
        h: 122
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-perk-leadership.img": {
      frame: {
        x: 376,
        y: 2055,
        w: 128,
        h: 122
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 3,
        w: 128,
        h: 122
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-perk-firepower.img": {
      frame: {
        x: 508,
        y: 2055,
        w: 126,
        h: 122
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 3,
        w: 126,
        h: 122
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-bar.img": {
      frame: {
        x: 638,
        y: 2055,
        w: 126,
        h: 122
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 3,
        w: 126,
        h: 122
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-scarssr.img": {
      frame: {
        x: 768,
        y: 2055,
        w: 125,
        h: 122
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 5,
        w: 125,
        h: 122
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "heart.img": {
      frame: {
        x: 897,
        y: 2055,
        w: 124,
        h: 122
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 4,
        w: 124,
        h: 122
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "surviv.img": {
      frame: {
        x: 1025,
        y: 2055,
        w: 122,
        h: 122
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 122,
        h: 122
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-perk-hunted.img": {
      frame: {
        x: 1151,
        y: 2055,
        w: 122,
        h: 122
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 122,
        h: 122
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "emote.img": {
      frame: {
        x: 1277,
        y: 2055,
        w: 122,
        h: 122
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 122,
        h: 122
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-potato-cannon.img": {
      frame: {
        x: 1403,
        y: 2055,
        w: 122,
        h: 122
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 122,
        h: 122
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-mk12.img": {
      frame: {
        x: 1529,
        y: 2055,
        w: 114,
        h: 122
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 3,
        w: 114,
        h: 122
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "cupcake.img": {
      frame: {
        x: 1647,
        y: 2055,
        w: 108,
        h: 122
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 10,
        y: 3,
        w: 108,
        h: 122
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "candy-corn.img": {
      frame: {
        x: 1759,
        y: 2055,
        w: 104,
        h: 122
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 3,
        w: 104,
        h: 122
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "part-heal-tomoe.img": {
      frame: {
        x: 1867,
        y: 2055,
        w: 104,
        h: 122
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 3,
        w: 104,
        h: 122
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "snowman.img": {
      frame: {
        x: 1358,
        y: 1261,
        w: 96,
        h: 122
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 16,
        y: 3,
        w: 96,
        h: 122
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-perk-rare-potato.img": {
      frame: {
        x: 1975,
        y: 2055,
        w: 90,
        h: 122
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 19,
        y: 3,
        w: 90,
        h: 122
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-throwable-smoke.img": {
      frame: {
        x: 1124,
        y: 965,
        w: 84,
        h: 122
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 22,
        y: 3,
        w: 84,
        h: 122
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "ice-cream.img": {
      frame: {
        x: 2035,
        y: 1172,
        w: 66,
        h: 122
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 31,
        y: 3,
        w: 66,
        h: 122
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "gun-p30l-01.img": {
      frame: {
        x: 2199,
        y: 1794,
        w: 33,
        h: 122
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 111,
        w: 33,
        h: 122
      },
      sourceSize: {
        w: 56,
        h: 232
      }
    },
    "loadout-melee.img": {
      frame: {
        x: 2069,
        y: 2055,
        w: 123,
        h: 121
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 123,
        h: 121
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-awc.img": {
      frame: {
        x: 2237,
        y: 2,
        w: 122,
        h: 121
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 6,
        w: 122,
        h: 121
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-l86.img": {
      frame: {
        x: 2237,
        y: 127,
        w: 118,
        h: 121
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 4,
        w: 118,
        h: 121
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-m249.img": {
      frame: {
        x: 2237,
        y: 252,
        w: 116,
        h: 121
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 4,
        w: 116,
        h: 121
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "proj-frag-pin-02.img": {
      frame: {
        x: 2237,
        y: 377,
        w: 110,
        h: 121
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 6,
        w: 110,
        h: 121
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "proj-frag-pin-01.img": {
      frame: {
        x: 2237,
        y: 502,
        w: 110,
        h: 121
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 6,
        w: 110,
        h: 121
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "proj-frag-nopin-01.img": {
      frame: {
        x: 2237,
        y: 627,
        w: 109,
        h: 121
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 19,
        y: 6,
        w: 109,
        h: 121
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "proj-frag-nopin-02.img": {
      frame: {
        x: 2237,
        y: 752,
        w: 109,
        h: 121
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 19,
        y: 6,
        w: 109,
        h: 121
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "proj-frag-nopin-nolever-01.img": {
      frame: {
        x: 2237,
        y: 877,
        w: 90,
        h: 121
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 19,
        y: 6,
        w: 90,
        h: 121
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "proj-frag-nopin-nolever-02.img": {
      frame: {
        x: 2237,
        y: 1002,
        w: 90,
        h: 121
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 19,
        y: 6,
        w: 90,
        h: 121
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "chicken-dinner.img": {
      frame: {
        x: 2,
        y: 2182,
        w: 128,
        h: 120
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 4,
        w: 128,
        h: 120
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "part-splat-03.img": {
      frame: {
        x: 134,
        y: 2182,
        w: 123,
        h: 120
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 13,
        y: 6,
        w: 123,
        h: 120
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "loot-weapon-usas.img": {
      frame: {
        x: 2237,
        y: 1127,
        w: 122,
        h: 120
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 4,
        w: 122,
        h: 120
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-perk-chambered.img": {
      frame: {
        x: 2237,
        y: 1251,
        w: 120,
        h: 120
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 4,
        w: 120,
        h: 120
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "rainbow.img": {
      frame: {
        x: 2237,
        y: 1375,
        w: 119,
        h: 120
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 4,
        w: 119,
        h: 120
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-qbb97.img": {
      frame: {
        x: 2237,
        y: 1499,
        w: 118,
        h: 120
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 4,
        w: 118,
        h: 120
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-ak.img": {
      frame: {
        x: 2237,
        y: 1623,
        w: 102,
        h: 120
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 13,
        y: 4,
        w: 102,
        h: 120
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "egg.img": {
      frame: {
        x: 2237,
        y: 1747,
        w: 98,
        h: 120
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 15,
        y: 4,
        w: 98,
        h: 120
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-colt45.img": {
      frame: {
        x: 2237,
        y: 1871,
        w: 96,
        h: 120
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 16,
        y: 4,
        w: 96,
        h: 120
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-ots38.img": {
      frame: {
        x: 2237,
        y: 1995,
        w: 81,
        h: 120
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 23,
        y: 4,
        w: 81,
        h: 120
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-chest-02.img": {
      frame: {
        x: 261,
        y: 2182,
        w: 76,
        h: 120
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 26,
        y: 4,
        w: 76,
        h: 120
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-m1911-dual.img": {
      frame: {
        x: 341,
        y: 2182,
        w: 128,
        h: 119
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 5,
        w: 128,
        h: 119
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-m1100.img": {
      frame: {
        x: 473,
        y: 2182,
        w: 119,
        h: 119
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 7,
        w: 119,
        h: 119
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-m1911.img": {
      frame: {
        x: 596,
        y: 2182,
        w: 107,
        h: 119
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 10,
        y: 5,
        w: 107,
        h: 119
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-hk416.img": {
      frame: {
        x: 707,
        y: 2182,
        w: 105,
        h: 119
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 13,
        y: 4,
        w: 105,
        h: 119
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "part-potato-02.img": {
      frame: {
        x: 816,
        y: 2182,
        w: 94,
        h: 119
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 17,
        y: 4,
        w: 94,
        h: 119
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-perk-windwalk.img": {
      frame: {
        x: 914,
        y: 2182,
        w: 86,
        h: 119
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 21,
        y: 6,
        w: 86,
        h: 119
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-m9-dual.img": {
      frame: {
        x: 1004,
        y: 2182,
        w: 128,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 5,
        w: 128,
        h: 118
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "salt.img": {
      frame: {
        x: 1136,
        y: 2182,
        w: 124,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 5,
        w: 124,
        h: 118
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-sv98.img": {
      frame: {
        x: 1264,
        y: 2182,
        w: 121,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 7,
        w: 121,
        h: 118
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "skull.img": {
      frame: {
        x: 1389,
        y: 2182,
        w: 120,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 5,
        w: 120,
        h: 118
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "donut.img": {
      frame: {
        x: 1513,
        y: 2182,
        w: 120,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 5,
        w: 120,
        h: 118
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loadout-kill-icon.img": {
      frame: {
        x: 1637,
        y: 2182,
        w: 120,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 5,
        w: 120,
        h: 118
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "part-feather-01.img": {
      frame: {
        x: 1761,
        y: 2182,
        w: 118,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 5,
        w: 118,
        h: 118
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-perk-fabricate.img": {
      frame: {
        x: 1883,
        y: 2182,
        w: 118,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 5,
        w: 118,
        h: 118
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-xp-stump-01.img": {
      frame: {
        x: 2005,
        y: 2182,
        w: 118,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 5,
        w: 118,
        h: 118
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "part-feather-02.img": {
      frame: {
        x: 2127,
        y: 2182,
        w: 118,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 5,
        w: 118,
        h: 118
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "part-heal-basic.img": {
      frame: {
        x: 2363,
        y: 2,
        w: 118,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 5,
        w: 118,
        h: 118
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-chest-01.img": {
      frame: {
        x: 2363,
        y: 124,
        w: 118,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 5,
        w: 118,
        h: 118
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "mag-glass.img": {
      frame: {
        x: 2363,
        y: 246,
        w: 118,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 5,
        w: 118,
        h: 118
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "part-boost-basic.img": {
      frame: {
        x: 2363,
        y: 368,
        w: 116,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 5,
        w: 116,
        h: 118
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "part-heal-moon.img": {
      frame: {
        x: 2363,
        y: 490,
        w: 114,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 5,
        w: 114,
        h: 118
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-ump9.img": {
      frame: {
        x: 2363,
        y: 612,
        w: 114,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 5,
        w: 114,
        h: 118
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-famas.img": {
      frame: {
        x: 2363,
        y: 734,
        w: 112,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 5,
        w: 112,
        h: 118
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-vector45.img": {
      frame: {
        x: 2363,
        y: 856,
        w: 104,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 5,
        w: 104,
        h: 118
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-xp-book-04.img": {
      frame: {
        x: 2363,
        y: 978,
        w: 96,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 16,
        y: 5,
        w: 96,
        h: 118
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-xp-book-01.img": {
      frame: {
        x: 2363,
        y: 1100,
        w: 96,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 16,
        y: 5,
        w: 96,
        h: 118
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-chest-03.img": {
      frame: {
        x: 2363,
        y: 1222,
        w: 96,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 16,
        y: 5,
        w: 96,
        h: 118
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-m9.img": {
      frame: {
        x: 2363,
        y: 1344,
        w: 96,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 16,
        y: 5,
        w: 96,
        h: 118
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-xp-book-02.img": {
      frame: {
        x: 2363,
        y: 1466,
        w: 96,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 16,
        y: 5,
        w: 96,
        h: 118
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-xp-book-06.img": {
      frame: {
        x: 2363,
        y: 1588,
        w: 96,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 16,
        y: 5,
        w: 96,
        h: 118
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-xp-book-03.img": {
      frame: {
        x: 2363,
        y: 1710,
        w: 96,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 16,
        y: 5,
        w: 96,
        h: 118
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-xp-book-05.img": {
      frame: {
        x: 2363,
        y: 1832,
        w: 96,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 16,
        y: 5,
        w: 96,
        h: 118
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-pack-00.img": {
      frame: {
        x: 2363,
        y: 1954,
        w: 90,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 19,
        y: 5,
        w: 90,
        h: 118
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-pack-02.img": {
      frame: {
        x: 2363,
        y: 2076,
        w: 88,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 20,
        y: 5,
        w: 88,
        h: 118
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "ok.img": {
      frame: {
        x: 2249,
        y: 2182,
        w: 84,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 22,
        y: 5,
        w: 84,
        h: 118
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-melee-bayonet-rugged.img": {
      frame: {
        x: 2322,
        y: 1995,
        w: 36,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 46,
        y: 5,
        w: 36,
        h: 118
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "crosshair022.img": {
      frame: {
        x: 3033,
        y: 92,
        w: 12,
        h: 8
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 26,
        y: 28,
        w: 12,
        h: 8
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "proj-strobe-arming.img": {
      frame: {
        x: 2,
        y: 2306,
        w: 134,
        h: 117
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 13,
        y: 27,
        w: 134,
        h: 117
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "proj-strobe-armed.img": {
      frame: {
        x: 140,
        y: 2306,
        w: 134,
        h: 117
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 13,
        y: 27,
        w: 134,
        h: 117
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "loot-perk-steelskin.img": {
      frame: {
        x: 278,
        y: 2306,
        w: 82,
        h: 117
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 23,
        y: 5,
        w: 82,
        h: 117
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "part-heal-heart.img": {
      frame: {
        x: 364,
        y: 2306,
        w: 118,
        h: 116
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 11,
        w: 118,
        h: 116
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-mosin.img": {
      frame: {
        x: 486,
        y: 2306,
        w: 118,
        h: 116
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 6,
        w: 118,
        h: 116
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-m870.img": {
      frame: {
        x: 608,
        y: 2306,
        w: 117,
        h: 116
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 6,
        w: 117,
        h: 116
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "part-leaf-06.img": {
      frame: {
        x: 729,
        y: 2306,
        w: 116,
        h: 116
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 6,
        w: 116,
        h: 116
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "part-leaf-04.img": {
      frame: {
        x: 849,
        y: 2306,
        w: 116,
        h: 116
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 6,
        w: 116,
        h: 116
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "part-leaf-05.img": {
      frame: {
        x: 969,
        y: 2306,
        w: 116,
        h: 116
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 6,
        w: 116,
        h: 116
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "part-spark-01.img": {
      frame: {
        x: 1089,
        y: 2306,
        w: 116,
        h: 116
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 116,
        h: 116
      },
      sourceSize: {
        w: 120,
        h: 120
      }
    },
    "part-spark-02.img": {
      frame: {
        x: 1209,
        y: 2306,
        w: 116,
        h: 116
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 116,
        h: 116
      },
      sourceSize: {
        w: 120,
        h: 120
      }
    },
    "gas.img": {
      frame: {
        x: 1329,
        y: 2306,
        w: 116,
        h: 116
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 6,
        w: 116,
        h: 116
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loadout-heal.img": {
      frame: {
        x: 1449,
        y: 2306,
        w: 116,
        h: 116
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 6,
        w: 116,
        h: 116
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "part-leaf-03.img": {
      frame: {
        x: 1569,
        y: 2306,
        w: 116,
        h: 116
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 6,
        w: 116,
        h: 116
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "target.img": {
      frame: {
        x: 1689,
        y: 2306,
        w: 116,
        h: 116
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 6,
        w: 116,
        h: 116
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loadout-boost.img": {
      frame: {
        x: 1809,
        y: 2306,
        w: 114,
        h: 116
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 6,
        w: 114,
        h: 116
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "flex.img": {
      frame: {
        x: 1927,
        y: 2306,
        w: 109,
        h: 116
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 6,
        w: 109,
        h: 116
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-medical-bandage.img": {
      frame: {
        x: 2040,
        y: 2306,
        w: 106,
        h: 116
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 11,
        y: 6,
        w: 106,
        h: 116
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "acorn.img": {
      frame: {
        x: 2150,
        y: 2306,
        w: 104,
        h: 116
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 6,
        w: 104,
        h: 116
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "ghost-base.img": {
      frame: {
        x: 2258,
        y: 2306,
        w: 104,
        h: 116
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 10,
        y: 6,
        w: 104,
        h: 116
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-scar.img": {
      frame: {
        x: 2366,
        y: 2306,
        w: 104,
        h: 116
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 6,
        w: 104,
        h: 116
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-pack-01.img": {
      frame: {
        x: 2485,
        y: 2,
        w: 94,
        h: 116
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 17,
        y: 6,
        w: 94,
        h: 116
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "bugle-inspiration-red.img": {
      frame: {
        x: 2485,
        y: 122,
        w: 88,
        h: 116
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 26,
        y: 6,
        w: 88,
        h: 116
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "bugle-inspiration-blue.img": {
      frame: {
        x: 2485,
        y: 242,
        w: 88,
        h: 116
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 26,
        y: 6,
        w: 88,
        h: 116
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-flare-gun.img": {
      frame: {
        x: 2485,
        y: 362,
        w: 82,
        h: 116
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 23,
        y: 6,
        w: 82,
        h: 116
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-melee-bowie-vintage.img": {
      frame: {
        x: 2485,
        y: 482,
        w: 42,
        h: 116
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 43,
        y: 6,
        w: 42,
        h: 116
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-melee-bowie-frontier.img": {
      frame: {
        x: 2531,
        y: 482,
        w: 42,
        h: 116
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 43,
        y: 6,
        w: 42,
        h: 116
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-melee-huntsman-burnished.img": {
      frame: {
        x: 2485,
        y: 602,
        w: 24,
        h: 116
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 52,
        y: 6,
        w: 24,
        h: 116
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-melee-huntsman-rugged.img": {
      frame: {
        x: 2513,
        y: 602,
        w: 24,
        h: 116
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 52,
        y: 6,
        w: 24,
        h: 116
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "sleepy.img": {
      frame: {
        x: 2,
        y: 2427,
        w: 124,
        h: 114
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 7,
        w: 124,
        h: 114
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-bugle.img": {
      frame: {
        x: 130,
        y: 2427,
        w: 122,
        h: 114
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 7,
        w: 122,
        h: 114
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "part-boost-star.img": {
      frame: {
        x: 256,
        y: 2427,
        w: 120,
        h: 114
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 7,
        w: 120,
        h: 114
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "chick.img": {
      frame: {
        x: 380,
        y: 2427,
        w: 114,
        h: 114
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 7,
        w: 114,
        h: 114
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-garand.img": {
      frame: {
        x: 498,
        y: 2427,
        w: 112,
        h: 114
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 7,
        w: 112,
        h: 114
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "pumpkin.img": {
      frame: {
        x: 614,
        y: 2427,
        w: 106,
        h: 114
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 11,
        y: 7,
        w: 106,
        h: 114
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-deagle.img": {
      frame: {
        x: 724,
        y: 2427,
        w: 104,
        h: 114
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 7,
        w: 104,
        h: 114
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-pack-03.img": {
      frame: {
        x: 832,
        y: 2427,
        w: 104,
        h: 114
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 7,
        w: 104,
        h: 114
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-spas12.img": {
      frame: {
        x: 940,
        y: 2427,
        w: 96,
        h: 114
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 16,
        y: 7,
        w: 96,
        h: 114
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-mp5.img": {
      frame: {
        x: 1040,
        y: 2427,
        w: 96,
        h: 114
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 16,
        y: 7,
        w: 96,
        h: 114
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "tap.img": {
      frame: {
        x: 1140,
        y: 2427,
        w: 96,
        h: 114
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 16,
        y: 7,
        w: 96,
        h: 114
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-ot38.img": {
      frame: {
        x: 2485,
        y: 722,
        w: 90,
        h: 114
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 19,
        y: 7,
        w: 90,
        h: 114
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "player-visor-tank.img": {
      frame: {
        x: 2485,
        y: 840,
        w: 73,
        h: 114
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 84,
        y: 31,
        w: 73,
        h: 114
      },
      sourceSize: {
        w: 176,
        h: 176
      }
    },
    "part-boost-shuriken.img": {
      frame: {
        x: 1240,
        y: 2427,
        w: 117,
        h: 113
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 8,
        w: 117,
        h: 113
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "part-blossom-04.img": {
      frame: {
        x: 1361,
        y: 2427,
        w: 115,
        h: 113
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 9,
        w: 115,
        h: 113
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-melee-pan-black-side.img": {
      frame: {
        x: 2541,
        y: 602,
        w: 19,
        h: 113
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 55,
        y: 7,
        w: 19,
        h: 113
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-p30l-dual.img": {
      frame: {
        x: 1480,
        y: 2427,
        w: 124,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 8,
        w: 124,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "cattle.img": {
      frame: {
        x: 1608,
        y: 2427,
        w: 118,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 8,
        w: 118,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-shirt-outfitLumber.img": {
      frame: {
        x: 1730,
        y: 2427,
        w: 116,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 8,
        w: 116,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-shirt-outfitKeyLime.img": {
      frame: {
        x: 1850,
        y: 2427,
        w: 116,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 8,
        w: 116,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-shirt-outfitHeaven.img": {
      frame: {
        x: 1970,
        y: 2427,
        w: 116,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 8,
        w: 116,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-shirt-outfitDev.img": {
      frame: {
        x: 2090,
        y: 2427,
        w: 116,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 8,
        w: 116,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-shirt-outfitDesertCamo.img": {
      frame: {
        x: 2210,
        y: 2427,
        w: 116,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 8,
        w: 116,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-shirt-outfitDarkShirt.img": {
      frame: {
        x: 2330,
        y: 2427,
        w: 116,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 8,
        w: 116,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-shirt-outfitDarkGloves.img": {
      frame: {
        x: 2450,
        y: 2427,
        w: 116,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 8,
        w: 116,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-shirt-outfitRoyalFortune.img": {
      frame: {
        x: 2583,
        y: 2,
        w: 116,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 8,
        w: 116,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-shirt-outfitCobaltShell.img": {
      frame: {
        x: 2583,
        y: 118,
        w: 116,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 8,
        w: 116,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-shirt-outfitWheat.img": {
      frame: {
        x: 2583,
        y: 234,
        w: 116,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 8,
        w: 116,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-shirt-outfitCarbonFiber.img": {
      frame: {
        x: 2583,
        y: 350,
        w: 116,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 8,
        w: 116,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-shirt-outfitCamo.img": {
      frame: {
        x: 2583,
        y: 466,
        w: 116,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 8,
        w: 116,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-shirt-outfitBase.img": {
      frame: {
        x: 2583,
        y: 582,
        w: 116,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 8,
        w: 116,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-shirt-outfitTurkey.img": {
      frame: {
        x: 2583,
        y: 698,
        w: 116,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 8,
        w: 116,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-shirt-01.img": {
      frame: {
        x: 2583,
        y: 814,
        w: 116,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 8,
        w: 116,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-shirt-outfitRed.img": {
      frame: {
        x: 2583,
        y: 930,
        w: 116,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 8,
        w: 116,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-shirt-outfitWoodland.img": {
      frame: {
        x: 2583,
        y: 1046,
        w: 116,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 8,
        w: 116,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-shirt-outfitSpetsnaz.img": {
      frame: {
        x: 2583,
        y: 1162,
        w: 116,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 8,
        w: 116,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-blr.img": {
      frame: {
        x: 2583,
        y: 1278,
        w: 116,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 8,
        w: 116,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-shirt-outfitWhite.img": {
      frame: {
        x: 2583,
        y: 1394,
        w: 116,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 8,
        w: 116,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-shirt-outfitParmaPrestige.img": {
      frame: {
        x: 2583,
        y: 1510,
        w: 116,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 8,
        w: 116,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loadout-outfit.img": {
      frame: {
        x: 2583,
        y: 1626,
        w: 116,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 8,
        w: 116,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-shirt-outfitParma.img": {
      frame: {
        x: 2583,
        y: 1742,
        w: 116,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 8,
        w: 116,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-shirt-outfitMod.img": {
      frame: {
        x: 2583,
        y: 1858,
        w: 116,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 8,
        w: 116,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "part-blossom-03.img": {
      frame: {
        x: 2583,
        y: 1974,
        w: 115,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 10,
        w: 115,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "ammo-12gauge.img": {
      frame: {
        x: 2583,
        y: 2090,
        w: 113,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 8,
        w: 113,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "ammo-50AE.img": {
      frame: {
        x: 2583,
        y: 2206,
        w: 113,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 8,
        w: 113,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "ammo-556mm.img": {
      frame: {
        x: 2583,
        y: 2322,
        w: 113,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 8,
        w: 113,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "ammo-308sub.img": {
      frame: {
        x: 2,
        y: 2545,
        w: 113,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 8,
        w: 113,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "ammo-45acp.img": {
      frame: {
        x: 119,
        y: 2545,
        w: 113,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 8,
        w: 113,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "ammo-762mm.img": {
      frame: {
        x: 236,
        y: 2545,
        w: 113,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 8,
        w: 113,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-perk-broken-arrow.img": {
      frame: {
        x: 353,
        y: 2545,
        w: 113,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 11,
        y: 5,
        w: 113,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "ammo-9mm.img": {
      frame: {
        x: 470,
        y: 2545,
        w: 113,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 8,
        w: 113,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "ammo-box.img": {
      frame: {
        x: 587,
        y: 2545,
        w: 113,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 8,
        w: 113,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "ammo-flare.img": {
      frame: {
        x: 704,
        y: 2545,
        w: 113,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 8,
        w: 113,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-vector.img": {
      frame: {
        x: 821,
        y: 2545,
        w: 109,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 10,
        y: 8,
        w: 109,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "bugle-final-red.img": {
      frame: {
        x: 934,
        y: 2545,
        w: 104,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 8,
        w: 104,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "bugle-final-blue.img": {
      frame: {
        x: 1042,
        y: 2545,
        w: 104,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 8,
        w: 104,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-xp-bone-01.img": {
      frame: {
        x: 1150,
        y: 2545,
        w: 102,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 11,
        y: 10,
        w: 102,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-p30l.img": {
      frame: {
        x: 1256,
        y: 2545,
        w: 102,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 13,
        y: 8,
        w: 102,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-perk-field-medic.img": {
      frame: {
        x: 1362,
        y: 2545,
        w: 98,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 15,
        y: 11,
        w: 98,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-throwable-mirv.img": {
      frame: {
        x: 2485,
        y: 958,
        w: 82,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 23,
        y: 8,
        w: 82,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "pineapple.img": {
      frame: {
        x: 2485,
        y: 1074,
        w: 68,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 30,
        y: 1,
        w: 68,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-perk-small-arms.img": {
      frame: {
        x: 1464,
        y: 2545,
        w: 107,
        h: 111
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 10,
        y: 8,
        w: 107,
        h: 111
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "player-visor-sniper.img": {
      frame: {
        x: 1575,
        y: 2545,
        w: 103,
        h: 111
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 64,
        y: 32,
        w: 103,
        h: 111
      },
      sourceSize: {
        w: 176,
        h: 176
      }
    },
    "logo-surviv.img": {
      frame: {
        x: 1682,
        y: 2545,
        w: 128,
        h: 110
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 9,
        w: 128,
        h: 110
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "logo-storm.img": {
      frame: {
        x: 1814,
        y: 2545,
        w: 128,
        h: 110
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 9,
        w: 128,
        h: 110
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "logo-twins.img": {
      frame: {
        x: 1946,
        y: 2545,
        w: 128,
        h: 110
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 9,
        w: 128,
        h: 110
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "logo-meteor.img": {
      frame: {
        x: 2078,
        y: 2545,
        w: 128,
        h: 110
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 9,
        w: 128,
        h: 110
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "logo-hydra.img": {
      frame: {
        x: 2210,
        y: 2545,
        w: 128,
        h: 110
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 9,
        w: 128,
        h: 110
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "logo-hatchet.img": {
      frame: {
        x: 2342,
        y: 2545,
        w: 128,
        h: 110
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 9,
        w: 128,
        h: 110
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "logo-egg.img": {
      frame: {
        x: 2474,
        y: 2545,
        w: 128,
        h: 110
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 9,
        w: 128,
        h: 110
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "logo-crossing.img": {
      frame: {
        x: 2703,
        y: 2,
        w: 128,
        h: 110
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 9,
        w: 128,
        h: 110
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "logo-conch.img": {
      frame: {
        x: 2703,
        y: 116,
        w: 128,
        h: 110
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 9,
        w: 128,
        h: 110
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "logo-cloud.img": {
      frame: {
        x: 2703,
        y: 230,
        w: 128,
        h: 110
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 9,
        w: 128,
        h: 110
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "link.img": {
      frame: {
        x: 2703,
        y: 344,
        w: 128,
        h: 110
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 9,
        w: 128,
        h: 110
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "logo-caduceus.img": {
      frame: {
        x: 2703,
        y: 458,
        w: 128,
        h: 110
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 9,
        w: 128,
        h: 110
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "logo-swine.img": {
      frame: {
        x: 2703,
        y: 572,
        w: 128,
        h: 110
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 9,
        w: 128,
        h: 110
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "logo-chrysanthemum.img": {
      frame: {
        x: 2703,
        y: 686,
        w: 128,
        h: 110
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 9,
        w: 128,
        h: 110
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-glock-dual.img": {
      frame: {
        x: 2703,
        y: 800,
        w: 122,
        h: 110
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 9,
        w: 122,
        h: 110
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-scout.img": {
      frame: {
        x: 2703,
        y: 914,
        w: 118,
        h: 110
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 9,
        w: 118,
        h: 110
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "player-emote.img": {
      frame: {
        x: 2703,
        y: 1028,
        w: 112,
        h: 110
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 10,
        w: 112,
        h: 110
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "player-gui.img": {
      frame: {
        x: 2703,
        y: 1142,
        w: 112,
        h: 110
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 10,
        w: 112,
        h: 110
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loadout-player-icon.img": {
      frame: {
        x: 2703,
        y: 1256,
        w: 112,
        h: 110
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 9,
        w: 112,
        h: 110
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "proj-potato-02.img": {
      frame: {
        x: 2703,
        y: 1370,
        w: 94,
        h: 110
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 17,
        y: 9,
        w: 94,
        h: 110
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "proj-potato-01.img": {
      frame: {
        x: 2703,
        y: 1484,
        w: 94,
        h: 110
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 17,
        y: 9,
        w: 94,
        h: 110
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-glock.img": {
      frame: {
        x: 2703,
        y: 1598,
        w: 90,
        h: 110
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 19,
        y: 9,
        w: 90,
        h: 110
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-medical-soda.img": {
      frame: {
        x: 2703,
        y: 1712,
        w: 60,
        h: 110
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 34,
        y: 9,
        w: 60,
        h: 110
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "santa-hat.img": {
      frame: {
        x: 2703,
        y: 1826,
        w: 113,
        h: 109
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 15,
        y: 7,
        w: 113,
        h: 109
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-model94.img": {
      frame: {
        x: 2703,
        y: 1939,
        w: 118,
        h: 108
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 10,
        w: 118,
        h: 108
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "danger.img": {
      frame: {
        x: 2703,
        y: 2051,
        w: 118,
        h: 108
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 10,
        w: 118,
        h: 108
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-perk-explosive.img": {
      frame: {
        x: 2703,
        y: 2163,
        w: 110,
        h: 108
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 10,
        w: 110,
        h: 108
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-xp-donut-01.img": {
      frame: {
        x: 2703,
        y: 2275,
        w: 110,
        h: 108
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 10,
        w: 110,
        h: 108
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "part-leaf-02.img": {
      frame: {
        x: 2703,
        y: 2387,
        w: 108,
        h: 108
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 10,
        y: 10,
        w: 108,
        h: 108
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "part-blossom-02.img": {
      frame: {
        x: 2703,
        y: 2499,
        w: 105,
        h: 108
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 11,
        y: 11,
        w: 105,
        h: 108
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "part-blossom-01.img": {
      frame: {
        x: 2,
        y: 2661,
        w: 105,
        h: 108
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 10,
        w: 105,
        h: 108
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "hide.img": {
      frame: {
        x: 111,
        y: 2661,
        w: 126,
        h: 106
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 11,
        w: 126,
        h: 106
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "part-leaf-01.img": {
      frame: {
        x: 241,
        y: 2661,
        w: 122,
        h: 106
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 11,
        w: 122,
        h: 106
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-mp220.img": {
      frame: {
        x: 1989,
        y: 1816,
        w: 114,
        h: 106
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 11,
        w: 114,
        h: 106
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-perk-trick-size.img": {
      frame: {
        x: 367,
        y: 2661,
        w: 106,
        h: 106
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 11,
        y: 11,
        w: 106,
        h: 106
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-perk-trick-nothing.img": {
      frame: {
        x: 477,
        y: 2661,
        w: 106,
        h: 106
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 11,
        y: 11,
        w: 106,
        h: 106
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "proj-snowball-01.img": {
      frame: {
        x: 587,
        y: 2661,
        w: 106,
        h: 106
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 11,
        y: 11,
        w: 106,
        h: 106
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-perk-takedown.img": {
      frame: {
        x: 697,
        y: 2661,
        w: 106,
        h: 106
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 11,
        y: 11,
        w: 106,
        h: 106
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "leek.img": {
      frame: {
        x: 807,
        y: 2661,
        w: 106,
        h: 106
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 11,
        y: 11,
        w: 106,
        h: 106
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "proj-snowball-02.img": {
      frame: {
        x: 917,
        y: 2661,
        w: 106,
        h: 106
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 11,
        y: 11,
        w: 106,
        h: 106
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "player-visor-assault.img": {
      frame: {
        x: 1027,
        y: 2661,
        w: 105,
        h: 106
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 67,
        y: 35,
        w: 105,
        h: 106
      },
      sourceSize: {
        w: 176,
        h: 176
      }
    },
    "ping-map-airdrop.img": {
      frame: {
        x: 2485,
        y: 1190,
        w: 74,
        h: 106
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 27,
        y: 10,
        w: 74,
        h: 106
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "player-visor-healer.img": {
      frame: {
        x: 2485,
        y: 1300,
        w: 65,
        h: 106
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 94,
        y: 35,
        w: 65,
        h: 106
      },
      sourceSize: {
        w: 176,
        h: 176
      }
    },
    "loot-perk-flak-jacket.img": {
      frame: {
        x: 1136,
        y: 2661,
        w: 102,
        h: 105
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 13,
        y: 8,
        w: 102,
        h: 105
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "hamburger.img": {
      frame: {
        x: 1242,
        y: 2661,
        w: 128,
        h: 104
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 12,
        w: 128,
        h: 104
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-perk-bonus-assault.img": {
      frame: {
        x: 1374,
        y: 2661,
        w: 120,
        h: 104
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 12,
        w: 120,
        h: 104
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-perk-trick-m9.img": {
      frame: {
        x: 1498,
        y: 2661,
        w: 120,
        h: 104
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 12,
        w: 120,
        h: 104
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-perk-bonus-9mm.img": {
      frame: {
        x: 1622,
        y: 2661,
        w: 120,
        h: 104
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 12,
        w: 120,
        h: 104
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-perk-treat-12g.img": {
      frame: {
        x: 1746,
        y: 2661,
        w: 120,
        h: 104
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 12,
        w: 120,
        h: 104
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-perk-bonus-45.img": {
      frame: {
        x: 1870,
        y: 2661,
        w: 120,
        h: 104
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 12,
        w: 120,
        h: 104
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-perk-treat-762.img": {
      frame: {
        x: 1994,
        y: 2661,
        w: 120,
        h: 104
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 12,
        w: 120,
        h: 104
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-perk-treat-556.img": {
      frame: {
        x: 2118,
        y: 2661,
        w: 120,
        h: 104
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 12,
        w: 120,
        h: 104
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-perk-treat-9mm.img": {
      frame: {
        x: 2242,
        y: 2661,
        w: 120,
        h: 104
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 12,
        w: 120,
        h: 104
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-medical-healthkit.img": {
      frame: {
        x: 2363,
        y: 2198,
        w: 118,
        h: 104
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 12,
        w: 118,
        h: 104
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-perk-trick-chatty.img": {
      frame: {
        x: 2366,
        y: 2661,
        w: 110,
        h: 104
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 10,
        w: 110,
        h: 104
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-xp-glasses-01.img": {
      frame: {
        x: 2480,
        y: 2661,
        w: 104,
        h: 104
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 12,
        w: 104,
        h: 104
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-mac10.img": {
      frame: {
        x: 2588,
        y: 2661,
        w: 102,
        h: 104
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 13,
        y: 12,
        w: 102,
        h: 104
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "ribbon-red.img": {
      frame: {
        x: 2694,
        y: 2661,
        w: 98,
        h: 104
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 25,
        y: 22,
        w: 98,
        h: 104
      },
      sourceSize: {
        w: 148,
        h: 148
      }
    },
    "ribbon-blue.img": {
      frame: {
        x: 2835,
        y: 2,
        w: 98,
        h: 104
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 25,
        y: 22,
        w: 98,
        h: 104
      },
      sourceSize: {
        w: 148,
        h: 148
      }
    },
    "turkey-animal.img": {
      frame: {
        x: 2,
        y: 2773,
        w: 120,
        h: 103
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 13,
        w: 120,
        h: 103
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "movement.img": {
      frame: {
        x: 2583,
        y: 2438,
        w: 104,
        h: 103
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 12,
        w: 104,
        h: 103
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "ping-map-airstrike.img": {
      frame: {
        x: 2835,
        y: 110,
        w: 44,
        h: 103
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 42,
        y: 13,
        w: 44,
        h: 103
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-helmet-01.img": {
      frame: {
        x: 126,
        y: 2773,
        w: 112,
        h: 102
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 13,
        w: 112,
        h: 102
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "eggplant.img": {
      frame: {
        x: 242,
        y: 2773,
        w: 106,
        h: 102
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 11,
        y: 13,
        w: 106,
        h: 102
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-perk-martyrdom.img": {
      frame: {
        x: 352,
        y: 2773,
        w: 106,
        h: 102
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 11,
        y: 13,
        w: 106,
        h: 102
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-throwable-frag.img": {
      frame: {
        x: 462,
        y: 2773,
        w: 100,
        h: 102
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 14,
        y: 13,
        w: 100,
        h: 102
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "ping-map-help.img": {
      frame: {
        x: 566,
        y: 2773,
        w: 100,
        h: 102
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 14,
        y: 13,
        w: 100,
        h: 102
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-throwable-potato.img": {
      frame: {
        x: 2835,
        y: 217,
        w: 92,
        h: 102
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 18,
        y: 13,
        w: 92,
        h: 102
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "question.img": {
      frame: {
        x: 2835,
        y: 323,
        w: 68,
        h: 102
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 30,
        y: 13,
        w: 68,
        h: 102
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "gun-ots38-01.img": {
      frame: {
        x: 2883,
        y: 110,
        w: 36,
        h: 102
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 10,
        y: 131,
        w: 36,
        h: 102
      },
      sourceSize: {
        w: 56,
        h: 232
      }
    },
    "loot-perk-scavenger.img": {
      frame: {
        x: 670,
        y: 2773,
        w: 108,
        h: 100
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 10,
        y: 14,
        w: 108,
        h: 100
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "trunk.img": {
      frame: {
        x: 782,
        y: 2773,
        w: 106,
        h: 100
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 11,
        y: 14,
        w: 106,
        h: 100
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-weapon-groza.img": {
      frame: {
        x: 892,
        y: 2773,
        w: 104,
        h: 100
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 14,
        w: 104,
        h: 100
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "crab.img": {
      frame: {
        x: 1000,
        y: 2773,
        w: 100,
        h: 100
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 14,
        y: 14,
        w: 100,
        h: 100
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "player-visor-demo.img": {
      frame: {
        x: 2835,
        y: 429,
        w: 66,
        h: 100
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 85,
        y: 38,
        w: 66,
        h: 100
      },
      sourceSize: {
        w: 176,
        h: 176
      }
    },
    "face-dab.img": {
      frame: {
        x: 1104,
        y: 2773,
        w: 144,
        h: 98
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 23,
        w: 144,
        h: 98
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "baguette.img": {
      frame: {
        x: 2835,
        y: 533,
        w: 98,
        h: 98
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 15,
        y: 15,
        w: 98,
        h: 98
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "gun-short-01.img": {
      frame: {
        x: 2835,
        y: 635,
        w: 31,
        h: 98
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 31,
        h: 98
      },
      sourceSize: {
        w: 32,
        h: 100
      }
    },
    "crosshair.img": {
      frame: {
        x: 2835,
        y: 737,
        w: 97,
        h: 97
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 97,
        h: 97
      },
      sourceSize: {
        w: 97,
        h: 97
      }
    },
    "loot-perk-endless-ammo.img": {
      frame: {
        x: 1252,
        y: 2773,
        w: 102,
        h: 96
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 13,
        y: 15,
        w: 102,
        h: 96
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "potato.img": {
      frame: {
        x: 1358,
        y: 2773,
        w: 100,
        h: 96
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 14,
        y: 16,
        w: 100,
        h: 96
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-xp-compass-01.img": {
      frame: {
        x: 2835,
        y: 838,
        w: 96,
        h: 96
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 16,
        y: 16,
        w: 96,
        h: 96
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "part-airdrop-01.img": {
      frame: {
        x: 2835,
        y: 938,
        w: 96,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 96,
        h: 96
      },
      sourceSize: {
        w: 96,
        h: 96
      }
    },
    "part-airdrop-01x.img": {
      frame: {
        x: 2835,
        y: 1038,
        w: 96,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 96,
        h: 96
      },
      sourceSize: {
        w: 96,
        h: 96
      }
    },
    "copy.img": {
      frame: {
        x: 2835,
        y: 1138,
        w: 88,
        h: 96
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 20,
        y: 16,
        w: 88,
        h: 96
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "minimize.img": {
      frame: {
        x: 2835,
        y: 1238,
        w: 95,
        h: 95
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 17,
        y: 16,
        w: 95,
        h: 95
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-perk-tree-climbing.img": {
      frame: {
        x: 2835,
        y: 1337,
        w: 94,
        h: 95
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 17,
        y: 16,
        w: 94,
        h: 95
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "skull-leader.img": {
      frame: {
        x: 2835,
        y: 1436,
        w: 90,
        h: 95
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 1,
        w: 90,
        h: 95
      },
      sourceSize: {
        w: 96,
        h: 96
      }
    },
    "whale.img": {
      frame: {
        x: 1462,
        y: 2773,
        w: 118,
        h: 94
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 17,
        w: 118,
        h: 94
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "part-pumpkin-01.img": {
      frame: {
        x: 1584,
        y: 2773,
        w: 106,
        h: 94
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 11,
        y: 17,
        w: 106,
        h: 94
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "fish.img": {
      frame: {
        x: 1694,
        y: 2773,
        w: 128,
        h: 92
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 18,
        w: 128,
        h: 92
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "teabag.img": {
      frame: {
        x: 1826,
        y: 2773,
        w: 107,
        h: 91
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 20,
        y: 19,
        w: 107,
        h: 91
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "forest.img": {
      frame: {
        x: 1937,
        y: 2773,
        w: 124,
        h: 90
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 19,
        w: 124,
        h: 90
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-perk-treat-super.img": {
      frame: {
        x: 2065,
        y: 2773,
        w: 124,
        h: 90
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 19,
        w: 124,
        h: 90
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-medical-pill.img": {
      frame: {
        x: 2193,
        y: 2773,
        w: 118,
        h: 90
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 19,
        w: 118,
        h: 90
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "coconut.img": {
      frame: {
        x: 2315,
        y: 2773,
        w: 110,
        h: 90
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 19,
        w: 110,
        h: 90
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-throwable-strobe.img": {
      frame: {
        x: 2429,
        y: 2773,
        w: 103,
        h: 89
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 23,
        w: 103,
        h: 89
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "face-headshot.img": {
      frame: {
        x: 2536,
        y: 2773,
        w: 127,
        h: 88
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 24,
        w: 127,
        h: 88
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "pilgrim-hat.img": {
      frame: {
        x: 2667,
        y: 2773,
        w: 118,
        h: 88
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 20,
        w: 118,
        h: 88
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "part-flare-01.img": {
      frame: {
        x: 2835,
        y: 1535,
        w: 88,
        h: 88
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 6,
        w: 88,
        h: 88
      },
      sourceSize: {
        w: 100,
        h: 100
      }
    },
    "loot-melee-pan-black.img": {
      frame: {
        x: 2789,
        y: 2773,
        w: 118,
        h: 86
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 21,
        w: 118,
        h: 86
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-helmet-03.img": {
      frame: {
        x: 2937,
        y: 2,
        w: 112,
        h: 86
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 21,
        w: 112,
        h: 86
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "player-mash-01.img": {
      frame: {
        x: 2,
        y: 2880,
        w: 160,
        h: 85
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 85
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "player-snow-01.img": {
      frame: {
        x: 166,
        y: 2880,
        w: 160,
        h: 85
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 85
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "ping-map-woods-king.img": {
      frame: {
        x: 2937,
        y: 92,
        w: 92,
        h: 84
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 18,
        y: 22,
        w: 92,
        h: 84
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "cog.img": {
      frame: {
        x: 2937,
        y: 180,
        w: 84,
        h: 84
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 22,
        y: 22,
        w: 84,
        h: 84
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-throwable-snowball.img": {
      frame: {
        x: 2937,
        y: 268,
        w: 84,
        h: 84
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 22,
        y: 22,
        w: 84,
        h: 84
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "eye.img": {
      frame: {
        x: 330,
        y: 2880,
        w: 126,
        h: 82
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 23,
        w: 126,
        h: 82
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-perk-trick-drain.img": {
      frame: {
        x: 460,
        y: 2880,
        w: 118,
        h: 82
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 23,
        w: 118,
        h: 82
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "chicken.img": {
      frame: {
        x: 2937,
        y: 356,
        w: 106,
        h: 82
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 11,
        y: 23,
        w: 106,
        h: 82
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "player-snow-02.img": {
      frame: {
        x: 582,
        y: 2880,
        w: 145,
        h: 80
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 0,
        w: 145,
        h: 80
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "player-mash-02.img": {
      frame: {
        x: 731,
        y: 2880,
        w: 145,
        h: 80
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 0,
        w: 145,
        h: 80
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "audio-on.img": {
      frame: {
        x: 2937,
        y: 442,
        w: 92,
        h: 80
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 18,
        y: 24,
        w: 92,
        h: 80
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "audio-off.img": {
      frame: {
        x: 2937,
        y: 526,
        w: 92,
        h: 80
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 18,
        y: 24,
        w: 92,
        h: 80
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-melee-fireaxe.img": {
      frame: {
        x: 880,
        y: 2880,
        w: 152,
        h: 78
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: -1,
        w: 152,
        h: 78
      },
      sourceSize: {
        w: 152,
        h: 76
      }
    },
    "loot-weapon-fists.img": {
      frame: {
        x: 2937,
        y: 610,
        w: 74,
        h: 78
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 27,
        y: 25,
        w: 74,
        h: 78
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "ping-map-unlock.img": {
      frame: {
        x: 2937,
        y: 692,
        w: 60,
        h: 78
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 34,
        y: 25,
        w: 60,
        h: 78
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-melee-hook-silver.img": {
      frame: {
        x: 3001,
        y: 692,
        w: 42,
        h: 78
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 43,
        y: 25,
        w: 42,
        h: 78
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-helmet-02.img": {
      frame: {
        x: 1036,
        y: 2880,
        w: 118,
        h: 76
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 26,
        w: 118,
        h: 76
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "proj-mirv-mini-02.img": {
      frame: {
        x: 2937,
        y: 774,
        w: 84,
        h: 76
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 10,
        w: 84,
        h: 76
      },
      sourceSize: {
        w: 96,
        h: 96
      }
    },
    "proj-mirv-mini-01.img": {
      frame: {
        x: 2937,
        y: 854,
        w: 84,
        h: 76
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 10,
        w: 84,
        h: 76
      },
      sourceSize: {
        w: 96,
        h: 96
      }
    },
    "player-mash-03.img": {
      frame: {
        x: 1158,
        y: 2880,
        w: 149,
        h: 74
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 0,
        w: 149,
        h: 74
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "player-snow-03.img": {
      frame: {
        x: 1311,
        y: 2880,
        w: 149,
        h: 74
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 0,
        w: 149,
        h: 74
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "loot-perk-scavenger_adv.img": {
      frame: {
        x: 1464,
        y: 2880,
        w: 118,
        h: 74
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 27,
        w: 118,
        h: 74
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "player-hands-01.img": {
      frame: {
        x: 2937,
        y: 934,
        w: 74,
        h: 74
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 74,
        h: 74
      },
      sourceSize: {
        w: 76,
        h: 76
      }
    },
    "player-hands-02.img": {
      frame: {
        x: 2937,
        y: 1012,
        w: 74,
        h: 74
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 74,
        h: 74
      },
      sourceSize: {
        w: 76,
        h: 76
      }
    },
    "gg.img": {
      frame: {
        x: 1857,
        y: 1718,
        w: 114,
        h: 72
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 28,
        w: 114,
        h: 72
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "gun-dp28-top-01.img": {
      frame: {
        x: 2937,
        y: 1090,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 4,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "player-map-inner.img": {
      frame: {
        x: 2937,
        y: 1166,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "timer-background.img": {
      frame: {
        x: 2937,
        y: 1242,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "player-map-outer.img": {
      frame: {
        x: 2937,
        y: 1318,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "quit.img": {
      frame: {
        x: 2937,
        y: 1394,
        w: 68,
        h: 72
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 30,
        y: 28,
        w: 68,
        h: 72
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "player-patch-01.img": {
      frame: {
        x: 1725,
        y: 1586,
        w: 116,
        h: 71
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 22,
        y: 1,
        w: 116,
        h: 71
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "player-patch-red.img": {
      frame: {
        x: 1593,
        y: 1454,
        w: 116,
        h: 70
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 22,
        y: 45,
        w: 116,
        h: 70
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "part-cloth-01.img": {
      frame: {
        x: 2937,
        y: 1470,
        w: 70,
        h: 70
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 70,
        h: 70
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "ping-indicator.img": {
      frame: {
        x: 2937,
        y: 1544,
        w: 88,
        h: 68
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 20,
        y: 60,
        w: 88,
        h: 68
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "part-smoke-01.img": {
      frame: {
        x: 2937,
        y: 1616,
        w: 70,
        h: 68
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 2,
        w: 70,
        h: 68
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "close.img": {
      frame: {
        x: 2937,
        y: 1688,
        w: 68,
        h: 68
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 68,
        h: 68
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "part-snow-01.img": {
      frame: {
        x: 2937,
        y: 1760,
        w: 68,
        h: 68
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 68,
        h: 68
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "part-frag-burst-01.img": {
      frame: {
        x: 2937,
        y: 1832,
        w: 66,
        h: 66
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 66,
        h: 66
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "part-frag-burst-02.img": {
      frame: {
        x: 2937,
        y: 1902,
        w: 66,
        h: 66
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 66,
        h: 66
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "part-strobe-01.img": {
      frame: {
        x: 2937,
        y: 1972,
        w: 66,
        h: 66
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 66,
        h: 66
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "part-potato-01.img": {
      frame: {
        x: 2937,
        y: 2042,
        w: 66,
        h: 66
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 66,
        h: 66
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "submit.img": {
      frame: {
        x: 2937,
        y: 2112,
        w: 66,
        h: 66
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 66,
        h: 66
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "part-pulse-01.img": {
      frame: {
        x: 2937,
        y: 2182,
        w: 66,
        h: 66
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 66,
        h: 66
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "checked.img": {
      frame: {
        x: 2937,
        y: 2252,
        w: 66,
        h: 66
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 66,
        h: 66
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "resume.img": {
      frame: {
        x: 2937,
        y: 2322,
        w: 64,
        h: 66
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 36,
        y: 31,
        w: 64,
        h: 66
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-perk-self-revive.img": {
      frame: {
        x: 1461,
        y: 1322,
        w: 126,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 32,
        w: 126,
        h: 64
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "gun-potato-smg-top-01.img": {
      frame: {
        x: 2937,
        y: 2392,
        w: 66,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 8,
        w: 66,
        h: 64
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "crosshair064.img": {
      frame: {
        x: 2937,
        y: 2460,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "crosshair001.img": {
      frame: {
        x: 2937,
        y: 2528,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "unlock.img": {
      frame: {
        x: 2937,
        y: 2596,
        w: 48,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 0,
        w: 48,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "lock.img": {
      frame: {
        x: 2989,
        y: 2596,
        w: 48,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 0,
        w: 48,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "keyboard.img": {
      frame: {
        x: 2937,
        y: 2664,
        w: 104,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 33,
        w: 104,
        h: 62
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "player-map-downed.img": {
      frame: {
        x: 2937,
        y: 2730,
        w: 72,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 7,
        w: 72,
        h: 62
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "globe.img": {
      frame: {
        x: 2937,
        y: 2796,
        w: 62,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 62,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "crosshair086.img": {
      frame: {
        x: 2870,
        y: 635,
        w: 62,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 62,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "crosshair010.img": {
      frame: {
        x: 2835,
        y: 1627,
        w: 62,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 62,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "crosshair007.img": {
      frame: {
        x: 2835,
        y: 1693,
        w: 62,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 62,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "player-patch-02.img": {
      frame: {
        x: 1586,
        y: 2880,
        w: 116,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 22,
        y: 1,
        w: 116,
        h: 60
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "player-patch-blue.img": {
      frame: {
        x: 1706,
        y: 2880,
        w: 116,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 22,
        y: 50,
        w: 116,
        h: 60
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "crosshair080.img": {
      frame: {
        x: 2835,
        y: 1759,
        w: 60,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 60,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "crosshair005.img": {
      frame: {
        x: 2835,
        y: 1823,
        w: 60,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 60,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "crosshair094.img": {
      frame: {
        x: 2835,
        y: 1887,
        w: 60,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 60,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "crosshair109.img": {
      frame: {
        x: 2835,
        y: 1951,
        w: 60,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 60,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "skull-outlined.img": {
      frame: {
        x: 2835,
        y: 2015,
        w: 52,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 2,
        w: 52,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-melee-stonehammer.img": {
      frame: {
        x: 1826,
        y: 2880,
        w: 150,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: 3,
        w: 150,
        h: 58
      },
      sourceSize: {
        w: 148,
        h: 60
      }
    },
    "loot-melee-knuckles-heroic.img": {
      frame: {
        x: 2835,
        y: 2079,
        w: 92,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 18,
        y: 35,
        w: 92,
        h: 58
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-melee-knuckles-rusted.img": {
      frame: {
        x: 2835,
        y: 2141,
        w: 92,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 18,
        y: 35,
        w: 92,
        h: 58
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "part-frag-pin-01.img": {
      frame: {
        x: 2835,
        y: 2203,
        w: 58,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 35,
        y: 35,
        w: 58,
        h: 58
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "proj-frag-pin-part.img": {
      frame: {
        x: 2835,
        y: 2265,
        w: 58,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 35,
        y: 35,
        w: 58,
        h: 58
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-melee-woodaxe-bloody.img": {
      frame: {
        x: 1980,
        y: 2880,
        w: 150,
        h: 56
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: -1,
        w: 150,
        h: 56
      },
      sourceSize: {
        w: 148,
        h: 54
      }
    },
    "loot-melee-woodaxe.img": {
      frame: {
        x: 2134,
        y: 2880,
        w: 150,
        h: 56
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: -1,
        w: 150,
        h: 56
      },
      sourceSize: {
        w: 148,
        h: 54
      }
    },
    "crosshair027.img": {
      frame: {
        x: 2835,
        y: 2327,
        w: 57,
        h: 56
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 4,
        w: 57,
        h: 56
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "crosshair124.img": {
      frame: {
        x: 2835,
        y: 2387,
        w: 56,
        h: 56
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 4,
        w: 56,
        h: 56
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "skull-team.img": {
      frame: {
        x: 2835,
        y: 2447,
        w: 48,
        h: 56
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 4,
        w: 48,
        h: 56
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "player-bullet-trail-03.img": {
      frame: {
        x: 3013,
        y: 1090,
        w: 35,
        h: 54
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 35,
        h: 54
      },
      sourceSize: {
        w: 36,
        h: 56
      }
    },
    "dc.img": {
      frame: {
        x: 2835,
        y: 2507,
        w: 52,
        h: 52
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 6,
        w: 52,
        h: 52
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "down.img": {
      frame: {
        x: 2835,
        y: 2563,
        w: 52,
        h: 52
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 6,
        w: 52,
        h: 52
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "ping-part-quarter.img": {
      frame: {
        x: 2835,
        y: 2619,
        w: 88,
        h: 51
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 20,
        y: 1,
        w: 88,
        h: 51
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "ping-part-quarter-highlight.img": {
      frame: {
        x: 2835,
        y: 2674,
        w: 88,
        h: 51
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 20,
        y: 1,
        w: 88,
        h: 51
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "gun-pkp-bot-01.img": {
      frame: {
        x: 2703,
        y: 2611,
        w: 78,
        h: 46
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: -1,
        w: 78,
        h: 46
      },
      sourceSize: {
        w: 76,
        h: 44
      }
    },
    "crosshair177.img": {
      frame: {
        x: 2767,
        y: 1712,
        w: 56,
        h: 46
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 2,
        w: 56,
        h: 46
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "crown.img": {
      frame: {
        x: 2767,
        y: 1762,
        w: 54,
        h: 46
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 9,
        w: 54,
        h: 46
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "ping-part-eighth-highlight.img": {
      frame: {
        x: 2485,
        y: 1410,
        w: 51,
        h: 43
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 20,
        w: 51,
        h: 43
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "ping-part-eighth.img": {
      frame: {
        x: 2485,
        y: 1457,
        w: 51,
        h: 43
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 20,
        w: 51,
        h: 43
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "pumpkin-play.img": {
      frame: {
        x: 3009,
        y: 1394,
        w: 40,
        h: 43
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 1,
        w: 40,
        h: 43
      },
      sourceSize: {
        w: 48,
        h: 48
      }
    },
    "loot-melee-karambit-rugged.img": {
      frame: {
        x: 2237,
        y: 2119,
        w: 100,
        h: 42
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 14,
        y: 43,
        w: 100,
        h: 42
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-melee-karambit-prismatic.img": {
      frame: {
        x: 584,
        y: 712,
        w: 100,
        h: 42
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 14,
        y: 43,
        w: 100,
        h: 42
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-melee-karambit-drowned.img": {
      frame: {
        x: 688,
        y: 712,
        w: 100,
        h: 42
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 14,
        y: 43,
        w: 100,
        h: 42
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "gun-m249-bot-01.img": {
      frame: {
        x: 2485,
        y: 1504,
        w: 74,
        h: 42
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 74,
        h: 42
      },
      sourceSize: {
        w: 76,
        h: 44
      }
    },
    "crosshair158.img": {
      frame: {
        x: 2835,
        y: 2729,
        w: 62,
        h: 40
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 12,
        w: 62,
        h: 40
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "part-frag-lever-01.img": {
      frame: {
        x: 2485,
        y: 1550,
        w: 48,
        h: 40
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 40,
        y: 44,
        w: 48,
        h: 40
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "crosshair101.img": {
      frame: {
        x: 3007,
        y: 1832,
        w: 42,
        h: 40
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 11,
        y: 8,
        w: 42,
        h: 40
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "crosshair102.img": {
      frame: {
        x: 3007,
        y: 1902,
        w: 42,
        h: 40
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 11,
        y: 8,
        w: 42,
        h: 40
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-melee-katana-demo.img": {
      frame: {
        x: 796,
        y: 730,
        w: 226,
        h: 38
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 1,
        w: 226,
        h: 38
      },
      sourceSize: {
        w: 230,
        h: 40
      }
    },
    "loot-melee-katana-rusted.img": {
      frame: {
        x: 2288,
        y: 2880,
        w: 226,
        h: 38
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 1,
        w: 226,
        h: 38
      },
      sourceSize: {
        w: 230,
        h: 40
      }
    },
    "loot-melee-katana-orchid.img": {
      frame: {
        x: 2518,
        y: 2880,
        w: 226,
        h: 38
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 1,
        w: 226,
        h: 38
      },
      sourceSize: {
        w: 230,
        h: 40
      }
    },
    "loot-melee-katana.img": {
      frame: {
        x: 2748,
        y: 2880,
        w: 226,
        h: 38
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 1,
        w: 226,
        h: 38
      },
      sourceSize: {
        w: 230,
        h: 40
      }
    },
    "hatchet.img": {
      frame: {
        x: 3005,
        y: 2322,
        w: 44,
        h: 38
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 5,
        w: 44,
        h: 38
      },
      sourceSize: {
        w: 48,
        h: 48
      }
    },
    "crosshair045.img": {
      frame: {
        x: 3011,
        y: 1470,
        w: 38,
        h: 38
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 13,
        y: 13,
        w: 38,
        h: 38
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "player-feet-01.img": {
      frame: {
        x: 3015,
        y: 610,
        w: 26,
        h: 38
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 0,
        w: 26,
        h: 38
      },
      sourceSize: {
        w: 38,
        h: 38
      }
    },
    "player-feet-02.img": {
      frame: {
        x: 3015,
        y: 934,
        w: 26,
        h: 38
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 0,
        w: 26,
        h: 38
      },
      sourceSize: {
        w: 38,
        h: 38
      }
    },
    "loot-melee-naginata.img": {
      frame: {
        x: 2,
        y: 2969,
        w: 345,
        h: 37
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 14,
        w: 345,
        h: 37
      },
      sourceSize: {
        w: 350,
        h: 54
      }
    },
    "crosshair184.img": {
      frame: {
        x: 3011,
        y: 1616,
        w: 37,
        h: 36
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 13,
        y: 14,
        w: 37,
        h: 36
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "crosshair040.img": {
      frame: {
        x: 3009,
        y: 1688,
        w: 37,
        h: 36
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 13,
        y: 14,
        w: 37,
        h: 36
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "part-frag-burst-03.img": {
      frame: {
        x: 3013,
        y: 1166,
        w: 36,
        h: 36
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 36,
        h: 36
      },
      sourceSize: {
        w: 36,
        h: 36
      }
    },
    "player-bullet-trail-02.img": {
      frame: {
        x: 3013,
        y: 1242,
        w: 35,
        h: 36
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 0,
        w: 35,
        h: 36
      },
      sourceSize: {
        w: 36,
        h: 36
      }
    },
    "crosshair038.img": {
      frame: {
        x: 3015,
        y: 652,
        w: 33,
        h: 32
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 15,
        y: 16,
        w: 33,
        h: 32
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "crosshair000.img": {
      frame: {
        x: 3015,
        y: 976,
        w: 33,
        h: 32
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 15,
        y: 16,
        w: 33,
        h: 32
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "dot.img": {
      frame: {
        x: 3015,
        y: 1012,
        w: 32,
        h: 32
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 32,
        h: 32
      },
      sourceSize: {
        w: 36,
        h: 36
      }
    },
    "crosshair173.img": {
      frame: {
        x: 3015,
        y: 1048,
        w: 32,
        h: 32
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 16,
        y: 16,
        w: 32,
        h: 32
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "crosshair181.img": {
      frame: {
        x: 3013,
        y: 1206,
        w: 32,
        h: 32
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 16,
        y: 16,
        w: 32,
        h: 32
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "gun-qbb97-bot-01.img": {
      frame: {
        x: 2870,
        y: 701,
        w: 62,
        h: 30
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 62,
        h: 30
      },
      sourceSize: {
        w: 64,
        h: 32
      }
    },
    "ping-part-circle-auto-highlight.img": {
      frame: {
        x: 3013,
        y: 1282,
        w: 29,
        h: 29
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 29,
        h: 29
      },
      sourceSize: {
        w: 29,
        h: 29
      }
    },
    "ping-part-circle-auto.img": {
      frame: {
        x: 3013,
        y: 1318,
        w: 28,
        h: 28
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 28,
        h: 28
      },
      sourceSize: {
        w: 28,
        h: 28
      }
    },
    "ping-part-circle-highlight.img": {
      frame: {
        x: 3013,
        y: 1350,
        w: 28,
        h: 28
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 50,
        y: 50,
        w: 28,
        h: 28
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "ping-part-circle.img": {
      frame: {
        x: 3011,
        y: 1512,
        w: 28,
        h: 28
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 50,
        y: 50,
        w: 28,
        h: 28
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "ping-part-circle-auto-outer.img": {
      frame: {
        x: 3011,
        y: 1656,
        w: 28,
        h: 26
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 28,
        h: 26
      },
      sourceSize: {
        w: 28,
        h: 28
      }
    },
    "crosshair125.img": {
      frame: {
        x: 3025,
        y: 180,
        w: 24,
        h: 24
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 20,
        y: 20,
        w: 24,
        h: 24
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-melee-bayonet-woodland.img": {
      frame: {
        x: 1270,
        y: 856,
        w: 36,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 46,
        y: 5,
        w: 36,
        h: 118
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    }
  }
}];
const Rs = [{
  meta: {
    image: "shared-0-100-8b417e22.png",
    size: {
      w: 4096,
      h: 4096
    },
    scale: 1
  },
  frames: {
    "map-building-police-floor-01.img": {
      frame: {
        x: 1438,
        y: 2,
        w: 2112,
        h: 1568
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 2112,
        h: 1568
      },
      sourceSize: {
        w: 2112,
        h: 1568
      }
    },
    "map-building-bathhouse-basement-01e.img": {
      frame: {
        x: 2,
        y: 2,
        w: 1432,
        h: 1592
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 1432,
        h: 1592
      },
      sourceSize: {
        w: 1432,
        h: 1592
      }
    },
    "map-building-mansion-floor-01b.img": {
      frame: {
        x: 2,
        y: 1598,
        w: 1825,
        h: 1218
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 0,
        w: 1825,
        h: 1218
      },
      sourceSize: {
        w: 1826,
        h: 1218
      }
    },
    "map-building-barn-floor-01.img": {
      frame: {
        x: 1831,
        y: 1598,
        w: 1600,
        h: 1088
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 1600,
        h: 1088
      },
      sourceSize: {
        w: 1600,
        h: 1088
      }
    },
    "map-building-police-ceiling-02.img": {
      frame: {
        x: 3554,
        y: 2,
        w: 530,
        h: 1080
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 530,
        h: 1080
      },
      sourceSize: {
        w: 530,
        h: 1082
      }
    },
    "map-building-cabin-floor.img": {
      frame: {
        x: 2,
        y: 2820,
        w: 1216,
        h: 992
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 1216,
        h: 992
      },
      sourceSize: {
        w: 1216,
        h: 992
      }
    },
    "map-building-bathhouse-basement-01b.img": {
      frame: {
        x: 1222,
        y: 2820,
        w: 1304,
        h: 918
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 1304,
        h: 918
      },
      sourceSize: {
        w: 1304,
        h: 920
      }
    },
    "map-building-bank-ceiling-02.img": {
      frame: {
        x: 2530,
        y: 2820,
        w: 556,
        h: 888
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 50,
        w: 556,
        h: 888
      },
      sourceSize: {
        w: 556,
        h: 940
      }
    },
    "map-bunker-conch-compartment-floor-01a.img": {
      frame: {
        x: 3090,
        y: 2820,
        w: 942,
        h: 880
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 50,
        y: 0,
        w: 942,
        h: 880
      },
      sourceSize: {
        w: 992,
        h: 880
      }
    },
    "map-building-hut-floor-02.img": {
      frame: {
        x: 3554,
        y: 1086,
        w: 130,
        h: 767
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 0,
        w: 130,
        h: 767
      },
      sourceSize: {
        w: 136,
        h: 768
      }
    },
    "map-building-container-open-floor.img": {
      frame: {
        x: 3688,
        y: 1086,
        w: 180,
        h: 684
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 3,
        w: 180,
        h: 684
      },
      sourceSize: {
        w: 180,
        h: 692
      }
    },
    "map-building-dock-floor-01b.img": {
      frame: {
        x: 3872,
        y: 1086,
        w: 162,
        h: 662
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 2,
        w: 162,
        h: 662
      },
      sourceSize: {
        w: 162,
        h: 664
      }
    },
    "map-wall-18.img": {
      frame: {
        x: 4038,
        y: 1086,
        w: 32,
        h: 576
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 576
      },
      sourceSize: {
        w: 32,
        h: 576
      }
    },
    "map-bunker-conch-compartment-ceiling-01.img": {
      frame: {
        x: 3554,
        y: 1857,
        w: 488,
        h: 560
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 488,
        h: 560
      },
      sourceSize: {
        w: 488,
        h: 560
      }
    },
    "map-club-bar-01.img": {
      frame: {
        x: 3435,
        y: 1598,
        w: 54,
        h: 480
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 54,
        h: 480
      },
      sourceSize: {
        w: 54,
        h: 480
      }
    },
    "map-wall-14.img": {
      frame: {
        x: 4046,
        y: 1857,
        w: 32,
        h: 448
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 448
      },
      sourceSize: {
        w: 32,
        h: 448
      }
    },
    "map-wall-14-rounded.img": {
      frame: {
        x: 3493,
        y: 1598,
        w: 32,
        h: 448
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 448
      },
      sourceSize: {
        w: 32,
        h: 448
      }
    },
    "map-wall-13-rounded.img": {
      frame: {
        x: 3435,
        y: 2082,
        w: 32,
        h: 416
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 416
      },
      sourceSize: {
        w: 32,
        h: 416
      }
    },
    "map-wall-13.img": {
      frame: {
        x: 3471,
        y: 2082,
        w: 32,
        h: 416
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 416
      },
      sourceSize: {
        w: 32,
        h: 416
      }
    },
    "map-building-hut-ceiling-02.img": {
      frame: {
        x: 3554,
        y: 2421,
        w: 378,
        h: 393
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 15,
        y: 15,
        w: 378,
        h: 393
      },
      sourceSize: {
        w: 408,
        h: 408
      }
    },
    "map-wall-glass-12-2.img": {
      frame: {
        x: 3936,
        y: 2421,
        w: 64,
        h: 384
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 384
      },
      sourceSize: {
        w: 64,
        h: 384
      }
    },
    "map-wall-12.img": {
      frame: {
        x: 4004,
        y: 2421,
        w: 32,
        h: 384
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 384
      },
      sourceSize: {
        w: 32,
        h: 384
      }
    },
    "map-wall-glass-12.img": {
      frame: {
        x: 4040,
        y: 2421,
        w: 32,
        h: 384
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 384
      },
      sourceSize: {
        w: 32,
        h: 384
      }
    },
    "map-wall-12-rounded.img": {
      frame: {
        x: 3507,
        y: 2082,
        w: 32,
        h: 384
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 384
      },
      sourceSize: {
        w: 32,
        h: 384
      }
    },
    "map-wall-11-rounded.img": {
      frame: {
        x: 4036,
        y: 2820,
        w: 32,
        h: 352
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 352
      },
      sourceSize: {
        w: 32,
        h: 352
      }
    },
    "map-wall-11.img": {
      frame: {
        x: 4036,
        y: 3176,
        w: 32,
        h: 352
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 352
      },
      sourceSize: {
        w: 32,
        h: 352
      }
    },
    "map-stone-03.img": {
      frame: {
        x: 2,
        y: 3816,
        w: 276,
        h: 272
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 8,
        w: 276,
        h: 272
      },
      sourceSize: {
        w: 288,
        h: 288
      }
    },
    "map-tree-03.img": {
      frame: {
        x: 282,
        y: 3816,
        w: 256,
        h: 256
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 256,
        h: 256
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-tree-07su.img": {
      frame: {
        x: 542,
        y: 3816,
        w: 256,
        h: 256
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 256,
        h: 256
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-wall-08-rounded.img": {
      frame: {
        x: 802,
        y: 3816,
        w: 32,
        h: 256
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 256
      },
      sourceSize: {
        w: 32,
        h: 256
      }
    },
    "map-bunker-conch-floor-01.img": {
      frame: {
        x: 838,
        y: 3816,
        w: 580,
        h: 252
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 10,
        y: 2,
        w: 580,
        h: 252
      },
      sourceSize: {
        w: 600,
        h: 256
      }
    },
    "map-building-club-ceiling-01b.img": {
      frame: {
        x: 1422,
        y: 3816,
        w: 177,
        h: 242
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 177,
        h: 242
      },
      sourceSize: {
        w: 178,
        h: 242
      }
    },
    "map-wall-shack-right.img": {
      frame: {
        x: 1603,
        y: 3816,
        w: 24,
        h: 241
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 24,
        h: 241
      },
      sourceSize: {
        w: 24,
        h: 242
      }
    },
    "map-pipes-03.img": {
      frame: {
        x: 1631,
        y: 3816,
        w: 684,
        h: 236
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 684,
        h: 236
      },
      sourceSize: {
        w: 684,
        h: 236
      }
    },
    "map-hut-res-01.img": {
      frame: {
        x: 2319,
        y: 3816,
        w: 236,
        h: 236
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 130,
        y: 136,
        w: 236,
        h: 236
      },
      sourceSize: {
        w: 512,
        h: 512
      }
    },
    "map-chute-01.img": {
      frame: {
        x: 2559,
        y: 3816,
        w: 232,
        h: 232
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 12,
        w: 232,
        h: 232
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-building-mansion-cellar-01b.img": {
      frame: {
        x: 2795,
        y: 3816,
        w: 225,
        h: 230
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 225,
        h: 230
      },
      sourceSize: {
        w: 226,
        h: 230
      }
    },
    "map-bunker-generic-ceiling-01.img": {
      frame: {
        x: 3024,
        y: 3816,
        w: 192,
        h: 230
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 64,
        y: 0,
        w: 192,
        h: 230
      },
      sourceSize: {
        w: 320,
        h: 288
      }
    },
    "map-building-mansion-floor-01c.img": {
      frame: {
        x: 3220,
        y: 3816,
        w: 225,
        h: 228
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 225,
        h: 228
      },
      sourceSize: {
        w: 226,
        h: 228
      }
    },
    "map-building-club-floor-01a.img": {
      frame: {
        x: 3449,
        y: 3816,
        w: 225,
        h: 226
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 0,
        w: 225,
        h: 226
      },
      sourceSize: {
        w: 226,
        h: 226
      }
    },
    "map-building-saferoom-floor.img": {
      frame: {
        x: 3678,
        y: 3816,
        w: 352,
        h: 224
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 352,
        h: 224
      },
      sourceSize: {
        w: 352,
        h: 224
      }
    },
    "map-wall-07.img": {
      frame: {
        x: 4034,
        y: 3816,
        w: 32,
        h: 224
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 224
      },
      sourceSize: {
        w: 32,
        h: 224
      }
    },
    "part-wedge-01.img": {
      frame: {
        x: 3435,
        y: 2502,
        w: 55,
        h: 170
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 4,
        w: 55,
        h: 170
      },
      sourceSize: {
        w: 63,
        h: 180
      }
    },
    "proj-wedge-01.img": {
      frame: {
        x: 3494,
        y: 2502,
        w: 55,
        h: 170
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 4,
        w: 55,
        h: 170
      },
      sourceSize: {
        w: 63,
        h: 180
      }
    },
    "map-wall-04-cobalt.img": {
      frame: {
        x: 4036,
        y: 3532,
        w: 40,
        h: 160
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 40,
        h: 160
      },
      sourceSize: {
        w: 40,
        h: 160
      }
    },
    "pass-level-bg.img": {
      frame: {
        x: 1831,
        y: 2690,
        w: 146,
        h: 126
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 10,
        w: 146,
        h: 126
      },
      sourceSize: {
        w: 146,
        h: 146
      }
    },
    "pass.img": {
      frame: {
        x: 1981,
        y: 2690,
        w: 126,
        h: 126
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 126,
        h: 126
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "player-helmet-marksman.img": {
      frame: {
        x: 2111,
        y: 2690,
        w: 95,
        h: 126
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 28,
        y: 25,
        w: 95,
        h: 126
      },
      sourceSize: {
        w: 176,
        h: 176
      }
    },
    "map-wall-outhouse-bot.img": {
      frame: {
        x: 3348,
        y: 3712,
        w: 72,
        h: 24
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 24
      },
      sourceSize: {
        w: 72,
        h: 24
      }
    },
    "map-crate-05.img": {
      frame: {
        x: 2338,
        y: 2690,
        w: 124,
        h: 124
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 124,
        h: 124
      },
      sourceSize: {
        w: 124,
        h: 124
      }
    },
    "map-toilet-01.img": {
      frame: {
        x: 2466,
        y: 2690,
        w: 97,
        h: 124
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 15,
        y: 2,
        w: 97,
        h: 124
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-toilet-02.img": {
      frame: {
        x: 2567,
        y: 2690,
        w: 97,
        h: 124
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 15,
        y: 2,
        w: 97,
        h: 124
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-perk-hotw.img": {
      frame: {
        x: 2668,
        y: 2690,
        w: 106,
        h: 122
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 11,
        y: 3,
        w: 106,
        h: 122
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-decal-oil-01.img": {
      frame: {
        x: 2778,
        y: 2690,
        w: 86,
        h: 122
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 21,
        y: 3,
        w: 86,
        h: 122
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-vat-res.img": {
      frame: {
        x: 2868,
        y: 2690,
        w: 108,
        h: 121
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 20,
        y: 11,
        w: 108,
        h: 121
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-case-chrys-01.img": {
      frame: {
        x: 2980,
        y: 2690,
        w: 156,
        h: 120
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 156,
        h: 120
      },
      sourceSize: {
        w: 156,
        h: 120
      }
    },
    "map-case-ring-01.img": {
      frame: {
        x: 3140,
        y: 2690,
        w: 156,
        h: 120
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 156,
        h: 120
      },
      sourceSize: {
        w: 156,
        h: 120
      }
    },
    "map-decal-initiative.img": {
      frame: {
        x: 3300,
        y: 2690,
        w: 120,
        h: 120
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 4,
        w: 120,
        h: 120
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "loot-perk-halloween-mystery.img": {
      frame: {
        x: 3424,
        y: 2690,
        w: 106,
        h: 120
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 11,
        y: 2,
        w: 106,
        h: 120
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-building-house-window-res-01.img": {
      frame: {
        x: 4046,
        y: 2309,
        w: 32,
        h: 104
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 104
      },
      sourceSize: {
        w: 32,
        h: 104
      }
    },
    "map-wall-02-5-rounded.img": {
      frame: {
        x: 4038,
        y: 1666,
        w: 32,
        h: 80
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 80
      },
      sourceSize: {
        w: 32,
        h: 80
      }
    },
    "map-towelrack-01.img": {
      frame: {
        x: 3688,
        y: 1774,
        w: 192,
        h: 76
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 10,
        w: 192,
        h: 76
      },
      sourceSize: {
        w: 192,
        h: 96
      }
    },
    "map-deposit-box-02.img": {
      frame: {
        x: 3884,
        y: 1774,
        w: 160,
        h: 74
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 74
      },
      sourceSize: {
        w: 160,
        h: 74
      }
    },
    "map-potato-res.img": {
      frame: {
        x: 1222,
        y: 3742,
        w: 56,
        h: 66
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 20,
        y: 15,
        w: 56,
        h: 66
      },
      sourceSize: {
        w: 96,
        h: 96
      }
    },
    "map-fire-ext-01.img": {
      frame: {
        x: 1282,
        y: 3742,
        w: 83,
        h: 65
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 83,
        h: 65
      },
      sourceSize: {
        w: 84,
        h: 70
      }
    },
    "map-bookshelf-01.img": {
      frame: {
        x: 1369,
        y: 3742,
        w: 224,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 224,
        h: 64
      },
      sourceSize: {
        w: 224,
        h: 64
      }
    },
    "map-bookshelf-02.img": {
      frame: {
        x: 1597,
        y: 3742,
        w: 224,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 224,
        h: 64
      },
      sourceSize: {
        w: 224,
        h: 64
      }
    },
    "map-building-porch-01.img": {
      frame: {
        x: 1825,
        y: 3742,
        w: 128,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 64
      },
      sourceSize: {
        w: 128,
        h: 64
      }
    },
    "map-column-01.img": {
      frame: {
        x: 1957,
        y: 3742,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "crosshair160.img": {
      frame: {
        x: 2025,
        y: 3742,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "map-wall-02.img": {
      frame: {
        x: 4048,
        y: 1774,
        w: 32,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 64
      },
      sourceSize: {
        w: 32,
        h: 64
      }
    },
    "map-wall-02-rounded.img": {
      frame: {
        x: 2093,
        y: 3742,
        w: 32,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 64
      },
      sourceSize: {
        w: 32,
        h: 64
      }
    },
    "crosshair136.img": {
      frame: {
        x: 2129,
        y: 3742,
        w: 62,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 62,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-melee-sledgehammer.img": {
      frame: {
        x: 2195,
        y: 3742,
        w: 150,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: -1,
        w: 150,
        h: 60
      },
      sourceSize: {
        w: 148,
        h: 58
      }
    },
    "crosshair118.img": {
      frame: {
        x: 2349,
        y: 3742,
        w: 60,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 60,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "map-bush-res-02.img": {
      frame: {
        x: 2413,
        y: 3742,
        w: 59,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 42,
        y: 45,
        w: 59,
        h: 60
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-bathhouse-pool-01.img": {
      frame: {
        x: 2476,
        y: 3742,
        w: 36,
        h: 60
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 36,
        h: 60
      },
      sourceSize: {
        w: 36,
        h: 60
      }
    },
    "map-screen-res-01.img": {
      frame: {
        x: 2516,
        y: 3742,
        w: 116,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 0,
        w: 116,
        h: 58
      },
      sourceSize: {
        w: 124,
        h: 58
      }
    },
    "map-drawers-res.img": {
      frame: {
        x: 2636,
        y: 3742,
        w: 93,
        h: 57
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 5,
        w: 93,
        h: 57
      },
      sourceSize: {
        w: 96,
        h: 64
      }
    },
    "map-fire-ext-res.img": {
      frame: {
        x: 2733,
        y: 3742,
        w: 46,
        h: 56
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 36,
        y: 8,
        w: 46,
        h: 56
      },
      sourceSize: {
        w: 84,
        h: 70
      }
    },
    "map-decal-oil-05.img": {
      frame: {
        x: 2783,
        y: 3742,
        w: 34,
        h: 56
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 15,
        y: 4,
        w: 34,
        h: 56
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "map-gun-mount-04.img": {
      frame: {
        x: 2821,
        y: 3742,
        w: 128,
        h: 55
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 55
      },
      sourceSize: {
        w: 128,
        h: 56
      }
    },
    "map-barrel-res-03.img": {
      frame: {
        x: 2953,
        y: 3742,
        w: 76,
        h: 52
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 34,
        y: 86,
        w: 76,
        h: 52
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-woodpile-res-01.img": {
      frame: {
        x: 3033,
        y: 3742,
        w: 72,
        h: 52
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 22,
        w: 72,
        h: 52
      },
      sourceSize: {
        w: 96,
        h: 96
      }
    },
    "map-candle-01.img": {
      frame: {
        x: 3109,
        y: 3742,
        w: 50,
        h: 50
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 50,
        h: 50
      },
      sourceSize: {
        w: 52,
        h: 52
      }
    },
    "map-locker-03.img": {
      frame: {
        x: 3163,
        y: 3742,
        w: 96,
        h: 49
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 96,
        h: 49
      },
      sourceSize: {
        w: 96,
        h: 50
      }
    },
    "map-locker-02.img": {
      frame: {
        x: 3263,
        y: 3742,
        w: 96,
        h: 49
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 96,
        h: 49
      },
      sourceSize: {
        w: 96,
        h: 50
      }
    },
    "map-locker-01.img": {
      frame: {
        x: 3363,
        y: 3742,
        w: 96,
        h: 49
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 96,
        h: 49
      },
      sourceSize: {
        w: 96,
        h: 50
      }
    },
    "map-screen-01.img": {
      frame: {
        x: 3463,
        y: 3742,
        w: 256,
        h: 48
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 256,
        h: 48
      },
      sourceSize: {
        w: 256,
        h: 48
      }
    },
    "map-gun-mount-05.img": {
      frame: {
        x: 3723,
        y: 3742,
        w: 144,
        h: 48
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 48
      },
      sourceSize: {
        w: 144,
        h: 56
      }
    },
    "map-gun-mount-01.img": {
      frame: {
        x: 3871,
        y: 3742,
        w: 144,
        h: 48
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 48
      },
      sourceSize: {
        w: 144,
        h: 56
      }
    },
    "map-decal-oil-04.img": {
      frame: {
        x: 4019,
        y: 3742,
        w: 54,
        h: 48
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 8,
        w: 54,
        h: 48
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "map-wall-shack-top.img": {
      frame: {
        x: 2530,
        y: 3712,
        w: 360,
        h: 24
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 360,
        h: 24
      },
      sourceSize: {
        w: 360,
        h: 24
      }
    },
    "map-wall-shack-bot.img": {
      frame: {
        x: 2894,
        y: 3712,
        w: 242,
        h: 24
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 242,
        h: 24
      },
      sourceSize: {
        w: 242,
        h: 24
      }
    },
    "map-wall-outhouse-top.img": {
      frame: {
        x: 3140,
        y: 3712,
        w: 204,
        h: 24
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 204,
        h: 24
      },
      sourceSize: {
        w: 204,
        h: 24
      }
    },
    "proj-martyrdom-01.img": {
      frame: {
        x: 2210,
        y: 2690,
        w: 124,
        h: 124
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 124,
        h: 124
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    }
  }
}, {
  meta: {
    image: "shared-1-100-b0df365a.png",
    size: {
      w: 4096,
      h: 4096
    },
    scale: 1
  },
  frames: {
    "map-building-house-floor-02.img": {
      frame: {
        x: 1448,
        y: 2,
        w: 960,
        h: 864
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 960,
        h: 864
      },
      sourceSize: {
        w: 960,
        h: 864
      }
    },
    "map-building-club-floor-01c.img": {
      frame: {
        x: 2,
        y: 2,
        w: 1442,
        h: 866
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 1442,
        h: 866
      },
      sourceSize: {
        w: 1442,
        h: 866
      }
    },
    "map-building-house-floor-01.img": {
      frame: {
        x: 2,
        y: 872,
        w: 960,
        h: 864
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 960,
        h: 864
      },
      sourceSize: {
        w: 960,
        h: 864
      }
    },
    "map-building-bank-floor-01.img": {
      frame: {
        x: 2,
        y: 1740,
        w: 1696,
        h: 802
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 1696,
        h: 802
      },
      sourceSize: {
        w: 1696,
        h: 802
      }
    },
    "map-building-mansion-cellar-01a.img": {
      frame: {
        x: 966,
        y: 872,
        w: 865,
        h: 801
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 865,
        h: 801
      },
      sourceSize: {
        w: 866,
        h: 802
      }
    },
    "map-building-warehouse-floor-01.img": {
      frame: {
        x: 2412,
        y: 2,
        w: 1000,
        h: 800
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 1000,
        h: 800
      },
      sourceSize: {
        w: 1000,
        h: 800
      }
    },
    "map-building-mansion-ceiling.img": {
      frame: {
        x: 2412,
        y: 806,
        w: 912,
        h: 800
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 32,
        w: 912,
        h: 800
      },
      sourceSize: {
        w: 1024,
        h: 864
      }
    },
    "map-building-warehouse-floor-02.img": {
      frame: {
        x: 2412,
        y: 1610,
        w: 880,
        h: 800
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 880,
        h: 800
      },
      sourceSize: {
        w: 880,
        h: 800
      }
    },
    "map-building-shilo-floor-01.img": {
      frame: {
        x: 2,
        y: 2546,
        w: 960,
        h: 768
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 960,
        h: 768
      },
      sourceSize: {
        w: 960,
        h: 768
      }
    },
    "map-building-shilo-ceiling-01.img": {
      frame: {
        x: 966,
        y: 2546,
        w: 960,
        h: 768
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 960,
        h: 768
      },
      sourceSize: {
        w: 960,
        h: 768
      }
    },
    "map-building-bathhouse-sideroom-02.img": {
      frame: {
        x: 1930,
        y: 2546,
        w: 1110,
        h: 727
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 2,
        w: 1110,
        h: 727
      },
      sourceSize: {
        w: 1112,
        h: 729
      }
    },
    "map-building-bridge-lg-floor.img": {
      frame: {
        x: 2,
        y: 3318,
        w: 1011,
        h: 704
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 2,
        w: 1011,
        h: 704
      },
      sourceSize: {
        w: 1012,
        h: 708
      }
    },
    "map-bunker-egg-chamber-floor-01a.img": {
      frame: {
        x: 1017,
        y: 3318,
        w: 726,
        h: 698
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 11,
        y: 0,
        w: 726,
        h: 698
      },
      sourceSize: {
        w: 738,
        h: 706
      }
    },
    "map-bunker-storm-chamber-floor-01a.img": {
      frame: {
        x: 1747,
        y: 3318,
        w: 1268,
        h: 696
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 0,
        w: 1268,
        h: 696
      },
      sourceSize: {
        w: 1280,
        h: 704
      }
    },
    "map-building-police-floor-02.img": {
      frame: {
        x: 1702,
        y: 1740,
        w: 609,
        h: 640
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 65,
        w: 609,
        h: 640
      },
      sourceSize: {
        w: 610,
        h: 1570
      }
    },
    "map-building-bank-ceiling-01.img": {
      frame: {
        x: 1835,
        y: 872,
        w: 505,
        h: 552
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 48,
        w: 505,
        h: 552
      },
      sourceSize: {
        w: 505,
        h: 600
      }
    },
    "map-building-bathhouse-sideroom-01.img": {
      frame: {
        x: 3416,
        y: 2,
        w: 536,
        h: 536
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 536,
        h: 536
      },
      sourceSize: {
        w: 536,
        h: 536
      }
    },
    "map-building-container-floor-01.img": {
      frame: {
        x: 3416,
        y: 542,
        w: 180,
        h: 531
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 180,
        h: 531
      },
      sourceSize: {
        w: 180,
        h: 536
      }
    },
    "map-tree-08f.img": {
      frame: {
        x: 3416,
        y: 1077,
        w: 512,
        h: 510
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 512,
        h: 510
      },
      sourceSize: {
        w: 512,
        h: 512
      }
    },
    "map-tree-08su.img": {
      frame: {
        x: 3416,
        y: 1591,
        w: 512,
        h: 510
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 512,
        h: 510
      },
      sourceSize: {
        w: 512,
        h: 512
      }
    },
    "map-silo-01.img": {
      frame: {
        x: 3416,
        y: 2105,
        w: 504,
        h: 502
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 5,
        w: 504,
        h: 502
      },
      sourceSize: {
        w: 512,
        h: 512
      }
    },
    "map-building-club-floor-01e.img": {
      frame: {
        x: 3416,
        y: 2611,
        w: 353,
        h: 482
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 353,
        h: 482
      },
      sourceSize: {
        w: 354,
        h: 482
      }
    },
    "map-building-police-ceiling-03.img": {
      frame: {
        x: 3416,
        y: 3097,
        w: 504,
        h: 480
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 504,
        h: 480
      },
      sourceSize: {
        w: 504,
        h: 480
      }
    },
    "map-building-barn-basement-floor-02.img": {
      frame: {
        x: 3019,
        y: 3318,
        w: 374,
        h: 468
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 374,
        h: 468
      },
      sourceSize: {
        w: 376,
        h: 472
      }
    },
    "map-building-club-ceiling-01c.img": {
      frame: {
        x: 3416,
        y: 3581,
        w: 400,
        h: 433
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 400,
        h: 433
      },
      sourceSize: {
        w: 402,
        h: 434
      }
    },
    "map-building-barn-basement-stairs.img": {
      frame: {
        x: 3600,
        y: 542,
        w: 288,
        h: 384
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 288,
        h: 384
      },
      sourceSize: {
        w: 288,
        h: 384
      }
    },
    "map-building-panicroom-floor.img": {
      frame: {
        x: 3044,
        y: 2546,
        w: 288,
        h: 384
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 288,
        h: 384
      },
      sourceSize: {
        w: 288,
        h: 384
      }
    },
    "map-decal-club-02.img": {
      frame: {
        x: 3773,
        y: 2611,
        w: 100,
        h: 358
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 100,
        h: 358
      },
      sourceSize: {
        w: 104,
        h: 360
      }
    },
    "map-pipes-04.img": {
      frame: {
        x: 3820,
        y: 3581,
        w: 88,
        h: 352
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 88,
        h: 352
      },
      sourceSize: {
        w: 88,
        h: 352
      }
    },
    "map-building-vault-ceiling.img": {
      frame: {
        x: 3044,
        y: 2934,
        w: 321,
        h: 337
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 321,
        h: 337
      },
      sourceSize: {
        w: 432,
        h: 337
      }
    },
    "map-saloon-bar-01.img": {
      frame: {
        x: 3892,
        y: 542,
        w: 54,
        h: 324
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 54,
        h: 324
      },
      sourceSize: {
        w: 54,
        h: 324
      }
    },
    "map-wall-10-rounded.img": {
      frame: {
        x: 3877,
        y: 2611,
        w: 32,
        h: 320
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 320
      },
      sourceSize: {
        w: 32,
        h: 320
      }
    },
    "map-wall-10.img": {
      frame: {
        x: 3913,
        y: 2611,
        w: 32,
        h: 320
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 320
      },
      sourceSize: {
        w: 32,
        h: 320
      }
    },
    "map-wall-glass-10.img": {
      frame: {
        x: 3912,
        y: 3581,
        w: 32,
        h: 320
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 320
      },
      sourceSize: {
        w: 32,
        h: 320
      }
    },
    "map-pipes-01.img": {
      frame: {
        x: 3296,
        y: 1610,
        w: 90,
        h: 288
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 90,
        h: 288
      },
      sourceSize: {
        w: 90,
        h: 288
      }
    },
    "map-wall-09-rounded.img": {
      frame: {
        x: 3328,
        y: 806,
        w: 32,
        h: 288
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 288
      },
      sourceSize: {
        w: 32,
        h: 288
      }
    },
    "map-wall-09.img": {
      frame: {
        x: 3364,
        y: 806,
        w: 32,
        h: 288
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 288
      },
      sourceSize: {
        w: 32,
        h: 288
      }
    },
    "map-wall-glass-9.img": {
      frame: {
        x: 3328,
        y: 1098,
        w: 32,
        h: 288
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 288
      },
      sourceSize: {
        w: 32,
        h: 288
      }
    },
    "map-building-saferoom-ceiling.img": {
      frame: {
        x: 1835,
        y: 1428,
        w: 352,
        h: 224
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 352,
        h: 224
      },
      sourceSize: {
        w: 352,
        h: 224
      }
    },
    "map-building-outhouse-ceiling.img": {
      frame: {
        x: 3019,
        y: 3790,
        w: 272,
        h: 224
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 64,
        y: 0,
        w: 272,
        h: 224
      },
      sourceSize: {
        w: 400,
        h: 316
      }
    },
    "map-door-02.img": {
      frame: {
        x: 3296,
        y: 1902,
        w: 80,
        h: 224
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 224
      },
      sourceSize: {
        w: 80,
        h: 224
      }
    },
    "map-wall-07-rounded.img": {
      frame: {
        x: 3364,
        y: 1098,
        w: 32,
        h: 224
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 224
      },
      sourceSize: {
        w: 32,
        h: 224
      }
    },
    "map-wall-shack-left.img": {
      frame: {
        x: 3924,
        y: 2105,
        w: 24,
        h: 222
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 24,
        h: 222
      },
      sourceSize: {
        w: 24,
        h: 222
      }
    },
    "map-bed-02.img": {
      frame: {
        x: 2191,
        y: 1428,
        w: 176,
        h: 216
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 176,
        h: 216
      },
      sourceSize: {
        w: 176,
        h: 216
      }
    },
    "map-bed-01.img": {
      frame: {
        x: 3296,
        y: 2130,
        w: 96,
        h: 216
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 96,
        h: 216
      },
      sourceSize: {
        w: 96,
        h: 216
      }
    },
    "map-wall-outhouse-side.img": {
      frame: {
        x: 3924,
        y: 2331,
        w: 24,
        h: 198
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 24,
        h: 198
      },
      sourceSize: {
        w: 24,
        h: 198
      }
    },
    "map-pipes-05.img": {
      frame: {
        x: 2315,
        y: 1740,
        w: 90,
        h: 192
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 90,
        h: 192
      },
      sourceSize: {
        w: 90,
        h: 192
      }
    },
    "map-wall-06-rounded.img": {
      frame: {
        x: 3328,
        y: 1390,
        w: 32,
        h: 192
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 192
      },
      sourceSize: {
        w: 32,
        h: 192
      }
    },
    "map-wall-06.img": {
      frame: {
        x: 3364,
        y: 1390,
        w: 32,
        h: 192
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 192
      },
      sourceSize: {
        w: 32,
        h: 192
      }
    },
    "role-assault.img": {
      frame: {
        x: 3956,
        y: 2,
        w: 130,
        h: 166
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 23,
        y: 6,
        w: 130,
        h: 166
      },
      sourceSize: {
        w: 176,
        h: 176
      }
    },
    "role-healer.img": {
      frame: {
        x: 3956,
        y: 172,
        w: 130,
        h: 162
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 23,
        y: 6,
        w: 130,
        h: 162
      },
      sourceSize: {
        w: 176,
        h: 176
      }
    },
    "role-tank.img": {
      frame: {
        x: 3956,
        y: 338,
        w: 130,
        h: 162
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 23,
        y: 6,
        w: 130,
        h: 162
      },
      sourceSize: {
        w: 176,
        h: 176
      }
    },
    "role-sniper.img": {
      frame: {
        x: 3956,
        y: 504,
        w: 130,
        h: 162
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 23,
        y: 6,
        w: 130,
        h: 162
      },
      sourceSize: {
        w: 176,
        h: 176
      }
    },
    "role-demo.img": {
      frame: {
        x: 3956,
        y: 670,
        w: 130,
        h: 162
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 23,
        y: 6,
        w: 130,
        h: 162
      },
      sourceSize: {
        w: 176,
        h: 176
      }
    },
    "role-scout.img": {
      frame: {
        x: 3956,
        y: 836,
        w: 130,
        h: 162
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 23,
        y: 6,
        w: 130,
        h: 162
      },
      sourceSize: {
        w: 176,
        h: 176
      }
    },
    "map-wall-04-stone.img": {
      frame: {
        x: 3956,
        y: 1002,
        w: 40,
        h: 160
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 40,
        h: 160
      },
      sourceSize: {
        w: 40,
        h: 160
      }
    },
    "map-wall-05.img": {
      frame: {
        x: 4000,
        y: 1002,
        w: 32,
        h: 160
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 160
      },
      sourceSize: {
        w: 32,
        h: 160
      }
    },
    "map-wall-05-rounded.img": {
      frame: {
        x: 4036,
        y: 1002,
        w: 32,
        h: 160
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 160
      },
      sourceSize: {
        w: 32,
        h: 160
      }
    },
    "map-bed-res-01.img": {
      frame: {
        x: 3956,
        y: 1166,
        w: 89,
        h: 158
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 16,
        w: 89,
        h: 158
      },
      sourceSize: {
        w: 96,
        h: 192
      }
    },
    "map-bed-res-02.img": {
      frame: {
        x: 3956,
        y: 1328,
        w: 89,
        h: 158
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 16,
        w: 89,
        h: 158
      },
      sourceSize: {
        w: 96,
        h: 192
      }
    },
    "map-wheel-01.img": {
      frame: {
        x: 1702,
        y: 2384,
        w: 312,
        h: 156
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 312,
        h: 156
      },
      sourceSize: {
        w: 312,
        h: 156
      }
    },
    "map-crate-res-03.img": {
      frame: {
        x: 2018,
        y: 2384,
        w: 216,
        h: 154
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 216,
        h: 154
      },
      sourceSize: {
        w: 216,
        h: 156
      }
    },
    "map-crate-11.img": {
      frame: {
        x: 2238,
        y: 2384,
        w: 148,
        h: 148
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 148,
        h: 148
      },
      sourceSize: {
        w: 148,
        h: 148
      }
    },
    "map-sandbags-02.img": {
      frame: {
        x: 3956,
        y: 1490,
        w: 114,
        h: 146
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 17,
        y: 1,
        w: 114,
        h: 146
      },
      sourceSize: {
        w: 148,
        h: 148
      }
    },
    "map-bush-07.img": {
      frame: {
        x: 3600,
        y: 930,
        w: 135,
        h: 143
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 0,
        w: 135,
        h: 143
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-stone-01.img": {
      frame: {
        x: 3739,
        y: 930,
        w: 142,
        h: 142
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 142,
        h: 142
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-door-slot-02.img": {
      frame: {
        x: 3956,
        y: 1640,
        w: 38,
        h: 136
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 38,
        h: 136
      },
      sourceSize: {
        w: 38,
        h: 136
      }
    },
    "map-door-slot-01.img": {
      frame: {
        x: 3998,
        y: 1640,
        w: 38,
        h: 134
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 38,
        h: 134
      },
      sourceSize: {
        w: 38,
        h: 134
      }
    },
    "map-switch-02.img": {
      frame: {
        x: 1462,
        y: 1677,
        w: 30,
        h: 32
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 30,
        h: 32
      },
      sourceSize: {
        w: 30,
        h: 34
      }
    },
    "map-bush-07x.img": {
      frame: {
        x: 3956,
        y: 1914,
        w: 126,
        h: 130
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 7,
        w: 126,
        h: 130
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-stone-res-06.img": {
      frame: {
        x: 2412,
        y: 2414,
        w: 288,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 288,
        h: 128
      },
      sourceSize: {
        w: 288,
        h: 128
      }
    },
    "map-stairs-broken-01.img": {
      frame: {
        x: 2704,
        y: 2414,
        w: 160,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 128
      },
      sourceSize: {
        w: 160,
        h: 128
      }
    },
    "map-table-01.img": {
      frame: {
        x: 2868,
        y: 2414,
        w: 160,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 128
      },
      sourceSize: {
        w: 160,
        h: 128
      }
    },
    "map-vat-01.img": {
      frame: {
        x: 3956,
        y: 2048,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 8,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-bathhouse-column-01.img": {
      frame: {
        x: 3956,
        y: 2180,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "part-note-02.img": {
      frame: {
        x: 3956,
        y: 2312,
        w: 90,
        h: 128
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 19,
        y: 0,
        w: 90,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "part-note-01.img": {
      frame: {
        x: 3956,
        y: 2444,
        w: 86,
        h: 128
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 21,
        y: 0,
        w: 86,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-door-04.img": {
      frame: {
        x: 3956,
        y: 2576,
        w: 54,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 54,
        h: 128
      },
      sourceSize: {
        w: 54,
        h: 128
      }
    },
    "map-wall-04-rounded.img": {
      frame: {
        x: 4049,
        y: 1166,
        w: 32,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 128
      },
      sourceSize: {
        w: 32,
        h: 128
      }
    },
    "map-wall-04.img": {
      frame: {
        x: 4049,
        y: 1328,
        w: 32,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 128
      },
      sourceSize: {
        w: 32,
        h: 128
      }
    },
    "map-door-01.img": {
      frame: {
        x: 4040,
        y: 1640,
        w: 24,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 24,
        h: 128
      },
      sourceSize: {
        w: 24,
        h: 128
      }
    },
    "map-door-05.img": {
      frame: {
        x: 4050,
        y: 2312,
        w: 24,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 24,
        h: 128
      },
      sourceSize: {
        w: 24,
        h: 128
      }
    },
    "map-barrel-res-02.img": {
      frame: {
        x: 3956,
        y: 2708,
        w: 130,
        h: 127
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 6,
        w: 130,
        h: 127
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "loot-weapon-m9-cursed.img": {
      frame: {
        x: 3956,
        y: 2839,
        w: 98,
        h: 120
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 15,
        y: 4,
        w: 98,
        h: 120
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "timer.img": {
      frame: {
        x: 3956,
        y: 2963,
        w: 128,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 5,
        w: 128,
        h: 118
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-chimney-01.img": {
      frame: {
        x: 3956,
        y: 3085,
        w: 120,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 120,
        h: 118
      },
      sourceSize: {
        w: 120,
        h: 120
      }
    },
    "map-stone-res-01.img": {
      frame: {
        x: 3956,
        y: 3207,
        w: 118,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 118,
        h: 118
      },
      sourceSize: {
        w: 120,
        h: 120
      }
    },
    "player-medic.img": {
      frame: {
        x: 3956,
        y: 3329,
        w: 118,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 13,
        y: 13,
        w: 118,
        h: 118
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-squash-01.img": {
      frame: {
        x: 3956,
        y: 3451,
        w: 124,
        h: 116
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 13,
        y: 11,
        w: 124,
        h: 116
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-stone-res-04.img": {
      frame: {
        x: 3956,
        y: 3571,
        w: 116,
        h: 116
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 116,
        h: 116
      },
      sourceSize: {
        w: 120,
        h: 120
      }
    },
    "map-case-flare-res-01.img": {
      frame: {
        x: 3956,
        y: 3691,
        w: 128,
        h: 115
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 13,
        y: 10,
        w: 128,
        h: 115
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-case-hatchet-res-01.img": {
      frame: {
        x: 3956,
        y: 3810,
        w: 128,
        h: 115
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 13,
        y: 10,
        w: 128,
        h: 115
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "loot-perk-inspiration.img": {
      frame: {
        x: 3773,
        y: 2973,
        w: 114,
        h: 114
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 11,
        y: 5,
        w: 114,
        h: 114
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-building-boarded-window-01.img": {
      frame: {
        x: 4014,
        y: 2576,
        w: 44,
        h: 113
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 7,
        w: 44,
        h: 113
      },
      sourceSize: {
        w: 48,
        h: 128
      }
    },
    "map-case-basement-01.img": {
      frame: {
        x: 3032,
        y: 2414,
        w: 148,
        h: 112
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 148,
        h: 112
      },
      sourceSize: {
        w: 148,
        h: 112
      }
    },
    "map-tree-09.img": {
      frame: {
        x: 3184,
        y: 2414,
        w: 112,
        h: 112
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 112,
        h: 112
      },
      sourceSize: {
        w: 112,
        h: 112
      }
    },
    "map-tree-04.img": {
      frame: {
        x: 3300,
        y: 2414,
        w: 112,
        h: 112
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 112,
        h: 112
      },
      sourceSize: {
        w: 112,
        h: 112
      }
    },
    "loot-perk-final-bugle.img": {
      frame: {
        x: 3295,
        y: 3790,
        w: 104,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 4,
        w: 104,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-door-03.img": {
      frame: {
        x: 4046,
        y: 2444,
        w: 32,
        h: 112
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 112
      },
      sourceSize: {
        w: 32,
        h: 112
      }
    },
    "map-bollard-01.img": {
      frame: {
        x: 3295,
        y: 3906,
        w: 112,
        h: 108
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 18,
        w: 112,
        h: 108
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-building-bank-window-01.img": {
      frame: {
        x: 3885,
        y: 930,
        w: 56,
        h: 104
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 56,
        h: 104
      },
      sourceSize: {
        w: 56,
        h: 104
      }
    },
    "map-building-house-window-01.img": {
      frame: {
        x: 3891,
        y: 2973,
        w: 32,
        h: 104
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 104
      },
      sourceSize: {
        w: 32,
        h: 104
      }
    },
    "map-decal-oil-02.img": {
      frame: {
        x: 2315,
        y: 1936,
        w: 90,
        h: 100
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 19,
        y: 14,
        w: 90,
        h: 100
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-toilet-03.img": {
      frame: {
        x: 2315,
        y: 2040,
        w: 66,
        h: 98
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 17,
        y: 1,
        w: 66,
        h: 98
      },
      sourceSize: {
        w: 100,
        h: 100
      }
    },
    "map-toilet-04.img": {
      frame: {
        x: 2315,
        y: 2142,
        w: 66,
        h: 98
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 17,
        y: 1,
        w: 66,
        h: 98
      },
      sourceSize: {
        w: 100,
        h: 100
      }
    },
    "map-recorder-01.img": {
      frame: {
        x: 2344,
        y: 872,
        w: 64,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 96
      },
      sourceSize: {
        w: 64,
        h: 96
      }
    },
    "map-recorder-02.img": {
      frame: {
        x: 2344,
        y: 972,
        w: 64,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 96
      },
      sourceSize: {
        w: 64,
        h: 96
      }
    },
    "map-wall-03-rounded.img": {
      frame: {
        x: 3380,
        y: 1902,
        w: 32,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 96
      },
      sourceSize: {
        w: 32,
        h: 96
      }
    },
    "map-wall-03.img": {
      frame: {
        x: 3380,
        y: 2002,
        w: 32,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 96
      },
      sourceSize: {
        w: 32,
        h: 96
      }
    },
    "map-toilet-res-02.img": {
      frame: {
        x: 2315,
        y: 2244,
        w: 80,
        h: 94
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 24,
        y: 17,
        w: 80,
        h: 94
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-oven-01.img": {
      frame: {
        x: 3956,
        y: 3929,
        w: 108,
        h: 93
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 108,
        h: 93
      },
      sourceSize: {
        w: 108,
        h: 94
      }
    },
    "map-saloon-bar-02.img": {
      frame: {
        x: 2344,
        y: 1072,
        w: 54,
        h: 92
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 54,
        h: 92
      },
      sourceSize: {
        w: 54,
        h: 92
      }
    },
    "map-recorder-03.img": {
      frame: {
        x: 2344,
        y: 1168,
        w: 48,
        h: 80
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 48,
        h: 80
      },
      sourceSize: {
        w: 48,
        h: 80
      }
    },
    "map-recorder-04.img": {
      frame: {
        x: 2344,
        y: 1252,
        w: 48,
        h: 80
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 48,
        h: 80
      },
      sourceSize: {
        w: 48,
        h: 80
      }
    },
    "map-power-box-01.img": {
      frame: {
        x: 3820,
        y: 3937,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-bush-res-01.img": {
      frame: {
        x: 3892,
        y: 870,
        w: 52,
        h: 48
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 46,
        y: 48,
        w: 52,
        h: 48
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "crosshair098.img": {
      frame: {
        x: 3896,
        y: 3937,
        w: 56,
        h: 46
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 2,
        w: 56,
        h: 46
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "map-tree-res-01.img": {
      frame: {
        x: 3364,
        y: 1326,
        w: 48,
        h: 46
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 48,
        h: 46
      },
      sourceSize: {
        w: 48,
        h: 48
      }
    },
    "map-bush-res-04.img": {
      frame: {
        x: 3296,
        y: 2350,
        w: 47,
        h: 46
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 4,
        w: 47,
        h: 46
      },
      sourceSize: {
        w: 54,
        h: 54
      }
    },
    "map-gun-mount-02.img": {
      frame: {
        x: 966,
        y: 1677,
        w: 128,
        h: 44
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 44
      },
      sourceSize: {
        w: 128,
        h: 56
      }
    },
    "map-gun-mount-03.img": {
      frame: {
        x: 1098,
        y: 1677,
        w: 128,
        h: 44
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 44
      },
      sourceSize: {
        w: 128,
        h: 56
      }
    },
    "map-decal-flyer-01.img": {
      frame: {
        x: 3347,
        y: 2350,
        w: 36,
        h: 44
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 2,
        w: 36,
        h: 44
      },
      sourceSize: {
        w: 48,
        h: 48
      }
    },
    "map-building-bank-window-res-01.img": {
      frame: {
        x: 2344,
        y: 1336,
        w: 44,
        h: 43
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 46,
        y: 55,
        w: 44,
        h: 43
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "cobalt.img": {
      frame: {
        x: 1230,
        y: 1677,
        w: 42,
        h: 42
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 42,
        h: 42
      },
      sourceSize: {
        w: 48,
        h: 48
      }
    },
    "crosshair051.img": {
      frame: {
        x: 2344,
        y: 1383,
        w: 40,
        h: 40
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 12,
        w: 40,
        h: 40
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "map-barrel-04.img": {
      frame: {
        x: 1276,
        y: 1677,
        w: 89,
        h: 35
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 89,
        h: 35
      },
      sourceSize: {
        w: 89,
        h: 35
      }
    },
    "map-barrel-03.img": {
      frame: {
        x: 1369,
        y: 1677,
        w: 89,
        h: 35
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 89,
        h: 35
      },
      sourceSize: {
        w: 89,
        h: 35
      }
    },
    "map-bottle-04.img": {
      frame: {
        x: 3885,
        y: 1038,
        w: 34,
        h: 34
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: -1,
        w: 34,
        h: 34
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "map-switch-03.img": {
      frame: {
        x: 3877,
        y: 2935,
        w: 30,
        h: 34
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 30,
        h: 34
      },
      sourceSize: {
        w: 30,
        h: 34
      }
    },
    "map-switch-01.img": {
      frame: {
        x: 3911,
        y: 2935,
        w: 30,
        h: 34
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 30,
        h: 34
      },
      sourceSize: {
        w: 30,
        h: 34
      }
    },
    "crosshair176.img": {
      frame: {
        x: 2371,
        y: 1428,
        w: 32,
        h: 32
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 16,
        y: 16,
        w: 32,
        h: 32
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "map-bottle-01.img": {
      frame: {
        x: 2371,
        y: 1464,
        w: 32,
        h: 32
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 32
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "map-bottle-02.img": {
      frame: {
        x: 2371,
        y: 1500,
        w: 32,
        h: 32
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 32
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "map-wall-01-rounded.img": {
      frame: {
        x: 2371,
        y: 1536,
        w: 32,
        h: 32
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 32
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "map-bottle-05.img": {
      frame: {
        x: 2371,
        y: 1572,
        w: 32,
        h: 32
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 32
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "map-bottle-03.img": {
      frame: {
        x: 2371,
        y: 1608,
        w: 32,
        h: 32
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 32
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "map-bush-01f.img": {
      frame: {
        x: 3956,
        y: 1780,
        w: 126,
        h: 130
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 7,
        w: 126,
        h: 130
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    }
  }
}, {
  meta: {
    image: "shared-2-100-55e4ae31.png",
    size: {
      w: 4096,
      h: 4096
    },
    scale: 1
  },
  frames: {
    "map-building-barn-ceiling-01.img": {
      frame: {
        x: 726,
        y: 2,
        w: 1200,
        h: 624
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 1200,
        h: 624
      },
      sourceSize: {
        w: 1200,
        h: 624
      }
    },
    "map-building-house-ceiling.img": {
      frame: {
        x: 2,
        y: 2,
        w: 720,
        h: 648
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 720,
        h: 648
      },
      sourceSize: {
        w: 720,
        h: 648
      }
    },
    "map-building-teahouse-ceiling-01.img": {
      frame: {
        x: 2,
        y: 654,
        w: 934,
        h: 608
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 16,
        w: 934,
        h: 608
      },
      sourceSize: {
        w: 960,
        h: 640
      }
    },
    "map-building-club-ceiling-01a.img": {
      frame: {
        x: 940,
        y: 654,
        w: 737,
        h: 593
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 0,
        w: 737,
        h: 593
      },
      sourceSize: {
        w: 738,
        h: 594
      }
    },
    "map-building-club-floor-01g.img": {
      frame: {
        x: 2,
        y: 1266,
        w: 800,
        h: 578
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 0,
        w: 800,
        h: 578
      },
      sourceSize: {
        w: 802,
        h: 578
      }
    },
    "map-building-cabin-ceiling-01a.img": {
      frame: {
        x: 806,
        y: 1266,
        w: 912,
        h: 576
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 912,
        h: 576
      },
      sourceSize: {
        w: 912,
        h: 576
      }
    },
    "map-building-teahouse-floor-01.img": {
      frame: {
        x: 1930,
        y: 2,
        w: 896,
        h: 576
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 896,
        h: 576
      },
      sourceSize: {
        w: 896,
        h: 576
      }
    },
    "map-building-bridge-lg-ceiling.img": {
      frame: {
        x: 2,
        y: 1848,
        w: 1088,
        h: 544
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 16,
        w: 1088,
        h: 544
      },
      sourceSize: {
        w: 1088,
        h: 576
      }
    },
    "map-building-police-ceiling-01.img": {
      frame: {
        x: 1094,
        y: 1848,
        w: 1008,
        h: 480
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 1008,
        h: 480
      },
      sourceSize: {
        w: 1008,
        h: 480
      }
    },
    "map-building-barn-basement-floor-01.img": {
      frame: {
        x: 1930,
        y: 582,
        w: 662,
        h: 468
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 2,
        w: 662,
        h: 468
      },
      sourceSize: {
        w: 664,
        h: 472
      }
    },
    "map-building-bank-floor-02.img": {
      frame: {
        x: 1930,
        y: 1054,
        w: 864,
        h: 448
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 864,
        h: 448
      },
      sourceSize: {
        w: 1088,
        h: 448
      }
    },
    "map-building-hut-floor-01.img": {
      frame: {
        x: 2106,
        y: 1848,
        w: 448,
        h: 448
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 32,
        y: 32,
        w: 448,
        h: 448
      },
      sourceSize: {
        w: 512,
        h: 512
      }
    },
    "map-building-warehouse-ceiling-01.img": {
      frame: {
        x: 2830,
        y: 2,
        w: 832,
        h: 432
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 832,
        h: 432
      },
      sourceSize: {
        w: 832,
        h: 432
      }
    },
    "map-building-warehouse-ceiling-02.img": {
      frame: {
        x: 2830,
        y: 438,
        w: 720,
        h: 432
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 720,
        h: 432
      },
      sourceSize: {
        w: 720,
        h: 432
      }
    },
    "map-bunker-conch-compartment-floor-01b.img": {
      frame: {
        x: 2830,
        y: 874,
        w: 400,
        h: 430
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 400,
        h: 430
      },
      sourceSize: {
        w: 400,
        h: 448
      }
    },
    "map-bunker-conch-chamber-floor-02.img": {
      frame: {
        x: 2,
        y: 2396,
        w: 1239,
        h: 408
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 28,
        w: 1239,
        h: 408
      },
      sourceSize: {
        w: 1306,
        h: 464
      }
    },
    "map-building-shack-floor-03.img": {
      frame: {
        x: 2830,
        y: 1308,
        w: 568,
        h: 408
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 0,
        w: 568,
        h: 408
      },
      sourceSize: {
        w: 576,
        h: 448
      }
    },
    "map-building-hut-ceiling-03.img": {
      frame: {
        x: 3234,
        y: 874,
        w: 378,
        h: 393
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 15,
        y: 15,
        w: 378,
        h: 393
      },
      sourceSize: {
        w: 408,
        h: 408
      }
    },
    "map-building-hut-ceiling-01.img": {
      frame: {
        x: 2830,
        y: 1720,
        w: 378,
        h: 393
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 15,
        y: 15,
        w: 378,
        h: 393
      },
      sourceSize: {
        w: 408,
        h: 408
      }
    },
    "map-building-panicroom-ceiling.img": {
      frame: {
        x: 3212,
        y: 1720,
        w: 288,
        h: 384
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 288,
        h: 384
      },
      sourceSize: {
        w: 288,
        h: 384
      }
    },
    "map-bunker-conch-chamber-floor-01.img": {
      frame: {
        x: 1245,
        y: 2396,
        w: 1393,
        h: 382
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 43,
        y: 43,
        w: 1393,
        h: 382
      },
      sourceSize: {
        w: 1520,
        h: 432
      }
    },
    "map-bunker-storm-floor-02.img": {
      frame: {
        x: 2642,
        y: 2396,
        w: 320,
        h: 380
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 320,
        h: 380
      },
      sourceSize: {
        w: 320,
        h: 384
      }
    },
    "map-building-container-open-ceiling-01.img": {
      frame: {
        x: 3402,
        y: 1308,
        w: 180,
        h: 380
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 156,
        w: 180,
        h: 380
      },
      sourceSize: {
        w: 180,
        h: 692
      }
    },
    "map-building-container-ceiling-01.img": {
      frame: {
        x: 2596,
        y: 582,
        w: 180,
        h: 380
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 180,
        h: 380
      },
      sourceSize: {
        w: 180,
        h: 536
      }
    },
    "map-building-container-ceiling-05.img": {
      frame: {
        x: 1681,
        y: 654,
        w: 180,
        h: 380
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 180,
        h: 380
      },
      sourceSize: {
        w: 180,
        h: 536
      }
    },
    "map-building-container-ceiling-03.img": {
      frame: {
        x: 1722,
        y: 1266,
        w: 180,
        h: 380
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 180,
        h: 380
      },
      sourceSize: {
        w: 180,
        h: 536
      }
    },
    "map-building-container-ceiling-02.img": {
      frame: {
        x: 2558,
        y: 1848,
        w: 180,
        h: 380
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 180,
        h: 380
      },
      sourceSize: {
        w: 180,
        h: 536
      }
    },
    "map-building-bridge-md-floor.img": {
      frame: {
        x: 2,
        y: 2808,
        w: 896,
        h: 368
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 896,
        h: 368
      },
      sourceSize: {
        w: 896,
        h: 368
      }
    },
    "map-building-bank-ceiling-03.img": {
      frame: {
        x: 2966,
        y: 2396,
        w: 216,
        h: 360
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 192,
        w: 216,
        h: 360
      },
      sourceSize: {
        w: 216,
        h: 552
      }
    },
    "map-building-bathhouse-basement-01c.img": {
      frame: {
        x: 902,
        y: 2808,
        w: 566,
        h: 342
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 566,
        h: 342
      },
      sourceSize: {
        w: 567,
        h: 343
      }
    },
    "map-building-bathhouse-sideroom-ceiling-02.img": {
      frame: {
        x: 1930,
        y: 1506,
        w: 512,
        h: 336
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 512,
        h: 336
      },
      sourceSize: {
        w: 512,
        h: 336
      }
    },
    "map-building-shack-floor-01.img": {
      frame: {
        x: 3186,
        y: 2396,
        w: 381,
        h: 320
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 19,
        y: 20,
        w: 381,
        h: 320
      },
      sourceSize: {
        w: 420,
        h: 340
      }
    },
    "map-building-shack-floor-02.img": {
      frame: {
        x: 2446,
        y: 1506,
        w: 320,
        h: 320
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 320,
        h: 320
      },
      sourceSize: {
        w: 320,
        h: 320
      }
    },
    "map-building-mansion-floor-01a.img": {
      frame: {
        x: 1472,
        y: 2808,
        w: 802,
        h: 317
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 5,
        w: 802,
        h: 317
      },
      sourceSize: {
        w: 802,
        h: 322
      }
    },
    "map-building-outhouse-floor.img": {
      frame: {
        x: 2278,
        y: 2808,
        w: 240,
        h: 308
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 80,
        y: 4,
        w: 240,
        h: 308
      },
      sourceSize: {
        w: 400,
        h: 316
      }
    },
    "map-bunker-storm-chamber-ceiling-01.img": {
      frame: {
        x: 2522,
        y: 2808,
        w: 592,
        h: 304
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 112,
        w: 592,
        h: 304
      },
      sourceSize: {
        w: 592,
        h: 416
      }
    },
    "map-bunker-egg-chamber-ceiling-01.img": {
      frame: {
        x: 3118,
        y: 2808,
        w: 320,
        h: 304
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 144,
        w: 320,
        h: 304
      },
      sourceSize: {
        w: 320,
        h: 448
      }
    },
    "map-building-bathhouse-basement-01a.img": {
      frame: {
        x: 2,
        y: 3180,
        w: 225,
        h: 290
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 0,
        w: 225,
        h: 290
      },
      sourceSize: {
        w: 226,
        h: 290
      }
    },
    "map-building-club-floor-01h.img": {
      frame: {
        x: 231,
        y: 3180,
        w: 321,
        h: 289
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 321,
        h: 289
      },
      sourceSize: {
        w: 322,
        h: 290
      }
    },
    "map-building-shack-ceiling-03.img": {
      frame: {
        x: 556,
        y: 3180,
        w: 408,
        h: 288
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 24,
        y: 0,
        w: 408,
        h: 288
      },
      sourceSize: {
        w: 432,
        h: 336
      }
    },
    "map-bunker-generic-floor-01.img": {
      frame: {
        x: 968,
        y: 3180,
        w: 295,
        h: 281
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 0,
        w: 295,
        h: 281
      },
      sourceSize: {
        w: 320,
        h: 288
      }
    },
    "map-bunker-generic-floor-02.img": {
      frame: {
        x: 1267,
        y: 3180,
        w: 295,
        h: 281
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 0,
        w: 295,
        h: 281
      },
      sourceSize: {
        w: 320,
        h: 288
      }
    },
    "map-building-bathhouse-sideroom-ceiling-01.img": {
      frame: {
        x: 2830,
        y: 2117,
        w: 256,
        h: 224
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 256,
        h: 224
      },
      sourceSize: {
        w: 256,
        h: 224
      }
    },
    "map-building-teahouse-res-01.img": {
      frame: {
        x: 3090,
        y: 2117,
        w: 282,
        h: 208
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 115,
        y: 152,
        w: 282,
        h: 208
      },
      sourceSize: {
        w: 512,
        h: 512
      }
    },
    "map-building-shack-ceiling-01.img": {
      frame: {
        x: 1566,
        y: 3180,
        w: 315,
        h: 207
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 315,
        h: 207
      },
      sourceSize: {
        w: 315,
        h: 255
      }
    },
    "map-vat-02.img": {
      frame: {
        x: 3376,
        y: 2117,
        w: 200,
        h: 200
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 200,
        h: 200
      },
      sourceSize: {
        w: 200,
        h: 200
      }
    },
    "map-stone-res-02.img": {
      frame: {
        x: 1681,
        y: 1038,
        w: 200,
        h: 200
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 200,
        h: 200
      },
      sourceSize: {
        w: 200,
        h: 200
      }
    },
    "map-building-club-floor-01d.img": {
      frame: {
        x: 1885,
        y: 3180,
        w: 322,
        h: 193
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 322,
        h: 193
      },
      sourceSize: {
        w: 322,
        h: 194
      }
    },
    "map-building-bathhouse-basement-01d.img": {
      frame: {
        x: 2211,
        y: 3180,
        w: 258,
        h: 193
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 258,
        h: 193
      },
      sourceSize: {
        w: 258,
        h: 194
      }
    },
    "map-building-club-floor-01b.img": {
      frame: {
        x: 3442,
        y: 2808,
        w: 194,
        h: 193
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 194,
        h: 193
      },
      sourceSize: {
        w: 194,
        h: 194
      }
    },
    "map-bunker-conch-chamber-ceiling-01.img": {
      frame: {
        x: 2473,
        y: 3180,
        w: 496,
        h: 192
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 496,
        h: 192
      },
      sourceSize: {
        w: 496,
        h: 192
      }
    },
    "map-building-barn-basement-ceiling-01.img": {
      frame: {
        x: 2973,
        y: 3180,
        w: 304,
        h: 192
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 16,
        w: 304,
        h: 192
      },
      sourceSize: {
        w: 304,
        h: 208
      }
    },
    "map-building-crossing-bathroom-ceiling.img": {
      frame: {
        x: 3281,
        y: 3180,
        w: 288,
        h: 192
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 288,
        h: 192
      },
      sourceSize: {
        w: 288,
        h: 192
      }
    },
    "map-building-shack-ceiling-02.img": {
      frame: {
        x: 3666,
        y: 2,
        w: 240,
        h: 192
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 240,
        h: 192
      },
      sourceSize: {
        w: 240,
        h: 240
      }
    },
    "map-hedgehog-01.img": {
      frame: {
        x: 3666,
        y: 198,
        w: 192,
        h: 192
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 192,
        h: 192
      },
      sourceSize: {
        w: 192,
        h: 192
      }
    },
    "map-building-barn-basement-ceiling-02.img": {
      frame: {
        x: 3666,
        y: 394,
        w: 164,
        h: 192
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 16,
        w: 164,
        h: 192
      },
      sourceSize: {
        w: 164,
        h: 208
      }
    },
    "map-building-mansion-floor-01d.img": {
      frame: {
        x: 2,
        y: 3474,
        w: 1090,
        h: 186
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 1090,
        h: 186
      },
      sourceSize: {
        w: 1090,
        h: 194
      }
    },
    "map-shack-res-01.img": {
      frame: {
        x: 1096,
        y: 3474,
        w: 305,
        h: 181
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 60,
        y: 49,
        w: 305,
        h: 181
      },
      sourceSize: {
        w: 420,
        h: 340
      }
    },
    "map-bunker-conch-ceiling-01.img": {
      frame: {
        x: 1405,
        y: 3474,
        w: 380,
        h: 180
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 380,
        h: 180
      },
      sourceSize: {
        w: 380,
        h: 180
      }
    },
    "map-bunker-egg-chamber-floor-01b.img": {
      frame: {
        x: 3666,
        y: 590,
        w: 192,
        h: 179
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 192,
        h: 179
      },
      sourceSize: {
        w: 194,
        h: 180
      }
    },
    "map-smoke-res.img": {
      frame: {
        x: 3666,
        y: 773,
        w: 170,
        h: 178
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 47,
        y: 39,
        w: 170,
        h: 178
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-bunker-storm-chamber-floor-01b.img": {
      frame: {
        x: 3666,
        y: 955,
        w: 192,
        h: 177
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 192,
        h: 177
      },
      sourceSize: {
        w: 194,
        h: 178
      }
    },
    "map-bunker-conch-chamber-ceiling-02.img": {
      frame: {
        x: 1789,
        y: 3474,
        w: 488,
        h: 176
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 488,
        h: 176
      },
      sourceSize: {
        w: 488,
        h: 176
      }
    },
    "map-shack-res-02.img": {
      frame: {
        x: 3666,
        y: 1136,
        w: 220,
        h: 176
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 100,
        y: 69,
        w: 220,
        h: 176
      },
      sourceSize: {
        w: 420,
        h: 340
      }
    },
    "map-shack-res-03.img": {
      frame: {
        x: 3666,
        y: 1316,
        w: 220,
        h: 176
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 100,
        y: 69,
        w: 220,
        h: 176
      },
      sourceSize: {
        w: 420,
        h: 340
      }
    },
    "map-building-club-vault-ceiling.img": {
      frame: {
        x: 3666,
        y: 1496,
        w: 160,
        h: 176
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 176
      },
      sourceSize: {
        w: 160,
        h: 176
      }
    },
    "map-pipes-02.img": {
      frame: {
        x: 3666,
        y: 1676,
        w: 236,
        h: 172
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 236,
        h: 172
      },
      sourceSize: {
        w: 238,
        h: 172
      }
    },
    "map-snow-07.img": {
      frame: {
        x: 2281,
        y: 3474,
        w: 496,
        h: 168
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 12,
        w: 496,
        h: 168
      },
      sourceSize: {
        w: 512,
        h: 192
      }
    },
    "map-crate-04.img": {
      frame: {
        x: 3666,
        y: 1852,
        w: 164,
        h: 164
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 164,
        h: 164
      },
      sourceSize: {
        w: 164,
        h: 164
      }
    },
    "map-stove-01.img": {
      frame: {
        x: 3666,
        y: 2020,
        w: 208,
        h: 161
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 8,
        w: 208,
        h: 161
      },
      sourceSize: {
        w: 224,
        h: 176
      }
    },
    "map-table-02.img": {
      frame: {
        x: 2781,
        y: 3474,
        w: 288,
        h: 160
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 288,
        h: 160
      },
      sourceSize: {
        w: 288,
        h: 160
      }
    },
    "map-airdrop-02.img": {
      frame: {
        x: 3666,
        y: 2185,
        w: 160,
        h: 160
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 160
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "map-building-dock-floor-01a.img": {
      frame: {
        x: 3666,
        y: 2349,
        w: 160,
        h: 160
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 2,
        w: 160,
        h: 160
      },
      sourceSize: {
        w: 160,
        h: 162
      }
    },
    "map-airdrop-01.img": {
      frame: {
        x: 3666,
        y: 2513,
        w: 160,
        h: 160
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 160
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "map-table-03.img": {
      frame: {
        x: 3666,
        y: 2677,
        w: 160,
        h: 160
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 160
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "map-wheel-03.img": {
      frame: {
        x: 3073,
        y: 3474,
        w: 312,
        h: 149
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 312,
        h: 149
      },
      sourceSize: {
        w: 312,
        h: 156
      }
    },
    "map-wheel-02.img": {
      frame: {
        x: 3389,
        y: 3474,
        w: 297,
        h: 149
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 0,
        w: 297,
        h: 149
      },
      sourceSize: {
        w: 312,
        h: 156
      }
    },
    "map-crate-10.img": {
      frame: {
        x: 3666,
        y: 2841,
        w: 148,
        h: 148
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 148,
        h: 148
      },
      sourceSize: {
        w: 148,
        h: 148
      }
    },
    "map-sandbags-01.img": {
      frame: {
        x: 2,
        y: 3664,
        w: 256,
        h: 146
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 256,
        h: 146
      },
      sourceSize: {
        w: 256,
        h: 148
      }
    },
    "map-building-cabin-ceiling-01b.img": {
      frame: {
        x: 3504,
        y: 2016,
        w: 148,
        h: 74
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 148,
        h: 74
      },
      sourceSize: {
        w: 148,
        h: 76
      }
    },
    "map-crate-14a.img": {
      frame: {
        x: 3666,
        y: 2993,
        w: 156,
        h: 144
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 156,
        h: 144
      },
      sourceSize: {
        w: 156,
        h: 144
      }
    },
    "map-crate-14.img": {
      frame: {
        x: 3666,
        y: 3141,
        w: 156,
        h: 144
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 156,
        h: 144
      },
      sourceSize: {
        w: 156,
        h: 144
      }
    },
    "map-crate-09.img": {
      frame: {
        x: 3666,
        y: 3289,
        w: 144,
        h: 144
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 144
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "loot-circle-outer-06.img": {
      frame: {
        x: 3504,
        y: 1720,
        w: 144,
        h: 144
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 144,
        h: 144
      },
      sourceSize: {
        w: 146,
        h: 146
      }
    },
    "pass-unlock-type-bg.img": {
      frame: {
        x: 3504,
        y: 1868,
        w: 144,
        h: 144
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 144,
        h: 144
      },
      sourceSize: {
        w: 146,
        h: 146
      }
    },
    "map-stone-05.img": {
      frame: {
        x: 1722,
        y: 1650,
        w: 144,
        h: 144
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 144
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "pass-unlock-bg.img": {
      frame: {
        x: 3690,
        y: 3474,
        w: 144,
        h: 144
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 144,
        h: 144
      },
      sourceSize: {
        w: 146,
        h: 146
      }
    },
    "map-stone-04.img": {
      frame: {
        x: 682,
        y: 3664,
        w: 144,
        h: 144
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 144
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-crate-08.img": {
      frame: {
        x: 830,
        y: 3664,
        w: 144,
        h: 144
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 144
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-crate-07.img": {
      frame: {
        x: 978,
        y: 3664,
        w: 144,
        h: 144
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 144
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-crate-01.img": {
      frame: {
        x: 1126,
        y: 3664,
        w: 144,
        h: 144
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 144
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-crate-02.img": {
      frame: {
        x: 1274,
        y: 3664,
        w: 144,
        h: 144
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 144
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-crate-02sv.img": {
      frame: {
        x: 1422,
        y: 3664,
        w: 144,
        h: 144
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 144
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-crate-03.img": {
      frame: {
        x: 1570,
        y: 3664,
        w: 144,
        h: 144
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 144
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-barrel-01.img": {
      frame: {
        x: 1718,
        y: 3664,
        w: 142,
        h: 142
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 142,
        h: 142
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-barrel-02.img": {
      frame: {
        x: 1864,
        y: 3664,
        w: 142,
        h: 142
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 142,
        h: 142
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-bunker-vent-02.img": {
      frame: {
        x: 2010,
        y: 3664,
        w: 132,
        h: 134
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 1,
        w: 132,
        h: 134
      },
      sourceSize: {
        w: 136,
        h: 136
      }
    },
    "map-bunker-vent-03.img": {
      frame: {
        x: 2146,
        y: 3664,
        w: 132,
        h: 134
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 1,
        w: 132,
        h: 134
      },
      sourceSize: {
        w: 136,
        h: 136
      }
    },
    "map-outhouse-res.img": {
      frame: {
        x: 2282,
        y: 3664,
        w: 150,
        h: 132
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 125,
        y: 42,
        w: 150,
        h: 132
      },
      sourceSize: {
        w: 400,
        h: 312
      }
    },
    "map-table-res.img": {
      frame: {
        x: 2436,
        y: 3664,
        w: 131,
        h: 132
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 5,
        w: 131,
        h: 132
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-building-club-floor-01f.img": {
      frame: {
        x: 2571,
        y: 3664,
        w: 194,
        h: 130
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 194,
        h: 130
      },
      sourceSize: {
        w: 194,
        h: 130
      }
    },
    "map-building-mansion-cellar-01c.img": {
      frame: {
        x: 2769,
        y: 3664,
        w: 354,
        h: 129
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 354,
        h: 129
      },
      sourceSize: {
        w: 354,
        h: 130
      }
    },
    "map-crate-res-01.img": {
      frame: {
        x: 3127,
        y: 3664,
        w: 138,
        h: 129
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 9,
        w: 138,
        h: 129
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-control-panel-01.img": {
      frame: {
        x: 3269,
        y: 3664,
        w: 144,
        h: 110
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 110
      },
      sourceSize: {
        w: 144,
        h: 110
      }
    },
    "map-control-panel-04.img": {
      frame: {
        x: 3417,
        y: 3664,
        w: 144,
        h: 110
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 110
      },
      sourceSize: {
        w: 144,
        h: 110
      }
    },
    "map-control-panel-05.img": {
      frame: {
        x: 3565,
        y: 3664,
        w: 144,
        h: 110
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 110
      },
      sourceSize: {
        w: 144,
        h: 110
      }
    },
    "map-control-panel-02.img": {
      frame: {
        x: 3713,
        y: 3664,
        w: 144,
        h: 110
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 110
      },
      sourceSize: {
        w: 144,
        h: 110
      }
    },
    "map-case-deagle-02.img": {
      frame: {
        x: 3910,
        y: 2,
        w: 144,
        h: 108
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 108
      },
      sourceSize: {
        w: 144,
        h: 108
      }
    },
    "map-case-deagle-01.img": {
      frame: {
        x: 3910,
        y: 114,
        w: 144,
        h: 108
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 108
      },
      sourceSize: {
        w: 144,
        h: 108
      }
    },
    "news.img": {
      frame: {
        x: 3910,
        y: 226,
        w: 110,
        h: 108
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 10,
        w: 110,
        h: 108
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-crate-20.img": {
      frame: {
        x: 3910,
        y: 338,
        w: 108,
        h: 108
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 108,
        h: 108
      },
      sourceSize: {
        w: 108,
        h: 108
      }
    },
    "loot-perk-turkey_shoot.img": {
      frame: {
        x: 3910,
        y: 450,
        w: 102,
        h: 108
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 13,
        y: 10,
        w: 102,
        h: 108
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-toilet-res-01.img": {
      frame: {
        x: 3910,
        y: 562,
        w: 98,
        h: 107
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 15,
        y: 7,
        w: 98,
        h: 107
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-decal-club-01.img": {
      frame: {
        x: 3910,
        y: 673,
        w: 100,
        h: 105
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 116,
        w: 100,
        h: 105
      },
      sourceSize: {
        w: 104,
        h: 360
      }
    },
    "map-stove-02.img": {
      frame: {
        x: 3910,
        y: 782,
        w: 98,
        h: 105
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 7,
        w: 98,
        h: 105
      },
      sourceSize: {
        w: 112,
        h: 112
      }
    },
    "emote-medical-healthkit.img": {
      frame: {
        x: 3910,
        y: 891,
        w: 118,
        h: 104
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 12,
        w: 118,
        h: 104
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "part-leaf-01sv.img": {
      frame: {
        x: 3910,
        y: 999,
        w: 108,
        h: 104
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 10,
        y: 12,
        w: 108,
        h: 104
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-case-flare-01.img": {
      frame: {
        x: 3910,
        y: 1107,
        w: 140,
        h: 102
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 140,
        h: 102
      },
      sourceSize: {
        w: 140,
        h: 102
      }
    },
    "map-case-hatchet-01.img": {
      frame: {
        x: 3910,
        y: 1213,
        w: 140,
        h: 102
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 140,
        h: 102
      },
      sourceSize: {
        w: 140,
        h: 102
      }
    },
    "map-chest-01.img": {
      frame: {
        x: 3910,
        y: 1319,
        w: 140,
        h: 102
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 140,
        h: 102
      },
      sourceSize: {
        w: 140,
        h: 102
      }
    },
    "map-chest-02.img": {
      frame: {
        x: 3910,
        y: 1425,
        w: 140,
        h: 102
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 140,
        h: 102
      },
      sourceSize: {
        w: 140,
        h: 102
      }
    },
    "map-chest-03.img": {
      frame: {
        x: 3910,
        y: 1531,
        w: 140,
        h: 102
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 140,
        h: 102
      },
      sourceSize: {
        w: 140,
        h: 102
      }
    },
    "part-takedown-01.img": {
      frame: {
        x: 3910,
        y: 1637,
        w: 126,
        h: 102
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 13,
        w: 126,
        h: 102
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-grill-01.img": {
      frame: {
        x: 3910,
        y: 1743,
        w: 120,
        h: 102
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 13,
        w: 120,
        h: 102
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-crate-06.img": {
      frame: {
        x: 3442,
        y: 3005,
        w: 164,
        h: 100
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 164,
        h: 100
      },
      sourceSize: {
        w: 164,
        h: 100
      }
    },
    "map-couch-01.img": {
      frame: {
        x: 2,
        y: 3814,
        w: 288,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 288,
        h: 96
      },
      sourceSize: {
        w: 288,
        h: 96
      }
    },
    "map-couch-02.img": {
      frame: {
        x: 294,
        y: 3814,
        w: 192,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 192,
        h: 96
      },
      sourceSize: {
        w: 192,
        h: 96
      }
    },
    "map-woodpile-01.img": {
      frame: {
        x: 3910,
        y: 1849,
        w: 96,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 96,
        h: 96
      },
      sourceSize: {
        w: 96,
        h: 96
      }
    },
    "map-bathrocks-01.img": {
      frame: {
        x: 3910,
        y: 1949,
        w: 96,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 96,
        h: 96
      },
      sourceSize: {
        w: 96,
        h: 96
      }
    },
    "map-couch-03.img": {
      frame: {
        x: 3910,
        y: 2049,
        w: 96,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 96,
        h: 96
      },
      sourceSize: {
        w: 96,
        h: 96
      }
    },
    "map-control-panel-06.img": {
      frame: {
        x: 490,
        y: 3814,
        w: 192,
        h: 94
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 192,
        h: 94
      },
      sourceSize: {
        w: 192,
        h: 94
      }
    },
    "map-vending-soda-01.img": {
      frame: {
        x: 3910,
        y: 2149,
        w: 108,
        h: 94
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 108,
        h: 94
      },
      sourceSize: {
        w: 108,
        h: 94
      }
    },
    "map-refrigerator-01.img": {
      frame: {
        x: 3910,
        y: 2247,
        w: 108,
        h: 94
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 108,
        h: 94
      },
      sourceSize: {
        w: 108,
        h: 94
      }
    },
    "map-tree-res-02.img": {
      frame: {
        x: 3910,
        y: 2345,
        w: 96,
        h: 94
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 96,
        h: 94
      },
      sourceSize: {
        w: 96,
        h: 96
      }
    },
    "map-control-panel-03.img": {
      frame: {
        x: 3910,
        y: 2443,
        w: 96,
        h: 94
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 96,
        h: 94
      },
      sourceSize: {
        w: 96,
        h: 94
      }
    },
    "map-pot-03.img": {
      frame: {
        x: 3910,
        y: 2541,
        w: 94,
        h: 94
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 94,
        h: 94
      },
      sourceSize: {
        w: 96,
        h: 96
      }
    },
    "map-pot-04.img": {
      frame: {
        x: 3910,
        y: 2639,
        w: 94,
        h: 94
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 94,
        h: 94
      },
      sourceSize: {
        w: 96,
        h: 96
      }
    },
    "map-pot-02.img": {
      frame: {
        x: 3910,
        y: 2737,
        w: 94,
        h: 94
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 94,
        h: 94
      },
      sourceSize: {
        w: 96,
        h: 96
      }
    },
    "map-pot-05.img": {
      frame: {
        x: 3910,
        y: 2835,
        w: 94,
        h: 94
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 94,
        h: 94
      },
      sourceSize: {
        w: 96,
        h: 96
      }
    },
    "map-pot-01.img": {
      frame: {
        x: 3910,
        y: 2933,
        w: 94,
        h: 94
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 94,
        h: 94
      },
      sourceSize: {
        w: 96,
        h: 96
      }
    },
    "map-decal-oil-03.img": {
      frame: {
        x: 3910,
        y: 3031,
        w: 89,
        h: 92
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 20,
        y: 18,
        w: 89,
        h: 92
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-drawers-01.img": {
      frame: {
        x: 686,
        y: 3814,
        w: 160,
        h: 90
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 90
      },
      sourceSize: {
        w: 160,
        h: 90
      }
    },
    "map-drawers-02.img": {
      frame: {
        x: 850,
        y: 3814,
        w: 160,
        h: 90
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 90
      },
      sourceSize: {
        w: 160,
        h: 90
      }
    },
    "map-stand-01.img": {
      frame: {
        x: 3910,
        y: 3127,
        w: 80,
        h: 90
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 90
      },
      sourceSize: {
        w: 80,
        h: 90
      }
    },
    "map-crate-mil-04.img": {
      frame: {
        x: 1014,
        y: 3814,
        w: 172,
        h: 89
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 172,
        h: 89
      },
      sourceSize: {
        w: 172,
        h: 89
      }
    },
    "map-crate-mil-03.img": {
      frame: {
        x: 1190,
        y: 3814,
        w: 172,
        h: 89
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 172,
        h: 89
      },
      sourceSize: {
        w: 172,
        h: 89
      }
    },
    "map-crate-mil-02.img": {
      frame: {
        x: 1366,
        y: 3814,
        w: 172,
        h: 89
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 172,
        h: 89
      },
      sourceSize: {
        w: 172,
        h: 89
      }
    },
    "map-crate-mil-01.img": {
      frame: {
        x: 1542,
        y: 3814,
        w: 172,
        h: 89
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 172,
        h: 89
      },
      sourceSize: {
        w: 172,
        h: 89
      }
    },
    "map-crate-mil-05.img": {
      frame: {
        x: 1718,
        y: 3814,
        w: 172,
        h: 89
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 172,
        h: 89
      },
      sourceSize: {
        w: 172,
        h: 89
      }
    },
    "map-building-teahouse-floor-02.img": {
      frame: {
        x: 3910,
        y: 3221,
        w: 128,
        h: 88
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 88
      },
      sourceSize: {
        w: 128,
        h: 88
      }
    },
    "map-decal-oil-06.img": {
      frame: {
        x: 3910,
        y: 3313,
        w: 94,
        h: 86
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 17,
        y: 21,
        w: 94,
        h: 86
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-couch-res-01.img": {
      frame: {
        x: 3910,
        y: 3403,
        w: 79,
        h: 86
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 5,
        w: 79,
        h: 86
      },
      sourceSize: {
        w: 96,
        h: 96
      }
    },
    "map-bunker-vent-01.img": {
      frame: {
        x: 3910,
        y: 3493,
        w: 82,
        h: 84
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 0,
        w: 82,
        h: 84
      },
      sourceSize: {
        w: 84,
        h: 84
      }
    },
    "map-vending-res.img": {
      frame: {
        x: 3910,
        y: 3581,
        w: 93,
        h: 82
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 5,
        w: 93,
        h: 82
      },
      sourceSize: {
        w: 108,
        h: 94
      }
    },
    "map-squash-res-01.img": {
      frame: {
        x: 3910,
        y: 3667,
        w: 84,
        h: 81
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 12,
        w: 84,
        h: 81
      },
      sourceSize: {
        w: 96,
        h: 96
      }
    },
    "map-pot-res-01.img": {
      frame: {
        x: 3818,
        y: 2841,
        w: 80,
        h: 80
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 32,
        y: 32,
        w: 80,
        h: 80
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-piano-01.img": {
      frame: {
        x: 1894,
        y: 3814,
        w: 240,
        h: 75
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 240,
        h: 75
      },
      sourceSize: {
        w: 240,
        h: 75
      }
    },
    "map-deposit-box-01.img": {
      frame: {
        x: 2596,
        y: 966,
        w: 160,
        h: 74
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 74
      },
      sourceSize: {
        w: 160,
        h: 74
      }
    },
    "map-building-barn-ceiling-02.img": {
      frame: {
        x: 262,
        y: 3664,
        w: 416,
        h: 144
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 416,
        h: 144
      },
      sourceSize: {
        w: 416,
        h: 144
      }
    }
  }
}];
const Ns = [{
  meta: {
    image: "halloween-0-100-cd0fab16.png",
    size: {
      w: 2048,
      h: 2048
    },
    scale: 1
  },
  frames: {
    "map-bunker-eye-compartment-floor-01.img": {
      frame: {
        x: 710,
        y: 2,
        w: 704,
        h: 704
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 704,
        h: 704
      },
      sourceSize: {
        w: 704,
        h: 704
      }
    },
    "map-bunker-eye-chamber-floor-01a.img": {
      frame: {
        x: 2,
        y: 2,
        w: 704,
        h: 1344
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 32,
        w: 704,
        h: 1344
      },
      sourceSize: {
        w: 704,
        h: 1376
      }
    },
    "map-bunker-eye-chamber-ceiling-01.img": {
      frame: {
        x: 710,
        y: 710,
        w: 320,
        h: 544
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 320,
        h: 544
      },
      sourceSize: {
        w: 320,
        h: 544
      }
    },
    "map-tree-08.img": {
      frame: {
        x: 1418,
        y: 2,
        w: 512,
        h: 510
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 512,
        h: 510
      },
      sourceSize: {
        w: 512,
        h: 512
      }
    },
    "map-tree-08sp.img": {
      frame: {
        x: 1418,
        y: 516,
        w: 512,
        h: 510
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 512,
        h: 510
      },
      sourceSize: {
        w: 512,
        h: 512
      }
    },
    "map-tree-05.img": {
      frame: {
        x: 2,
        y: 1350,
        w: 489,
        h: 480
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 17,
        w: 489,
        h: 480
      },
      sourceSize: {
        w: 512,
        h: 512
      }
    },
    "map-bunker-eye-compartment-ceiling-01.img": {
      frame: {
        x: 1034,
        y: 710,
        w: 320,
        h: 320
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 320,
        h: 320
      },
      sourceSize: {
        w: 320,
        h: 320
      }
    },
    "map-tree-07.img": {
      frame: {
        x: 1418,
        y: 1030,
        w: 256,
        h: 256
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 256,
        h: 256
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-tree-07sp.img": {
      frame: {
        x: 495,
        y: 1350,
        w: 256,
        h: 256
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 256,
        h: 256
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-bunker-eye-chamber-floor-01b.img": {
      frame: {
        x: 1678,
        y: 1030,
        w: 192,
        h: 256
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 192,
        h: 256
      },
      sourceSize: {
        w: 192,
        h: 256
      }
    },
    "map-bush-06.img": {
      frame: {
        x: 1034,
        y: 1034,
        w: 190,
        h: 188
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 2,
        w: 190,
        h: 188
      },
      sourceSize: {
        w: 192,
        h: 192
      }
    },
    "map-airdrop-01h.img": {
      frame: {
        x: 1228,
        y: 1034,
        w: 160,
        h: 160
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 160
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "map-bush-res-06.img": {
      frame: {
        x: 1874,
        y: 1030,
        w: 50,
        h: 48
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 47,
        y: 48,
        w: 50,
        h: 48
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-web-01.img": {
      frame: {
        x: 919,
        y: 1350,
        w: 152,
        h: 158
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 152,
        h: 158
      },
      sourceSize: {
        w: 152,
        h: 160
      }
    },
    "map-crate-11h.img": {
      frame: {
        x: 1075,
        y: 1350,
        w: 146,
        h: 146
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 146,
        h: 146
      },
      sourceSize: {
        w: 148,
        h: 148
      }
    },
    "map-bush-07sp.img": {
      frame: {
        x: 1225,
        y: 1350,
        w: 135,
        h: 143
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 0,
        w: 135,
        h: 143
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-pumpkin-02.img": {
      frame: {
        x: 1364,
        y: 1350,
        w: 140,
        h: 140
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 140,
        h: 140
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-pumpkin-01.img": {
      frame: {
        x: 1508,
        y: 1350,
        w: 140,
        h: 140
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 140,
        h: 140
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-pumpkin-res-01.img": {
      frame: {
        x: 1652,
        y: 1350,
        w: 135,
        h: 132
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 8,
        w: 135,
        h: 132
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-tree-04h.img": {
      frame: {
        x: 1791,
        y: 1350,
        w: 112,
        h: 112
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 112,
        h: 112
      },
      sourceSize: {
        w: 112,
        h: 112
      }
    },
    "map-pumpkin-03.img": {
      frame: {
        x: 495,
        y: 1610,
        w: 95,
        h: 97
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 22,
        y: 25,
        w: 95,
        h: 97
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "part-airdrop-01h.img": {
      frame: {
        x: 710,
        y: 1258,
        w: 88,
        h: 88
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 4,
        w: 88,
        h: 88
      },
      sourceSize: {
        w: 96,
        h: 96
      }
    },
    "map-pumpkin-res-03.img": {
      frame: {
        x: 802,
        y: 1258,
        w: 86,
        h: 82
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 9,
        w: 86,
        h: 82
      },
      sourceSize: {
        w: 96,
        h: 96
      }
    },
    "part-airdrop-02h.img": {
      frame: {
        x: 892,
        y: 1258,
        w: 80,
        h: 80
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 80
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "map-airdrop-02h.img": {
      frame: {
        x: 755,
        y: 1350,
        w: 160,
        h: 160
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 160
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    }
  }
}];
const Es = [{
  meta: {
    image: "snow-0-100-23291c9e.png",
    size: {
      w: 4096,
      h: 4096
    },
    scale: 1
  },
  frames: {
    "map-bunker-chrys-compartment-floor-03a.img": {
      frame: {
        x: 1701,
        y: 2,
        w: 767,
        h: 863
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 767,
        h: 863
      },
      sourceSize: {
        w: 768,
        h: 864
      }
    },
    "map-bunker-hydra-compartment-floor-02.img": {
      frame: {
        x: 2,
        y: 2,
        w: 1695,
        h: 1448
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 0,
        w: 1695,
        h: 1448
      },
      sourceSize: {
        w: 1704,
        h: 1448
      }
    },
    "map-bunker-hydra-chamber-floor-03.img": {
      frame: {
        x: 2,
        y: 1454,
        w: 704,
        h: 798
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 32,
        w: 704,
        h: 798
      },
      sourceSize: {
        w: 704,
        h: 832
      }
    },
    "map-bunker-chrys-compartment-floor-01c.img": {
      frame: {
        x: 710,
        y: 1454,
        w: 800,
        h: 772
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 800,
        h: 772
      },
      sourceSize: {
        w: 804,
        h: 804
      }
    },
    "map-bunker-hydra-chamber-floor-02.img": {
      frame: {
        x: 1514,
        y: 1454,
        w: 336,
        h: 740
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 44,
        y: 0,
        w: 336,
        h: 740
      },
      sourceSize: {
        w: 392,
        h: 744
      }
    },
    "map-bunker-hydra-chamber-floor-01b.img": {
      frame: {
        x: 2472,
        y: 2,
        w: 706,
        h: 738
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 706,
        h: 738
      },
      sourceSize: {
        w: 706,
        h: 738
      }
    },
    "map-bunker-hydra-compartment-ceiling-02.img": {
      frame: {
        x: 2,
        y: 2256,
        w: 736,
        h: 656
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 736,
        h: 656
      },
      sourceSize: {
        w: 816,
        h: 720
      }
    },
    "map-building-greenhouse-floor-02.img": {
      frame: {
        x: 742,
        y: 2256,
        w: 832,
        h: 642
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 0,
        w: 832,
        h: 642
      },
      sourceSize: {
        w: 834,
        h: 642
      }
    },
    "map-bunker-hydra-compartment-floor-01.img": {
      frame: {
        x: 2472,
        y: 744,
        w: 704,
        h: 640
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 704,
        h: 640
      },
      sourceSize: {
        w: 704,
        h: 640
      }
    },
    "map-bunker-chrys-compartment-floor-02a.img": {
      frame: {
        x: 1578,
        y: 2256,
        w: 768,
        h: 628
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 768,
        h: 628
      },
      sourceSize: {
        w: 772,
        h: 628
      }
    },
    "map-bunker-chrys-chamber-floor-01b.img": {
      frame: {
        x: 2,
        y: 2916,
        w: 930,
        h: 626
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 930,
        h: 626
      },
      sourceSize: {
        w: 932,
        h: 628
      }
    },
    "map-building-greenhouse-ceiling-02.img": {
      frame: {
        x: 2472,
        y: 1388,
        w: 400,
        h: 624
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 400,
        h: 624
      },
      sourceSize: {
        w: 400,
        h: 624
      }
    },
    "map-bunker-hydra-floor-01.img": {
      frame: {
        x: 936,
        y: 2916,
        w: 864,
        h: 608
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 864,
        h: 608
      },
      sourceSize: {
        w: 864,
        h: 608
      }
    },
    "map-bunker-chrys-compartment-floor-01a.img": {
      frame: {
        x: 2876,
        y: 1388,
        w: 228,
        h: 608
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 34,
        w: 228,
        h: 608
      },
      sourceSize: {
        w: 228,
        h: 644
      }
    },
    "map-complex-warehouse-floor-02.img": {
      frame: {
        x: 3108,
        y: 1388,
        w: 60,
        h: 528
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 60,
        h: 528
      },
      sourceSize: {
        w: 60,
        h: 528
      }
    },
    "map-bunker-hydra-compartment-floor-03.img": {
      frame: {
        x: 1701,
        y: 869,
        w: 703,
        h: 507
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 703,
        h: 507
      },
      sourceSize: {
        w: 704,
        h: 512
      }
    },
    "map-bunker-chrys-compartment-ceiling-01b.img": {
      frame: {
        x: 1854,
        y: 1454,
        w: 354,
        h: 368
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 2,
        w: 354,
        h: 368
      },
      sourceSize: {
        w: 356,
        h: 372
      }
    },
    "map-bunker-hydra-compartment-ceiling-01.img": {
      frame: {
        x: 1854,
        y: 1826,
        w: 320,
        h: 360
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 320,
        h: 360
      },
      sourceSize: {
        w: 320,
        h: 360
      }
    },
    "map-bunker-hydra-chamber-ceiling-02.img": {
      frame: {
        x: 2212,
        y: 1454,
        w: 192,
        h: 350
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 192,
        h: 350
      },
      sourceSize: {
        w: 192,
        h: 350
      }
    },
    "map-bunker-hydra-chamber-ceiling-01.img": {
      frame: {
        x: 2350,
        y: 2256,
        w: 320,
        h: 344
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 320,
        h: 344
      },
      sourceSize: {
        w: 432,
        h: 352
      }
    },
    "map-bunker-chrys-compartment-ceiling-03b.img": {
      frame: {
        x: 2674,
        y: 2256,
        w: 352,
        h: 306
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 352,
        h: 306
      },
      sourceSize: {
        w: 356,
        h: 308
      }
    },
    "map-bunker-hydra-ceiling-01.img": {
      frame: {
        x: 1804,
        y: 2916,
        w: 432,
        h: 304
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 432,
        h: 304
      },
      sourceSize: {
        w: 432,
        h: 304
      }
    },
    "map-bunker-chrys-chamber-ceiling-01.img": {
      frame: {
        x: 2350,
        y: 2604,
        w: 448,
        h: 272
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 448,
        h: 272
      },
      sourceSize: {
        w: 448,
        h: 272
      }
    },
    "map-bunker-hydra-chamber-ceiling-03.img": {
      frame: {
        x: 2240,
        y: 2916,
        w: 400,
        h: 272
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 400,
        h: 272
      },
      sourceSize: {
        w: 400,
        h: 272
      }
    },
    "map-stone-03x.img": {
      frame: {
        x: 2178,
        y: 1826,
        w: 276,
        h: 272
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 8,
        w: 276,
        h: 272
      },
      sourceSize: {
        w: 288,
        h: 288
      }
    },
    "map-planter-06.img": {
      frame: {
        x: 3030,
        y: 2256,
        w: 144,
        h: 272
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 272
      },
      sourceSize: {
        w: 144,
        h: 272
      }
    },
    "map-bunker-hydra-compartment-ceiling-03.img": {
      frame: {
        x: 2802,
        y: 2604,
        w: 320,
        h: 270
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 320,
        h: 270
      },
      sourceSize: {
        w: 320,
        h: 270
      }
    },
    "map-bunker-chrys-compartment-ceiling-02b.img": {
      frame: {
        x: 2644,
        y: 2916,
        w: 352,
        h: 258
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 352,
        h: 258
      },
      sourceSize: {
        w: 356,
        h: 260
      }
    },
    "map-tree-10.img": {
      frame: {
        x: 1804,
        y: 3224,
        w: 254,
        h: 254
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 254,
        h: 254
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-tree-11.img": {
      frame: {
        x: 2062,
        y: 3224,
        w: 250,
        h: 248
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 4,
        w: 250,
        h: 248
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-chute-01x.img": {
      frame: {
        x: 2472,
        y: 2016,
        w: 232,
        h: 232
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 12,
        w: 232,
        h: 232
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-bunker-generic-floor-03.img": {
      frame: {
        x: 2708,
        y: 2016,
        w: 160,
        h: 230
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 230
      },
      sourceSize: {
        w: 160,
        h: 230
      }
    },
    "map-snowball-res.img": {
      frame: {
        x: 3622,
        y: 1008,
        w: 69,
        h: 69
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 15,
        y: 13,
        w: 69,
        h: 69
      },
      sourceSize: {
        w: 96,
        h: 96
      }
    },
    "map-complex-warehouse-floor-03.img": {
      frame: {
        x: 3036,
        y: 2016,
        w: 60,
        h: 224
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 60,
        h: 224
      },
      sourceSize: {
        w: 60,
        h: 224
      }
    },
    "map-complex-warehouse-floor-01.img": {
      frame: {
        x: 3100,
        y: 2016,
        w: 60,
        h: 224
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 60,
        h: 224
      },
      sourceSize: {
        w: 60,
        h: 224
      }
    },
    "map-snow-02.img": {
      frame: {
        x: 2316,
        y: 3224,
        w: 208,
        h: 208
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 24,
        y: 24,
        w: 208,
        h: 208
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-stone-res-02x.img": {
      frame: {
        x: 2528,
        y: 3224,
        w: 200,
        h: 200
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 200,
        h: 200
      },
      sourceSize: {
        w: 200,
        h: 200
      }
    },
    "map-bunker-hydra-floor-04.img": {
      frame: {
        x: 2732,
        y: 3224,
        w: 200,
        h: 200
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 200,
        h: 200
      },
      sourceSize: {
        w: 200,
        h: 200
      }
    },
    "map-bunker-hydra-chamber-floor-01a.img": {
      frame: {
        x: 2936,
        y: 3224,
        w: 193,
        h: 194
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 193,
        h: 194
      },
      sourceSize: {
        w: 194,
        h: 194
      }
    },
    "map-bunker-chrys-compartment-ceiling-01a.img": {
      frame: {
        x: 3000,
        y: 2916,
        w: 112,
        h: 192
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 112,
        h: 192
      },
      sourceSize: {
        w: 112,
        h: 192
      }
    },
    "map-bunker-chrys-compartment-floor-02c.img": {
      frame: {
        x: 3182,
        y: 2,
        w: 512,
        h: 180
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 18,
        y: 0,
        w: 512,
        h: 180
      },
      sourceSize: {
        w: 548,
        h: 180
      }
    },
    "map-snow-03.img": {
      frame: {
        x: 3182,
        y: 186,
        w: 312,
        h: 176
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 24,
        y: 8,
        w: 312,
        h: 176
      },
      sourceSize: {
        w: 360,
        h: 192
      }
    },
    "map-snow-01.img": {
      frame: {
        x: 3182,
        y: 366,
        w: 212,
        h: 173
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 22,
        y: 41,
        w: 212,
        h: 173
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-table-02x.img": {
      frame: {
        x: 3398,
        y: 366,
        w: 288,
        h: 160
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 288,
        h: 160
      },
      sourceSize: {
        w: 288,
        h: 160
      }
    },
    "map-airdrop-01x.img": {
      frame: {
        x: 3498,
        y: 186,
        w: 160,
        h: 160
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 160
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "map-table-03x.img": {
      frame: {
        x: 3182,
        y: 543,
        w: 160,
        h: 160
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 160
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "map-airdrop-02x.img": {
      frame: {
        x: 3346,
        y: 543,
        w: 160,
        h: 160
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 160
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "map-crate-01x.img": {
      frame: {
        x: 3510,
        y: 543,
        w: 152,
        h: 152
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 152,
        h: 152
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "map-stone-01x.img": {
      frame: {
        x: 3182,
        y: 707,
        w: 151,
        h: 149
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 2,
        w: 151,
        h: 149
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "map-bunker-chrys-chamber-floor-01a.img": {
      frame: {
        x: 3337,
        y: 707,
        w: 160,
        h: 148
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 34,
        y: 32,
        w: 160,
        h: 148
      },
      sourceSize: {
        w: 228,
        h: 180
      }
    },
    "map-crate-03x.img": {
      frame: {
        x: 3501,
        y: 707,
        w: 148,
        h: 148
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 148,
        h: 148
      },
      sourceSize: {
        w: 148,
        h: 148
      }
    },
    "map-crate-02x.img": {
      frame: {
        x: 3182,
        y: 860,
        w: 144,
        h: 144
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 144
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-planter-res-02.img": {
      frame: {
        x: 3330,
        y: 860,
        w: 76,
        h: 134
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 1,
        w: 76,
        h: 134
      },
      sourceSize: {
        w: 86,
        h: 136
      }
    },
    "map-bush-01x.img": {
      frame: {
        x: 3410,
        y: 860,
        w: 126,
        h: 130
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 7,
        w: 126,
        h: 130
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-table-01x.img": {
      frame: {
        x: 3182,
        y: 1008,
        w: 160,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 128
      },
      sourceSize: {
        w: 160,
        h: 128
      }
    },
    "map-stone-res-01x.img": {
      frame: {
        x: 3540,
        y: 860,
        w: 118,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 118,
        h: 118
      },
      sourceSize: {
        w: 120,
        h: 120
      }
    },
    "map-snow-06.img": {
      frame: {
        x: 3346,
        y: 1008,
        w: 178,
        h: 112
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 8,
        w: 178,
        h: 112
      },
      sourceSize: {
        w: 192,
        h: 128
      }
    },
    "map-snow-05.img": {
      frame: {
        x: 3528,
        y: 1008,
        w: 90,
        h: 104
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 19,
        y: 12,
        w: 90,
        h: 104
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-chest-03x.img": {
      frame: {
        x: 3182,
        y: 1140,
        w: 140,
        h: 102
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 140,
        h: 102
      },
      sourceSize: {
        w: 140,
        h: 102
      }
    },
    "map-planter-07.img": {
      frame: {
        x: 3326,
        y: 1140,
        w: 100,
        h: 100
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 100,
        h: 100
      },
      sourceSize: {
        w: 100,
        h: 100
      }
    },
    "map-snow-04.img": {
      frame: {
        x: 3430,
        y: 1140,
        w: 100,
        h: 98
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 14,
        y: 15,
        w: 100,
        h: 98
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-bunker-chrys-compartment-ceiling-02a.img": {
      frame: {
        x: 3182,
        y: 1246,
        w: 224,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 224,
        h: 96
      },
      sourceSize: {
        w: 224,
        h: 96
      }
    },
    "map-bunker-chrys-compartment-ceiling-03a.img": {
      frame: {
        x: 3410,
        y: 1246,
        w: 224,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 224,
        h: 96
      },
      sourceSize: {
        w: 224,
        h: 96
      }
    },
    "map-planter-res-03.img": {
      frame: {
        x: 3534,
        y: 1140,
        w: 82,
        h: 74
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 6,
        w: 82,
        h: 74
      },
      sourceSize: {
        w: 86,
        h: 86
      }
    },
    "map-bunker-generic-ceiling-02.img": {
      frame: {
        x: 2872,
        y: 2016,
        w: 160,
        h: 230
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 230
      },
      sourceSize: {
        w: 160,
        h: 230
      }
    }
  }
}];
const Os = [{
  meta: {
    image: "faction-0-100-99af9e64.png",
    size: {
      w: 4096,
      h: 4096
    },
    scale: 1
  },
  frames: {
    "map-building-bridge-xlg-floor.img": {
      frame: {
        x: 1302,
        y: 2,
        w: 2464,
        h: 960
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 2464,
        h: 960
      },
      sourceSize: {
        w: 2464,
        h: 960
      }
    },
    "map-complex-warehouse-floor-04.img": {
      frame: {
        x: 2,
        y: 2,
        w: 1296,
        h: 2048
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 1296,
        h: 2048
      },
      sourceSize: {
        w: 1296,
        h: 2048
      }
    },
    "map-bunker-chrys-compartment-floor-03a.img": {
      frame: {
        x: 1302,
        y: 966,
        w: 767,
        h: 863
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 767,
        h: 863
      },
      sourceSize: {
        w: 768,
        h: 864
      }
    },
    "map-bunker-chrys-compartment-floor-01b.img": {
      frame: {
        x: 2073,
        y: 966,
        w: 800,
        h: 772
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 800,
        h: 772
      },
      sourceSize: {
        w: 804,
        h: 804
      }
    },
    "map-building-greenhouse-floor-01.img": {
      frame: {
        x: 2877,
        y: 966,
        w: 832,
        h: 641
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 0,
        w: 832,
        h: 641
      },
      sourceSize: {
        w: 834,
        h: 642
      }
    },
    "map-bunker-chrys-compartment-floor-02a.img": {
      frame: {
        x: 2,
        y: 2054,
        w: 768,
        h: 628
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 768,
        h: 628
      },
      sourceSize: {
        w: 772,
        h: 628
      }
    },
    "map-bunker-chrys-chamber-floor-01b.img": {
      frame: {
        x: 774,
        y: 2054,
        w: 930,
        h: 626
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 930,
        h: 626
      },
      sourceSize: {
        w: 932,
        h: 628
      }
    },
    "map-bunker-chrys-compartment-floor-01a.img": {
      frame: {
        x: 1708,
        y: 2054,
        w: 228,
        h: 608
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 34,
        w: 228,
        h: 608
      },
      sourceSize: {
        w: 228,
        h: 644
      }
    },
    "map-complex-warehouse-floor-02.img": {
      frame: {
        x: 1940,
        y: 2054,
        w: 60,
        h: 528
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 60,
        h: 528
      },
      sourceSize: {
        w: 60,
        h: 528
      }
    },
    "map-bunker-chrys-compartment-ceiling-01b.img": {
      frame: {
        x: 2004,
        y: 2054,
        w: 354,
        h: 368
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 2,
        w: 354,
        h: 368
      },
      sourceSize: {
        w: 356,
        h: 372
      }
    },
    "map-building-greenhouse-ceiling-01.img": {
      frame: {
        x: 2362,
        y: 2054,
        w: 400,
        h: 314
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 400,
        h: 314
      },
      sourceSize: {
        w: 404,
        h: 316
      }
    },
    "map-bunker-chrys-compartment-ceiling-03b.img": {
      frame: {
        x: 2766,
        y: 2054,
        w: 352,
        h: 306
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 352,
        h: 306
      },
      sourceSize: {
        w: 356,
        h: 308
      }
    },
    "map-statue-01.img": {
      frame: {
        x: 3122,
        y: 2054,
        w: 282,
        h: 282
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 67,
        y: 67,
        w: 282,
        h: 282
      },
      sourceSize: {
        w: 416,
        h: 416
      }
    },
    "map-bunker-chrys-chamber-ceiling-01.img": {
      frame: {
        x: 2,
        y: 2686,
        w: 448,
        h: 272
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 448,
        h: 272
      },
      sourceSize: {
        w: 448,
        h: 272
      }
    },
    "map-stone-03f.img": {
      frame: {
        x: 3408,
        y: 2054,
        w: 276,
        h: 272
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 8,
        w: 276,
        h: 272
      },
      sourceSize: {
        w: 288,
        h: 288
      }
    },
    "map-planter-03.img": {
      frame: {
        x: 454,
        y: 2686,
        w: 144,
        h: 272
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 272
      },
      sourceSize: {
        w: 144,
        h: 272
      }
    },
    "map-planter-01.img": {
      frame: {
        x: 602,
        y: 2686,
        w: 144,
        h: 272
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 272
      },
      sourceSize: {
        w: 144,
        h: 272
      }
    },
    "map-planter-02.img": {
      frame: {
        x: 750,
        y: 2686,
        w: 144,
        h: 272
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 272
      },
      sourceSize: {
        w: 144,
        h: 272
      }
    },
    "map-bunker-chrys-compartment-ceiling-02b.img": {
      frame: {
        x: 898,
        y: 2686,
        w: 352,
        h: 258
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 352,
        h: 258
      },
      sourceSize: {
        w: 356,
        h: 260
      }
    },
    "map-airdrop-04.img": {
      frame: {
        x: 1254,
        y: 2686,
        w: 256,
        h: 256
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 256,
        h: 256
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-bunker-chrys-compartment-ceiling-03a.img": {
      frame: {
        x: 3457,
        y: 1611,
        w: 224,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 224,
        h: 96
      },
      sourceSize: {
        w: 224,
        h: 96
      }
    },
    "map-crate-13.img": {
      frame: {
        x: 1774,
        y: 2686,
        w: 240,
        h: 240
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 240,
        h: 240
      },
      sourceSize: {
        w: 240,
        h: 240
      }
    },
    "map-crate-12.img": {
      frame: {
        x: 2018,
        y: 2686,
        w: 240,
        h: 240
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 240,
        h: 240
      },
      sourceSize: {
        w: 240,
        h: 240
      }
    },
    "map-bunker-generic-ceiling-02.img": {
      frame: {
        x: 2262,
        y: 2686,
        w: 160,
        h: 230
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 230
      },
      sourceSize: {
        w: 160,
        h: 230
      }
    },
    "map-bunker-generic-floor-03.img": {
      frame: {
        x: 2426,
        y: 2686,
        w: 160,
        h: 230
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 230
      },
      sourceSize: {
        w: 160,
        h: 230
      }
    },
    "map-complex-warehouse-floor-03.img": {
      frame: {
        x: 3688,
        y: 2054,
        w: 60,
        h: 224
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 60,
        h: 224
      },
      sourceSize: {
        w: 60,
        h: 224
      }
    },
    "map-complex-warehouse-floor-01.img": {
      frame: {
        x: 2590,
        y: 2686,
        w: 60,
        h: 224
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 60,
        h: 224
      },
      sourceSize: {
        w: 60,
        h: 224
      }
    },
    "map-stone-res-02f.img": {
      frame: {
        x: 1302,
        y: 1833,
        w: 200,
        h: 200
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 200,
        h: 200
      },
      sourceSize: {
        w: 200,
        h: 200
      }
    },
    "map-bunker-chrys-compartment-ceiling-01a.img": {
      frame: {
        x: 1506,
        y: 1833,
        w: 112,
        h: 192
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 112,
        h: 192
      },
      sourceSize: {
        w: 112,
        h: 192
      }
    },
    "map-bunker-chrys-compartment-floor-02b.img": {
      frame: {
        x: 1622,
        y: 1833,
        w: 512,
        h: 180
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 18,
        y: 0,
        w: 512,
        h: 180
      },
      sourceSize: {
        w: 548,
        h: 180
      }
    },
    "map-bunker-chrys-chamber-floor-01a.img": {
      frame: {
        x: 2138,
        y: 1833,
        w: 160,
        h: 148
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 34,
        y: 32,
        w: 160,
        h: 148
      },
      sourceSize: {
        w: 228,
        h: 180
      }
    },
    "map-crate-02f.img": {
      frame: {
        x: 2302,
        y: 1833,
        w: 144,
        h: 144
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 144
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-crate-22.img": {
      frame: {
        x: 2450,
        y: 1833,
        w: 144,
        h: 144
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 144
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-statue-top-02.img": {
      frame: {
        x: 2598,
        y: 1833,
        w: 279,
        h: 142
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 131,
        y: 133,
        w: 279,
        h: 142
      },
      sourceSize: {
        w: 416,
        h: 416
      }
    },
    "map-statue-top-01.img": {
      frame: {
        x: 2881,
        y: 1833,
        w: 279,
        h: 142
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 131,
        y: 133,
        w: 279,
        h: 142
      },
      sourceSize: {
        w: 416,
        h: 416
      }
    },
    "map-planter-res-01.img": {
      frame: {
        x: 3164,
        y: 1833,
        w: 76,
        h: 134
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 1,
        w: 76,
        h: 134
      },
      sourceSize: {
        w: 86,
        h: 136
      }
    },
    "map-chest-03f.img": {
      frame: {
        x: 2877,
        y: 1611,
        w: 140,
        h: 102
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 140,
        h: 102
      },
      sourceSize: {
        w: 140,
        h: 102
      }
    },
    "map-planter-04.img": {
      frame: {
        x: 3021,
        y: 1611,
        w: 100,
        h: 100
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 100,
        h: 100
      },
      sourceSize: {
        w: 100,
        h: 100
      }
    },
    "map-planter-05.img": {
      frame: {
        x: 3125,
        y: 1611,
        w: 100,
        h: 100
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 100,
        h: 100
      },
      sourceSize: {
        w: 100,
        h: 100
      }
    },
    "map-bunker-chrys-compartment-ceiling-02a.img": {
      frame: {
        x: 3229,
        y: 1611,
        w: 224,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 224,
        h: 96
      },
      sourceSize: {
        w: 224,
        h: 96
      }
    },
    "map-airdrop-03.img": {
      frame: {
        x: 1514,
        y: 2686,
        w: 256,
        h: 256
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 256,
        h: 256
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    }
  }
}];
const Bs = [{
  meta: {
    image: "desert-0-100-9f8523dd.png",
    size: {
      w: 4096,
      h: 4096
    },
    scale: 1
  },
  frames: {
    "map-complex-warehouse-floor-05.img": {
      frame: {
        x: 1318,
        y: 2,
        w: 522,
        h: 932
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1008,
        w: 522,
        h: 932
      },
      sourceSize: {
        w: 1296,
        h: 2048
      }
    },
    "map-building-saloon-floor-01.img": {
      frame: {
        x: 2,
        y: 2,
        w: 1312,
        h: 1312
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 1312,
        h: 1312
      },
      sourceSize: {
        w: 1312,
        h: 1312
      }
    },
    "map-bunker-chrys-compartment-floor-03a.img": {
      frame: {
        x: 1844,
        y: 2,
        w: 767,
        h: 863
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 767,
        h: 863
      },
      sourceSize: {
        w: 768,
        h: 864
      }
    },
    "map-bunker-chrys-compartment-floor-01c.img": {
      frame: {
        x: 2,
        y: 1318,
        w: 800,
        h: 772
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 800,
        h: 772
      },
      sourceSize: {
        w: 804,
        h: 804
      }
    },
    "map-building-saloon-cellar-01.img": {
      frame: {
        x: 806,
        y: 1318,
        w: 1056,
        h: 672
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 1056,
        h: 672
      },
      sourceSize: {
        w: 1056,
        h: 672
      }
    },
    "map-building-greenhouse-floor-02.img": {
      frame: {
        x: 2615,
        y: 2,
        w: 832,
        h: 642
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 0,
        w: 832,
        h: 642
      },
      sourceSize: {
        w: 834,
        h: 642
      }
    },
    "map-bunker-chrys-compartment-floor-02a.img": {
      frame: {
        x: 2615,
        y: 648,
        w: 768,
        h: 628
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 768,
        h: 628
      },
      sourceSize: {
        w: 772,
        h: 628
      }
    },
    "map-bunker-chrys-chamber-floor-01b.img": {
      frame: {
        x: 2,
        y: 2094,
        w: 930,
        h: 626
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 930,
        h: 626
      },
      sourceSize: {
        w: 932,
        h: 628
      }
    },
    "map-building-saloon-ceiling-01.img": {
      frame: {
        x: 2615,
        y: 1280,
        w: 625,
        h: 624
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 625,
        h: 624
      },
      sourceSize: {
        w: 656,
        h: 656
      }
    },
    "map-building-greenhouse-ceiling-02.img": {
      frame: {
        x: 1866,
        y: 1318,
        w: 400,
        h: 624
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 400,
        h: 624
      },
      sourceSize: {
        w: 400,
        h: 624
      }
    },
    "map-bunker-chrys-compartment-floor-01a.img": {
      frame: {
        x: 2270,
        y: 1318,
        w: 228,
        h: 608
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 34,
        w: 228,
        h: 608
      },
      sourceSize: {
        w: 228,
        h: 644
      }
    },
    "map-bunker-statue-chamber-floor-01.img": {
      frame: {
        x: 936,
        y: 2094,
        w: 250,
        h: 541
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 32,
        w: 250,
        h: 541
      },
      sourceSize: {
        w: 256,
        h: 576
      }
    },
    "map-tree-05c.img": {
      frame: {
        x: 1190,
        y: 2094,
        w: 470,
        h: 492
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 21,
        y: 10,
        w: 470,
        h: 492
      },
      sourceSize: {
        w: 512,
        h: 512
      }
    },
    "map-bunker-chrys-compartment-ceiling-01b.img": {
      frame: {
        x: 1844,
        y: 869,
        w: 354,
        h: 368
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 2,
        w: 354,
        h: 368
      },
      sourceSize: {
        w: 356,
        h: 372
      }
    },
    "map-bunker-chrys-compartment-ceiling-03b.img": {
      frame: {
        x: 2202,
        y: 869,
        w: 352,
        h: 306
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 352,
        h: 306
      },
      sourceSize: {
        w: 356,
        h: 308
      }
    },
    "map-statue-03.img": {
      frame: {
        x: 1318,
        y: 938,
        w: 288,
        h: 282
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 67,
        y: 67,
        w: 288,
        h: 282
      },
      sourceSize: {
        w: 416,
        h: 416
      }
    },
    "map-statue-04.img": {
      frame: {
        x: 1664,
        y: 2094,
        w: 288,
        h: 282
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 67,
        y: 67,
        w: 288,
        h: 282
      },
      sourceSize: {
        w: 416,
        h: 416
      }
    },
    "map-bunker-chrys-chamber-ceiling-01.img": {
      frame: {
        x: 1956,
        y: 2094,
        w: 448,
        h: 272
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 448,
        h: 272
      },
      sourceSize: {
        w: 448,
        h: 272
      }
    },
    "map-stone-03b.img": {
      frame: {
        x: 2408,
        y: 2094,
        w: 276,
        h: 272
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 8,
        w: 276,
        h: 272
      },
      sourceSize: {
        w: 288,
        h: 288
      }
    },
    "map-planter-06.img": {
      frame: {
        x: 3244,
        y: 1280,
        w: 144,
        h: 272
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 272
      },
      sourceSize: {
        w: 144,
        h: 272
      }
    },
    "map-bunker-chrys-compartment-ceiling-02b.img": {
      frame: {
        x: 2688,
        y: 2094,
        w: 352,
        h: 258
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 352,
        h: 258
      },
      sourceSize: {
        w: 356,
        h: 260
      }
    },
    "map-tree-06.img": {
      frame: {
        x: 3044,
        y: 2094,
        w: 256,
        h: 256
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 256,
        h: 256
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-bush-res-05.img": {
      frame: {
        x: 3387,
        y: 648,
        w: 56,
        h: 50
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 44,
        y: 47,
        w: 56,
        h: 50
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-bunker-generic-floor-03.img": {
      frame: {
        x: 1610,
        y: 938,
        w: 160,
        h: 230
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 230
      },
      sourceSize: {
        w: 160,
        h: 230
      }
    },
    "map-bunker-chrys-compartment-ceiling-01a.img": {
      frame: {
        x: 3304,
        y: 2094,
        w: 112,
        h: 192
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 112,
        h: 192
      },
      sourceSize: {
        w: 112,
        h: 192
      }
    },
    "map-bunker-chrys-compartment-floor-02c.img": {
      frame: {
        x: 2615,
        y: 1908,
        w: 512,
        h: 180
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 18,
        y: 0,
        w: 512,
        h: 180
      },
      sourceSize: {
        w: 548,
        h: 180
      }
    },
    "map-building-saloon-ceiling-02.img": {
      frame: {
        x: 3131,
        y: 1908,
        w: 192,
        h: 160
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 192,
        h: 160
      },
      sourceSize: {
        w: 192,
        h: 160
      }
    },
    "map-bunker-chrys-chamber-floor-01a.img": {
      frame: {
        x: 1664,
        y: 2380,
        w: 160,
        h: 148
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 34,
        y: 32,
        w: 160,
        h: 148
      },
      sourceSize: {
        w: 228,
        h: 180
      }
    },
    "map-crate-22.img": {
      frame: {
        x: 1828,
        y: 2380,
        w: 144,
        h: 144
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 144
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-crate-02f.img": {
      frame: {
        x: 1976,
        y: 2380,
        w: 144,
        h: 144
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 144
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-crate-18.img": {
      frame: {
        x: 2124,
        y: 2380,
        w: 144,
        h: 144
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 144
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-bush-05.img": {
      frame: {
        x: 2272,
        y: 2380,
        w: 140,
        h: 139
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 140,
        h: 139
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-planter-res-02.img": {
      frame: {
        x: 3327,
        y: 1908,
        w: 76,
        h: 134
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 1,
        w: 76,
        h: 134
      },
      sourceSize: {
        w: 86,
        h: 136
      }
    },
    "map-building-archway-ceiling-01.img": {
      frame: {
        x: 2416,
        y: 2380,
        w: 672,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 672,
        h: 128
      },
      sourceSize: {
        w: 672,
        h: 128
      }
    },
    "map-stone-06.img": {
      frame: {
        x: 3092,
        y: 2380,
        w: 288,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 288,
        h: 128
      },
      sourceSize: {
        w: 288,
        h: 128
      }
    },
    "map-stone-res-01b.img": {
      frame: {
        x: 2,
        y: 2724,
        w: 118,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 118,
        h: 118
      },
      sourceSize: {
        w: 120,
        h: 120
      }
    },
    "map-case-meteor-res-01.img": {
      frame: {
        x: 124,
        y: 2724,
        w: 128,
        h: 115
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 13,
        y: 10,
        w: 128,
        h: 115
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-chest-03d.img": {
      frame: {
        x: 3244,
        y: 1790,
        w: 140,
        h: 102
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 140,
        h: 102
      },
      sourceSize: {
        w: 140,
        h: 102
      }
    },
    "map-case-meteor-01.img": {
      frame: {
        x: 256,
        y: 2724,
        w: 140,
        h: 102
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 140,
        h: 102
      },
      sourceSize: {
        w: 140,
        h: 102
      }
    },
    "map-planter-07.img": {
      frame: {
        x: 2502,
        y: 1318,
        w: 100,
        h: 100
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 100,
        h: 100
      },
      sourceSize: {
        w: 100,
        h: 100
      }
    },
    "map-bunker-chrys-compartment-ceiling-02a.img": {
      frame: {
        x: 806,
        y: 1994,
        w: 224,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 224,
        h: 96
      },
      sourceSize: {
        w: 224,
        h: 96
      }
    },
    "map-bunker-chrys-compartment-ceiling-03a.img": {
      frame: {
        x: 1034,
        y: 1994,
        w: 224,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 224,
        h: 96
      },
      sourceSize: {
        w: 224,
        h: 96
      }
    },
    "map-archway-res-01.img": {
      frame: {
        x: 1318,
        y: 1224,
        w: 359,
        h: 90
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 2,
        w: 359,
        h: 90
      },
      sourceSize: {
        w: 360,
        h: 96
      }
    },
    "map-planter-res-03.img": {
      frame: {
        x: 1681,
        y: 1224,
        w: 82,
        h: 74
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 6,
        w: 82,
        h: 74
      },
      sourceSize: {
        w: 86,
        h: 86
      }
    },
    "map-bunker-generic-ceiling-02.img": {
      frame: {
        x: 3244,
        y: 1556,
        w: 160,
        h: 230
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 230
      },
      sourceSize: {
        w: 160,
        h: 230
      }
    }
  }
}];
const qs = [{
  meta: {
    image: "gradient-0-100-51ab76b6.png",
    size: {
      w: 1024,
      h: 1024
    },
    scale: 1
  },
  frames: {
    "map-barrel-res-01.img": {
      frame: {
        x: 238,
        y: 2,
        w: 226,
        h: 216
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 15,
        y: 21,
        w: 226,
        h: 216
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-building-club-gradient-01.img": {
      frame: {
        x: 2,
        y: 2,
        w: 232,
        h: 256
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 34,
        y: 10,
        w: 232,
        h: 256
      },
      sourceSize: {
        w: 292,
        h: 280
      }
    },
    "map-building-mansion-gradient-01.img": {
      frame: {
        x: 2,
        y: 262,
        w: 232,
        h: 202
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 9,
        w: 232,
        h: 202
      },
      sourceSize: {
        w: 248,
        h: 220
      }
    },
    "map-plane-01.img": {
      frame: {
        x: 238,
        y: 262,
        w: 180,
        h: 201
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 38,
        y: 11,
        w: 180,
        h: 201
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-plane-02.img": {
      frame: {
        x: 468,
        y: 2,
        w: 84,
        h: 169
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 86,
        y: 2,
        w: 84,
        h: 169
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-bush-04cb.img": {
      frame: {
        x: 272,
        y: 468,
        w: 136,
        h: 128
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 11,
        w: 136,
        h: 128
      },
      sourceSize: {
        w: 150,
        h: 150
      }
    },
    "map-bush-01cb.img": {
      frame: {
        x: 556,
        y: 158,
        w: 142,
        h: 142
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 142,
        h: 142
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-light-01.img": {
      frame: {
        x: 556,
        y: 304,
        w: 140,
        h: 140
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 140,
        h: 140
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-bush-04.img": {
      frame: {
        x: 2,
        y: 468,
        w: 136,
        h: 130
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 9,
        w: 136,
        h: 130
      },
      sourceSize: {
        w: 150,
        h: 150
      }
    },
    "map-bush-01.img": {
      frame: {
        x: 142,
        y: 468,
        w: 126,
        h: 130
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 7,
        w: 126,
        h: 130
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-bush-03.img": {
      frame: {
        x: 556,
        y: 2,
        w: 148,
        h: 152
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 148,
        h: 152
      },
      sourceSize: {
        w: 152,
        h: 152
      }
    }
  }
}];
const js = [{
  meta: {
    image: "savannah-0-100-35753cd3.png",
    size: {
      w: 2048,
      h: 2048
    },
    scale: 1
  },
  frames: {
    "map-tree-12.img": {
      frame: {
        x: 66,
        y: 2,
        w: 508,
        h: 508
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 508,
        h: 508
      },
      sourceSize: {
        w: 512,
        h: 512
      }
    },
    "map-complex-warehouse-floor-02.img": {
      frame: {
        x: 2,
        y: 2,
        w: 60,
        h: 528
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 60,
        h: 528
      },
      sourceSize: {
        w: 60,
        h: 528
      }
    },
    "map-stone-07.img": {
      frame: {
        x: 578,
        y: 2,
        w: 504,
        h: 506
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 3,
        w: 504,
        h: 506
      },
      sourceSize: {
        w: 512,
        h: 512
      }
    },
    "map-stone-res-07.img": {
      frame: {
        x: 2,
        y: 534,
        w: 410,
        h: 412
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 4,
        w: 410,
        h: 412
      },
      sourceSize: {
        w: 420,
        h: 420
      }
    },
    "map-building-perch-ceiling.img": {
      frame: {
        x: 416,
        y: 534,
        w: 363,
        h: 345
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 14,
        y: 23,
        w: 363,
        h: 345
      },
      sourceSize: {
        w: 400,
        h: 384
      }
    },
    "map-building-perch-floor.img": {
      frame: {
        x: 1086,
        y: 2,
        w: 400,
        h: 320
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 400,
        h: 320
      },
      sourceSize: {
        w: 400,
        h: 320
      }
    },
    "map-tree-03sv.img": {
      frame: {
        x: 1086,
        y: 326,
        w: 256,
        h: 256
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 256,
        h: 256
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-wall-08-grassy.img": {
      frame: {
        x: 1346,
        y: 326,
        w: 45,
        h: 256
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 0,
        w: 45,
        h: 256
      },
      sourceSize: {
        w: 64,
        h: 256
      }
    },
    "map-wall-08-grassy-res.img": {
      frame: {
        x: 1395,
        y: 326,
        w: 20,
        h: 252
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 22,
        y: 2,
        w: 20,
        h: 252
      },
      sourceSize: {
        w: 64,
        h: 256
      }
    },
    "map-bunker-generic-ceiling-02.img": {
      frame: {
        x: 1086,
        y: 586,
        w: 160,
        h: 230
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 230
      },
      sourceSize: {
        w: 160,
        h: 230
      }
    },
    "map-bunker-generic-floor-03.img": {
      frame: {
        x: 1250,
        y: 586,
        w: 160,
        h: 230
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 230
      },
      sourceSize: {
        w: 160,
        h: 230
      }
    },
    "map-complex-warehouse-floor-01.img": {
      frame: {
        x: 1419,
        y: 326,
        w: 60,
        h: 224
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 60,
        h: 224
      },
      sourceSize: {
        w: 60,
        h: 224
      }
    },
    "map-bush-res-01sv.img": {
      frame: {
        x: 1398,
        y: 820,
        w: 44,
        h: 34
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 50,
        y: 55,
        w: 44,
        h: 34
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-brush-01sv.img": {
      frame: {
        x: 783,
        y: 534,
        w: 186,
        h: 184
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 4,
        w: 186,
        h: 184
      },
      sourceSize: {
        w: 192,
        h: 192
      }
    },
    "map-brush-02sv.img": {
      frame: {
        x: 2,
        y: 950,
        w: 182,
        h: 182
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 5,
        w: 182,
        h: 182
      },
      sourceSize: {
        w: 192,
        h: 192
      }
    },
    "map-perch-res-01.img": {
      frame: {
        x: 783,
        y: 722,
        w: 176,
        h: 156
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 40,
        y: 50,
        w: 176,
        h: 156
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-crate-21.img": {
      frame: {
        x: 188,
        y: 950,
        w: 144,
        h: 144
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 144
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-bush-01sv.img": {
      frame: {
        x: 336,
        y: 950,
        w: 140,
        h: 140
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 140,
        h: 140
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-propane-01.img": {
      frame: {
        x: 1086,
        y: 820,
        w: 96,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 96,
        h: 96
      },
      sourceSize: {
        w: 96,
        h: 96
      }
    },
    "map-wall-03-grassy.img": {
      frame: {
        x: 1186,
        y: 820,
        w: 34,
        h: 96
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 15,
        y: 0,
        w: 34,
        h: 96
      },
      sourceSize: {
        w: 64,
        h: 96
      }
    },
    "map-wall-03-grassy-res.img": {
      frame: {
        x: 1224,
        y: 820,
        w: 21,
        h: 92
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 21,
        y: 2,
        w: 21,
        h: 92
      },
      sourceSize: {
        w: 64,
        h: 96
      }
    },
    "map-tree-res-12.img": {
      frame: {
        x: 1249,
        y: 820,
        w: 79,
        h: 70
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 13,
        w: 79,
        h: 70
      },
      sourceSize: {
        w: 96,
        h: 96
      }
    },
    "map-brush-res-02sv.img": {
      frame: {
        x: 1332,
        y: 820,
        w: 62,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 17,
        y: 17,
        w: 62,
        h: 62
      },
      sourceSize: {
        w: 96,
        h: 96
      }
    },
    "map-complex-warehouse-floor-03.img": {
      frame: {
        x: 1414,
        y: 586,
        w: 60,
        h: 224
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 60,
        h: 224
      },
      sourceSize: {
        w: 60,
        h: 224
      }
    }
  }
}];
const Fs = [{
  meta: {
    image: "main-0-100-075ad988.png",
    size: {
      w: 4096,
      h: 4096
    },
    scale: 1
  },
  frames: {
    "map-bunker-crossing-compartment-floor-01.img": {
      frame: {
        x: 1701,
        y: 2,
        w: 1504,
        h: 928
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 1504,
        h: 928
      },
      sourceSize: {
        w: 1504,
        h: 928
      }
    },
    "map-bunker-hydra-compartment-floor-02.img": {
      frame: {
        x: 2,
        y: 2,
        w: 1695,
        h: 1448
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 0,
        w: 1695,
        h: 1448
      },
      sourceSize: {
        w: 1704,
        h: 1448
      }
    },
    "map-bunker-chrys-compartment-floor-03a.img": {
      frame: {
        x: 2,
        y: 1454,
        w: 767,
        h: 863
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 767,
        h: 863
      },
      sourceSize: {
        w: 768,
        h: 864
      }
    },
    "map-bunker-hydra-chamber-floor-03.img": {
      frame: {
        x: 773,
        y: 1454,
        w: 704,
        h: 798
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 32,
        w: 704,
        h: 798
      },
      sourceSize: {
        w: 704,
        h: 832
      }
    },
    "map-bunker-chrys-compartment-floor-01b.img": {
      frame: {
        x: 1481,
        y: 1454,
        w: 800,
        h: 772
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 800,
        h: 772
      },
      sourceSize: {
        w: 804,
        h: 804
      }
    },
    "map-bunker-hydra-chamber-floor-02.img": {
      frame: {
        x: 2285,
        y: 1454,
        w: 336,
        h: 740
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 44,
        y: 0,
        w: 336,
        h: 740
      },
      sourceSize: {
        w: 392,
        h: 744
      }
    },
    "map-bunker-hydra-chamber-floor-01b.img": {
      frame: {
        x: 2,
        y: 2321,
        w: 706,
        h: 738
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 706,
        h: 738
      },
      sourceSize: {
        w: 706,
        h: 738
      }
    },
    "map-bunker-hydra-compartment-ceiling-02.img": {
      frame: {
        x: 712,
        y: 2321,
        w: 736,
        h: 656
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 736,
        h: 656
      },
      sourceSize: {
        w: 816,
        h: 720
      }
    },
    "map-building-greenhouse-floor-01.img": {
      frame: {
        x: 1452,
        y: 2321,
        w: 832,
        h: 641
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 0,
        w: 832,
        h: 641
      },
      sourceSize: {
        w: 834,
        h: 642
      }
    },
    "map-bunker-hydra-compartment-floor-01.img": {
      frame: {
        x: 2288,
        y: 2321,
        w: 704,
        h: 640
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 704,
        h: 640
      },
      sourceSize: {
        w: 704,
        h: 640
      }
    },
    "map-bunker-chrys-compartment-floor-02a.img": {
      frame: {
        x: 3209,
        y: 2,
        w: 768,
        h: 628
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 768,
        h: 628
      },
      sourceSize: {
        w: 772,
        h: 628
      }
    },
    "map-bunker-chrys-chamber-floor-01b.img": {
      frame: {
        x: 2,
        y: 3063,
        w: 930,
        h: 626
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 930,
        h: 626
      },
      sourceSize: {
        w: 932,
        h: 628
      }
    },
    "map-bunker-hydra-floor-01.img": {
      frame: {
        x: 936,
        y: 3063,
        w: 864,
        h: 608
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 864,
        h: 608
      },
      sourceSize: {
        w: 864,
        h: 608
      }
    },
    "map-bunker-crossing-compartment-floor-02.img": {
      frame: {
        x: 3209,
        y: 634,
        w: 318,
        h: 608
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 318,
        h: 608
      },
      sourceSize: {
        w: 320,
        h: 608
      }
    },
    "map-bunker-chrys-compartment-floor-01a.img": {
      frame: {
        x: 3531,
        y: 634,
        w: 228,
        h: 608
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 34,
        w: 228,
        h: 608
      },
      sourceSize: {
        w: 228,
        h: 644
      }
    },
    "map-complex-warehouse-floor-02.img": {
      frame: {
        x: 3763,
        y: 634,
        w: 60,
        h: 528
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 60,
        h: 528
      },
      sourceSize: {
        w: 60,
        h: 528
      }
    },
    "map-bunker-hydra-compartment-floor-03.img": {
      frame: {
        x: 3209,
        y: 1246,
        w: 703,
        h: 507
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 703,
        h: 507
      },
      sourceSize: {
        w: 704,
        h: 512
      }
    },
    "map-bunker-crossing-compartment-ceiling-01b.img": {
      frame: {
        x: 3209,
        y: 1757,
        w: 720,
        h: 496
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 720,
        h: 496
      },
      sourceSize: {
        w: 720,
        h: 496
      }
    },
    "map-bunker-chrys-compartment-ceiling-01b.img": {
      frame: {
        x: 3209,
        y: 2257,
        w: 354,
        h: 368
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 2,
        w: 354,
        h: 368
      },
      sourceSize: {
        w: 356,
        h: 372
      }
    },
    "map-bunker-hydra-compartment-ceiling-01.img": {
      frame: {
        x: 3567,
        y: 2257,
        w: 320,
        h: 360
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 320,
        h: 360
      },
      sourceSize: {
        w: 320,
        h: 360
      }
    },
    "map-bunker-crossing-chamber-floor-01a.img": {
      frame: {
        x: 1804,
        y: 3063,
        w: 1828,
        h: 352
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 1828,
        h: 352
      },
      sourceSize: {
        w: 1830,
        h: 354
      }
    },
    "map-bunker-hydra-chamber-ceiling-02.img": {
      frame: {
        x: 3209,
        y: 2629,
        w: 192,
        h: 350
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 192,
        h: 350
      },
      sourceSize: {
        w: 192,
        h: 350
      }
    },
    "map-bunker-hydra-chamber-ceiling-01.img": {
      frame: {
        x: 3405,
        y: 2629,
        w: 320,
        h: 344
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 320,
        h: 344
      },
      sourceSize: {
        w: 432,
        h: 352
      }
    },
    "map-bunker-crossing-floor-01.img": {
      frame: {
        x: 1701,
        y: 934,
        w: 320,
        h: 320
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 320,
        h: 320
      },
      sourceSize: {
        w: 320,
        h: 320
      }
    },
    "map-building-greenhouse-ceiling-01.img": {
      frame: {
        x: 2025,
        y: 934,
        w: 400,
        h: 314
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 400,
        h: 314
      },
      sourceSize: {
        w: 404,
        h: 316
      }
    },
    "map-bunker-chrys-compartment-ceiling-03b.img": {
      frame: {
        x: 2429,
        y: 934,
        w: 352,
        h: 306
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 352,
        h: 306
      },
      sourceSize: {
        w: 356,
        h: 308
      }
    },
    "map-bunker-hydra-ceiling-01.img": {
      frame: {
        x: 2625,
        y: 1454,
        w: 432,
        h: 304
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 432,
        h: 304
      },
      sourceSize: {
        w: 432,
        h: 304
      }
    },
    "map-bunker-chrys-compartment-ceiling-03a.img": {
      frame: {
        x: 2609,
        y: 1258,
        w: 224,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 224,
        h: 96
      },
      sourceSize: {
        w: 224,
        h: 96
      }
    },
    "map-bunker-chrys-chamber-ceiling-01.img": {
      frame: {
        x: 2625,
        y: 1762,
        w: 448,
        h: 272
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 448,
        h: 272
      },
      sourceSize: {
        w: 448,
        h: 272
      }
    },
    "map-bunker-hydra-chamber-ceiling-03.img": {
      frame: {
        x: 2785,
        y: 934,
        w: 400,
        h: 272
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 400,
        h: 272
      },
      sourceSize: {
        w: 400,
        h: 272
      }
    },
    "map-planter-03.img": {
      frame: {
        x: 3729,
        y: 2629,
        w: 144,
        h: 272
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 272
      },
      sourceSize: {
        w: 144,
        h: 272
      }
    },
    "map-planter-02.img": {
      frame: {
        x: 3061,
        y: 1454,
        w: 144,
        h: 272
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 272
      },
      sourceSize: {
        w: 144,
        h: 272
      }
    },
    "map-planter-01.img": {
      frame: {
        x: 2996,
        y: 2321,
        w: 144,
        h: 272
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 272
      },
      sourceSize: {
        w: 144,
        h: 272
      }
    },
    "map-bunker-hydra-compartment-ceiling-03.img": {
      frame: {
        x: 3636,
        y: 3063,
        w: 320,
        h: 270
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 320,
        h: 270
      },
      sourceSize: {
        w: 320,
        h: 270
      }
    },
    "map-bunker-chrys-compartment-ceiling-02b.img": {
      frame: {
        x: 2,
        y: 3693,
        w: 352,
        h: 258
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 352,
        h: 258
      },
      sourceSize: {
        w: 356,
        h: 260
      }
    },
    "map-bunker-crossing-chamber-floor-02.img": {
      frame: {
        x: 358,
        y: 3693,
        w: 704,
        h: 253
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 32,
        y: 320,
        w: 704,
        h: 253
      },
      sourceSize: {
        w: 736,
        h: 576
      }
    },
    "map-bunker-crossing-chamber-floor-03.img": {
      frame: {
        x: 1804,
        y: 3419,
        w: 704,
        h: 250
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 32,
        y: 323,
        w: 704,
        h: 250
      },
      sourceSize: {
        w: 736,
        h: 576
      }
    },
    "map-bunker-crossing-chamber-ceiling-01.img": {
      frame: {
        x: 2512,
        y: 3419,
        w: 1136,
        h: 240
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 1136,
        h: 240
      },
      sourceSize: {
        w: 1136,
        h: 240
      }
    },
    "map-bunker-crossing-ceiling-01.img": {
      frame: {
        x: 2996,
        y: 2597,
        w: 192,
        h: 230
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 64,
        y: 0,
        w: 192,
        h: 230
      },
      sourceSize: {
        w: 320,
        h: 288
      }
    },
    "map-bunker-generic-ceiling-02.img": {
      frame: {
        x: 3652,
        y: 3419,
        w: 160,
        h: 230
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 230
      },
      sourceSize: {
        w: 160,
        h: 230
      }
    },
    "map-bunker-generic-floor-03.img": {
      frame: {
        x: 3816,
        y: 3419,
        w: 160,
        h: 230
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 230
      },
      sourceSize: {
        w: 160,
        h: 230
      }
    },
    "map-complex-warehouse-floor-01.img": {
      frame: {
        x: 3916,
        y: 1246,
        w: 60,
        h: 224
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 60,
        h: 224
      },
      sourceSize: {
        w: 60,
        h: 224
      }
    },
    "map-complex-warehouse-floor-03.img": {
      frame: {
        x: 3916,
        y: 1474,
        w: 60,
        h: 224
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 60,
        h: 224
      },
      sourceSize: {
        w: 60,
        h: 224
      }
    },
    "map-bunker-hydra-floor-04.img": {
      frame: {
        x: 1066,
        y: 3693,
        w: 200,
        h: 200
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 200,
        h: 200
      },
      sourceSize: {
        w: 200,
        h: 200
      }
    },
    "map-bunker-crossing-chamber-floor-01b.img": {
      frame: {
        x: 1270,
        y: 3693,
        w: 574,
        h: 194
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 0,
        w: 574,
        h: 194
      },
      sourceSize: {
        w: 610,
        h: 194
      }
    },
    "map-bunker-hydra-chamber-floor-01a.img": {
      frame: {
        x: 1848,
        y: 3693,
        w: 193,
        h: 194
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 193,
        h: 194
      },
      sourceSize: {
        w: 194,
        h: 194
      }
    },
    "map-bunker-crossing-chamber-floor-01c.img": {
      frame: {
        x: 2045,
        y: 3693,
        w: 192,
        h: 193
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 1,
        w: 192,
        h: 193
      },
      sourceSize: {
        w: 230,
        h: 194
      }
    },
    "map-bunker-chrys-compartment-ceiling-01a.img": {
      frame: {
        x: 3827,
        y: 942,
        w: 112,
        h: 192
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 112,
        h: 192
      },
      sourceSize: {
        w: 112,
        h: 192
      }
    },
    "map-bunker-chrys-compartment-floor-02b.img": {
      frame: {
        x: 1701,
        y: 1258,
        w: 512,
        h: 180
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 18,
        y: 0,
        w: 512,
        h: 180
      },
      sourceSize: {
        w: 548,
        h: 180
      }
    },
    "map-bunker-chrys-chamber-floor-01a.img": {
      frame: {
        x: 2217,
        y: 1258,
        w: 160,
        h: 148
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 34,
        y: 32,
        w: 160,
        h: 148
      },
      sourceSize: {
        w: 228,
        h: 180
      }
    },
    "map-planter-res-01.img": {
      frame: {
        x: 3891,
        y: 2257,
        w: 76,
        h: 134
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 1,
        w: 76,
        h: 134
      },
      sourceSize: {
        w: 86,
        h: 136
      }
    },
    "map-planter-04.img": {
      frame: {
        x: 3877,
        y: 2629,
        w: 100,
        h: 100
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 100,
        h: 100
      },
      sourceSize: {
        w: 100,
        h: 100
      }
    },
    "map-planter-05.img": {
      frame: {
        x: 3877,
        y: 2733,
        w: 100,
        h: 100
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 100,
        h: 100
      },
      sourceSize: {
        w: 100,
        h: 100
      }
    },
    "map-bunker-chrys-compartment-ceiling-02a.img": {
      frame: {
        x: 2381,
        y: 1258,
        w: 224,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 224,
        h: 96
      },
      sourceSize: {
        w: 224,
        h: 96
      }
    },
    "map-bunker-crossing-compartment-ceiling-01a.img": {
      frame: {
        x: 3827,
        y: 634,
        w: 128,
        h: 304
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 304
      },
      sourceSize: {
        w: 128,
        h: 304
      }
    }
  }
}];
const Gs = [{
  meta: {
    image: "potato-0-100-9e6e65b1.png",
    size: {
      w: 4096,
      h: 4096
    },
    scale: 1
  },
  frames: {
    "map-bunker-crossing-compartment-floor-01.img": {
      frame: {
        x: 1701,
        y: 2,
        w: 1504,
        h: 928
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 1504,
        h: 928
      },
      sourceSize: {
        w: 1504,
        h: 928
      }
    },
    "map-bunker-hydra-compartment-floor-02.img": {
      frame: {
        x: 2,
        y: 2,
        w: 1695,
        h: 1448
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 0,
        w: 1695,
        h: 1448
      },
      sourceSize: {
        w: 1704,
        h: 1448
      }
    },
    "map-bunker-chrys-compartment-floor-03a.img": {
      frame: {
        x: 2,
        y: 1454,
        w: 767,
        h: 863
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 767,
        h: 863
      },
      sourceSize: {
        w: 768,
        h: 864
      }
    },
    "map-bunker-hydra-chamber-floor-03.img": {
      frame: {
        x: 773,
        y: 1454,
        w: 704,
        h: 798
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 32,
        w: 704,
        h: 798
      },
      sourceSize: {
        w: 704,
        h: 832
      }
    },
    "map-bunker-chrys-compartment-floor-01b.img": {
      frame: {
        x: 1481,
        y: 1454,
        w: 800,
        h: 772
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 800,
        h: 772
      },
      sourceSize: {
        w: 804,
        h: 804
      }
    },
    "map-bunker-hydra-chamber-floor-02.img": {
      frame: {
        x: 2285,
        y: 1454,
        w: 336,
        h: 740
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 44,
        y: 0,
        w: 336,
        h: 740
      },
      sourceSize: {
        w: 392,
        h: 744
      }
    },
    "map-bunker-hydra-chamber-floor-01b.img": {
      frame: {
        x: 2,
        y: 2321,
        w: 706,
        h: 738
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 706,
        h: 738
      },
      sourceSize: {
        w: 706,
        h: 738
      }
    },
    "map-bunker-hydra-compartment-ceiling-02.img": {
      frame: {
        x: 712,
        y: 2321,
        w: 736,
        h: 656
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 736,
        h: 656
      },
      sourceSize: {
        w: 816,
        h: 720
      }
    },
    "map-building-greenhouse-floor-01.img": {
      frame: {
        x: 1452,
        y: 2321,
        w: 832,
        h: 641
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 0,
        w: 832,
        h: 641
      },
      sourceSize: {
        w: 834,
        h: 642
      }
    },
    "map-bunker-hydra-compartment-floor-01.img": {
      frame: {
        x: 2288,
        y: 2321,
        w: 704,
        h: 640
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 704,
        h: 640
      },
      sourceSize: {
        w: 704,
        h: 640
      }
    },
    "map-bunker-chrys-compartment-floor-02a.img": {
      frame: {
        x: 3209,
        y: 2,
        w: 768,
        h: 628
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 768,
        h: 628
      },
      sourceSize: {
        w: 772,
        h: 628
      }
    },
    "map-bunker-chrys-chamber-floor-01b.img": {
      frame: {
        x: 2,
        y: 3063,
        w: 930,
        h: 626
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 930,
        h: 626
      },
      sourceSize: {
        w: 932,
        h: 628
      }
    },
    "map-bunker-hydra-floor-01.img": {
      frame: {
        x: 936,
        y: 3063,
        w: 864,
        h: 608
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 864,
        h: 608
      },
      sourceSize: {
        w: 864,
        h: 608
      }
    },
    "map-bunker-crossing-compartment-floor-02.img": {
      frame: {
        x: 3209,
        y: 634,
        w: 318,
        h: 608
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 318,
        h: 608
      },
      sourceSize: {
        w: 320,
        h: 608
      }
    },
    "map-bunker-chrys-compartment-floor-01a.img": {
      frame: {
        x: 3531,
        y: 634,
        w: 228,
        h: 608
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 34,
        w: 228,
        h: 608
      },
      sourceSize: {
        w: 228,
        h: 644
      }
    },
    "map-complex-warehouse-floor-02.img": {
      frame: {
        x: 3763,
        y: 634,
        w: 60,
        h: 528
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 60,
        h: 528
      },
      sourceSize: {
        w: 60,
        h: 528
      }
    },
    "map-bunker-hydra-compartment-floor-03.img": {
      frame: {
        x: 3209,
        y: 1246,
        w: 703,
        h: 507
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 703,
        h: 507
      },
      sourceSize: {
        w: 704,
        h: 512
      }
    },
    "map-bunker-crossing-compartment-ceiling-01b.img": {
      frame: {
        x: 3209,
        y: 1757,
        w: 720,
        h: 496
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 720,
        h: 496
      },
      sourceSize: {
        w: 720,
        h: 496
      }
    },
    "map-bunker-chrys-compartment-ceiling-01b.img": {
      frame: {
        x: 3209,
        y: 2257,
        w: 354,
        h: 368
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 2,
        w: 354,
        h: 368
      },
      sourceSize: {
        w: 356,
        h: 372
      }
    },
    "map-bunker-hydra-compartment-ceiling-01.img": {
      frame: {
        x: 3567,
        y: 2257,
        w: 320,
        h: 360
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 320,
        h: 360
      },
      sourceSize: {
        w: 320,
        h: 360
      }
    },
    "map-bunker-crossing-chamber-floor-01a.img": {
      frame: {
        x: 1804,
        y: 3063,
        w: 1828,
        h: 352
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 1828,
        h: 352
      },
      sourceSize: {
        w: 1830,
        h: 354
      }
    },
    "map-bunker-hydra-chamber-ceiling-02.img": {
      frame: {
        x: 3209,
        y: 2629,
        w: 192,
        h: 350
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 192,
        h: 350
      },
      sourceSize: {
        w: 192,
        h: 350
      }
    },
    "map-bunker-hydra-chamber-ceiling-01.img": {
      frame: {
        x: 3405,
        y: 2629,
        w: 320,
        h: 344
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 320,
        h: 344
      },
      sourceSize: {
        w: 432,
        h: 352
      }
    },
    "map-bunker-crossing-floor-01.img": {
      frame: {
        x: 1701,
        y: 934,
        w: 320,
        h: 320
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 320,
        h: 320
      },
      sourceSize: {
        w: 320,
        h: 320
      }
    },
    "map-building-greenhouse-ceiling-01.img": {
      frame: {
        x: 2025,
        y: 934,
        w: 400,
        h: 314
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 400,
        h: 314
      },
      sourceSize: {
        w: 404,
        h: 316
      }
    },
    "map-bunker-chrys-compartment-ceiling-03b.img": {
      frame: {
        x: 2429,
        y: 934,
        w: 352,
        h: 306
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 352,
        h: 306
      },
      sourceSize: {
        w: 356,
        h: 308
      }
    },
    "map-bunker-hydra-ceiling-01.img": {
      frame: {
        x: 2625,
        y: 1454,
        w: 432,
        h: 304
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 432,
        h: 304
      },
      sourceSize: {
        w: 432,
        h: 304
      }
    },
    "map-bunker-crossing-compartment-ceiling-01a.img": {
      frame: {
        x: 3827,
        y: 634,
        w: 128,
        h: 304
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 304
      },
      sourceSize: {
        w: 128,
        h: 304
      }
    },
    "map-bunker-chrys-chamber-ceiling-01.img": {
      frame: {
        x: 2625,
        y: 1762,
        w: 448,
        h: 272
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 448,
        h: 272
      },
      sourceSize: {
        w: 448,
        h: 272
      }
    },
    "map-potato-03.img": {
      frame: {
        x: 3891,
        y: 2482,
        w: 72,
        h: 70
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 72,
        h: 70
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-planter-03.img": {
      frame: {
        x: 3729,
        y: 2629,
        w: 144,
        h: 272
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 272
      },
      sourceSize: {
        w: 144,
        h: 272
      }
    },
    "map-planter-02.img": {
      frame: {
        x: 3061,
        y: 1454,
        w: 144,
        h: 272
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 272
      },
      sourceSize: {
        w: 144,
        h: 272
      }
    },
    "map-planter-01.img": {
      frame: {
        x: 2996,
        y: 2321,
        w: 144,
        h: 272
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 272
      },
      sourceSize: {
        w: 144,
        h: 272
      }
    },
    "map-bunker-hydra-compartment-ceiling-03.img": {
      frame: {
        x: 3636,
        y: 3063,
        w: 320,
        h: 270
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 320,
        h: 270
      },
      sourceSize: {
        w: 320,
        h: 270
      }
    },
    "map-bunker-chrys-compartment-ceiling-02b.img": {
      frame: {
        x: 2,
        y: 3693,
        w: 352,
        h: 258
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 352,
        h: 258
      },
      sourceSize: {
        w: 356,
        h: 260
      }
    },
    "map-bunker-crossing-chamber-floor-02.img": {
      frame: {
        x: 358,
        y: 3693,
        w: 704,
        h: 253
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 32,
        y: 320,
        w: 704,
        h: 253
      },
      sourceSize: {
        w: 736,
        h: 576
      }
    },
    "map-bunker-crossing-chamber-floor-03.img": {
      frame: {
        x: 1804,
        y: 3419,
        w: 704,
        h: 250
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 32,
        y: 323,
        w: 704,
        h: 250
      },
      sourceSize: {
        w: 736,
        h: 576
      }
    },
    "map-bunker-crossing-chamber-ceiling-01.img": {
      frame: {
        x: 2512,
        y: 3419,
        w: 1136,
        h: 240
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 1136,
        h: 240
      },
      sourceSize: {
        w: 1136,
        h: 240
      }
    },
    "map-bunker-crossing-ceiling-01.img": {
      frame: {
        x: 2996,
        y: 2597,
        w: 192,
        h: 230
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 64,
        y: 0,
        w: 192,
        h: 230
      },
      sourceSize: {
        w: 320,
        h: 288
      }
    },
    "map-bunker-generic-floor-03.img": {
      frame: {
        x: 3652,
        y: 3419,
        w: 160,
        h: 230
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 230
      },
      sourceSize: {
        w: 160,
        h: 230
      }
    },
    "map-bunker-generic-ceiling-02.img": {
      frame: {
        x: 3816,
        y: 3419,
        w: 160,
        h: 230
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 230
      },
      sourceSize: {
        w: 160,
        h: 230
      }
    },
    "map-complex-warehouse-floor-01.img": {
      frame: {
        x: 3916,
        y: 1246,
        w: 60,
        h: 224
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 60,
        h: 224
      },
      sourceSize: {
        w: 60,
        h: 224
      }
    },
    "map-complex-warehouse-floor-03.img": {
      frame: {
        x: 3916,
        y: 1474,
        w: 60,
        h: 224
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 60,
        h: 224
      },
      sourceSize: {
        w: 60,
        h: 224
      }
    },
    "map-bunker-hydra-floor-04.img": {
      frame: {
        x: 1066,
        y: 3693,
        w: 200,
        h: 200
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 200,
        h: 200
      },
      sourceSize: {
        w: 200,
        h: 200
      }
    },
    "map-bunker-crossing-chamber-floor-01b.img": {
      frame: {
        x: 1270,
        y: 3693,
        w: 574,
        h: 194
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 0,
        w: 574,
        h: 194
      },
      sourceSize: {
        w: 610,
        h: 194
      }
    },
    "map-bunker-hydra-chamber-floor-01a.img": {
      frame: {
        x: 1848,
        y: 3693,
        w: 193,
        h: 194
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 193,
        h: 194
      },
      sourceSize: {
        w: 194,
        h: 194
      }
    },
    "map-bunker-crossing-chamber-floor-01c.img": {
      frame: {
        x: 2045,
        y: 3693,
        w: 192,
        h: 193
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 1,
        w: 192,
        h: 193
      },
      sourceSize: {
        w: 230,
        h: 194
      }
    },
    "map-bunker-chrys-compartment-ceiling-01a.img": {
      frame: {
        x: 3827,
        y: 942,
        w: 112,
        h: 192
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 112,
        h: 192
      },
      sourceSize: {
        w: 112,
        h: 192
      }
    },
    "map-bunker-chrys-compartment-floor-02b.img": {
      frame: {
        x: 1701,
        y: 1258,
        w: 512,
        h: 180
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 18,
        y: 0,
        w: 512,
        h: 180
      },
      sourceSize: {
        w: 548,
        h: 180
      }
    },
    "map-bunker-chrys-chamber-floor-01a.img": {
      frame: {
        x: 2217,
        y: 1258,
        w: 160,
        h: 148
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 34,
        y: 32,
        w: 160,
        h: 148
      },
      sourceSize: {
        w: 228,
        h: 180
      }
    },
    "map-planter-res-01.img": {
      frame: {
        x: 3891,
        y: 2257,
        w: 76,
        h: 134
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 1,
        w: 76,
        h: 134
      },
      sourceSize: {
        w: 86,
        h: 136
      }
    },
    "map-planter-05.img": {
      frame: {
        x: 3877,
        y: 2629,
        w: 100,
        h: 100
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 100,
        h: 100
      },
      sourceSize: {
        w: 100,
        h: 100
      }
    },
    "map-planter-04.img": {
      frame: {
        x: 3877,
        y: 2733,
        w: 100,
        h: 100
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 100,
        h: 100
      },
      sourceSize: {
        w: 100,
        h: 100
      }
    },
    "map-bunker-chrys-compartment-ceiling-02a.img": {
      frame: {
        x: 2381,
        y: 1258,
        w: 224,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 224,
        h: 96
      },
      sourceSize: {
        w: 224,
        h: 96
      }
    },
    "map-bunker-chrys-compartment-ceiling-03a.img": {
      frame: {
        x: 2609,
        y: 1258,
        w: 224,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 224,
        h: 96
      },
      sourceSize: {
        w: 224,
        h: 96
      }
    },
    "map-potato-res-01.img": {
      frame: {
        x: 3891,
        y: 2395,
        w: 85,
        h: 83
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 29,
        y: 36,
        w: 85,
        h: 83
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-potato-01.img": {
      frame: {
        x: 3763,
        y: 1166,
        w: 72,
        h: 70
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 72,
        h: 70
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-potato-02.img": {
      frame: {
        x: 3839,
        y: 1166,
        w: 72,
        h: 70
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 72,
        h: 70
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-bunker-hydra-chamber-ceiling-03.img": {
      frame: {
        x: 2785,
        y: 934,
        w: 400,
        h: 272
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 400,
        h: 272
      },
      sourceSize: {
        w: 400,
        h: 272
      }
    }
  }
}];
const Vs = [{
  meta: {
    image: "woods-0-100-49fced28.png",
    size: {
      w: 4096,
      h: 4096
    },
    scale: 1
  },
  frames: {
    "map-bunker-hatchet-compartment-floor-01.img": {
      frame: {
        x: 710,
        y: 2,
        w: 1184,
        h: 924
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 1184,
        h: 924
      },
      sourceSize: {
        w: 1184,
        h: 928
      }
    },
    "map-bunker-eye-chamber-floor-01a.img": {
      frame: {
        x: 2,
        y: 2,
        w: 704,
        h: 1344
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 32,
        w: 704,
        h: 1344
      },
      sourceSize: {
        w: 704,
        h: 1376
      }
    },
    "map-bunker-eye-compartment-floor-01.img": {
      frame: {
        x: 1898,
        y: 2,
        w: 704,
        h: 704
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 704,
        h: 704
      },
      sourceSize: {
        w: 704,
        h: 704
      }
    },
    "map-bunker-hatchet-chamber-floor-01a.img": {
      frame: {
        x: 2,
        y: 1350,
        w: 728,
        h: 696
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 728,
        h: 696
      },
      sourceSize: {
        w: 738,
        h: 706
      }
    },
    "map-bunker-hatchet-compartment-floor-02c.img": {
      frame: {
        x: 734,
        y: 1350,
        w: 254,
        h: 654
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 0,
        w: 254,
        h: 654
      },
      sourceSize: {
        w: 258,
        h: 674
      }
    },
    "map-building-pavilion-ceiling-01.img": {
      frame: {
        x: 1898,
        y: 710,
        w: 623,
        h: 608
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 16,
        w: 623,
        h: 608
      },
      sourceSize: {
        w: 640,
        h: 640
      }
    },
    "map-bunker-hatchet-compartment-floor-02a.img": {
      frame: {
        x: 992,
        y: 1350,
        w: 898,
        h: 590
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 898,
        h: 590
      },
      sourceSize: {
        w: 898,
        h: 594
      }
    },
    "map-building-pavilion-floor-01.img": {
      frame: {
        x: 1894,
        y: 1350,
        w: 576,
        h: 576
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 576,
        h: 576
      },
      sourceSize: {
        w: 576,
        h: 576
      }
    },
    "map-bunker-eye-chamber-ceiling-01.img": {
      frame: {
        x: 2,
        y: 2050,
        w: 320,
        h: 544
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 320,
        h: 544
      },
      sourceSize: {
        w: 320,
        h: 544
      }
    },
    "map-tree-08.img": {
      frame: {
        x: 326,
        y: 2050,
        w: 512,
        h: 510
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 512,
        h: 510
      },
      sourceSize: {
        w: 512,
        h: 512
      }
    },
    "map-bunker-hatchet-compartment-floor-03b.img": {
      frame: {
        x: 842,
        y: 2050,
        w: 732,
        h: 508
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 6,
        w: 732,
        h: 508
      },
      sourceSize: {
        w: 738,
        h: 514
      }
    },
    "map-bunker-hatchet-compartment-floor-03d.img": {
      frame: {
        x: 1578,
        y: 2050,
        w: 380,
        h: 508
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 22,
        w: 380,
        h: 508
      },
      sourceSize: {
        w: 386,
        h: 530
      }
    },
    "map-bunker-hatchet-compartment-ceiling-02.img": {
      frame: {
        x: 1962,
        y: 2050,
        w: 512,
        h: 496
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 512,
        h: 496
      },
      sourceSize: {
        w: 512,
        h: 496
      }
    },
    "map-tree-05.img": {
      frame: {
        x: 2606,
        y: 2,
        w: 489,
        h: 480
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 17,
        w: 489,
        h: 480
      },
      sourceSize: {
        w: 512,
        h: 512
      }
    },
    "map-bunker-hatchet-compartment-ceiling-01.img": {
      frame: {
        x: 710,
        y: 930,
        w: 512,
        h: 400
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 512,
        h: 400
      },
      sourceSize: {
        w: 512,
        h: 400
      }
    },
    "map-bunker-hatchet-chamber-floor-01c.img": {
      frame: {
        x: 2606,
        y: 486,
        w: 226,
        h: 367
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 9,
        w: 226,
        h: 367
      },
      sourceSize: {
        w: 226,
        h: 385
      }
    },
    "map-bunker-hatchet-compartment-floor-02b.img": {
      frame: {
        x: 2,
        y: 2598,
        w: 670,
        h: 322
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 670,
        h: 322
      },
      sourceSize: {
        w: 690,
        h: 322
      }
    },
    "map-bunker-eye-compartment-ceiling-01.img": {
      frame: {
        x: 2606,
        y: 857,
        w: 320,
        h: 320
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 320,
        h: 320
      },
      sourceSize: {
        w: 320,
        h: 320
      }
    },
    "map-bunker-hatchet-compartment-ceiling-03.img": {
      frame: {
        x: 1226,
        y: 930,
        w: 608,
        h: 304
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 608,
        h: 304
      },
      sourceSize: {
        w: 608,
        h: 304
      }
    },
    "map-bunker-hatchet-chamber-ceiling-01.img": {
      frame: {
        x: 2606,
        y: 1181,
        w: 416,
        h: 304
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 416,
        h: 304
      },
      sourceSize: {
        w: 416,
        h: 304
      }
    },
    "map-bunker-hatchet-compartment-floor-03c.img": {
      frame: {
        x: 2836,
        y: 486,
        w: 193,
        h: 278
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 22,
        w: 193,
        h: 278
      },
      sourceSize: {
        w: 193,
        h: 306
      }
    },
    "map-stone-03x.img": {
      frame: {
        x: 2606,
        y: 1489,
        w: 276,
        h: 272
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 8,
        w: 276,
        h: 272
      },
      sourceSize: {
        w: 288,
        h: 288
      }
    },
    "map-planter-06.img": {
      frame: {
        x: 2930,
        y: 857,
        w: 144,
        h: 272
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 272
      },
      sourceSize: {
        w: 144,
        h: 272
      }
    },
    "map-tree-07.img": {
      frame: {
        x: 2606,
        y: 1765,
        w: 256,
        h: 256
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 256,
        h: 256
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-bunker-eye-chamber-floor-01b.img": {
      frame: {
        x: 2886,
        y: 1489,
        w: 192,
        h: 256
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 192,
        h: 256
      },
      sourceSize: {
        w: 192,
        h: 256
      }
    },
    "map-tree-10.img": {
      frame: {
        x: 2606,
        y: 2025,
        w: 254,
        h: 254
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 254,
        h: 254
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-tree-11.img": {
      frame: {
        x: 2606,
        y: 2283,
        w: 250,
        h: 248
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 4,
        w: 250,
        h: 248
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-woodpile-res-02.img": {
      frame: {
        x: 2864,
        y: 2217,
        w: 121,
        h: 56
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 5,
        w: 121,
        h: 56
      },
      sourceSize: {
        w: 128,
        h: 64
      }
    },
    "map-bunker-hatchet-compartment-floor-02d.img": {
      frame: {
        x: 1054,
        y: 2598,
        w: 378,
        h: 210
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 20,
        y: 0,
        w: 378,
        h: 210
      },
      sourceSize: {
        w: 401,
        h: 210
      }
    },
    "map-stone-res-02x.img": {
      frame: {
        x: 2866,
        y: 1765,
        w: 200,
        h: 200
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 200,
        h: 200
      },
      sourceSize: {
        w: 200,
        h: 200
      }
    },
    "map-woodpile-02.img": {
      frame: {
        x: 1436,
        y: 2598,
        w: 384,
        h: 192
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 384,
        h: 192
      },
      sourceSize: {
        w: 384,
        h: 192
      }
    },
    "map-bush-06.img": {
      frame: {
        x: 2864,
        y: 2025,
        w: 190,
        h: 188
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 2,
        w: 190,
        h: 188
      },
      sourceSize: {
        w: 192,
        h: 192
      }
    },
    "map-building-pavilion-res-01.img": {
      frame: {
        x: 2860,
        y: 2283,
        w: 178,
        h: 188
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 167,
        y: 162,
        w: 178,
        h: 188
      },
      sourceSize: {
        w: 512,
        h: 512
      }
    },
    "map-bunker-hatchet-chamber-floor-01b.img": {
      frame: {
        x: 1824,
        y: 2598,
        w: 192,
        h: 176
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 192,
        h: 176
      },
      sourceSize: {
        w: 194,
        h: 177
      }
    },
    "map-table-02x.img": {
      frame: {
        x: 2020,
        y: 2598,
        w: 288,
        h: 160
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 288,
        h: 160
      },
      sourceSize: {
        w: 288,
        h: 160
      }
    },
    "map-table-03x.img": {
      frame: {
        x: 2312,
        y: 2598,
        w: 160,
        h: 160
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 160
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "map-crate-01x.img": {
      frame: {
        x: 2476,
        y: 2598,
        w: 152,
        h: 152
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 152,
        h: 152
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "map-stone-01x.img": {
      frame: {
        x: 2632,
        y: 2598,
        w: 151,
        h: 149
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 2,
        w: 151,
        h: 149
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "map-crate-03x.img": {
      frame: {
        x: 2787,
        y: 2598,
        w: 148,
        h: 148
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 148,
        h: 148
      },
      sourceSize: {
        w: 148,
        h: 148
      }
    },
    "map-crate-19.img": {
      frame: {
        x: 2939,
        y: 2598,
        w: 144,
        h: 144
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 144
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-crate-02x.img": {
      frame: {
        x: 2,
        y: 2924,
        w: 144,
        h: 144
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 144
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-bush-07sp.img": {
      frame: {
        x: 150,
        y: 2924,
        w: 135,
        h: 143
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 0,
        w: 135,
        h: 143
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-planter-res-02.img": {
      frame: {
        x: 2525,
        y: 710,
        w: 76,
        h: 134
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 1,
        w: 76,
        h: 134
      },
      sourceSize: {
        w: 86,
        h: 136
      }
    },
    "map-bush-01x.img": {
      frame: {
        x: 2474,
        y: 1350,
        w: 126,
        h: 130
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 7,
        w: 126,
        h: 130
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-table-01x.img": {
      frame: {
        x: 289,
        y: 2924,
        w: 160,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 128
      },
      sourceSize: {
        w: 160,
        h: 128
      }
    },
    "map-stone-res-01x.img": {
      frame: {
        x: 2474,
        y: 1484,
        w: 118,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 118,
        h: 118
      },
      sourceSize: {
        w: 120,
        h: 120
      }
    },
    "map-tree-switch-03.img": {
      frame: {
        x: 2474,
        y: 1606,
        w: 112,
        h: 112
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 112,
        h: 112
      },
      sourceSize: {
        w: 112,
        h: 112
      }
    },
    "map-tree-switch-04.img": {
      frame: {
        x: 2474,
        y: 1722,
        w: 112,
        h: 112
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 112,
        h: 112
      },
      sourceSize: {
        w: 112,
        h: 112
      }
    },
    "map-tree-switch-01.img": {
      frame: {
        x: 2478,
        y: 2050,
        w: 112,
        h: 112
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 112,
        h: 112
      },
      sourceSize: {
        w: 112,
        h: 112
      }
    },
    "map-tree-switch-02.img": {
      frame: {
        x: 2478,
        y: 2166,
        w: 112,
        h: 112
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 112,
        h: 112
      },
      sourceSize: {
        w: 112,
        h: 112
      }
    },
    "map-chest-03x.img": {
      frame: {
        x: 453,
        y: 2924,
        w: 140,
        h: 102
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 140,
        h: 102
      },
      sourceSize: {
        w: 140,
        h: 102
      }
    },
    "map-planter-07.img": {
      frame: {
        x: 2478,
        y: 2282,
        w: 100,
        h: 100
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 100,
        h: 100
      },
      sourceSize: {
        w: 100,
        h: 100
      }
    },
    "map-planter-res-03.img": {
      frame: {
        x: 2836,
        y: 768,
        w: 82,
        h: 74
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 6,
        w: 82,
        h: 74
      },
      sourceSize: {
        w: 86,
        h: 86
      }
    },
    "map-snowball-res.img": {
      frame: {
        x: 2922,
        y: 768,
        w: 69,
        h: 69
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 15,
        y: 13,
        w: 69,
        h: 69
      },
      sourceSize: {
        w: 96,
        h: 96
      }
    },
    "map-bunker-hatchet-compartment-floor-03a.img": {
      frame: {
        x: 676,
        y: 2598,
        w: 374,
        h: 226
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 0,
        w: 374,
        h: 226
      },
      sourceSize: {
        w: 386,
        h: 226
      }
    }
  }
}];
const Us = [{
  meta: {
    image: "cobalt-0-100-c45e6f2b.png",
    size: {
      w: 4096,
      h: 4096
    },
    scale: 1
  },
  frames: {
    "map-bunker-twins-chamber-floor-01.img": {
      frame: {
        x: 1701,
        y: 2,
        w: 1472,
        h: 1152
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 96,
        y: 128,
        w: 1472,
        h: 1152
      },
      sourceSize: {
        w: 1664,
        h: 1408
      }
    },
    "map-bunker-hydra-compartment-floor-02.img": {
      frame: {
        x: 2,
        y: 2,
        w: 1695,
        h: 1448
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 0,
        w: 1695,
        h: 1448
      },
      sourceSize: {
        w: 1704,
        h: 1448
      }
    },
    "map-bunker-crossing-compartment-floor-01.img": {
      frame: {
        x: 2,
        y: 1454,
        w: 1504,
        h: 928
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 1504,
        h: 928
      },
      sourceSize: {
        w: 1504,
        h: 928
      }
    },
    "map-bunker-hydra-chamber-floor-03.img": {
      frame: {
        x: 1510,
        y: 1454,
        w: 704,
        h: 798
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 32,
        w: 704,
        h: 798
      },
      sourceSize: {
        w: 704,
        h: 832
      }
    },
    "map-bunker-hydra-chamber-floor-02.img": {
      frame: {
        x: 2218,
        y: 1454,
        w: 336,
        h: 740
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 44,
        y: 0,
        w: 336,
        h: 740
      },
      sourceSize: {
        w: 392,
        h: 744
      }
    },
    "map-bunker-hydra-chamber-floor-01b.img": {
      frame: {
        x: 2,
        y: 2386,
        w: 706,
        h: 738
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 706,
        h: 738
      },
      sourceSize: {
        w: 706,
        h: 738
      }
    },
    "map-bunker-hydra-compartment-ceiling-02.img": {
      frame: {
        x: 712,
        y: 2386,
        w: 736,
        h: 656
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 736,
        h: 656
      },
      sourceSize: {
        w: 816,
        h: 720
      }
    },
    "map-bunker-hydra-compartment-floor-01.img": {
      frame: {
        x: 1452,
        y: 2386,
        w: 704,
        h: 640
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 704,
        h: 640
      },
      sourceSize: {
        w: 704,
        h: 640
      }
    },
    "map-bunker-hydra-floor-01.img": {
      frame: {
        x: 2160,
        y: 2386,
        w: 864,
        h: 608
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 864,
        h: 608
      },
      sourceSize: {
        w: 864,
        h: 608
      }
    },
    "map-bunker-crossing-compartment-floor-02.img": {
      frame: {
        x: 2558,
        y: 1454,
        w: 318,
        h: 608
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 318,
        h: 608
      },
      sourceSize: {
        w: 320,
        h: 608
      }
    },
    "map-complex-warehouse-floor-02.img": {
      frame: {
        x: 2880,
        y: 1454,
        w: 60,
        h: 528
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 60,
        h: 528
      },
      sourceSize: {
        w: 60,
        h: 528
      }
    },
    "map-bunker-hydra-compartment-floor-03.img": {
      frame: {
        x: 3177,
        y: 2,
        w: 703,
        h: 507
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 703,
        h: 507
      },
      sourceSize: {
        w: 704,
        h: 512
      }
    },
    "map-bunker-crossing-compartment-ceiling-01b.img": {
      frame: {
        x: 2,
        y: 3128,
        w: 720,
        h: 496
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 720,
        h: 496
      },
      sourceSize: {
        w: 720,
        h: 496
      }
    },
    "map-bunker-hydra-compartment-ceiling-01.img": {
      frame: {
        x: 3177,
        y: 513,
        w: 320,
        h: 360
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 320,
        h: 360
      },
      sourceSize: {
        w: 320,
        h: 360
      }
    },
    "map-bunker-crossing-chamber-floor-01a.img": {
      frame: {
        x: 726,
        y: 3128,
        w: 1828,
        h: 352
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 1828,
        h: 352
      },
      sourceSize: {
        w: 1830,
        h: 354
      }
    },
    "map-bunker-twins-chamber-ceiling-01.img": {
      frame: {
        x: 3177,
        y: 877,
        w: 512,
        h: 352
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 512,
        h: 352
      },
      sourceSize: {
        w: 512,
        h: 352
      }
    },
    "map-bunker-hydra-chamber-ceiling-02.img": {
      frame: {
        x: 3501,
        y: 513,
        w: 192,
        h: 350
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 192,
        h: 350
      },
      sourceSize: {
        w: 192,
        h: 350
      }
    },
    "map-bunker-hydra-chamber-ceiling-01.img": {
      frame: {
        x: 3177,
        y: 1233,
        w: 320,
        h: 344
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 320,
        h: 344
      },
      sourceSize: {
        w: 432,
        h: 352
      }
    },
    "map-bunker-crossing-floor-01.img": {
      frame: {
        x: 3501,
        y: 1233,
        w: 320,
        h: 320
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 320,
        h: 320
      },
      sourceSize: {
        w: 320,
        h: 320
      }
    },
    "map-bunker-hydra-ceiling-01.img": {
      frame: {
        x: 3177,
        y: 1581,
        w: 432,
        h: 304
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 432,
        h: 304
      },
      sourceSize: {
        w: 432,
        h: 304
      }
    },
    "map-bunker-crossing-compartment-ceiling-01a.img": {
      frame: {
        x: 3697,
        y: 513,
        w: 128,
        h: 304
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 304
      },
      sourceSize: {
        w: 128,
        h: 304
      }
    },
    "map-stone-03cb.img": {
      frame: {
        x: 3177,
        y: 1889,
        w: 278,
        h: 278
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 5,
        w: 278,
        h: 278
      },
      sourceSize: {
        w: 288,
        h: 288
      }
    },
    "map-bunker-hydra-chamber-ceiling-03.img": {
      frame: {
        x: 3459,
        y: 1889,
        w: 400,
        h: 272
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 400,
        h: 272
      },
      sourceSize: {
        w: 400,
        h: 272
      }
    },
    "map-bunker-hydra-compartment-ceiling-03.img": {
      frame: {
        x: 3177,
        y: 2171,
        w: 320,
        h: 270
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 320,
        h: 270
      },
      sourceSize: {
        w: 320,
        h: 270
      }
    },
    "map-bunker-crossing-chamber-floor-02.img": {
      frame: {
        x: 1701,
        y: 1158,
        w: 704,
        h: 253
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 32,
        y: 320,
        w: 704,
        h: 253
      },
      sourceSize: {
        w: 736,
        h: 576
      }
    },
    "map-tree-03cb.img": {
      frame: {
        x: 3613,
        y: 1581,
        w: 254,
        h: 252
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 2,
        w: 254,
        h: 252
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-bunker-crossing-chamber-floor-03.img": {
      frame: {
        x: 2409,
        y: 1158,
        w: 704,
        h: 250
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 32,
        y: 323,
        w: 704,
        h: 250
      },
      sourceSize: {
        w: 736,
        h: 576
      }
    },
    "map-bunker-crossing-chamber-ceiling-01.img": {
      frame: {
        x: 2558,
        y: 3128,
        w: 1136,
        h: 240
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 1136,
        h: 240
      },
      sourceSize: {
        w: 1136,
        h: 240
      }
    },
    "map-bunker-twins-ceiling-01.img": {
      frame: {
        x: 3501,
        y: 2171,
        w: 192,
        h: 230
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 64,
        y: 0,
        w: 192,
        h: 230
      },
      sourceSize: {
        w: 320,
        h: 288
      }
    },
    "map-bunker-crossing-ceiling-01.img": {
      frame: {
        x: 3177,
        y: 2445,
        w: 192,
        h: 230
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 64,
        y: 0,
        w: 192,
        h: 230
      },
      sourceSize: {
        w: 320,
        h: 288
      }
    },
    "part-class-shell-03b.img": {
      frame: {
        x: 3825,
        y: 1301,
        w: 52,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 52,
        h: 64
      },
      sourceSize: {
        w: 52,
        h: 64
      }
    },
    "map-bunker-generic-ceiling-02.img": {
      frame: {
        x: 3697,
        y: 2171,
        w: 160,
        h: 230
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 230
      },
      sourceSize: {
        w: 160,
        h: 230
      }
    },
    "map-complex-warehouse-floor-03.img": {
      frame: {
        x: 3373,
        y: 2445,
        w: 60,
        h: 224
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 60,
        h: 224
      },
      sourceSize: {
        w: 60,
        h: 224
      }
    },
    "map-complex-warehouse-floor-01.img": {
      frame: {
        x: 3437,
        y: 2445,
        w: 60,
        h: 224
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 60,
        h: 224
      },
      sourceSize: {
        w: 60,
        h: 224
      }
    },
    "map-bunker-hydra-floor-04.img": {
      frame: {
        x: 3501,
        y: 2445,
        w: 200,
        h: 200
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 200,
        h: 200
      },
      sourceSize: {
        w: 200,
        h: 200
      }
    },
    "map-stone-res-02cb.img": {
      frame: {
        x: 3177,
        y: 2679,
        w: 200,
        h: 200
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 200,
        h: 200
      },
      sourceSize: {
        w: 200,
        h: 200
      }
    },
    "map-bunker-crossing-chamber-floor-01b.img": {
      frame: {
        x: 3177,
        y: 2883,
        w: 574,
        h: 194
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 0,
        w: 574,
        h: 194
      },
      sourceSize: {
        w: 610,
        h: 194
      }
    },
    "map-bunker-hydra-chamber-floor-01a.img": {
      frame: {
        x: 3381,
        y: 2679,
        w: 193,
        h: 194
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 193,
        h: 194
      },
      sourceSize: {
        w: 194,
        h: 194
      }
    },
    "map-bunker-crossing-chamber-floor-01c.img": {
      frame: {
        x: 3578,
        y: 2679,
        w: 192,
        h: 193
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 1,
        w: 192,
        h: 193
      },
      sourceSize: {
        w: 230,
        h: 194
      }
    },
    "map-class-shell-03b.img": {
      frame: {
        x: 3705,
        y: 2445,
        w: 146,
        h: 146
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 7,
        w: 146,
        h: 146
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "map-class-shell-03a.img": {
      frame: {
        x: 2944,
        y: 1454,
        w: 146,
        h: 146
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 7,
        w: 146,
        h: 146
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "map-class-shell-01a.img": {
      frame: {
        x: 2944,
        y: 1604,
        w: 146,
        h: 146
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 7,
        w: 146,
        h: 146
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "map-class-shell-01b.img": {
      frame: {
        x: 2944,
        y: 1754,
        w: 146,
        h: 146
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 7,
        w: 146,
        h: 146
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "map-class-shell-02a.img": {
      frame: {
        x: 3698,
        y: 3128,
        w: 146,
        h: 146
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 7,
        w: 146,
        h: 146
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "map-class-shell-02b.img": {
      frame: {
        x: 2,
        y: 3628,
        w: 146,
        h: 146
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 7,
        w: 146,
        h: 146
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "map-stone-01cb.img": {
      frame: {
        x: 3028,
        y: 2386,
        w: 144,
        h: 144
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 144
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-class-crate-assault.img": {
      frame: {
        x: 3028,
        y: 2534,
        w: 142,
        h: 142
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 142,
        h: 142
      },
      sourceSize: {
        w: 148,
        h: 148
      }
    },
    "map-class-crate-scout.img": {
      frame: {
        x: 3028,
        y: 2680,
        w: 142,
        h: 142
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 142,
        h: 142
      },
      sourceSize: {
        w: 148,
        h: 148
      }
    },
    "map-class-crate-sniper.img": {
      frame: {
        x: 3028,
        y: 2826,
        w: 142,
        h: 142
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 142,
        h: 142
      },
      sourceSize: {
        w: 148,
        h: 148
      }
    },
    "map-class-crate-healer.img": {
      frame: {
        x: 152,
        y: 3628,
        w: 142,
        h: 142
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 142,
        h: 142
      },
      sourceSize: {
        w: 148,
        h: 148
      }
    },
    "map-class-crate-tank.img": {
      frame: {
        x: 298,
        y: 3628,
        w: 142,
        h: 142
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 142,
        h: 142
      },
      sourceSize: {
        w: 148,
        h: 148
      }
    },
    "map-class-crate-demo.img": {
      frame: {
        x: 444,
        y: 3628,
        w: 142,
        h: 142
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 142,
        h: 142
      },
      sourceSize: {
        w: 148,
        h: 148
      }
    },
    "map-class-crate-03.img": {
      frame: {
        x: 726,
        y: 3484,
        w: 134,
        h: 134
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 7,
        w: 134,
        h: 134
      },
      sourceSize: {
        w: 148,
        h: 148
      }
    },
    "map-class-crate-res-01.img": {
      frame: {
        x: 3755,
        y: 2883,
        w: 125,
        h: 128
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 15,
        w: 125,
        h: 128
      },
      sourceSize: {
        w: 148,
        h: 148
      }
    },
    "map-stone-res-01cb.img": {
      frame: {
        x: 3693,
        y: 1111,
        w: 118,
        h: 118
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 118,
        h: 118
      },
      sourceSize: {
        w: 120,
        h: 120
      }
    },
    "part-class-shell-01a.img": {
      frame: {
        x: 3774,
        y: 2679,
        w: 88,
        h: 88
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 4,
        w: 88,
        h: 88
      },
      sourceSize: {
        w: 96,
        h: 96
      }
    },
    "part-class-shell-02a.img": {
      frame: {
        x: 3774,
        y: 2771,
        w: 88,
        h: 88
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 4,
        w: 88,
        h: 88
      },
      sourceSize: {
        w: 96,
        h: 96
      }
    },
    "part-class-shell-03a.img": {
      frame: {
        x: 2558,
        y: 2066,
        w: 88,
        h: 88
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 4,
        w: 88,
        h: 88
      },
      sourceSize: {
        w: 96,
        h: 96
      }
    },
    "part-class-shell-01b.img": {
      frame: {
        x: 3815,
        y: 1111,
        w: 52,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 52,
        h: 64
      },
      sourceSize: {
        w: 52,
        h: 64
      }
    },
    "part-class-shell-02b.img": {
      frame: {
        x: 3825,
        y: 1233,
        w: 52,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 52,
        h: 64
      },
      sourceSize: {
        w: 52,
        h: 64
      }
    },
    "map-bunker-generic-floor-03.img": {
      frame: {
        x: 3693,
        y: 877,
        w: 160,
        h: 230
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 230
      },
      sourceSize: {
        w: 160,
        h: 230
      }
    }
  }
}];
const Hs = {
  loadout: As,
  shared: Rs,
  halloween: Ns,
  snow: Es,
  faction: Os,
  desert: Bs,
  gradient: qs,
  savannah: js,
  main: Fs,
  potato: Gs,
  woods: Vs,
  cobalt: Us
};
const Ws = [{
  meta: {
    image: "loadout-0-50-c16c5245.png",
    size: {
      w: 2048,
      h: 2048
    },
    scale: 0.5
  },
  frames: {
    "part-aura-circle-01.img": {
      frame: {
        x: 260,
        y: 2,
        w: 144,
        h: 144
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 144
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "ping-map-pulse.img": {
      frame: {
        x: 2,
        y: 2,
        w: 254,
        h: 253
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 254,
        h: 253
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "part-shell-05.img": {
      frame: {
        x: 2,
        y: 259,
        w: 32,
        h: 130
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 130
      },
      sourceSize: {
        w: 32,
        h: 130
      }
    },
    "part-smoke-02.img": {
      frame: {
        x: 38,
        y: 259,
        w: 130,
        h: 129
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: 0,
        w: 130,
        h: 129
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "part-smoke-03.img": {
      frame: {
        x: 172,
        y: 259,
        w: 129,
        h: 129
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: -1,
        w: 129,
        h: 129
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "emote-circle-outer.img": {
      frame: {
        x: 408,
        y: 2,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "gun-scarssr-01.img": {
      frame: {
        x: 408,
        y: 134,
        w: 32,
        h: 126
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: -1,
        w: 32,
        h: 126
      },
      sourceSize: {
        w: 30,
        h: 124
      }
    },
    "gun-potato-cannon-01.img": {
      frame: {
        x: 444,
        y: 134,
        w: 30,
        h: 126
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: -1,
        w: 30,
        h: 126
      },
      sourceSize: {
        w: 28,
        h: 124
      }
    },
    "gun-awc-02.img": {
      frame: {
        x: 478,
        y: 134,
        w: 28,
        h: 117
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 28,
        h: 117
      },
      sourceSize: {
        w: 30,
        h: 118
      }
    },
    "gun-awc-01.img": {
      frame: {
        x: 408,
        y: 264,
        w: 28,
        h: 117
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 28,
        h: 117
      },
      sourceSize: {
        w: 30,
        h: 118
      }
    },
    "gun-m249-top-01.img": {
      frame: {
        x: 510,
        y: 134,
        w: 24,
        h: 111
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 6,
        w: 24,
        h: 111
      },
      sourceSize: {
        w: 28,
        h: 116
      }
    },
    "gun-garand-01.img": {
      frame: {
        x: 440,
        y: 264,
        w: 22,
        h: 110
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 7,
        w: 22,
        h: 110
      },
      sourceSize: {
        w: 24,
        h: 116
      }
    },
    "gun-potato-smg-01.img": {
      frame: {
        x: 466,
        y: 264,
        w: 55,
        h: 109
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 16,
        w: 55,
        h: 109
      },
      sourceSize: {
        w: 88,
        h: 124
      }
    },
    "gun-usas-01.img": {
      frame: {
        x: 305,
        y: 259,
        w: 26,
        h: 108
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 9,
        w: 26,
        h: 108
      },
      sourceSize: {
        w: 28,
        h: 116
      }
    },
    "gun-vss-01.img": {
      frame: {
        x: 335,
        y: 259,
        w: 24,
        h: 106
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: -1,
        w: 24,
        h: 106
      },
      sourceSize: {
        w: 24,
        h: 104
      }
    },
    "pad.img": {
      frame: {
        x: 260,
        y: 150,
        w: 104,
        h: 104
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 104,
        h: 104
      },
      sourceSize: {
        w: 104,
        h: 104
      }
    },
    "gun-scorpion-01.img": {
      frame: {
        x: 368,
        y: 150,
        w: 24,
        h: 103
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: 2,
        w: 24,
        h: 103
      },
      sourceSize: {
        w: 24,
        h: 104
      }
    },
    "gun-pkp-top-01.img": {
      frame: {
        x: 363,
        y: 259,
        w: 23,
        h: 99
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 18,
        w: 23,
        h: 99
      },
      sourceSize: {
        w: 28,
        h: 116
      }
    },
    "gun-grozas-01.img": {
      frame: {
        x: 2,
        y: 393,
        w: 24,
        h: 98
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 7,
        w: 24,
        h: 98
      },
      sourceSize: {
        w: 24,
        h: 104
      }
    },
    "gun-m4a1-01.img": {
      frame: {
        x: 30,
        y: 393,
        w: 25,
        h: 97
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: 2,
        w: 25,
        h: 97
      },
      sourceSize: {
        w: 24,
        h: 98
      }
    },
    "gun-long-01.img": {
      frame: {
        x: 59,
        y: 393,
        w: 18,
        h: 96
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: -1,
        w: 18,
        h: 96
      },
      sourceSize: {
        w: 16,
        h: 94
      }
    },
    "part-shell-02.img": {
      frame: {
        x: 81,
        y: 393,
        w: 32,
        h: 95
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 95
      },
      sourceSize: {
        w: 32,
        h: 95
      }
    },
    "gun-saiga-01.img": {
      frame: {
        x: 117,
        y: 393,
        w: 22,
        h: 91
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 22,
        h: 91
      },
      sourceSize: {
        w: 24,
        h: 98
      }
    },
    "player-helmet-forest.img": {
      frame: {
        x: 143,
        y: 393,
        w: 78,
        h: 90
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: -1,
        w: 78,
        h: 90
      },
      sourceSize: {
        w: 88,
        h: 88
      }
    },
    "part-shell-03.img": {
      frame: {
        x: 225,
        y: 393,
        w: 32,
        h: 90
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 90
      },
      sourceSize: {
        w: 32,
        h: 90
      }
    },
    "player-wading-01.img": {
      frame: {
        x: 261,
        y: 393,
        w: 88,
        h: 88
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: -1,
        w: 88,
        h: 88
      },
      sourceSize: {
        w: 86,
        h: 86
      }
    },
    "gun-famas-01.img": {
      frame: {
        x: 353,
        y: 393,
        w: 22,
        h: 87
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 18,
        w: 22,
        h: 87
      },
      sourceSize: {
        w: 24,
        h: 104
      }
    },
    "loot-melee-machete-taiga.img": {
      frame: {
        x: 379,
        y: 393,
        w: 24,
        h: 84
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 29,
        y: 0,
        w: 24,
        h: 84
      },
      sourceSize: {
        w: 84,
        h: 84
      }
    },
    "part-shell-04.img": {
      frame: {
        x: 407,
        y: 393,
        w: 28,
        h: 82
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 28,
        h: 82
      },
      sourceSize: {
        w: 28,
        h: 82
      }
    },
    "proj-smoke-nopin.img": {
      frame: {
        x: 439,
        y: 393,
        w: 80,
        h: 80
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 80
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "part-airdrop-03.img": {
      frame: {
        x: 540,
        y: 2,
        w: 80,
        h: 80
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 80
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "proj-smoke-pin.img": {
      frame: {
        x: 540,
        y: 86,
        w: 80,
        h: 80
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 80
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "proj-bomb-iron-01.img": {
      frame: {
        x: 540,
        y: 170,
        w: 36,
        h: 80
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 22,
        y: 0,
        w: 36,
        h: 80
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "loot-melee-bonesaw-healer.img": {
      frame: {
        x: 580,
        y: 170,
        w: 34,
        h: 80
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 30,
        y: 4,
        w: 34,
        h: 80
      },
      sourceSize: {
        w: 84,
        h: 84
      }
    },
    "loot-melee-bonesaw-rusted.img": {
      frame: {
        x: 540,
        y: 254,
        w: 30,
        h: 80
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 39,
        y: 10,
        w: 30,
        h: 80
      },
      sourceSize: {
        w: 96,
        h: 96
      }
    },
    "loot-melee-kukri-sniper.img": {
      frame: {
        x: 574,
        y: 254,
        w: 23,
        h: 80
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 26,
        y: 0,
        w: 23,
        h: 80
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "loot-melee-kukri-trad.img": {
      frame: {
        x: 540,
        y: 338,
        w: 23,
        h: 80
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 26,
        y: 0,
        w: 23,
        h: 80
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "part-airdrop-02x.img": {
      frame: {
        x: 601,
        y: 254,
        w: 19,
        h: 80
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 19,
        h: 80
      },
      sourceSize: {
        w: 19,
        h: 80
      }
    },
    "part-airdrop-02.img": {
      frame: {
        x: 567,
        y: 338,
        w: 19,
        h: 80
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 19,
        h: 80
      },
      sourceSize: {
        w: 19,
        h: 80
      }
    },
    "player-helmet-moon.img": {
      frame: {
        x: 2,
        y: 495,
        w: 64,
        h: 78
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 5,
        w: 64,
        h: 78
      },
      sourceSize: {
        w: 88,
        h: 88
      }
    },
    "loot-melee-spade-assault.img": {
      frame: {
        x: 590,
        y: 338,
        w: 30,
        h: 78
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 25,
        y: 1,
        w: 30,
        h: 78
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "gun-groza-01.img": {
      frame: {
        x: 70,
        y: 495,
        w: 24,
        h: 77
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 28,
        w: 24,
        h: 77
      },
      sourceSize: {
        w: 24,
        h: 104
      }
    },
    "player-armor-base-01.img": {
      frame: {
        x: 98,
        y: 495,
        w: 76,
        h: 76
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: -1,
        w: 76,
        h: 76
      },
      sourceSize: {
        w: 74,
        h: 74
      }
    },
    "player-circle-base-01.img": {
      frame: {
        x: 178,
        y: 495,
        w: 76,
        h: 76
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: -1,
        w: 76,
        h: 76
      },
      sourceSize: {
        w: 74,
        h: 74
      }
    },
    "player-circle-base-02.img": {
      frame: {
        x: 258,
        y: 495,
        w: 76,
        h: 76
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: -1,
        w: 76,
        h: 76
      },
      sourceSize: {
        w: 74,
        h: 74
      }
    },
    "proj-smoke-nopin-nolever.img": {
      frame: {
        x: 338,
        y: 495,
        w: 42,
        h: 75
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 19,
        y: 2,
        w: 42,
        h: 75
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "star.img": {
      frame: {
        x: 384,
        y: 495,
        w: 74,
        h: 74
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 74,
        h: 74
      },
      sourceSize: {
        w: 74,
        h: 74
      }
    },
    "player-star.img": {
      frame: {
        x: 462,
        y: 495,
        w: 74,
        h: 74
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 74,
        h: 74
      },
      sourceSize: {
        w: 74,
        h: 74
      }
    },
    "proj-mirv-nopin.img": {
      frame: {
        x: 540,
        y: 495,
        w: 53,
        h: 74
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 11,
        y: 0,
        w: 53,
        h: 74
      },
      sourceSize: {
        w: 64,
        h: 74
      }
    },
    "proj-mirv-pin.img": {
      frame: {
        x: 624,
        y: 2,
        w: 53,
        h: 74
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 53,
        h: 74
      },
      sourceSize: {
        w: 64,
        h: 74
      }
    },
    "proj-mirv-nopin-nolever.img": {
      frame: {
        x: 624,
        y: 80,
        w: 42,
        h: 74
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 11,
        y: 0,
        w: 42,
        h: 74
      },
      sourceSize: {
        w: 64,
        h: 74
      }
    },
    "player-ripple-01.img": {
      frame: {
        x: 2,
        y: 577,
        w: 73,
        h: 73
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: -1,
        w: 73,
        h: 73
      },
      sourceSize: {
        w: 71,
        h: 71
      }
    },
    "loot-circle-outer-05.img": {
      frame: {
        x: 79,
        y: 577,
        w: 73,
        h: 73
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 73,
        h: 73
      },
      sourceSize: {
        w: 73,
        h: 73
      }
    },
    "loot-circle-outer-02.img": {
      frame: {
        x: 156,
        y: 577,
        w: 73,
        h: 73
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 73,
        h: 73
      },
      sourceSize: {
        w: 73,
        h: 73
      }
    },
    "loot-circle-outer-01.img": {
      frame: {
        x: 233,
        y: 577,
        w: 73,
        h: 73
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 73,
        h: 73
      },
      sourceSize: {
        w: 73,
        h: 73
      }
    },
    "gun-bugle-01.img": {
      frame: {
        x: 624,
        y: 158,
        w: 36,
        h: 73
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 43,
        w: 36,
        h: 73
      },
      sourceSize: {
        w: 48,
        h: 116
      }
    },
    "player-helmet-last-man-02.img": {
      frame: {
        x: 310,
        y: 577,
        w: 73,
        h: 72
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 8,
        w: 73,
        h: 72
      },
      sourceSize: {
        w: 88,
        h: 88
      }
    },
    "player-helmet-last-man-01.img": {
      frame: {
        x: 387,
        y: 577,
        w: 73,
        h: 72
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 8,
        w: 73,
        h: 72
      },
      sourceSize: {
        w: 88,
        h: 88
      }
    },
    "part-panel-01.img": {
      frame: {
        x: 464,
        y: 577,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "player-the-hunted.img": {
      frame: {
        x: 540,
        y: 577,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "part-woodchip-01.img": {
      frame: {
        x: 681,
        y: 2,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "part-plank-01.img": {
      frame: {
        x: 681,
        y: 78,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "ping-border.img": {
      frame: {
        x: 681,
        y: 154,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "player-base-02.img": {
      frame: {
        x: 681,
        y: 230,
        w: 70,
        h: 72
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: -1,
        w: 70,
        h: 72
      },
      sourceSize: {
        w: 70,
        h: 70
      }
    },
    "part-book-01.img": {
      frame: {
        x: 681,
        y: 306,
        w: 56,
        h: 72
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 0,
        w: 56,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "loot-melee-crowbar-recon.img": {
      frame: {
        x: 681,
        y: 382,
        w: 22,
        h: 72
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 25,
        y: 2,
        w: 22,
        h: 72
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "loot-melee-crowbar-scout.img": {
      frame: {
        x: 707,
        y: 382,
        w: 22,
        h: 72
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 25,
        y: 2,
        w: 22,
        h: 72
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "player-base-01.img": {
      frame: {
        x: 681,
        y: 458,
        w: 70,
        h: 71
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 70,
        h: 71
      },
      sourceSize: {
        w: 70,
        h: 70
      }
    },
    "part-pot-01.img": {
      frame: {
        x: 681,
        y: 533,
        w: 50,
        h: 71
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 11,
        y: 1,
        w: 50,
        h: 71
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "player-king-woods.img": {
      frame: {
        x: 2,
        y: 654,
        w: 72,
        h: 70
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 2,
        w: 72,
        h: 70
      },
      sourceSize: {
        w: 74,
        h: 74
      }
    },
    "part-plate-01.img": {
      frame: {
        x: 78,
        y: 654,
        w: 72,
        h: 70
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 72,
        h: 70
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "player-base-outfitTurkey.img": {
      frame: {
        x: 154,
        y: 654,
        w: 70,
        h: 70
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 70,
        h: 70
      },
      sourceSize: {
        w: 70,
        h: 70
      }
    },
    "player-base-outfitSpetsnaz.img": {
      frame: {
        x: 228,
        y: 654,
        w: 70,
        h: 70
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 70,
        h: 70
      },
      sourceSize: {
        w: 70,
        h: 70
      }
    },
    "player-base-outfitHeaven.img": {
      frame: {
        x: 302,
        y: 654,
        w: 69,
        h: 70
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 0,
        w: 69,
        h: 70
      },
      sourceSize: {
        w: 70,
        h: 70
      }
    },
    "player-base-outfitDC.img": {
      frame: {
        x: 375,
        y: 654,
        w: 69,
        h: 70
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 69,
        h: 70
      },
      sourceSize: {
        w: 70,
        h: 70
      }
    },
    "player-base-outfitParmaPrestige.img": {
      frame: {
        x: 448,
        y: 654,
        w: 68,
        h: 70
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 1,
        w: 68,
        h: 70
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "player-base-outfitWheat.img": {
      frame: {
        x: 540,
        y: 422,
        w: 70,
        h: 69
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 70,
        h: 69
      },
      sourceSize: {
        w: 70,
        h: 70
      }
    },
    "player-base-outfitLumber.img": {
      frame: {
        x: 520,
        y: 654,
        w: 69,
        h: 69
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 69,
        h: 69
      },
      sourceSize: {
        w: 70,
        h: 70
      }
    },
    "loot-melee-warhammer-tank.img": {
      frame: {
        x: 593,
        y: 654,
        w: 131,
        h: 68
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 7,
        w: 131,
        h: 68
      },
      sourceSize: {
        w: 132,
        h: 76
      }
    },
    "loot-circle-outer-04.img": {
      frame: {
        x: 757,
        y: 2,
        w: 73,
        h: 68
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 73,
        h: 68
      },
      sourceSize: {
        w: 73,
        h: 73
      }
    },
    "part-splat-02.img": {
      frame: {
        x: 757,
        y: 74,
        w: 64,
        h: 68
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 2,
        w: 64,
        h: 68
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "ping-map-coming.img": {
      frame: {
        x: 757,
        y: 146,
        w: 60,
        h: 68
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 60,
        h: 68
      },
      sourceSize: {
        w: 64,
        h: 128
      }
    },
    "player-helmet-potato.img": {
      frame: {
        x: 757,
        y: 218,
        w: 53,
        h: 68
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 10,
        w: 53,
        h: 68
      },
      sourceSize: {
        w: 88,
        h: 88
      }
    },
    "player-helmet-leader.img": {
      frame: {
        x: 757,
        y: 290,
        w: 51,
        h: 68
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 10,
        w: 51,
        h: 68
      },
      sourceSize: {
        w: 88,
        h: 88
      }
    },
    "player-helmet-medic.img": {
      frame: {
        x: 757,
        y: 362,
        w: 51,
        h: 68
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 10,
        w: 51,
        h: 68
      },
      sourceSize: {
        w: 88,
        h: 88
      }
    },
    "player-helmet-lieutenant.img": {
      frame: {
        x: 757,
        y: 434,
        w: 51,
        h: 68
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 10,
        w: 51,
        h: 68
      },
      sourceSize: {
        w: 88,
        h: 88
      }
    },
    "player-visor-scout.img": {
      frame: {
        x: 757,
        y: 506,
        w: 42,
        h: 68
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 36,
        y: 10,
        w: 42,
        h: 68
      },
      sourceSize: {
        w: 88,
        h: 88
      }
    },
    "loot-circle-outer-03.img": {
      frame: {
        x: 757,
        y: 578,
        w: 73,
        h: 67
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 3,
        w: 73,
        h: 67
      },
      sourceSize: {
        w: 73,
        h: 73
      }
    },
    "part-shell-01.img": {
      frame: {
        x: 757,
        y: 649,
        w: 28,
        h: 67
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 28,
        h: 67
      },
      sourceSize: {
        w: 28,
        h: 67
      }
    },
    "star-red.img": {
      frame: {
        x: 2,
        y: 728,
        w: 70,
        h: 66
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 1,
        w: 70,
        h: 66
      },
      sourceSize: {
        w: 74,
        h: 74
      }
    },
    "star-blue.img": {
      frame: {
        x: 76,
        y: 728,
        w: 70,
        h: 66
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 1,
        w: 70,
        h: 66
      },
      sourceSize: {
        w: 74,
        h: 74
      }
    },
    "part-heal-tomoe.img": {
      frame: {
        x: 616,
        y: 577,
        w: 55,
        h: 66
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: -1,
        w: 55,
        h: 66
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "part-boost-naturalize.img": {
      frame: {
        x: 624,
        y: 235,
        w: 52,
        h: 66
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: -1,
        w: 52,
        h: 66
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "player-helmet-grenadier.img": {
      frame: {
        x: 624,
        y: 305,
        w: 49,
        h: 66
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 13,
        y: 11,
        w: 49,
        h: 66
      },
      sourceSize: {
        w: 88,
        h: 88
      }
    },
    "player-helmet-recon.img": {
      frame: {
        x: 624,
        y: 375,
        w: 49,
        h: 66
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 13,
        y: 11,
        w: 49,
        h: 66
      },
      sourceSize: {
        w: 88,
        h: 88
      }
    },
    "player-helmet-bugler.img": {
      frame: {
        x: 624,
        y: 445,
        w: 49,
        h: 66
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 13,
        y: 11,
        w: 49,
        h: 66
      },
      sourceSize: {
        w: 88,
        h: 88
      }
    },
    "gun-deagle-01.img": {
      frame: {
        x: 803,
        y: 506,
        w: 26,
        h: 66
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 51,
        w: 26,
        h: 66
      },
      sourceSize: {
        w: 28,
        h: 116
      }
    },
    "gun-mp220-01.img": {
      frame: {
        x: 789,
        y: 649,
        w: 22,
        h: 66
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: -1,
        w: 22,
        h: 66
      },
      sourceSize: {
        w: 20,
        h: 64
      }
    },
    "gun-med-01.img": {
      frame: {
        x: 812,
        y: 290,
        w: 18,
        h: 66
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: -1,
        w: 18,
        h: 66
      },
      sourceSize: {
        w: 16,
        h: 64
      }
    },
    "proj-strobe-unarmed.img": {
      frame: {
        x: 150,
        y: 728,
        w: 76,
        h: 65
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 11,
        w: 76,
        h: 65
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "part-splat-01.img": {
      frame: {
        x: 230,
        y: 728,
        w: 66,
        h: 65
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 66,
        h: 65
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "part-splat-03.img": {
      frame: {
        x: 300,
        y: 728,
        w: 65,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 1,
        w: 65,
        h: 64
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "flag-indonesia.img": {
      frame: {
        x: 369,
        y: 728,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-israel.img": {
      frame: {
        x: 437,
        y: 728,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-italy.img": {
      frame: {
        x: 505,
        y: 728,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-japan.img": {
      frame: {
        x: 573,
        y: 728,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-kazakhstan.img": {
      frame: {
        x: 641,
        y: 728,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-latvia.img": {
      frame: {
        x: 709,
        y: 728,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-lithuania.img": {
      frame: {
        x: 834,
        y: 2,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-malaysia.img": {
      frame: {
        x: 834,
        y: 70,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-mexico.img": {
      frame: {
        x: 834,
        y: 138,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-moldova.img": {
      frame: {
        x: 834,
        y: 206,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-morocco.img": {
      frame: {
        x: 834,
        y: 274,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-netherlands.img": {
      frame: {
        x: 834,
        y: 342,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-new-zealand.img": {
      frame: {
        x: 834,
        y: 410,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-norway.img": {
      frame: {
        x: 834,
        y: 478,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-peru.img": {
      frame: {
        x: 834,
        y: 546,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-philippines.img": {
      frame: {
        x: 834,
        y: 614,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-portugal.img": {
      frame: {
        x: 834,
        y: 682,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-republic-of-poland.img": {
      frame: {
        x: 2,
        y: 798,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-romania.img": {
      frame: {
        x: 70,
        y: 798,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-russia.img": {
      frame: {
        x: 138,
        y: 798,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-serbia.img": {
      frame: {
        x: 206,
        y: 798,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-singapore.img": {
      frame: {
        x: 274,
        y: 798,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-slovakia.img": {
      frame: {
        x: 342,
        y: 798,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-south-korea.img": {
      frame: {
        x: 410,
        y: 798,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-spain.img": {
      frame: {
        x: 478,
        y: 798,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-sweden.img": {
      frame: {
        x: 546,
        y: 798,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-switzerland.img": {
      frame: {
        x: 614,
        y: 798,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-taiwan.img": {
      frame: {
        x: 682,
        y: 798,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-thailand.img": {
      frame: {
        x: 750,
        y: 798,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-trinidad-and-tobago.img": {
      frame: {
        x: 818,
        y: 798,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-turkey.img": {
      frame: {
        x: 902,
        y: 2,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-ukraine.img": {
      frame: {
        x: 902,
        y: 70,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-united-arab-emirates.img": {
      frame: {
        x: 902,
        y: 138,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-united-kingdom.img": {
      frame: {
        x: 902,
        y: 206,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-united-states-of-america.img": {
      frame: {
        x: 902,
        y: 274,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-uruguay.img": {
      frame: {
        x: 902,
        y: 342,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-venezuela.img": {
      frame: {
        x: 902,
        y: 410,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-vietnam.img": {
      frame: {
        x: 902,
        y: 478,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-ammo-box.img": {
      frame: {
        x: 902,
        y: 546,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "face-imp-trick.img": {
      frame: {
        x: 902,
        y: 614,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "face-imp.img": {
      frame: {
        x: 902,
        y: 682,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "face-joy.img": {
      frame: {
        x: 902,
        y: 750,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "heart.img": {
      frame: {
        x: 2,
        y: 866,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "face-monocle.img": {
      frame: {
        x: 70,
        y: 866,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "face-happy.img": {
      frame: {
        x: 138,
        y: 866,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "part-heal-basic.img": {
      frame: {
        x: 206,
        y: 866,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "face-poo.img": {
      frame: {
        x: 274,
        y: 866,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "face-sad.img": {
      frame: {
        x: 342,
        y: 866,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "face-sob.img": {
      frame: {
        x: 410,
        y: 866,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "face-sunglass.img": {
      frame: {
        x: 478,
        y: 866,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "face-thinking.img": {
      frame: {
        x: 546,
        y: 866,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "face-upsidedown.img": {
      frame: {
        x: 614,
        y: 866,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "face-disappoint.img": {
      frame: {
        x: 682,
        y: 866,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "face-heart.img": {
      frame: {
        x: 750,
        y: 866,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "part-log-01.img": {
      frame: {
        x: 818,
        y: 866,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "face-bandaged.img": {
      frame: {
        x: 886,
        y: 866,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "face-angry.img": {
      frame: {
        x: 970,
        y: 2,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-albania.img": {
      frame: {
        x: 970,
        y: 70,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-algeria.img": {
      frame: {
        x: 970,
        y: 138,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-argentina.img": {
      frame: {
        x: 970,
        y: 206,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "face-angel-treat.img": {
      frame: {
        x: 970,
        y: 274,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-australia.img": {
      frame: {
        x: 970,
        y: 342,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-austria.img": {
      frame: {
        x: 970,
        y: 410,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-azerbaijan.img": {
      frame: {
        x: 970,
        y: 478,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-belarus.img": {
      frame: {
        x: 970,
        y: 546,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-belgium.img": {
      frame: {
        x: 970,
        y: 614,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-bolivia.img": {
      frame: {
        x: 970,
        y: 682,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-bosnia-and-herzegovina.img": {
      frame: {
        x: 970,
        y: 750,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-brazil.img": {
      frame: {
        x: 970,
        y: 818,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-canada.img": {
      frame: {
        x: 2,
        y: 934,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-chile.img": {
      frame: {
        x: 70,
        y: 934,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-china.img": {
      frame: {
        x: 138,
        y: 934,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "surviv.img": {
      frame: {
        x: 206,
        y: 934,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "face-alien.img": {
      frame: {
        x: 274,
        y: 934,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-colombia.img": {
      frame: {
        x: 342,
        y: 934,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-croatia.img": {
      frame: {
        x: 410,
        y: 934,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-czech-republic.img": {
      frame: {
        x: 478,
        y: 934,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-denmark.img": {
      frame: {
        x: 546,
        y: 934,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-dominican-republic.img": {
      frame: {
        x: 614,
        y: 934,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-ecuador.img": {
      frame: {
        x: 682,
        y: 934,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-egypt.img": {
      frame: {
        x: 750,
        y: 934,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-estonia.img": {
      frame: {
        x: 818,
        y: 934,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "chicken-dinner.img": {
      frame: {
        x: 886,
        y: 934,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-finland.img": {
      frame: {
        x: 954,
        y: 934,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-france.img": {
      frame: {
        x: 1038,
        y: 2,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-perk-aoe-heal.img": {
      frame: {
        x: 1038,
        y: 70,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-georgia.img": {
      frame: {
        x: 1038,
        y: 138,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-germany.img": {
      frame: {
        x: 1038,
        y: 206,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-greece.img": {
      frame: {
        x: 1038,
        y: 274,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-potato-cannon.img": {
      frame: {
        x: 1038,
        y: 342,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-perk-firepower.img": {
      frame: {
        x: 1038,
        y: 410,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-guatemala.img": {
      frame: {
        x: 1038,
        y: 478,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "emote.img": {
      frame: {
        x: 1038,
        y: 546,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-perk-gotw.img": {
      frame: {
        x: 1038,
        y: 614,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-ot38-dual.img": {
      frame: {
        x: 1038,
        y: 682,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-perk-hunted.img": {
      frame: {
        x: 1038,
        y: 750,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-perk-leadership.img": {
      frame: {
        x: 1038,
        y: 818,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-perk-targeting.img": {
      frame: {
        x: 1038,
        y: 886,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-m93r-dual.img": {
      frame: {
        x: 2,
        y: 1002,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-honduras.img": {
      frame: {
        x: 70,
        y: 1002,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-scope-00.img": {
      frame: {
        x: 138,
        y: 1002,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-scope-01.img": {
      frame: {
        x: 206,
        y: 1002,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-scope-02.img": {
      frame: {
        x: 274,
        y: 1002,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loadout-crosshair.img": {
      frame: {
        x: 342,
        y: 1002,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loadout-emote.img": {
      frame: {
        x: 410,
        y: 1002,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-scope-03.img": {
      frame: {
        x: 478,
        y: 1002,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-scope-04.img": {
      frame: {
        x: 546,
        y: 1002,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loadout-melee.img": {
      frame: {
        x: 614,
        y: 1002,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-hong-kong.img": {
      frame: {
        x: 682,
        y: 1002,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "ping-team-unlock.img": {
      frame: {
        x: 750,
        y: 1002,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "ping-team-help.img": {
      frame: {
        x: 818,
        y: 1002,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "ping-team-danger.img": {
      frame: {
        x: 886,
        y: 1002,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "ping-team-coming.img": {
      frame: {
        x: 954,
        y: 1002,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "ping-team-airstrike.img": {
      frame: {
        x: 1022,
        y: 1002,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "ping-team-airdrop.img": {
      frame: {
        x: 1106,
        y: 2,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-hungary.img": {
      frame: {
        x: 1106,
        y: 70,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-bar.img": {
      frame: {
        x: 1106,
        y: 138,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-colt45-dual.img": {
      frame: {
        x: 1106,
        y: 206,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-deagle-dual.img": {
      frame: {
        x: 1106,
        y: 274,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flag-india.img": {
      frame: {
        x: 1106,
        y: 342,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-grozas.img": {
      frame: {
        x: 1106,
        y: 410,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-usas.img": {
      frame: {
        x: 1106,
        y: 478,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "face-picasso.img": {
      frame: {
        x: 1106,
        y: 546,
        w: 63,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 0,
        w: 63,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "rainbow.img": {
      frame: {
        x: 1106,
        y: 614,
        w: 63,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 0,
        w: 63,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-m4a1.img": {
      frame: {
        x: 1106,
        y: 682,
        w: 62,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 0,
        w: 62,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "campfire.img": {
      frame: {
        x: 1106,
        y: 750,
        w: 62,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 0,
        w: 62,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-l86.img": {
      frame: {
        x: 1106,
        y: 818,
        w: 62,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 0,
        w: 62,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-perk-splinter.img": {
      frame: {
        x: 1106,
        y: 886,
        w: 62,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 0,
        w: 62,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-m1a1.img": {
      frame: {
        x: 1106,
        y: 954,
        w: 60,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 60,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-dp28.img": {
      frame: {
        x: 2,
        y: 1070,
        w: 60,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 60,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-an94.img": {
      frame: {
        x: 66,
        y: 1070,
        w: 60,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 60,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-saiga.img": {
      frame: {
        x: 130,
        y: 1070,
        w: 60,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 60,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "snowflake.img": {
      frame: {
        x: 194,
        y: 1070,
        w: 60,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 60,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-pkp.img": {
      frame: {
        x: 258,
        y: 1070,
        w: 60,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 60,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-scorpion.img": {
      frame: {
        x: 322,
        y: 1070,
        w: 60,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 60,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-m249.img": {
      frame: {
        x: 386,
        y: 1070,
        w: 60,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 60,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-mkg45.img": {
      frame: {
        x: 450,
        y: 1070,
        w: 60,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 60,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-mk12.img": {
      frame: {
        x: 514,
        y: 1070,
        w: 60,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 60,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-potato-smg.img": {
      frame: {
        x: 578,
        y: 1070,
        w: 59,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 59,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-m1014.img": {
      frame: {
        x: 641,
        y: 1070,
        w: 58,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 0,
        w: 58,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-flare-gun-dual.img": {
      frame: {
        x: 703,
        y: 1070,
        w: 58,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 0,
        w: 58,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-svd.img": {
      frame: {
        x: 765,
        y: 1070,
        w: 58,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 0,
        w: 58,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "trash.img": {
      frame: {
        x: 827,
        y: 1070,
        w: 58,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 0,
        w: 58,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "cupcake.img": {
      frame: {
        x: 889,
        y: 1070,
        w: 58,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 0,
        w: 58,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "reload.img": {
      frame: {
        x: 951,
        y: 1070,
        w: 57,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 0,
        w: 57,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "thumbs-up.img": {
      frame: {
        x: 1012,
        y: 1070,
        w: 56,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 0,
        w: 56,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-vss.img": {
      frame: {
        x: 1072,
        y: 1070,
        w: 56,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 0,
        w: 56,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-m39.img": {
      frame: {
        x: 1174,
        y: 2,
        w: 56,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 0,
        w: 56,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-ots38-dual.img": {
      frame: {
        x: 1174,
        y: 70,
        w: 55,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 0,
        w: 55,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "candy-corn.img": {
      frame: {
        x: 1174,
        y: 138,
        w: 55,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 0,
        w: 55,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-m93r.img": {
      frame: {
        x: 1174,
        y: 206,
        w: 54,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 0,
        w: 54,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-ak.img": {
      frame: {
        x: 1174,
        y: 274,
        w: 54,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 0,
        w: 54,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "police.img": {
      frame: {
        x: 1174,
        y: 342,
        w: 54,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 0,
        w: 54,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "snowman.img": {
      frame: {
        x: 1174,
        y: 410,
        w: 52,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 0,
        w: 52,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-colt45.img": {
      frame: {
        x: 1174,
        y: 478,
        w: 50,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 0,
        w: 50,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-perk-rare-potato.img": {
      frame: {
        x: 1174,
        y: 546,
        w: 48,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 0,
        w: 48,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "indicator.img": {
      frame: {
        x: 1174,
        y: 614,
        w: 47,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 0,
        w: 47,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "bullets.img": {
      frame: {
        x: 1174,
        y: 682,
        w: 46,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 0,
        w: 46,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-throwable-smoke.img": {
      frame: {
        x: 1174,
        y: 750,
        w: 45,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 0,
        w: 45,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-chest-02.img": {
      frame: {
        x: 1174,
        y: 818,
        w: 42,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 11,
        y: 0,
        w: 42,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "ice-cream.img": {
      frame: {
        x: 1174,
        y: 886,
        w: 36,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 14,
        y: 0,
        w: 36,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "part-airdrop-04.img": {
      frame: {
        x: 1174,
        y: 954,
        w: 27,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 27,
        h: 64
      },
      sourceSize: {
        w: 27,
        h: 64
      }
    },
    "ping-map-danger.img": {
      frame: {
        x: 1205,
        y: 954,
        w: 22,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 21,
        y: 0,
        w: 22,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "gun-p30l-01.img": {
      frame: {
        x: 1174,
        y: 1022,
        w: 21,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 53,
        w: 21,
        h: 64
      },
      sourceSize: {
        w: 28,
        h: 116
      }
    },
    "loot-perk-chambered.img": {
      frame: {
        x: 2,
        y: 1138,
        w: 64,
        h: 63
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 64,
        h: 63
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-scarssr.img": {
      frame: {
        x: 70,
        y: 1138,
        w: 64,
        h: 63
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 64,
        h: 63
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-m1911-dual.img": {
      frame: {
        x: 138,
        y: 1138,
        w: 64,
        h: 63
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 64,
        h: 63
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-awc.img": {
      frame: {
        x: 206,
        y: 1138,
        w: 63,
        h: 63
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 63,
        h: 63
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-qbb97.img": {
      frame: {
        x: 273,
        y: 1138,
        w: 62,
        h: 63
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 62,
        h: 63
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "part-heal-moon.img": {
      frame: {
        x: 339,
        y: 1138,
        w: 62,
        h: 63
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 62,
        h: 63
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "tombstone.img": {
      frame: {
        x: 405,
        y: 1138,
        w: 60,
        h: 63
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 60,
        h: 63
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "proj-frag-pin-01.img": {
      frame: {
        x: 469,
        y: 1138,
        w: 57,
        h: 63
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 57,
        h: 63
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "proj-frag-pin-02.img": {
      frame: {
        x: 530,
        y: 1138,
        w: 57,
        h: 63
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 57,
        h: 63
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-m1911.img": {
      frame: {
        x: 591,
        y: 1138,
        w: 56,
        h: 63
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 1,
        w: 56,
        h: 63
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "proj-frag-nopin-02.img": {
      frame: {
        x: 651,
        y: 1138,
        w: 56,
        h: 63
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 1,
        w: 56,
        h: 63
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "proj-frag-nopin-01.img": {
      frame: {
        x: 711,
        y: 1138,
        w: 56,
        h: 63
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 1,
        w: 56,
        h: 63
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-hk416.img": {
      frame: {
        x: 771,
        y: 1138,
        w: 56,
        h: 63
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 0,
        w: 56,
        h: 63
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "egg.img": {
      frame: {
        x: 777,
        y: 728,
        w: 52,
        h: 63
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 0,
        w: 52,
        h: 63
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "proj-frag-nopin-nolever-01.img": {
      frame: {
        x: 831,
        y: 1138,
        w: 48,
        h: 63
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 1,
        w: 48,
        h: 63
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "proj-frag-nopin-nolever-02.img": {
      frame: {
        x: 883,
        y: 1138,
        w: 48,
        h: 63
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 1,
        w: 48,
        h: 63
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-perk-windwalk.img": {
      frame: {
        x: 935,
        y: 1138,
        w: 46,
        h: 63
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 1,
        w: 46,
        h: 63
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "part-heal-heart.img": {
      frame: {
        x: 985,
        y: 1138,
        w: 64,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 3,
        w: 64,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "salt.img": {
      frame: {
        x: 1053,
        y: 1138,
        w: 64,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 64,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-m9-dual.img": {
      frame: {
        x: 1121,
        y: 1138,
        w: 64,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 64,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-sv98.img": {
      frame: {
        x: 1234,
        y: 2,
        w: 64,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 2,
        w: 64,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "part-boost-star.img": {
      frame: {
        x: 1234,
        y: 68,
        w: 64,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 64,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "skull.img": {
      frame: {
        x: 1234,
        y: 134,
        w: 63,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 63,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loadout-kill-icon.img": {
      frame: {
        x: 1234,
        y: 200,
        w: 63,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 63,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "part-feather-01.img": {
      frame: {
        x: 1234,
        y: 266,
        w: 62,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 62,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "part-feather-02.img": {
      frame: {
        x: 1234,
        y: 332,
        w: 62,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 62,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "donut.img": {
      frame: {
        x: 1234,
        y: 398,
        w: 62,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 62,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-xp-stump-01.img": {
      frame: {
        x: 1234,
        y: 464,
        w: 62,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 62,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "mag-glass.img": {
      frame: {
        x: 1234,
        y: 530,
        w: 62,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 62,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "target.img": {
      frame: {
        x: 1234,
        y: 596,
        w: 62,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 62,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-perk-fabricate.img": {
      frame: {
        x: 1234,
        y: 662,
        w: 62,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 62,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-m870.img": {
      frame: {
        x: 1234,
        y: 728,
        w: 62,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 62,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loadout-heal.img": {
      frame: {
        x: 1234,
        y: 794,
        w: 62,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 62,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-m1100.img": {
      frame: {
        x: 1234,
        y: 860,
        w: 62,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 2,
        w: 62,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-chest-01.img": {
      frame: {
        x: 1234,
        y: 926,
        w: 62,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 62,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "part-boost-basic.img": {
      frame: {
        x: 1234,
        y: 992,
        w: 62,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 62,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "part-leaf-04.img": {
      frame: {
        x: 1234,
        y: 1058,
        w: 61,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 1,
        w: 61,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "part-leaf-03.img": {
      frame: {
        x: 1234,
        y: 1124,
        w: 61,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 1,
        w: 61,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "part-leaf-06.img": {
      frame: {
        x: 2,
        y: 1205,
        w: 61,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 1,
        w: 61,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "part-leaf-05.img": {
      frame: {
        x: 67,
        y: 1205,
        w: 61,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 1,
        w: 61,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-ump9.img": {
      frame: {
        x: 132,
        y: 1205,
        w: 60,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 1,
        w: 60,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-famas.img": {
      frame: {
        x: 196,
        y: 1205,
        w: 60,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 1,
        w: 60,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-vector45.img": {
      frame: {
        x: 260,
        y: 1205,
        w: 56,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 1,
        w: 56,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-medical-bandage.img": {
      frame: {
        x: 320,
        y: 1205,
        w: 56,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 1,
        w: 56,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-scar.img": {
      frame: {
        x: 380,
        y: 1205,
        w: 56,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 1,
        w: 56,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-xp-book-04.img": {
      frame: {
        x: 440,
        y: 1205,
        w: 52,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 1,
        w: 52,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-xp-book-02.img": {
      frame: {
        x: 496,
        y: 1205,
        w: 52,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 1,
        w: 52,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-m9.img": {
      frame: {
        x: 552,
        y: 1205,
        w: 52,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 1,
        w: 52,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "crosshair022.img": {
      frame: {
        x: 1589,
        y: 302,
        w: 10,
        h: 8
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 11,
        y: 12,
        w: 10,
        h: 8
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "loot-xp-book-01.img": {
      frame: {
        x: 664,
        y: 1205,
        w: 52,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 1,
        w: 52,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-chest-03.img": {
      frame: {
        x: 720,
        y: 1205,
        w: 52,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 1,
        w: 52,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-xp-book-06.img": {
      frame: {
        x: 776,
        y: 1205,
        w: 52,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 1,
        w: 52,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-xp-book-03.img": {
      frame: {
        x: 832,
        y: 1205,
        w: 52,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 1,
        w: 52,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-pack-01.img": {
      frame: {
        x: 888,
        y: 1205,
        w: 50,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 1,
        w: 50,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "part-potato-02.img": {
      frame: {
        x: 942,
        y: 1205,
        w: 50,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 1,
        w: 50,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-pack-00.img": {
      frame: {
        x: 996,
        y: 1205,
        w: 48,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 1,
        w: 48,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-pack-02.img": {
      frame: {
        x: 1048,
        y: 1205,
        w: 48,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 1,
        w: 48,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "bugle-inspiration-red.img": {
      frame: {
        x: 1100,
        y: 1205,
        w: 47,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 1,
        w: 47,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "bugle-inspiration-blue.img": {
      frame: {
        x: 1151,
        y: 1205,
        w: 47,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 1,
        w: 47,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "ok.img": {
      frame: {
        x: 1202,
        y: 1205,
        w: 46,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 1,
        w: 46,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-ots38.img": {
      frame: {
        x: 1252,
        y: 1205,
        w: 44,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 10,
        y: 1,
        w: 44,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-flare-gun.img": {
      frame: {
        x: 1302,
        y: 2,
        w: 44,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 10,
        y: 1,
        w: 44,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "player-visor-tank.img": {
      frame: {
        x: 1302,
        y: 68,
        w: 41,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 40,
        y: 13,
        w: 41,
        h: 62
      },
      sourceSize: {
        w: 88,
        h: 88
      }
    },
    "loot-melee-bowie-vintage.img": {
      frame: {
        x: 1302,
        y: 134,
        w: 24,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 20,
        y: 1,
        w: 24,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-melee-bowie-frontier.img": {
      frame: {
        x: 1302,
        y: 200,
        w: 24,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 20,
        y: 1,
        w: 24,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-melee-bayonet-woodland.img": {
      frame: {
        x: 1302,
        y: 266,
        w: 22,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 21,
        y: 1,
        w: 22,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-melee-bayonet-rugged.img": {
      frame: {
        x: 1302,
        y: 332,
        w: 22,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 21,
        y: 1,
        w: 22,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "proj-strobe-armed.img": {
      frame: {
        x: 2,
        y: 1271,
        w: 70,
        h: 61
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 12,
        w: 70,
        h: 61
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "proj-strobe-arming.img": {
      frame: {
        x: 76,
        y: 1271,
        w: 70,
        h: 61
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 12,
        w: 70,
        h: 61
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "loot-weapon-mosin.img": {
      frame: {
        x: 150,
        y: 1271,
        w: 62,
        h: 61
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 2,
        w: 62,
        h: 61
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "flex.img": {
      frame: {
        x: 216,
        y: 1271,
        w: 58,
        h: 61
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 1,
        w: 58,
        h: 61
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "ghost-base.img": {
      frame: {
        x: 278,
        y: 1271,
        w: 56,
        h: 61
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 1,
        w: 56,
        h: 61
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "acorn.img": {
      frame: {
        x: 338,
        y: 1271,
        w: 56,
        h: 61
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 2,
        w: 56,
        h: 61
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-perk-steelskin.img": {
      frame: {
        x: 1302,
        y: 398,
        w: 44,
        h: 61
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 10,
        y: 1,
        w: 44,
        h: 61
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "sleepy.img": {
      frame: {
        x: 398,
        y: 1271,
        w: 64,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 2,
        w: 64,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-p30l-dual.img": {
      frame: {
        x: 466,
        y: 1271,
        w: 64,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 2,
        w: 64,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-bugle.img": {
      frame: {
        x: 534,
        y: 1271,
        w: 64,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 2,
        w: 64,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "part-boost-shuriken.img": {
      frame: {
        x: 602,
        y: 1271,
        w: 62,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 2,
        w: 62,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-shirt-outfitWhite.img": {
      frame: {
        x: 668,
        y: 1271,
        w: 61,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 61,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-shirt-outfitSpetsnaz.img": {
      frame: {
        x: 733,
        y: 1271,
        w: 61,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 61,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-shirt-outfitWoodland.img": {
      frame: {
        x: 798,
        y: 1271,
        w: 61,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 61,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-shirt-outfitRed.img": {
      frame: {
        x: 863,
        y: 1271,
        w: 61,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 61,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loadout-outfit.img": {
      frame: {
        x: 928,
        y: 1271,
        w: 61,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 61,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-shirt-outfitParma.img": {
      frame: {
        x: 993,
        y: 1271,
        w: 61,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 61,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-shirt-outfitMod.img": {
      frame: {
        x: 1058,
        y: 1271,
        w: 61,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 61,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-shirt-outfitLumber.img": {
      frame: {
        x: 1123,
        y: 1271,
        w: 61,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 61,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-shirt-outfitKeyLime.img": {
      frame: {
        x: 1188,
        y: 1271,
        w: 61,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 61,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-shirt-outfitHeaven.img": {
      frame: {
        x: 1253,
        y: 1271,
        w: 61,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 61,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-shirt-outfitTurkey.img": {
      frame: {
        x: 1350,
        y: 2,
        w: 61,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 61,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-shirt-outfitDev.img": {
      frame: {
        x: 1350,
        y: 66,
        w: 61,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 61,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-shirt-outfitDesertCamo.img": {
      frame: {
        x: 1350,
        y: 130,
        w: 61,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 61,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-shirt-outfitDarkShirt.img": {
      frame: {
        x: 1350,
        y: 194,
        w: 61,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 61,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-shirt-outfitDarkGloves.img": {
      frame: {
        x: 1350,
        y: 258,
        w: 61,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 61,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-shirt-outfitCobaltShell.img": {
      frame: {
        x: 1350,
        y: 322,
        w: 61,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 61,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-shirt-outfitCarbonFiber.img": {
      frame: {
        x: 1350,
        y: 386,
        w: 61,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 61,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-shirt-outfitCamo.img": {
      frame: {
        x: 1350,
        y: 450,
        w: 61,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 61,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-shirt-outfitBase.img": {
      frame: {
        x: 1350,
        y: 514,
        w: 61,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 61,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-shirt-outfitWheat.img": {
      frame: {
        x: 1350,
        y: 578,
        w: 61,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 61,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-shirt-01.img": {
      frame: {
        x: 1350,
        y: 642,
        w: 61,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 61,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-blr.img": {
      frame: {
        x: 1350,
        y: 706,
        w: 61,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 2,
        w: 61,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-shirt-outfitRoyalFortune.img": {
      frame: {
        x: 1350,
        y: 770,
        w: 61,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 61,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-shirt-outfitParmaPrestige.img": {
      frame: {
        x: 1350,
        y: 834,
        w: 61,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 61,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "gas.img": {
      frame: {
        x: 1350,
        y: 898,
        w: 60,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 60,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "part-spark-02.img": {
      frame: {
        x: 1350,
        y: 962,
        w: 60,
        h: 60
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 60,
        h: 60
      },
      sourceSize: {
        w: 60,
        h: 60
      }
    },
    "part-spark-01.img": {
      frame: {
        x: 1350,
        y: 1026,
        w: 60,
        h: 60
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 60,
        h: 60
      },
      sourceSize: {
        w: 60,
        h: 60
      }
    },
    "chick.img": {
      frame: {
        x: 1350,
        y: 1090,
        w: 60,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 60,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loadout-boost.img": {
      frame: {
        x: 1350,
        y: 1154,
        w: 60,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 60,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-garand.img": {
      frame: {
        x: 1350,
        y: 1218,
        w: 59,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 59,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-vector.img": {
      frame: {
        x: 2,
        y: 1336,
        w: 58,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 2,
        w: 58,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-pack-03.img": {
      frame: {
        x: 64,
        y: 1336,
        w: 56,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 2,
        w: 56,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "pumpkin.img": {
      frame: {
        x: 124,
        y: 1336,
        w: 56,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 2,
        w: 56,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-deagle.img": {
      frame: {
        x: 184,
        y: 1336,
        w: 56,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 2,
        w: 56,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "player-visor-sniper.img": {
      frame: {
        x: 244,
        y: 1336,
        w: 56,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 30,
        y: 14,
        w: 56,
        h: 60
      },
      sourceSize: {
        w: 88,
        h: 88
      }
    },
    "loot-weapon-p30l.img": {
      frame: {
        x: 304,
        y: 1336,
        w: 54,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 2,
        w: 54,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "bugle-final-red.img": {
      frame: {
        x: 362,
        y: 1336,
        w: 54,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 2,
        w: 54,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-xp-bone-01.img": {
      frame: {
        x: 420,
        y: 1336,
        w: 54,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 3,
        w: 54,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "bugle-final-blue.img": {
      frame: {
        x: 478,
        y: 1336,
        w: 54,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 2,
        w: 54,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-spas12.img": {
      frame: {
        x: 536,
        y: 1336,
        w: 52,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 2,
        w: 52,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-mp5.img": {
      frame: {
        x: 592,
        y: 1336,
        w: 52,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 2,
        w: 52,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "tap.img": {
      frame: {
        x: 648,
        y: 1336,
        w: 52,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 2,
        w: 52,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-ot38.img": {
      frame: {
        x: 704,
        y: 1336,
        w: 48,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 2,
        w: 48,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-melee-huntsman-burnished.img": {
      frame: {
        x: 1330,
        y: 134,
        w: 14,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 25,
        y: 2,
        w: 14,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-melee-huntsman-rugged.img": {
      frame: {
        x: 1330,
        y: 200,
        w: 14,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 25,
        y: 2,
        w: 14,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "cattle.img": {
      frame: {
        x: 756,
        y: 1336,
        w: 62,
        h: 59
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 3,
        w: 62,
        h: 59
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "part-blossom-04.img": {
      frame: {
        x: 822,
        y: 1336,
        w: 61,
        h: 59
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 61,
        h: 59
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "part-blossom-03.img": {
      frame: {
        x: 887,
        y: 1336,
        w: 61,
        h: 59
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 3,
        w: 61,
        h: 59
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-perk-broken-arrow.img": {
      frame: {
        x: 952,
        y: 1336,
        w: 59,
        h: 59
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 1,
        w: 59,
        h: 59
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-perk-small-arms.img": {
      frame: {
        x: 1015,
        y: 1336,
        w: 57,
        h: 59
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 2,
        w: 57,
        h: 59
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-perk-field-medic.img": {
      frame: {
        x: 1076,
        y: 1336,
        w: 52,
        h: 59
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 4,
        w: 52,
        h: 59
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-throwable-mirv.img": {
      frame: {
        x: 1302,
        y: 463,
        w: 43,
        h: 59
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 10,
        y: 3,
        w: 43,
        h: 59
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-melee-pan-black-side.img": {
      frame: {
        x: 1328,
        y: 266,
        w: 12,
        h: 59
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 26,
        y: 2,
        w: 12,
        h: 59
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "logo-chrysanthemum.img": {
      frame: {
        x: 1132,
        y: 1336,
        w: 64,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 3,
        w: 64,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "logo-meteor.img": {
      frame: {
        x: 1200,
        y: 1336,
        w: 64,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 3,
        w: 64,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "logo-caduceus.img": {
      frame: {
        x: 1268,
        y: 1336,
        w: 64,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 3,
        w: 64,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "link.img": {
      frame: {
        x: 1336,
        y: 1336,
        w: 64,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 3,
        w: 64,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "logo-hydra.img": {
      frame: {
        x: 1415,
        y: 2,
        w: 64,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 3,
        w: 64,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "logo-hatchet.img": {
      frame: {
        x: 1415,
        y: 64,
        w: 64,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 3,
        w: 64,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "logo-storm.img": {
      frame: {
        x: 1415,
        y: 126,
        w: 64,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 3,
        w: 64,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "logo-surviv.img": {
      frame: {
        x: 1415,
        y: 188,
        w: 64,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 3,
        w: 64,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "logo-swine.img": {
      frame: {
        x: 1415,
        y: 250,
        w: 64,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 3,
        w: 64,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "logo-egg.img": {
      frame: {
        x: 1415,
        y: 312,
        w: 64,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 3,
        w: 64,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-glock-dual.img": {
      frame: {
        x: 1415,
        y: 374,
        w: 64,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 3,
        w: 64,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "logo-twins.img": {
      frame: {
        x: 1415,
        y: 436,
        w: 64,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 3,
        w: 64,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "logo-crossing.img": {
      frame: {
        x: 1415,
        y: 498,
        w: 64,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 3,
        w: 64,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "logo-conch.img": {
      frame: {
        x: 1415,
        y: 560,
        w: 64,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 3,
        w: 64,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "logo-cloud.img": {
      frame: {
        x: 1415,
        y: 622,
        w: 64,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 3,
        w: 64,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-scout.img": {
      frame: {
        x: 1415,
        y: 684,
        w: 62,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 3,
        w: 62,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "danger.img": {
      frame: {
        x: 1415,
        y: 746,
        w: 62,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 3,
        w: 62,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-model94.img": {
      frame: {
        x: 1415,
        y: 808,
        w: 62,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 3,
        w: 62,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "player-gui.img": {
      frame: {
        x: 1415,
        y: 870,
        w: 60,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 3,
        w: 60,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "player-emote.img": {
      frame: {
        x: 1415,
        y: 932,
        w: 60,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 3,
        w: 60,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "ammo-50AE.img": {
      frame: {
        x: 1415,
        y: 994,
        w: 58,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 58,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "part-leaf-02.img": {
      frame: {
        x: 1415,
        y: 1056,
        w: 58,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 58,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-perk-explosive.img": {
      frame: {
        x: 1415,
        y: 1118,
        w: 58,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 58,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "ammo-box.img": {
      frame: {
        x: 1415,
        y: 1180,
        w: 58,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 58,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "ammo-308sub.img": {
      frame: {
        x: 1415,
        y: 1242,
        w: 58,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 58,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "ammo-flare.img": {
      frame: {
        x: 1415,
        y: 1304,
        w: 58,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 58,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "ammo-45acp.img": {
      frame: {
        x: 2,
        y: 1400,
        w: 58,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 58,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "santa-hat.img": {
      frame: {
        x: 64,
        y: 1400,
        w: 58,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 2,
        w: 58,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "ammo-9mm.img": {
      frame: {
        x: 126,
        y: 1400,
        w: 58,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 58,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "ammo-762mm.img": {
      frame: {
        x: 188,
        y: 1400,
        w: 58,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 58,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "ammo-556mm.img": {
      frame: {
        x: 250,
        y: 1400,
        w: 58,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 58,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "ammo-12gauge.img": {
      frame: {
        x: 312,
        y: 1400,
        w: 58,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 58,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-xp-donut-01.img": {
      frame: {
        x: 374,
        y: 1400,
        w: 58,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 58,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "player-visor-assault.img": {
      frame: {
        x: 436,
        y: 1400,
        w: 57,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 31,
        y: 15,
        w: 57,
        h: 58
      },
      sourceSize: {
        w: 88,
        h: 88
      }
    },
    "part-blossom-01.img": {
      frame: {
        x: 497,
        y: 1400,
        w: 55,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 3,
        w: 55,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-glock.img": {
      frame: {
        x: 624,
        y: 515,
        w: 48,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 3,
        w: 48,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "pineapple.img": {
      frame: {
        x: 1302,
        y: 526,
        w: 38,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 13,
        y: 0,
        w: 38,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-medical-soda.img": {
      frame: {
        x: 1302,
        y: 588,
        w: 34,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 15,
        y: 3,
        w: 34,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loadout-player-icon.img": {
      frame: {
        x: 556,
        y: 1400,
        w: 60,
        h: 57
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 4,
        w: 60,
        h: 57
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "part-blossom-02.img": {
      frame: {
        x: 620,
        y: 1400,
        w: 56,
        h: 57
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 4,
        w: 56,
        h: 57
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "proj-potato-01.img": {
      frame: {
        x: 680,
        y: 1400,
        w: 50,
        h: 57
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 4,
        w: 50,
        h: 57
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "proj-potato-02.img": {
      frame: {
        x: 734,
        y: 1400,
        w: 50,
        h: 57
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 4,
        w: 50,
        h: 57
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-perk-bonus-9mm.img": {
      frame: {
        x: 788,
        y: 1400,
        w: 64,
        h: 56
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 4,
        w: 64,
        h: 56
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-perk-bonus-45.img": {
      frame: {
        x: 856,
        y: 1400,
        w: 64,
        h: 56
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 4,
        w: 64,
        h: 56
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "part-leaf-01.img": {
      frame: {
        x: 924,
        y: 1400,
        w: 64,
        h: 56
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 4,
        w: 64,
        h: 56
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-perk-trick-m9.img": {
      frame: {
        x: 992,
        y: 1400,
        w: 64,
        h: 56
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 4,
        w: 64,
        h: 56
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-perk-bonus-assault.img": {
      frame: {
        x: 1060,
        y: 1400,
        w: 64,
        h: 56
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 4,
        w: 64,
        h: 56
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "hamburger.img": {
      frame: {
        x: 1128,
        y: 1400,
        w: 64,
        h: 56
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 4,
        w: 64,
        h: 56
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-perk-treat-9mm.img": {
      frame: {
        x: 1196,
        y: 1400,
        w: 64,
        h: 56
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 4,
        w: 64,
        h: 56
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-perk-treat-556.img": {
      frame: {
        x: 1264,
        y: 1400,
        w: 64,
        h: 56
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 4,
        w: 64,
        h: 56
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-perk-treat-12g.img": {
      frame: {
        x: 1332,
        y: 1400,
        w: 64,
        h: 56
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 4,
        w: 64,
        h: 56
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "hide.img": {
      frame: {
        x: 1400,
        y: 1400,
        w: 64,
        h: 56
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 4,
        w: 64,
        h: 56
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-perk-treat-762.img": {
      frame: {
        x: 1483,
        y: 2,
        w: 64,
        h: 56
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 4,
        w: 64,
        h: 56
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-mp220.img": {
      frame: {
        x: 1483,
        y: 62,
        w: 60,
        h: 56
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 4,
        w: 60,
        h: 56
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-perk-trick-chatty.img": {
      frame: {
        x: 1483,
        y: 122,
        w: 58,
        h: 56
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 3,
        w: 58,
        h: 56
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-xp-glasses-01.img": {
      frame: {
        x: 1483,
        y: 182,
        w: 56,
        h: 56
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 4,
        w: 56,
        h: 56
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-perk-takedown.img": {
      frame: {
        x: 1483,
        y: 242,
        w: 56,
        h: 56
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 4,
        w: 56,
        h: 56
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "leek.img": {
      frame: {
        x: 1483,
        y: 302,
        w: 56,
        h: 56
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 4,
        w: 56,
        h: 56
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-perk-trick-nothing.img": {
      frame: {
        x: 1483,
        y: 362,
        w: 56,
        h: 56
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 4,
        w: 56,
        h: 56
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-perk-trick-size.img": {
      frame: {
        x: 1483,
        y: 422,
        w: 56,
        h: 56
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 4,
        w: 56,
        h: 56
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "proj-snowball-01.img": {
      frame: {
        x: 1483,
        y: 482,
        w: 55,
        h: 56
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 4,
        w: 55,
        h: 56
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "proj-snowball-02.img": {
      frame: {
        x: 1483,
        y: 542,
        w: 55,
        h: 56
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 4,
        w: 55,
        h: 56
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-mac10.img": {
      frame: {
        x: 1483,
        y: 602,
        w: 54,
        h: 56
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 4,
        w: 54,
        h: 56
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-perk-flak-jacket.img": {
      frame: {
        x: 1483,
        y: 662,
        w: 54,
        h: 56
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 2,
        w: 54,
        h: 56
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "ping-map-airdrop.img": {
      frame: {
        x: 1483,
        y: 722,
        w: 40,
        h: 56
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 3,
        w: 40,
        h: 56
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "player-visor-healer.img": {
      frame: {
        x: 1483,
        y: 782,
        w: 37,
        h: 56
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 45,
        y: 16,
        w: 37,
        h: 56
      },
      sourceSize: {
        w: 88,
        h: 88
      }
    },
    "turkey-animal.img": {
      frame: {
        x: 1483,
        y: 842,
        w: 64,
        h: 55
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 5,
        w: 64,
        h: 55
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "ping-map-airstrike.img": {
      frame: {
        x: 1483,
        y: 901,
        w: 26,
        h: 55
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 19,
        y: 5,
        w: 26,
        h: 55
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-medical-healthkit.img": {
      frame: {
        x: 1483,
        y: 960,
        w: 62,
        h: 54
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 5,
        w: 62,
        h: 54
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-helmet-01.img": {
      frame: {
        x: 1483,
        y: 1018,
        w: 60,
        h: 54
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 5,
        w: 60,
        h: 54
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-perk-martyrdom.img": {
      frame: {
        x: 1483,
        y: 1076,
        w: 56,
        h: 54
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 5,
        w: 56,
        h: 54
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "trunk.img": {
      frame: {
        x: 1483,
        y: 1134,
        w: 56,
        h: 54
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 5,
        w: 56,
        h: 54
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-groza.img": {
      frame: {
        x: 1483,
        y: 1192,
        w: 56,
        h: 54
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 5,
        w: 56,
        h: 54
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "eggplant.img": {
      frame: {
        x: 1483,
        y: 1250,
        w: 56,
        h: 54
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 5,
        w: 56,
        h: 54
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "ping-map-help.img": {
      frame: {
        x: 1483,
        y: 1308,
        w: 54,
        h: 54
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 5,
        w: 54,
        h: 54
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "crab.img": {
      frame: {
        x: 1483,
        y: 1366,
        w: 54,
        h: 54
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 5,
        w: 54,
        h: 54
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "movement.img": {
      frame: {
        x: 2,
        y: 1462,
        w: 54,
        h: 54
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 5,
        w: 54,
        h: 54
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "ribbon-red.img": {
      frame: {
        x: 60,
        y: 1462,
        w: 52,
        h: 54
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 11,
        y: 10,
        w: 52,
        h: 54
      },
      sourceSize: {
        w: 74,
        h: 74
      }
    },
    "ribbon-blue.img": {
      frame: {
        x: 116,
        y: 1462,
        w: 52,
        h: 54
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 11,
        y: 10,
        w: 52,
        h: 54
      },
      sourceSize: {
        w: 74,
        h: 74
      }
    },
    "question.img": {
      frame: {
        x: 1302,
        y: 650,
        w: 38,
        h: 54
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 13,
        y: 5,
        w: 38,
        h: 54
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "player-visor-demo.img": {
      frame: {
        x: 1302,
        y: 708,
        w: 38,
        h: 54
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 40,
        y: 17,
        w: 38,
        h: 54
      },
      sourceSize: {
        w: 88,
        h: 88
      }
    },
    "gun-ots38-01.img": {
      frame: {
        x: 1524,
        y: 782,
        w: 22,
        h: 54
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 63,
        w: 22,
        h: 54
      },
      sourceSize: {
        w: 28,
        h: 116
      }
    },
    "loot-throwable-frag.img": {
      frame: {
        x: 172,
        y: 1462,
        w: 54,
        h: 53
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 5,
        w: 54,
        h: 53
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-throwable-potato.img": {
      frame: {
        x: 230,
        y: 1462,
        w: 50,
        h: 53
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 6,
        w: 50,
        h: 53
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-perk-scavenger.img": {
      frame: {
        x: 284,
        y: 1462,
        w: 58,
        h: 52
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 6,
        w: 58,
        h: 52
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "potato.img": {
      frame: {
        x: 346,
        y: 1462,
        w: 54,
        h: 52
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 6,
        w: 54,
        h: 52
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-xp-compass-01.img": {
      frame: {
        x: 404,
        y: 1462,
        w: 52,
        h: 52
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 6,
        w: 52,
        h: 52
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "baguette.img": {
      frame: {
        x: 460,
        y: 1462,
        w: 52,
        h: 52
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 6,
        w: 52,
        h: 52
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "copy.img": {
      frame: {
        x: 516,
        y: 1462,
        w: 48,
        h: 52
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 6,
        w: 48,
        h: 52
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "gun-short-01.img": {
      frame: {
        x: 1527,
        y: 722,
        w: 18,
        h: 52
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: -1,
        w: 18,
        h: 52
      },
      sourceSize: {
        w: 16,
        h: 50
      }
    },
    "face-dab.img": {
      frame: {
        x: 568,
        y: 1462,
        w: 72,
        h: 51
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 11,
        w: 72,
        h: 51
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "loot-perk-endless-ammo.img": {
      frame: {
        x: 644,
        y: 1462,
        w: 54,
        h: 51
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 6,
        w: 54,
        h: 51
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "minimize.img": {
      frame: {
        x: 702,
        y: 1462,
        w: 51,
        h: 51
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 6,
        w: 51,
        h: 51
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "whale.img": {
      frame: {
        x: 757,
        y: 1462,
        w: 62,
        h: 50
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 7,
        w: 62,
        h: 50
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "part-pumpkin-01.img": {
      frame: {
        x: 1350,
        y: 1282,
        w: 56,
        h: 50
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 7,
        w: 56,
        h: 50
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-perk-tree-climbing.img": {
      frame: {
        x: 823,
        y: 1462,
        w: 50,
        h: 50
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 7,
        w: 50,
        h: 50
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "fish.img": {
      frame: {
        x: 877,
        y: 1462,
        w: 64,
        h: 49
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 7,
        w: 64,
        h: 49
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "crosshair.img": {
      frame: {
        x: 945,
        y: 1462,
        w: 49,
        h: 49
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 49,
        h: 49
      },
      sourceSize: {
        w: 49,
        h: 49
      }
    },
    "face-headshot.img": {
      frame: {
        x: 998,
        y: 1462,
        w: 64,
        h: 48
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 10,
        w: 64,
        h: 48
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-perk-treat-super.img": {
      frame: {
        x: 1066,
        y: 1462,
        w: 64,
        h: 48
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 8,
        w: 64,
        h: 48
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "forest.img": {
      frame: {
        x: 1134,
        y: 1462,
        w: 64,
        h: 48
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 8,
        w: 64,
        h: 48
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-medical-pill.img": {
      frame: {
        x: 1202,
        y: 1462,
        w: 62,
        h: 48
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 8,
        w: 62,
        h: 48
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "coconut.img": {
      frame: {
        x: 1268,
        y: 1462,
        w: 58,
        h: 48
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 8,
        w: 58,
        h: 48
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "teabag.img": {
      frame: {
        x: 1330,
        y: 1462,
        w: 56,
        h: 48
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 8,
        w: 56,
        h: 48
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-throwable-strobe.img": {
      frame: {
        x: 1390,
        y: 1462,
        w: 55,
        h: 48
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 10,
        w: 55,
        h: 48
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "skull-leader.img": {
      frame: {
        x: 1449,
        y: 1462,
        w: 48,
        h: 48
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 48,
        h: 48
      },
      sourceSize: {
        w: 48,
        h: 48
      }
    },
    "part-airdrop-01x.img": {
      frame: {
        x: 1551,
        y: 2,
        w: 48,
        h: 48
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 48,
        h: 48
      },
      sourceSize: {
        w: 48,
        h: 48
      }
    },
    "part-airdrop-01.img": {
      frame: {
        x: 1551,
        y: 54,
        w: 48,
        h: 48
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 48,
        h: 48
      },
      sourceSize: {
        w: 48,
        h: 48
      }
    },
    "loot-melee-pan-black.img": {
      frame: {
        x: 2,
        y: 1520,
        w: 62,
        h: 46
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 9,
        w: 62,
        h: 46
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "pilgrim-hat.img": {
      frame: {
        x: 68,
        y: 1520,
        w: 62,
        h: 46
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 9,
        w: 62,
        h: 46
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-helmet-03.img": {
      frame: {
        x: 134,
        y: 1520,
        w: 60,
        h: 46
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 9,
        w: 60,
        h: 46
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "ping-map-woods-king.img": {
      frame: {
        x: 198,
        y: 1520,
        w: 50,
        h: 46
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 9,
        w: 50,
        h: 46
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "part-flare-01.img": {
      frame: {
        x: 1551,
        y: 106,
        w: 46,
        h: 46
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 46,
        h: 46
      },
      sourceSize: {
        w: 50,
        h: 50
      }
    },
    "loot-throwable-snowball.img": {
      frame: {
        x: 1551,
        y: 156,
        w: 45,
        h: 46
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 9,
        w: 45,
        h: 46
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "cog.img": {
      frame: {
        x: 1551,
        y: 206,
        w: 44,
        h: 46
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 10,
        y: 9,
        w: 44,
        h: 46
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "eye.img": {
      frame: {
        x: 1106,
        y: 1022,
        w: 64,
        h: 44
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 10,
        w: 64,
        h: 44
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-perk-trick-drain.img": {
      frame: {
        x: 1038,
        y: 954,
        w: 62,
        h: 44
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 10,
        w: 62,
        h: 44
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "chicken.img": {
      frame: {
        x: 1174,
        y: 1090,
        w: 56,
        h: 44
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 10,
        w: 56,
        h: 44
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "player-snow-01.img": {
      frame: {
        x: 252,
        y: 1520,
        w: 80,
        h: 43
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 43
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "player-mash-01.img": {
      frame: {
        x: 336,
        y: 1520,
        w: 80,
        h: 43
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 43
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "loot-helmet-02.img": {
      frame: {
        x: 970,
        y: 886,
        w: 62,
        h: 42
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 11,
        w: 62,
        h: 42
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "audio-off.img": {
      frame: {
        x: 902,
        y: 818,
        w: 49,
        h: 42
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 11,
        w: 49,
        h: 42
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "audio-on.img": {
      frame: {
        x: 834,
        y: 750,
        w: 49,
        h: 42
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 11,
        w: 49,
        h: 42
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-weapon-fists.img": {
      frame: {
        x: 1551,
        y: 256,
        w: 40,
        h: 42
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 12,
        y: 11,
        w: 40,
        h: 42
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "ping-map-unlock.img": {
      frame: {
        x: 1551,
        y: 302,
        w: 34,
        h: 42
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 15,
        y: 11,
        w: 34,
        h: 42
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-melee-hook-silver.img": {
      frame: {
        x: 1551,
        y: 348,
        w: 24,
        h: 42
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 20,
        y: 11,
        w: 24,
        h: 42
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "player-mash-02.img": {
      frame: {
        x: 420,
        y: 1520,
        w: 74,
        h: 41
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 74,
        h: 41
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "player-snow-02.img": {
      frame: {
        x: 498,
        y: 1520,
        w: 74,
        h: 41
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 74,
        h: 41
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "loot-melee-fireaxe.img": {
      frame: {
        x: 576,
        y: 1520,
        w: 78,
        h: 40
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: -1,
        w: 78,
        h: 40
      },
      sourceSize: {
        w: 76,
        h: 38
      }
    },
    "loot-perk-scavenger_adv.img": {
      frame: {
        x: 681,
        y: 608,
        w: 62,
        h: 40
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 12,
        w: 62,
        h: 40
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "gg.img": {
      frame: {
        x: 658,
        y: 1520,
        w: 60,
        h: 40
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 12,
        w: 60,
        h: 40
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "proj-mirv-mini-02.img": {
      frame: {
        x: 1551,
        y: 394,
        w: 46,
        h: 40
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 4,
        w: 46,
        h: 40
      },
      sourceSize: {
        w: 48,
        h: 48
      }
    },
    "proj-mirv-mini-01.img": {
      frame: {
        x: 1551,
        y: 438,
        w: 46,
        h: 40
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 4,
        w: 46,
        h: 40
      },
      sourceSize: {
        w: 48,
        h: 48
      }
    },
    "gun-dp28-top-01.img": {
      frame: {
        x: 1551,
        y: 482,
        w: 40,
        h: 40
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 40,
        h: 40
      },
      sourceSize: {
        w: 40,
        h: 40
      }
    },
    "player-hands-02.img": {
      frame: {
        x: 1551,
        y: 526,
        w: 40,
        h: 40
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: -1,
        w: 40,
        h: 40
      },
      sourceSize: {
        w: 38,
        h: 38
      }
    },
    "player-hands-01.img": {
      frame: {
        x: 1551,
        y: 570,
        w: 40,
        h: 40
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: -1,
        w: 40,
        h: 40
      },
      sourceSize: {
        w: 38,
        h: 38
      }
    },
    "quit.img": {
      frame: {
        x: 1551,
        y: 614,
        w: 38,
        h: 39
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 13,
        y: 12,
        w: 38,
        h: 39
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "player-mash-03.img": {
      frame: {
        x: 722,
        y: 1520,
        w: 76,
        h: 38
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 76,
        h: 38
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "player-snow-03.img": {
      frame: {
        x: 802,
        y: 1520,
        w: 76,
        h: 38
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 76,
        h: 38
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "player-patch-01.img": {
      frame: {
        x: 882,
        y: 1520,
        w: 62,
        h: 38
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 0,
        w: 62,
        h: 38
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "part-smoke-01.img": {
      frame: {
        x: 1551,
        y: 657,
        w: 38,
        h: 38
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: -1,
        w: 38,
        h: 38
      },
      sourceSize: {
        w: 36,
        h: 36
      }
    },
    "player-patch-red.img": {
      frame: {
        x: 948,
        y: 1520,
        w: 60,
        h: 37
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 10,
        y: 21,
        w: 60,
        h: 37
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "loot-perk-self-revive.img": {
      frame: {
        x: 1012,
        y: 1520,
        w: 64,
        h: 36
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 14,
        w: 64,
        h: 36
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "timer-background.img": {
      frame: {
        x: 1551,
        y: 699,
        w: 36,
        h: 36
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 36,
        h: 36
      },
      sourceSize: {
        w: 36,
        h: 36
      }
    },
    "resume.img": {
      frame: {
        x: 1551,
        y: 739,
        w: 36,
        h: 36
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 16,
        y: 14,
        w: 36,
        h: 36
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "part-snow-01.img": {
      frame: {
        x: 1551,
        y: 779,
        w: 36,
        h: 36
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 36,
        h: 36
      },
      sourceSize: {
        w: 36,
        h: 36
      }
    },
    "close.img": {
      frame: {
        x: 1551,
        y: 819,
        w: 36,
        h: 36
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 36,
        h: 36
      },
      sourceSize: {
        w: 36,
        h: 36
      }
    },
    "checked.img": {
      frame: {
        x: 1551,
        y: 859,
        w: 36,
        h: 36
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 36,
        h: 36
      },
      sourceSize: {
        w: 36,
        h: 36
      }
    },
    "part-cloth-01.img": {
      frame: {
        x: 1551,
        y: 899,
        w: 36,
        h: 36
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 36,
        h: 36
      },
      sourceSize: {
        w: 36,
        h: 36
      }
    },
    "gun-potato-smg-top-01.img": {
      frame: {
        x: 1551,
        y: 939,
        w: 36,
        h: 36
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 36,
        h: 36
      },
      sourceSize: {
        w: 40,
        h: 40
      }
    },
    "player-map-outer.img": {
      frame: {
        x: 1551,
        y: 979,
        w: 36,
        h: 36
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 36,
        h: 36
      },
      sourceSize: {
        w: 36,
        h: 36
      }
    },
    "player-map-inner.img": {
      frame: {
        x: 1551,
        y: 1019,
        w: 36,
        h: 36
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 36,
        h: 36
      },
      sourceSize: {
        w: 36,
        h: 36
      }
    },
    "submit.img": {
      frame: {
        x: 1551,
        y: 1059,
        w: 36,
        h: 36
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 36,
        h: 36
      },
      sourceSize: {
        w: 36,
        h: 36
      }
    },
    "ping-indicator.img": {
      frame: {
        x: 1551,
        y: 1099,
        w: 46,
        h: 35
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 29,
        w: 46,
        h: 35
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "keyboard.img": {
      frame: {
        x: 1483,
        y: 1424,
        w: 56,
        h: 34
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 15,
        w: 56,
        h: 34
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "part-pulse-01.img": {
      frame: {
        x: 1551,
        y: 1138,
        w: 34,
        h: 34
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 34,
        h: 34
      },
      sourceSize: {
        w: 36,
        h: 36
      }
    },
    "part-frag-burst-02.img": {
      frame: {
        x: 1551,
        y: 1176,
        w: 34,
        h: 34
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 34,
        h: 34
      },
      sourceSize: {
        w: 36,
        h: 36
      }
    },
    "part-potato-01.img": {
      frame: {
        x: 1551,
        y: 1214,
        w: 34,
        h: 34
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 34,
        h: 34
      },
      sourceSize: {
        w: 36,
        h: 36
      }
    },
    "part-strobe-01.img": {
      frame: {
        x: 1551,
        y: 1252,
        w: 34,
        h: 34
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 34,
        h: 34
      },
      sourceSize: {
        w: 36,
        h: 36
      }
    },
    "part-frag-burst-01.img": {
      frame: {
        x: 1551,
        y: 1290,
        w: 34,
        h: 34
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 34,
        h: 34
      },
      sourceSize: {
        w: 36,
        h: 36
      }
    },
    "player-map-downed.img": {
      frame: {
        x: 1551,
        y: 1328,
        w: 36,
        h: 33
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 3,
        w: 36,
        h: 33
      },
      sourceSize: {
        w: 36,
        h: 36
      }
    },
    "loot-melee-stonehammer.img": {
      frame: {
        x: 1080,
        y: 1520,
        w: 76,
        h: 32
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: -1,
        w: 76,
        h: 32
      },
      sourceSize: {
        w: 74,
        h: 30
      }
    },
    "player-patch-02.img": {
      frame: {
        x: 1160,
        y: 1520,
        w: 62,
        h: 32
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 0,
        w: 62,
        h: 32
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "player-patch-blue.img": {
      frame: {
        x: 1226,
        y: 1520,
        w: 62,
        h: 32
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 24,
        w: 62,
        h: 32
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "loot-melee-knuckles-heroic.img": {
      frame: {
        x: 1551,
        y: 1365,
        w: 48,
        h: 32
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 16,
        w: 48,
        h: 32
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-melee-knuckles-rusted.img": {
      frame: {
        x: 1551,
        y: 1401,
        w: 48,
        h: 32
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 16,
        w: 48,
        h: 32
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "part-frag-pin-01.img": {
      frame: {
        x: 1551,
        y: 1437,
        w: 32,
        h: 32
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 16,
        y: 16,
        w: 32,
        h: 32
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "crosshair001.img": {
      frame: {
        x: 1551,
        y: 1473,
        w: 32,
        h: 32
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 32
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "crosshair027.img": {
      frame: {
        x: 1513,
        y: 901,
        w: 32,
        h: 32
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 32
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "crosshair007.img": {
      frame: {
        x: 1302,
        y: 766,
        w: 32,
        h: 32
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 32
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "crosshair010.img": {
      frame: {
        x: 1302,
        y: 802,
        w: 32,
        h: 32
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 32
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "globe.img": {
      frame: {
        x: 1302,
        y: 838,
        w: 32,
        h: 32
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 32
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "crosshair005.img": {
      frame: {
        x: 1302,
        y: 874,
        w: 32,
        h: 32
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 32
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "crosshair064.img": {
      frame: {
        x: 1302,
        y: 910,
        w: 32,
        h: 32
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 32
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "crosshair109.img": {
      frame: {
        x: 1302,
        y: 946,
        w: 32,
        h: 32
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 32
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "proj-frag-pin-part.img": {
      frame: {
        x: 1302,
        y: 982,
        w: 32,
        h: 32
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 16,
        y: 16,
        w: 32,
        h: 32
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "crosshair080.img": {
      frame: {
        x: 1302,
        y: 1018,
        w: 32,
        h: 32
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 32
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "crosshair094.img": {
      frame: {
        x: 1302,
        y: 1054,
        w: 32,
        h: 32
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 32
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "crosshair086.img": {
      frame: {
        x: 1302,
        y: 1090,
        w: 32,
        h: 32
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 32
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "crosshair124.img": {
      frame: {
        x: 1302,
        y: 1126,
        w: 32,
        h: 32
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 32
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "skull-outlined.img": {
      frame: {
        x: 1302,
        y: 1162,
        w: 30,
        h: 32
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 0,
        w: 30,
        h: 32
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "unlock.img": {
      frame: {
        x: 1302,
        y: 1198,
        w: 26,
        h: 32
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 0,
        w: 26,
        h: 32
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "lock.img": {
      frame: {
        x: 1302,
        y: 1234,
        w: 26,
        h: 32
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 0,
        w: 26,
        h: 32
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "skull-team.img": {
      frame: {
        x: 1199,
        y: 1022,
        w: 27,
        h: 31
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 1,
        w: 27,
        h: 31
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "dc.img": {
      frame: {
        x: 1415,
        y: 1366,
        w: 30,
        h: 30
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 30,
        h: 30
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "down.img": {
      frame: {
        x: 1449,
        y: 1366,
        w: 30,
        h: 30
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 30,
        h: 30
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "loot-melee-woodaxe-bloody.img": {
      frame: {
        x: 1292,
        y: 1520,
        w: 76,
        h: 29
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: -1,
        w: 76,
        h: 29
      },
      sourceSize: {
        w: 74,
        h: 27
      }
    },
    "loot-melee-woodaxe.img": {
      frame: {
        x: 1372,
        y: 1520,
        w: 76,
        h: 29
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: -1,
        w: 76,
        h: 29
      },
      sourceSize: {
        w: 74,
        h: 27
      }
    },
    "ping-part-quarter-highlight.img": {
      frame: {
        x: 1452,
        y: 1520,
        w: 48,
        h: 28
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 0,
        w: 48,
        h: 28
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "ping-part-quarter.img": {
      frame: {
        x: 1504,
        y: 1520,
        w: 47,
        h: 28
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 0,
        w: 47,
        h: 28
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "player-bullet-trail-03.img": {
      frame: {
        x: 1579,
        y: 348,
        w: 18,
        h: 28
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 18,
        h: 28
      },
      sourceSize: {
        w: 18,
        h: 28
      }
    },
    "crosshair177.img": {
      frame: {
        x: 1132,
        y: 1070,
        w: 32,
        h: 26
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 26
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "crown.img": {
      frame: {
        x: 1199,
        y: 1057,
        w: 30,
        h: 26
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 3,
        w: 30,
        h: 26
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "ping-part-eighth.img": {
      frame: {
        x: 1132,
        y: 1100,
        w: 28,
        h: 25
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 8,
        w: 28,
        h: 25
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "ping-part-eighth-highlight.img": {
      frame: {
        x: 1189,
        y: 1138,
        w: 28,
        h: 25
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 8,
        w: 28,
        h: 25
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-melee-karambit-drowned.img": {
      frame: {
        x: 2,
        y: 1570,
        w: 54,
        h: 24
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 20,
        w: 54,
        h: 24
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-melee-karambit-prismatic.img": {
      frame: {
        x: 60,
        y: 1570,
        w: 54,
        h: 24
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 20,
        w: 54,
        h: 24
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-melee-karambit-rugged.img": {
      frame: {
        x: 118,
        y: 1570,
        w: 54,
        h: 24
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 20,
        w: 54,
        h: 24
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "gun-pkp-bot-01.img": {
      frame: {
        x: 1189,
        y: 1167,
        w: 40,
        h: 24
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: -1,
        w: 40,
        h: 24
      },
      sourceSize: {
        w: 38,
        h: 22
      }
    },
    "gun-m249-bot-01.img": {
      frame: {
        x: 1501,
        y: 1462,
        w: 40,
        h: 24
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: -1,
        w: 40,
        h: 24
      },
      sourceSize: {
        w: 38,
        h: 22
      }
    },
    "crosshair158.img": {
      frame: {
        x: 1555,
        y: 1520,
        w: 32,
        h: 24
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 4,
        w: 32,
        h: 24
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "part-frag-lever-01.img": {
      frame: {
        x: 1318,
        y: 1271,
        w: 28,
        h: 24
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 18,
        y: 20,
        w: 28,
        h: 24
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "crosshair101.img": {
      frame: {
        x: 728,
        y: 654,
        w: 24,
        h: 24
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 2,
        w: 24,
        h: 24
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "crosshair102.img": {
      frame: {
        x: 728,
        y: 682,
        w: 24,
        h: 24
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 2,
        w: 24,
        h: 24
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "pumpkin-play.img": {
      frame: {
        x: 597,
        y: 495,
        w: 22,
        h: 24
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 0,
        w: 22,
        h: 24
      },
      sourceSize: {
        w: 24,
        h: 24
      }
    },
    "loot-melee-naginata.img": {
      frame: {
        x: 176,
        y: 1570,
        w: 175,
        h: 22
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 5,
        w: 175,
        h: 22
      },
      sourceSize: {
        w: 175,
        h: 27
      }
    },
    "hatchet.img": {
      frame: {
        x: 1318,
        y: 1299,
        w: 24,
        h: 22
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 24,
        h: 22
      },
      sourceSize: {
        w: 24,
        h: 24
      }
    },
    "crosshair184.img": {
      frame: {
        x: 597,
        y: 523,
        w: 22,
        h: 22
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 5,
        w: 22,
        h: 22
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "crosshair045.img": {
      frame: {
        x: 355,
        y: 1570,
        w: 22,
        h: 22
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 5,
        w: 22,
        h: 22
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "crosshair040.img": {
      frame: {
        x: 381,
        y: 1570,
        w: 22,
        h: 22
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 5,
        w: 22,
        h: 22
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "player-feet-02.img": {
      frame: {
        x: 1328,
        y: 332,
        w: 17,
        h: 21
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: -1,
        w: 17,
        h: 21
      },
      sourceSize: {
        w: 19,
        h: 19
      }
    },
    "player-feet-01.img": {
      frame: {
        x: 1328,
        y: 357,
        w: 17,
        h: 21
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: -1,
        w: 17,
        h: 21
      },
      sourceSize: {
        w: 19,
        h: 19
      }
    },
    "loot-melee-katana-rusted.img": {
      frame: {
        x: 407,
        y: 1570,
        w: 115,
        h: 20
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 115,
        h: 20
      },
      sourceSize: {
        w: 115,
        h: 20
      }
    },
    "loot-melee-katana-orchid.img": {
      frame: {
        x: 526,
        y: 1570,
        w: 115,
        h: 20
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 115,
        h: 20
      },
      sourceSize: {
        w: 115,
        h: 20
      }
    },
    "loot-melee-katana-demo.img": {
      frame: {
        x: 645,
        y: 1570,
        w: 115,
        h: 20
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 115,
        h: 20
      },
      sourceSize: {
        w: 115,
        h: 20
      }
    },
    "loot-melee-katana.img": {
      frame: {
        x: 764,
        y: 1570,
        w: 115,
        h: 20
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 115,
        h: 20
      },
      sourceSize: {
        w: 115,
        h: 20
      }
    },
    "crosshair181.img": {
      frame: {
        x: 733,
        y: 382,
        w: 20,
        h: 20
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 6,
        w: 20,
        h: 20
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "crosshair173.img": {
      frame: {
        x: 733,
        y: 406,
        w: 20,
        h: 20
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 6,
        w: 20,
        h: 20
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "crosshair038.img": {
      frame: {
        x: 733,
        y: 430,
        w: 20,
        h: 20
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 6,
        w: 20,
        h: 20
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "crosshair000.img": {
      frame: {
        x: 597,
        y: 549,
        w: 20,
        h: 20
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 6,
        w: 20,
        h: 20
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "gun-qbb97-bot-01.img": {
      frame: {
        x: 1513,
        y: 937,
        w: 34,
        h: 18
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: -1,
        w: 34,
        h: 18
      },
      sourceSize: {
        w: 32,
        h: 16
      }
    },
    "ping-part-circle.img": {
      frame: {
        x: 812,
        y: 362,
        w: 18,
        h: 18
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 23,
        y: 23,
        w: 18,
        h: 18
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "part-frag-burst-03.img": {
      frame: {
        x: 812,
        y: 384,
        w: 18,
        h: 18
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 18,
        h: 18
      },
      sourceSize: {
        w: 18,
        h: 18
      }
    },
    "ping-part-circle-highlight.img": {
      frame: {
        x: 812,
        y: 406,
        w: 18,
        h: 18
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 23,
        y: 23,
        w: 18,
        h: 18
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "player-bullet-trail-02.img": {
      frame: {
        x: 812,
        y: 434,
        w: 18,
        h: 18
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 18,
        h: 18
      },
      sourceSize: {
        w: 18,
        h: 18
      }
    },
    "dot.img": {
      frame: {
        x: 812,
        y: 456,
        w: 18,
        h: 18
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 18,
        h: 18
      },
      sourceSize: {
        w: 18,
        h: 18
      }
    },
    "crosshair125.img": {
      frame: {
        x: 1214,
        y: 886,
        w: 16,
        h: 16
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 8,
        w: 16,
        h: 16
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "ping-part-circle-auto-highlight.img": {
      frame: {
        x: 1214,
        y: 906,
        w: 15,
        h: 15
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 15,
        h: 15
      },
      sourceSize: {
        w: 15,
        h: 15
      }
    },
    "ping-part-circle-auto.img": {
      frame: {
        x: 1332,
        y: 1198,
        w: 14,
        h: 14
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 14,
        h: 14
      },
      sourceSize: {
        w: 14,
        h: 14
      }
    },
    "ping-part-circle-auto-outer.img": {
      frame: {
        x: 1332,
        y: 1216,
        w: 14,
        h: 14
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 14,
        h: 14
      },
      sourceSize: {
        w: 14,
        h: 14
      }
    },
    "loot-xp-book-05.img": {
      frame: {
        x: 608,
        y: 1205,
        w: 52,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 1,
        w: 52,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    }
  }
}];
const $s = [{
  meta: {
    image: "shared-0-50-aa0212d5.png",
    size: {
      w: 2048,
      h: 2048
    },
    scale: 0.5
  },
  frames: {
    "map-building-police-floor-01.img": {
      frame: {
        x: 722,
        y: 2,
        w: 1056,
        h: 784
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 1056,
        h: 784
      },
      sourceSize: {
        w: 1056,
        h: 784
      }
    },
    "map-building-bathhouse-basement-01e.img": {
      frame: {
        x: 2,
        y: 2,
        w: 716,
        h: 796
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 716,
        h: 796
      },
      sourceSize: {
        w: 716,
        h: 796
      }
    },
    "map-building-mansion-floor-01b.img": {
      frame: {
        x: 2,
        y: 802,
        w: 913,
        h: 609
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 913,
        h: 609
      },
      sourceSize: {
        w: 913,
        h: 609
      }
    },
    "map-building-barn-floor-01.img": {
      frame: {
        x: 919,
        y: 802,
        w: 800,
        h: 544
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 800,
        h: 544
      },
      sourceSize: {
        w: 800,
        h: 544
      }
    },
    "map-building-police-ceiling-02.img": {
      frame: {
        x: 2,
        y: 1415,
        w: 265,
        h: 541
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 265,
        h: 541
      },
      sourceSize: {
        w: 265,
        h: 541
      }
    },
    "map-building-cabin-floor.img": {
      frame: {
        x: 271,
        y: 1415,
        w: 608,
        h: 496
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 608,
        h: 496
      },
      sourceSize: {
        w: 608,
        h: 496
      }
    },
    "map-building-bathhouse-basement-01b.img": {
      frame: {
        x: 883,
        y: 1415,
        w: 652,
        h: 460
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 652,
        h: 460
      },
      sourceSize: {
        w: 652,
        h: 460
      }
    },
    "map-building-hut-floor-02.img": {
      frame: {
        x: 1539,
        y: 1415,
        w: 68,
        h: 384
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 68,
        h: 384
      },
      sourceSize: {
        w: 68,
        h: 384
      }
    },
    "map-building-container-open-floor.img": {
      frame: {
        x: 1611,
        y: 1415,
        w: 90,
        h: 345
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 90,
        h: 345
      },
      sourceSize: {
        w: 90,
        h: 346
      }
    },
    "map-building-dock-floor-01b.img": {
      frame: {
        x: 1782,
        y: 2,
        w: 81,
        h: 332
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 81,
        h: 332
      },
      sourceSize: {
        w: 81,
        h: 332
      }
    },
    "map-wall-18.img": {
      frame: {
        x: 1782,
        y: 338,
        w: 16,
        h: 288
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 288
      },
      sourceSize: {
        w: 16,
        h: 288
      }
    },
    "map-building-container-floor-01.img": {
      frame: {
        x: 1867,
        y: 2,
        w: 90,
        h: 267
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 90,
        h: 267
      },
      sourceSize: {
        w: 90,
        h: 268
      }
    },
    "map-club-bar-01.img": {
      frame: {
        x: 1867,
        y: 273,
        w: 27,
        h: 240
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 27,
        h: 240
      },
      sourceSize: {
        w: 27,
        h: 240
      }
    },
    "map-wall-14-rounded.img": {
      frame: {
        x: 1898,
        y: 273,
        w: 16,
        h: 224
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 224
      },
      sourceSize: {
        w: 16,
        h: 224
      }
    },
    "map-wall-14.img": {
      frame: {
        x: 1918,
        y: 273,
        w: 16,
        h: 224
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 224
      },
      sourceSize: {
        w: 16,
        h: 224
      }
    },
    "map-wall-13-rounded.img": {
      frame: {
        x: 1938,
        y: 273,
        w: 16,
        h: 208
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 208
      },
      sourceSize: {
        w: 16,
        h: 208
      }
    },
    "map-wall-13.img": {
      frame: {
        x: 1867,
        y: 517,
        w: 16,
        h: 208
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 208
      },
      sourceSize: {
        w: 16,
        h: 208
      }
    },
    "map-building-container-open-ceiling-01.img": {
      frame: {
        x: 1867,
        y: 729,
        w: 90,
        h: 194
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 76,
        w: 90,
        h: 194
      },
      sourceSize: {
        w: 90,
        h: 346
      }
    },
    "map-building-container-ceiling-03.img": {
      frame: {
        x: 1867,
        y: 927,
        w: 90,
        h: 192
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 90,
        h: 192
      },
      sourceSize: {
        w: 90,
        h: 268
      }
    },
    "map-building-container-ceiling-02.img": {
      frame: {
        x: 1867,
        y: 1123,
        w: 90,
        h: 192
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 90,
        h: 192
      },
      sourceSize: {
        w: 90,
        h: 268
      }
    },
    "map-building-container-ceiling-01.img": {
      frame: {
        x: 1867,
        y: 1319,
        w: 90,
        h: 192
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 90,
        h: 192
      },
      sourceSize: {
        w: 90,
        h: 268
      }
    },
    "map-wall-glass-12-2.img": {
      frame: {
        x: 1887,
        y: 517,
        w: 32,
        h: 192
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 192
      },
      sourceSize: {
        w: 32,
        h: 192
      }
    },
    "map-wall-glass-12.img": {
      frame: {
        x: 1923,
        y: 517,
        w: 16,
        h: 192
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 192
      },
      sourceSize: {
        w: 16,
        h: 192
      }
    },
    "map-wall-12.img": {
      frame: {
        x: 1867,
        y: 1515,
        w: 16,
        h: 192
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 192
      },
      sourceSize: {
        w: 16,
        h: 192
      }
    },
    "map-wall-12-rounded.img": {
      frame: {
        x: 1887,
        y: 1515,
        w: 16,
        h: 192
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 192
      },
      sourceSize: {
        w: 16,
        h: 192
      }
    },
    "map-building-container-ceiling-05.img": {
      frame: {
        x: 1867,
        y: 1711,
        w: 90,
        h: 191
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 90,
        h: 191
      },
      sourceSize: {
        w: 90,
        h: 268
      }
    },
    "map-decal-club-02.img": {
      frame: {
        x: 1802,
        y: 338,
        w: 52,
        h: 180
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 52,
        h: 180
      },
      sourceSize: {
        w: 52,
        h: 180
      }
    },
    "map-pipes-04.img": {
      frame: {
        x: 1907,
        y: 1515,
        w: 44,
        h: 176
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 44,
        h: 176
      },
      sourceSize: {
        w: 44,
        h: 176
      }
    },
    "map-wall-11.img": {
      frame: {
        x: 1782,
        y: 630,
        w: 16,
        h: 176
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 176
      },
      sourceSize: {
        w: 16,
        h: 176
      }
    },
    "map-wall-11-rounded.img": {
      frame: {
        x: 1802,
        y: 630,
        w: 16,
        h: 176
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 176
      },
      sourceSize: {
        w: 16,
        h: 176
      }
    },
    "map-saloon-bar-01.img": {
      frame: {
        x: 1822,
        y: 630,
        w: 27,
        h: 162
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 27,
        h: 162
      },
      sourceSize: {
        w: 27,
        h: 162
      }
    },
    "map-wall-glass-10.img": {
      frame: {
        x: 1782,
        y: 810,
        w: 16,
        h: 160
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 160
      },
      sourceSize: {
        w: 16,
        h: 160
      }
    },
    "map-wall-10-rounded.img": {
      frame: {
        x: 1802,
        y: 810,
        w: 16,
        h: 160
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 160
      },
      sourceSize: {
        w: 16,
        h: 160
      }
    },
    "map-wall-10.img": {
      frame: {
        x: 1822,
        y: 810,
        w: 16,
        h: 160
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 160
      },
      sourceSize: {
        w: 16,
        h: 160
      }
    },
    "map-pipes-01.img": {
      frame: {
        x: 1782,
        y: 974,
        w: 45,
        h: 144
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 45,
        h: 144
      },
      sourceSize: {
        w: 45,
        h: 144
      }
    },
    "map-wall-09-rounded.img": {
      frame: {
        x: 1842,
        y: 810,
        w: 16,
        h: 144
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 144
      },
      sourceSize: {
        w: 16,
        h: 144
      }
    },
    "map-wall-glass-9.img": {
      frame: {
        x: 1831,
        y: 974,
        w: 16,
        h: 144
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 144
      },
      sourceSize: {
        w: 16,
        h: 144
      }
    },
    "map-wall-09.img": {
      frame: {
        x: 1782,
        y: 1122,
        w: 16,
        h: 144
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 144
      },
      sourceSize: {
        w: 16,
        h: 144
      }
    },
    "map-wall-08-rounded.img": {
      frame: {
        x: 1802,
        y: 1122,
        w: 16,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 128
      },
      sourceSize: {
        w: 16,
        h: 128
      }
    },
    "map-wall-shack-right.img": {
      frame: {
        x: 1943,
        y: 517,
        w: 12,
        h: 121
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 12,
        h: 121
      },
      sourceSize: {
        w: 12,
        h: 121
      }
    },
    "map-door-02.img": {
      frame: {
        x: 1822,
        y: 1122,
        w: 40,
        h: 112
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 40,
        h: 112
      },
      sourceSize: {
        w: 40,
        h: 112
      }
    },
    "map-wall-07.img": {
      frame: {
        x: 1782,
        y: 1270,
        w: 16,
        h: 112
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 112
      },
      sourceSize: {
        w: 16,
        h: 112
      }
    },
    "map-wall-07-rounded.img": {
      frame: {
        x: 1802,
        y: 1270,
        w: 16,
        h: 112
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 112
      },
      sourceSize: {
        w: 16,
        h: 112
      }
    },
    "map-wall-shack-left.img": {
      frame: {
        x: 1851,
        y: 974,
        w: 12,
        h: 111
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 12,
        h: 111
      },
      sourceSize: {
        w: 12,
        h: 111
      }
    },
    "map-bed-01.img": {
      frame: {
        x: 1782,
        y: 1386,
        w: 48,
        h: 108
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 48,
        h: 108
      },
      sourceSize: {
        w: 48,
        h: 108
      }
    },
    "map-wall-outhouse-side.img": {
      frame: {
        x: 1802,
        y: 522,
        w: 12,
        h: 99
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 12,
        h: 99
      },
      sourceSize: {
        w: 12,
        h: 99
      }
    },
    "map-building-barn-basement-ceiling-02.img": {
      frame: {
        x: 1961,
        y: 2,
        w: 82,
        h: 97
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 7,
        w: 82,
        h: 97
      },
      sourceSize: {
        w: 82,
        h: 104
      }
    },
    "map-pipes-05.img": {
      frame: {
        x: 1961,
        y: 103,
        w: 45,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 45,
        h: 96
      },
      sourceSize: {
        w: 45,
        h: 96
      }
    },
    "map-wall-06-rounded.img": {
      frame: {
        x: 2010,
        y: 103,
        w: 16,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 96
      },
      sourceSize: {
        w: 16,
        h: 96
      }
    },
    "map-wall-06.img": {
      frame: {
        x: 1961,
        y: 203,
        w: 16,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 96
      },
      sourceSize: {
        w: 16,
        h: 96
      }
    },
    "proj-wedge-01.img": {
      frame: {
        x: 1981,
        y: 203,
        w: 31,
        h: 89
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 31,
        h: 89
      },
      sourceSize: {
        w: 32,
        h: 90
      }
    },
    "part-wedge-01.img": {
      frame: {
        x: 1961,
        y: 303,
        w: 31,
        h: 89
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 31,
        h: 89
      },
      sourceSize: {
        w: 32,
        h: 90
      }
    },
    "map-building-club-vault-ceiling.img": {
      frame: {
        x: 1961,
        y: 396,
        w: 80,
        h: 88
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 88
      },
      sourceSize: {
        w: 80,
        h: 88
      }
    },
    "role-assault.img": {
      frame: {
        x: 1961,
        y: 488,
        w: 68,
        h: 87
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 10,
        y: 1,
        w: 68,
        h: 87
      },
      sourceSize: {
        w: 88,
        h: 88
      }
    },
    "map-snow-07.img": {
      frame: {
        x: 2,
        y: 1960,
        w: 250,
        h: 86
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 5,
        w: 250,
        h: 86
      },
      sourceSize: {
        w: 256,
        h: 96
      }
    },
    "map-pipes-02.img": {
      frame: {
        x: 256,
        y: 1960,
        w: 119,
        h: 86
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 119,
        h: 86
      },
      sourceSize: {
        w: 119,
        h: 86
      }
    },
    "role-tank.img": {
      frame: {
        x: 1961,
        y: 579,
        w: 68,
        h: 85
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 10,
        y: 1,
        w: 68,
        h: 85
      },
      sourceSize: {
        w: 88,
        h: 88
      }
    },
    "role-demo.img": {
      frame: {
        x: 1961,
        y: 668,
        w: 68,
        h: 85
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 10,
        y: 1,
        w: 68,
        h: 85
      },
      sourceSize: {
        w: 88,
        h: 88
      }
    },
    "role-sniper.img": {
      frame: {
        x: 1961,
        y: 757,
        w: 68,
        h: 85
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 10,
        y: 1,
        w: 68,
        h: 85
      },
      sourceSize: {
        w: 88,
        h: 88
      }
    },
    "role-healer.img": {
      frame: {
        x: 1961,
        y: 846,
        w: 68,
        h: 85
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 10,
        y: 1,
        w: 68,
        h: 85
      },
      sourceSize: {
        w: 88,
        h: 88
      }
    },
    "role-scout.img": {
      frame: {
        x: 1961,
        y: 935,
        w: 68,
        h: 85
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 10,
        y: 1,
        w: 68,
        h: 85
      },
      sourceSize: {
        w: 88,
        h: 88
      }
    },
    "map-stove-01.img": {
      frame: {
        x: 379,
        y: 1960,
        w: 108,
        h: 84
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 108,
        h: 84
      },
      sourceSize: {
        w: 112,
        h: 88
      }
    },
    "map-bed-res-02.img": {
      frame: {
        x: 1996,
        y: 303,
        w: 47,
        h: 83
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 6,
        w: 47,
        h: 83
      },
      sourceSize: {
        w: 48,
        h: 96
      }
    },
    "map-bed-res-01.img": {
      frame: {
        x: 1961,
        y: 1024,
        w: 47,
        h: 83
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 6,
        w: 47,
        h: 83
      },
      sourceSize: {
        w: 48,
        h: 96
      }
    },
    "map-crate-04.img": {
      frame: {
        x: 1961,
        y: 1111,
        w: 82,
        h: 82
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 82,
        h: 82
      },
      sourceSize: {
        w: 82,
        h: 82
      }
    },
    "map-building-dock-floor-01a.img": {
      frame: {
        x: 1961,
        y: 1197,
        w: 80,
        h: 81
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 81
      },
      sourceSize: {
        w: 80,
        h: 81
      }
    },
    "map-table-02.img": {
      frame: {
        x: 491,
        y: 1960,
        w: 144,
        h: 80
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 80
      },
      sourceSize: {
        w: 144,
        h: 80
      }
    },
    "map-table-03.img": {
      frame: {
        x: 1961,
        y: 1282,
        w: 80,
        h: 80
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 80
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "map-airdrop-01.img": {
      frame: {
        x: 1961,
        y: 1366,
        w: 80,
        h: 80
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 80
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "map-airdrop-02.img": {
      frame: {
        x: 1961,
        y: 1450,
        w: 80,
        h: 80
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 80
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "map-wall-04-stone.img": {
      frame: {
        x: 2016,
        y: 203,
        w: 20,
        h: 80
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 20,
        h: 80
      },
      sourceSize: {
        w: 20,
        h: 80
      }
    },
    "map-wall-04-cobalt.img": {
      frame: {
        x: 2012,
        y: 1024,
        w: 20,
        h: 80
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 20,
        h: 80
      },
      sourceSize: {
        w: 20,
        h: 80
      }
    },
    "map-wall-05-rounded.img": {
      frame: {
        x: 1961,
        y: 1534,
        w: 16,
        h: 80
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 80
      },
      sourceSize: {
        w: 16,
        h: 80
      }
    },
    "map-wall-05.img": {
      frame: {
        x: 1981,
        y: 1534,
        w: 16,
        h: 80
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 80
      },
      sourceSize: {
        w: 16,
        h: 80
      }
    },
    "map-wheel-01.img": {
      frame: {
        x: 639,
        y: 1960,
        w: 156,
        h: 78
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 156,
        h: 78
      },
      sourceSize: {
        w: 156,
        h: 78
      }
    },
    "map-crate-res-03.img": {
      frame: {
        x: 799,
        y: 1960,
        w: 108,
        h: 78
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 108,
        h: 78
      },
      sourceSize: {
        w: 108,
        h: 78
      }
    },
    "map-wheel-03.img": {
      frame: {
        x: 911,
        y: 1960,
        w: 156,
        h: 76
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 156,
        h: 76
      },
      sourceSize: {
        w: 156,
        h: 78
      }
    },
    "map-wheel-02.img": {
      frame: {
        x: 1071,
        y: 1960,
        w: 151,
        h: 76
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 151,
        h: 76
      },
      sourceSize: {
        w: 156,
        h: 78
      }
    },
    "map-sandbags-01.img": {
      frame: {
        x: 1226,
        y: 1960,
        w: 128,
        h: 74
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 74
      },
      sourceSize: {
        w: 128,
        h: 74
      }
    },
    "map-crate-11.img": {
      frame: {
        x: 1961,
        y: 1618,
        w: 74,
        h: 74
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 74,
        h: 74
      },
      sourceSize: {
        w: 74,
        h: 74
      }
    },
    "map-crate-10.img": {
      frame: {
        x: 1961,
        y: 1696,
        w: 74,
        h: 74
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 74,
        h: 74
      },
      sourceSize: {
        w: 74,
        h: 74
      }
    },
    "map-sandbags-02.img": {
      frame: {
        x: 1961,
        y: 1774,
        w: 60,
        h: 74
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 0,
        w: 60,
        h: 74
      },
      sourceSize: {
        w: 74,
        h: 74
      }
    },
    "pass-unlock-type-bg.img": {
      frame: {
        x: 1961,
        y: 1852,
        w: 73,
        h: 73
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 73,
        h: 73
      },
      sourceSize: {
        w: 73,
        h: 73
      }
    },
    "pass-unlock-bg.img": {
      frame: {
        x: 1782,
        y: 1498,
        w: 73,
        h: 73
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 73,
        h: 73
      },
      sourceSize: {
        w: 73,
        h: 73
      }
    },
    "loot-circle-outer-06.img": {
      frame: {
        x: 1782,
        y: 1575,
        w: 73,
        h: 73
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 73,
        h: 73
      },
      sourceSize: {
        w: 73,
        h: 73
      }
    },
    "map-building-barn-ceiling-02.img": {
      frame: {
        x: 1539,
        y: 1803,
        w: 208,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 208,
        h: 72
      },
      sourceSize: {
        w: 208,
        h: 72
      }
    },
    "map-crate-14.img": {
      frame: {
        x: 1782,
        y: 1652,
        w: 78,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 78,
        h: 72
      },
      sourceSize: {
        w: 78,
        h: 72
      }
    },
    "map-crate-14a.img": {
      frame: {
        x: 1782,
        y: 1728,
        w: 78,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 78,
        h: 72
      },
      sourceSize: {
        w: 78,
        h: 72
      }
    },
    "map-stone-05.img": {
      frame: {
        x: 1782,
        y: 1804,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-crate-09.img": {
      frame: {
        x: 1782,
        y: 1880,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-crate-02sv.img": {
      frame: {
        x: 1705,
        y: 1415,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-crate-08.img": {
      frame: {
        x: 1705,
        y: 1491,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-barrel-02.img": {
      frame: {
        x: 1705,
        y: 1567,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-crate-07.img": {
      frame: {
        x: 1705,
        y: 1643,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-barrel-01.img": {
      frame: {
        x: 1358,
        y: 1960,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-crate-01.img": {
      frame: {
        x: 1434,
        y: 1960,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-crate-02.img": {
      frame: {
        x: 1510,
        y: 1960,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-stone-01.img": {
      frame: {
        x: 1586,
        y: 1960,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-wall-outhouse-bot.img": {
      frame: {
        x: 1898,
        y: 501,
        w: 36,
        h: 12
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 36,
        h: 12
      },
      sourceSize: {
        w: 36,
        h: 12
      }
    },
    "map-stone-04.img": {
      frame: {
        x: 1738,
        y: 1960,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-bush-07.img": {
      frame: {
        x: 1814,
        y: 1960,
        w: 71,
        h: 72
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 0,
        w: 71,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-outhouse-res.img": {
      frame: {
        x: 1889,
        y: 1960,
        w: 78,
        h: 70
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 61,
        y: 19,
        w: 78,
        h: 70
      },
      sourceSize: {
        w: 200,
        h: 156
      }
    },
    "map-table-res.img": {
      frame: {
        x: 1971,
        y: 1960,
        w: 69,
        h: 69
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 69,
        h: 69
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-door-slot-02.img": {
      frame: {
        x: 2001,
        y: 1534,
        w: 19,
        h: 68
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 19,
        h: 68
      },
      sourceSize: {
        w: 19,
        h: 68
      }
    },
    "map-door-slot-01.img": {
      frame: {
        x: 2024,
        y: 1534,
        w: 19,
        h: 67
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 19,
        h: 67
      },
      sourceSize: {
        w: 19,
        h: 67
      }
    },
    "player-helmet-marksman.img": {
      frame: {
        x: 1723,
        y: 802,
        w: 49,
        h: 66
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 13,
        y: 11,
        w: 49,
        h: 66
      },
      sourceSize: {
        w: 88,
        h: 88
      }
    },
    "part-note-02.img": {
      frame: {
        x: 1723,
        y: 872,
        w: 49,
        h: 66
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: -1,
        w: 49,
        h: 66
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "part-note-01.img": {
      frame: {
        x: 1723,
        y: 942,
        w: 48,
        h: 66
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: -1,
        w: 48,
        h: 66
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "map-toilet-02.img": {
      frame: {
        x: 1723,
        y: 1012,
        w: 52,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 0,
        w: 52,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "map-toilet-01.img": {
      frame: {
        x: 1723,
        y: 1080,
        w: 52,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 0,
        w: 52,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "map-decal-oil-01.img": {
      frame: {
        x: 1723,
        y: 1148,
        w: 46,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 0,
        w: 46,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "map-door-04.img": {
      frame: {
        x: 1818,
        y: 522,
        w: 27,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 27,
        h: 64
      },
      sourceSize: {
        w: 27,
        h: 64
      }
    },
    "map-wall-04.img": {
      frame: {
        x: 2025,
        y: 1774,
        w: 16,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 64
      },
      sourceSize: {
        w: 16,
        h: 64
      }
    },
    "map-wall-04-rounded.img": {
      frame: {
        x: 1822,
        y: 1270,
        w: 16,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 64
      },
      sourceSize: {
        w: 16,
        h: 64
      }
    },
    "map-door-01.img": {
      frame: {
        x: 2030,
        y: 103,
        w: 12,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 12,
        h: 64
      },
      sourceSize: {
        w: 12,
        h: 64
      }
    },
    "map-door-05.img": {
      frame: {
        x: 1943,
        y: 642,
        w: 12,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 12,
        h: 64
      },
      sourceSize: {
        w: 12,
        h: 64
      }
    },
    "loot-weapon-m9-cursed.img": {
      frame: {
        x: 1723,
        y: 1216,
        w: 52,
        h: 63
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 1,
        w: 52,
        h: 63
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "map-squash-01.img": {
      frame: {
        x: 919,
        y: 1350,
        w: 65,
        h: 61
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 4,
        w: 65,
        h: 61
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-case-ring-01.img": {
      frame: {
        x: 988,
        y: 1350,
        w: 78,
        h: 60
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 78,
        h: 60
      },
      sourceSize: {
        w: 78,
        h: 60
      }
    },
    "map-case-chrys-01.img": {
      frame: {
        x: 1070,
        y: 1350,
        w: 78,
        h: 60
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 78,
        h: 60
      },
      sourceSize: {
        w: 78,
        h: 60
      }
    },
    "map-case-hatchet-res-01.img": {
      frame: {
        x: 1152,
        y: 1350,
        w: 67,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 4,
        w: 67,
        h: 60
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-case-flare-res-01.img": {
      frame: {
        x: 1223,
        y: 1350,
        w: 67,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 4,
        w: 67,
        h: 60
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "loot-perk-inspiration.img": {
      frame: {
        x: 1294,
        y: 1350,
        w: 60,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 1,
        w: 60,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "map-stone-res-01.img": {
      frame: {
        x: 1358,
        y: 1350,
        w: 60,
        h: 60
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 60,
        h: 60
      },
      sourceSize: {
        w: 60,
        h: 60
      }
    },
    "map-chimney-01.img": {
      frame: {
        x: 1422,
        y: 1350,
        w: 60,
        h: 60
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 60,
        h: 60
      },
      sourceSize: {
        w: 60,
        h: 60
      }
    },
    "map-stone-res-04.img": {
      frame: {
        x: 1486,
        y: 1350,
        w: 60,
        h: 60
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 60,
        h: 60
      },
      sourceSize: {
        w: 60,
        h: 60
      }
    },
    "loot-perk-final-bugle.img": {
      frame: {
        x: 1723,
        y: 1283,
        w: 54,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 0,
        w: 54,
        h: 60
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "map-building-boarded-window-01.img": {
      frame: {
        x: 1834,
        y: 1386,
        w: 24,
        h: 59
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 2,
        w: 24,
        h: 59
      },
      sourceSize: {
        w: 24,
        h: 64
      }
    },
    "news.img": {
      frame: {
        x: 1550,
        y: 1350,
        w: 58,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 58,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "map-bollard-01.img": {
      frame: {
        x: 1612,
        y: 1350,
        w: 58,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 7,
        w: 58,
        h: 58
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "loot-perk-turkey_shoot.img": {
      frame: {
        x: 1674,
        y: 1350,
        w: 54,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 3,
        w: 54,
        h: 58
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "map-door-03.img": {
      frame: {
        x: 1842,
        y: 1270,
        w: 16,
        h: 56
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 56
      },
      sourceSize: {
        w: 16,
        h: 56
      }
    },
    "map-building-bank-window-01.img": {
      frame: {
        x: 1732,
        y: 1350,
        w: 28,
        h: 52
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 28,
        h: 52
      },
      sourceSize: {
        w: 28,
        h: 52
      }
    },
    "map-building-house-window-res-01.img": {
      frame: {
        x: 1751,
        y: 1803,
        w: 16,
        h: 52
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 52
      },
      sourceSize: {
        w: 16,
        h: 52
      }
    },
    "map-crate-06.img": {
      frame: {
        x: 1867,
        y: 1906,
        w: 82,
        h: 50
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 82,
        h: 50
      },
      sourceSize: {
        w: 82,
        h: 50
      }
    },
    "map-towelrack-01.img": {
      frame: {
        x: 271,
        y: 1915,
        w: 96,
        h: 40
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 4,
        w: 96,
        h: 40
      },
      sourceSize: {
        w: 96,
        h: 48
      }
    },
    "map-recorder-04.img": {
      frame: {
        x: 1822,
        y: 1338,
        w: 24,
        h: 40
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 24,
        h: 40
      },
      sourceSize: {
        w: 24,
        h: 40
      }
    },
    "map-recorder-03.img": {
      frame: {
        x: 1834,
        y: 1449,
        w: 24,
        h: 40
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 24,
        h: 40
      },
      sourceSize: {
        w: 24,
        h: 40
      }
    },
    "map-wall-02-5-rounded.img": {
      frame: {
        x: 1705,
        y: 1719,
        w: 16,
        h: 40
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 40
      },
      sourceSize: {
        w: 16,
        h: 40
      }
    },
    "map-piano-01.img": {
      frame: {
        x: 371,
        y: 1915,
        w: 120,
        h: 38
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 120,
        h: 38
      },
      sourceSize: {
        w: 120,
        h: 38
      }
    },
    "map-building-cabin-ceiling-01b.img": {
      frame: {
        x: 495,
        y: 1915,
        w: 74,
        h: 38
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 74,
        h: 38
      },
      sourceSize: {
        w: 74,
        h: 38
      }
    },
    "map-deposit-box-02.img": {
      frame: {
        x: 573,
        y: 1915,
        w: 80,
        h: 37
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 37
      },
      sourceSize: {
        w: 80,
        h: 37
      }
    },
    "map-deposit-box-01.img": {
      frame: {
        x: 657,
        y: 1915,
        w: 80,
        h: 37
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 37
      },
      sourceSize: {
        w: 80,
        h: 37
      }
    },
    "map-power-box-01.img": {
      frame: {
        x: 1725,
        y: 1719,
        w: 36,
        h: 36
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 36,
        h: 36
      },
      sourceSize: {
        w: 36,
        h: 36
      }
    },
    "map-fire-ext-01.img": {
      frame: {
        x: 1611,
        y: 1764,
        w: 42,
        h: 34
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 42,
        h: 34
      },
      sourceSize: {
        w: 42,
        h: 35
      }
    },
    "map-potato-res.img": {
      frame: {
        x: 1657,
        y: 1764,
        w: 29,
        h: 34
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 10,
        y: 7,
        w: 29,
        h: 34
      },
      sourceSize: {
        w: 48,
        h: 48
      }
    },
    "map-bush-res-02.img": {
      frame: {
        x: 1690,
        y: 1764,
        w: 33,
        h: 33
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 19,
        y: 21,
        w: 33,
        h: 33
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-bookshelf-02.img": {
      frame: {
        x: 883,
        y: 1879,
        w: 112,
        h: 32
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 112,
        h: 32
      },
      sourceSize: {
        w: 112,
        h: 32
      }
    },
    "map-bookshelf-01.img": {
      frame: {
        x: 999,
        y: 1879,
        w: 112,
        h: 32
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 112,
        h: 32
      },
      sourceSize: {
        w: 112,
        h: 32
      }
    },
    "map-building-porch-01.img": {
      frame: {
        x: 1115,
        y: 1879,
        w: 64,
        h: 32
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 32
      },
      sourceSize: {
        w: 64,
        h: 32
      }
    },
    "crosshair160.img": {
      frame: {
        x: 1727,
        y: 1764,
        w: 32,
        h: 32
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 32
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "map-column-01.img": {
      frame: {
        x: 1183,
        y: 1879,
        w: 32,
        h: 32
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 32
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "crosshair136.img": {
      frame: {
        x: 1219,
        y: 1879,
        w: 32,
        h: 32
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 32
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "crosshair118.img": {
      frame: {
        x: 1255,
        y: 1879,
        w: 32,
        h: 32
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 32
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "map-fire-ext-res.img": {
      frame: {
        x: 1291,
        y: 1879,
        w: 26,
        h: 32
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 16,
        y: 2,
        w: 26,
        h: 32
      },
      sourceSize: {
        w: 42,
        h: 35
      }
    },
    "map-decal-oil-05.img": {
      frame: {
        x: 1321,
        y: 1879,
        w: 19,
        h: 32
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 0,
        w: 19,
        h: 32
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "map-wall-02-rounded.img": {
      frame: {
        x: 1344,
        y: 1879,
        w: 16,
        h: 32
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 32
      },
      sourceSize: {
        w: 16,
        h: 32
      }
    },
    "map-wall-02.img": {
      frame: {
        x: 1364,
        y: 1879,
        w: 16,
        h: 32
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 32
      },
      sourceSize: {
        w: 16,
        h: 32
      }
    },
    "loot-melee-sledgehammer.img": {
      frame: {
        x: 1384,
        y: 1879,
        w: 76,
        h: 31
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: -1,
        w: 76,
        h: 31
      },
      sourceSize: {
        w: 74,
        h: 29
      }
    },
    "map-drawers-res.img": {
      frame: {
        x: 1464,
        y: 1879,
        w: 48,
        h: 31
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 48,
        h: 31
      },
      sourceSize: {
        w: 48,
        h: 32
      }
    },
    "map-woodpile-res-01.img": {
      frame: {
        x: 1818,
        y: 590,
        w: 40,
        h: 30
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 9,
        w: 40,
        h: 30
      },
      sourceSize: {
        w: 48,
        h: 48
      }
    },
    "map-bathhouse-pool-01.img": {
      frame: {
        x: 1516,
        y: 1879,
        w: 18,
        h: 30
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 18,
        h: 30
      },
      sourceSize: {
        w: 18,
        h: 30
      }
    },
    "map-screen-res-01.img": {
      frame: {
        x: 1538,
        y: 1879,
        w: 60,
        h: 29
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 0,
        w: 60,
        h: 29
      },
      sourceSize: {
        w: 62,
        h: 29
      }
    },
    "map-barrel-res-03.img": {
      frame: {
        x: 1602,
        y: 1879,
        w: 40,
        h: 29
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 16,
        y: 42,
        w: 40,
        h: 29
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-gun-mount-04.img": {
      frame: {
        x: 1646,
        y: 1879,
        w: 64,
        h: 28
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 28
      },
      sourceSize: {
        w: 64,
        h: 28
      }
    },
    "map-decal-oil-04.img": {
      frame: {
        x: 1714,
        y: 1879,
        w: 30,
        h: 28
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 2,
        w: 30,
        h: 28
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "map-bush-res-04.img": {
      frame: {
        x: 1961,
        y: 1929,
        w: 27,
        h: 27
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 27,
        h: 27
      },
      sourceSize: {
        w: 27,
        h: 27
      }
    },
    "map-gun-mount-05.img": {
      frame: {
        x: 741,
        y: 1915,
        w: 72,
        h: 26
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 26
      },
      sourceSize: {
        w: 72,
        h: 28
      }
    },
    "map-gun-mount-01.img": {
      frame: {
        x: 817,
        y: 1915,
        w: 72,
        h: 26
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 26
      },
      sourceSize: {
        w: 72,
        h: 28
      }
    },
    "crosshair098.img": {
      frame: {
        x: 1992,
        y: 1929,
        w: 32,
        h: 26
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 26
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "map-bush-res-01.img": {
      frame: {
        x: 1748,
        y: 1879,
        w: 30,
        h: 26
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 21,
        y: 23,
        w: 30,
        h: 26
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-candle-01.img": {
      frame: {
        x: 893,
        y: 1915,
        w: 26,
        h: 26
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 26,
        h: 26
      },
      sourceSize: {
        w: 26,
        h: 26
      }
    },
    "map-locker-03.img": {
      frame: {
        x: 923,
        y: 1915,
        w: 48,
        h: 25
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 48,
        h: 25
      },
      sourceSize: {
        w: 48,
        h: 25
      }
    },
    "map-locker-02.img": {
      frame: {
        x: 975,
        y: 1915,
        w: 48,
        h: 25
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 48,
        h: 25
      },
      sourceSize: {
        w: 48,
        h: 25
      }
    },
    "map-locker-01.img": {
      frame: {
        x: 1027,
        y: 1915,
        w: 48,
        h: 25
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 48,
        h: 25
      },
      sourceSize: {
        w: 48,
        h: 25
      }
    },
    "map-building-bank-window-res-01.img": {
      frame: {
        x: 1079,
        y: 1915,
        w: 26,
        h: 25
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 21,
        y: 26,
        w: 26,
        h: 25
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-screen-01.img": {
      frame: {
        x: 1109,
        y: 1915,
        w: 128,
        h: 24
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 24
      },
      sourceSize: {
        w: 128,
        h: 24
      }
    },
    "map-gun-mount-03.img": {
      frame: {
        x: 1241,
        y: 1915,
        w: 64,
        h: 24
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 24
      },
      sourceSize: {
        w: 64,
        h: 28
      }
    },
    "map-gun-mount-02.img": {
      frame: {
        x: 1309,
        y: 1915,
        w: 64,
        h: 24
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 24
      },
      sourceSize: {
        w: 64,
        h: 28
      }
    },
    "cobalt.img": {
      frame: {
        x: 1377,
        y: 1915,
        w: 24,
        h: 24
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 24,
        h: 24
      },
      sourceSize: {
        w: 24,
        h: 24
      }
    },
    "map-tree-res-01.img": {
      frame: {
        x: 1405,
        y: 1915,
        w: 24,
        h: 24
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 24,
        h: 24
      },
      sourceSize: {
        w: 24,
        h: 24
      }
    },
    "crosshair051.img": {
      frame: {
        x: 1433,
        y: 1915,
        w: 24,
        h: 24
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 4,
        w: 24,
        h: 24
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "map-decal-flyer-01.img": {
      frame: {
        x: 1461,
        y: 1915,
        w: 21,
        h: 24
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 21,
        h: 24
      },
      sourceSize: {
        w: 24,
        h: 24
      }
    },
    "crosshair176.img": {
      frame: {
        x: 1486,
        y: 1915,
        w: 20,
        h: 19
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 6,
        w: 20,
        h: 19
      },
      sourceSize: {
        w: 32,
        h: 32
      }
    },
    "map-barrel-04.img": {
      frame: {
        x: 1510,
        y: 1915,
        w: 45,
        h: 18
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 45,
        h: 18
      },
      sourceSize: {
        w: 45,
        h: 18
      }
    },
    "map-barrel-03.img": {
      frame: {
        x: 1559,
        y: 1915,
        w: 45,
        h: 18
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 45,
        h: 18
      },
      sourceSize: {
        w: 45,
        h: 18
      }
    },
    "map-bottle-04.img": {
      frame: {
        x: 1608,
        y: 1915,
        w: 18,
        h: 18
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: -1,
        y: -1,
        w: 18,
        h: 18
      },
      sourceSize: {
        w: 16,
        h: 16
      }
    },
    "map-switch-01.img": {
      frame: {
        x: 2028,
        y: 1929,
        w: 15,
        h: 17
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 15,
        h: 17
      },
      sourceSize: {
        w: 15,
        h: 17
      }
    },
    "map-switch-02.img": {
      frame: {
        x: 1763,
        y: 1764,
        w: 15,
        h: 17
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 15,
        h: 17
      },
      sourceSize: {
        w: 15,
        h: 17
      }
    },
    "map-switch-03.img": {
      frame: {
        x: 1630,
        y: 1915,
        w: 15,
        h: 17
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 15,
        h: 17
      },
      sourceSize: {
        w: 15,
        h: 17
      }
    },
    "map-bottle-03.img": {
      frame: {
        x: 1751,
        y: 1859,
        w: 16,
        h: 16
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 16
      },
      sourceSize: {
        w: 16,
        h: 16
      }
    },
    "map-bottle-05.img": {
      frame: {
        x: 1649,
        y: 1915,
        w: 16,
        h: 16
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 16
      },
      sourceSize: {
        w: 16,
        h: 16
      }
    },
    "map-wall-01-rounded.img": {
      frame: {
        x: 1669,
        y: 1915,
        w: 16,
        h: 16
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 16
      },
      sourceSize: {
        w: 16,
        h: 16
      }
    },
    "map-bottle-01.img": {
      frame: {
        x: 1689,
        y: 1915,
        w: 16,
        h: 16
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 16
      },
      sourceSize: {
        w: 16,
        h: 16
      }
    },
    "map-bottle-02.img": {
      frame: {
        x: 1709,
        y: 1915,
        w: 16,
        h: 16
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 16
      },
      sourceSize: {
        w: 16,
        h: 16
      }
    },
    "map-crate-03.img": {
      frame: {
        x: 1662,
        y: 1960,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    }
  }
}, {
  meta: {
    image: "shared-1-50-e92848bd.png",
    size: {
      w: 2048,
      h: 2048
    },
    scale: 0.5
  },
  frames: {
    "map-bunker-conch-compartment-floor-01a.img": {
      frame: {
        x: 284,
        y: 2,
        w: 472,
        h: 440
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 24,
        y: 0,
        w: 472,
        h: 440
      },
      sourceSize: {
        w: 496,
        h: 440
      }
    },
    "map-building-bank-ceiling-02.img": {
      frame: {
        x: 2,
        y: 2,
        w: 278,
        h: 446
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 24,
        w: 278,
        h: 446
      },
      sourceSize: {
        w: 278,
        h: 470
      }
    },
    "map-building-club-floor-01c.img": {
      frame: {
        x: 760,
        y: 2,
        w: 721,
        h: 433
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 721,
        h: 433
      },
      sourceSize: {
        w: 721,
        h: 433
      }
    },
    "map-building-house-floor-01.img": {
      frame: {
        x: 2,
        y: 452,
        w: 480,
        h: 432
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 480,
        h: 432
      },
      sourceSize: {
        w: 480,
        h: 432
      }
    },
    "map-building-house-floor-02.img": {
      frame: {
        x: 486,
        y: 452,
        w: 480,
        h: 432
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 480,
        h: 432
      },
      sourceSize: {
        w: 480,
        h: 432
      }
    },
    "map-building-mansion-ceiling.img": {
      frame: {
        x: 970,
        y: 452,
        w: 458,
        h: 404
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 14,
        w: 458,
        h: 404
      },
      sourceSize: {
        w: 512,
        h: 432
      }
    },
    "map-building-bank-floor-01.img": {
      frame: {
        x: 2,
        y: 888,
        w: 848,
        h: 401
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 848,
        h: 401
      },
      sourceSize: {
        w: 848,
        h: 401
      }
    },
    "map-building-mansion-cellar-01a.img": {
      frame: {
        x: 854,
        y: 888,
        w: 433,
        h: 401
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 433,
        h: 401
      },
      sourceSize: {
        w: 433,
        h: 401
      }
    },
    "map-building-warehouse-floor-01.img": {
      frame: {
        x: 1485,
        y: 2,
        w: 500,
        h: 400
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 500,
        h: 400
      },
      sourceSize: {
        w: 500,
        h: 400
      }
    },
    "map-building-warehouse-floor-02.img": {
      frame: {
        x: 1485,
        y: 406,
        w: 440,
        h: 400
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 440,
        h: 400
      },
      sourceSize: {
        w: 440,
        h: 400
      }
    },
    "map-building-shilo-floor-01.img": {
      frame: {
        x: 1485,
        y: 810,
        w: 480,
        h: 384
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 480,
        h: 384
      },
      sourceSize: {
        w: 480,
        h: 384
      }
    },
    "map-building-shilo-ceiling-01.img": {
      frame: {
        x: 2,
        y: 1293,
        w: 480,
        h: 384
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 480,
        h: 384
      },
      sourceSize: {
        w: 480,
        h: 384
      }
    },
    "map-building-bathhouse-sideroom-02.img": {
      frame: {
        x: 486,
        y: 1293,
        w: 556,
        h: 365
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 556,
        h: 365
      },
      sourceSize: {
        w: 556,
        h: 365
      }
    },
    "map-building-bridge-lg-floor.img": {
      frame: {
        x: 1046,
        y: 1293,
        w: 506,
        h: 354
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 506,
        h: 354
      },
      sourceSize: {
        w: 506,
        h: 354
      }
    },
    "map-bunker-egg-chamber-floor-01a.img": {
      frame: {
        x: 1556,
        y: 1293,
        w: 364,
        h: 350
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 0,
        w: 364,
        h: 350
      },
      sourceSize: {
        w: 369,
        h: 353
      }
    },
    "map-bunker-storm-chamber-floor-01a.img": {
      frame: {
        x: 2,
        y: 1681,
        w: 636,
        h: 349
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 0,
        w: 636,
        h: 349
      },
      sourceSize: {
        w: 640,
        h: 352
      }
    },
    "map-building-house-ceiling.img": {
      frame: {
        x: 642,
        y: 1681,
        w: 360,
        h: 324
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 360,
        h: 324
      },
      sourceSize: {
        w: 360,
        h: 324
      }
    },
    "map-building-police-floor-02.img": {
      frame: {
        x: 1006,
        y: 1681,
        w: 305,
        h: 321
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 32,
        w: 305,
        h: 321
      },
      sourceSize: {
        w: 305,
        h: 785
      }
    },
    "map-building-barn-ceiling-01.img": {
      frame: {
        x: 1315,
        y: 1681,
        w: 600,
        h: 312
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 600,
        h: 312
      },
      sourceSize: {
        w: 600,
        h: 312
      }
    },
    "map-building-club-floor-01e.img": {
      frame: {
        x: 1291,
        y: 888,
        w: 177,
        h: 241
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 177,
        h: 241
      },
      sourceSize: {
        w: 177,
        h: 241
      }
    },
    "map-bunker-egg-chamber-ceiling-01.img": {
      frame: {
        x: 1291,
        y: 1133,
        w: 160,
        h: 153
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 71,
        w: 160,
        h: 153
      },
      sourceSize: {
        w: 160,
        h: 224
      }
    },
    "map-shack-res-03.img": {
      frame: {
        x: 1485,
        y: 1198,
        w: 114,
        h: 91
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 48,
        y: 33,
        w: 114,
        h: 91
      },
      sourceSize: {
        w: 210,
        h: 170
      }
    },
    "map-shack-res-02.img": {
      frame: {
        x: 1603,
        y: 1198,
        w: 114,
        h: 91
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 48,
        y: 33,
        w: 114,
        h: 91
      },
      sourceSize: {
        w: 210,
        h: 170
      }
    },
    "map-bunker-conch-ceiling-01.img": {
      frame: {
        x: 1721,
        y: 1198,
        w: 190,
        h: 90
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 190,
        h: 90
      },
      sourceSize: {
        w: 190,
        h: 90
      }
    },
    "map-bunker-vent-03.img": {
      frame: {
        x: 1915,
        y: 1198,
        w: 68,
        h: 68
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 68,
        h: 68
      },
      sourceSize: {
        w: 68,
        h: 68
      }
    },
    "map-bush-07x.img": {
      frame: {
        x: 1919,
        y: 1681,
        w: 66,
        h: 68
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 2,
        w: 66,
        h: 68
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-bush-01f.img": {
      frame: {
        x: 1919,
        y: 1753,
        w: 66,
        h: 68
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 2,
        w: 66,
        h: 68
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-decal-initiative.img": {
      frame: {
        x: 1919,
        y: 1825,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "pass.img": {
      frame: {
        x: 1919,
        y: 1893,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "map-vat-res.img": {
      frame: {
        x: 1924,
        y: 1293,
        w: 57,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 4,
        w: 57,
        h: 64
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "loot-perk-hotw.img": {
      frame: {
        x: 1929,
        y: 406,
        w: 56,
        h: 64
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 0,
        w: 56,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "loot-perk-halloween-mystery.img": {
      frame: {
        x: 1929,
        y: 474,
        w: 56,
        h: 63
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 0,
        w: 56,
        h: 63
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "map-toilet-res-01.img": {
      frame: {
        x: 1929,
        y: 541,
        w: 52,
        h: 57
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 2,
        w: 52,
        h: 57
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "part-leaf-01sv.img": {
      frame: {
        x: 1924,
        y: 1361,
        w: 58,
        h: 56
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 4,
        w: 58,
        h: 56
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "map-wall-outhouse-top.img": {
      frame: {
        x: 1279,
        y: 860,
        w: 102,
        h: 12
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 102,
        h: 12
      },
      sourceSize: {
        w: 102,
        h: 12
      }
    },
    "map-tree-09.img": {
      frame: {
        x: 1929,
        y: 662,
        w: 56,
        h: 56
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 56,
        h: 56
      },
      sourceSize: {
        w: 56,
        h: 56
      }
    },
    "map-decal-club-01.img": {
      frame: {
        x: 1929,
        y: 722,
        w: 52,
        h: 56
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 56,
        w: 52,
        h: 56
      },
      sourceSize: {
        w: 52,
        h: 180
      }
    },
    "map-crate-20.img": {
      frame: {
        x: 1924,
        y: 1421,
        w: 54,
        h: 54
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 54,
        h: 54
      },
      sourceSize: {
        w: 54,
        h: 54
      }
    },
    "map-stove-02.img": {
      frame: {
        x: 1924,
        y: 1479,
        w: 52,
        h: 54
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 52,
        h: 54
      },
      sourceSize: {
        w: 56,
        h: 56
      }
    },
    "map-decal-oil-02.img": {
      frame: {
        x: 1432,
        y: 452,
        w: 48,
        h: 53
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 6,
        w: 48,
        h: 53
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "map-building-house-window-01.img": {
      frame: {
        x: 1969,
        y: 810,
        w: 16,
        h: 52
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 52
      },
      sourceSize: {
        w: 16,
        h: 52
      }
    },
    "map-decal-oil-03.img": {
      frame: {
        x: 1432,
        y: 509,
        w: 48,
        h: 50
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 7,
        w: 48,
        h: 50
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "map-toilet-res-02.img": {
      frame: {
        x: 1432,
        y: 563,
        w: 43,
        h: 50
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 10,
        y: 7,
        w: 43,
        h: 50
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "map-toilet-04.img": {
      frame: {
        x: 1432,
        y: 617,
        w: 36,
        h: 50
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 0,
        w: 36,
        h: 50
      },
      sourceSize: {
        w: 50,
        h: 50
      }
    },
    "map-toilet-03.img": {
      frame: {
        x: 1432,
        y: 671,
        w: 36,
        h: 50
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 0,
        w: 36,
        h: 50
      },
      sourceSize: {
        w: 50,
        h: 50
      }
    },
    "map-couch-03.img": {
      frame: {
        x: 1432,
        y: 725,
        w: 48,
        h: 48
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 48,
        h: 48
      },
      sourceSize: {
        w: 48,
        h: 48
      }
    },
    "map-pot-04.img": {
      frame: {
        x: 1432,
        y: 777,
        w: 48,
        h: 48
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 48,
        h: 48
      },
      sourceSize: {
        w: 48,
        h: 48
      }
    },
    "map-woodpile-01.img": {
      frame: {
        x: 1924,
        y: 1537,
        w: 48,
        h: 48
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 48,
        h: 48
      },
      sourceSize: {
        w: 48,
        h: 48
      }
    },
    "map-pot-01.img": {
      frame: {
        x: 1924,
        y: 1589,
        w: 48,
        h: 48
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 48,
        h: 48
      },
      sourceSize: {
        w: 48,
        h: 48
      }
    },
    "map-bathrocks-01.img": {
      frame: {
        x: 1989,
        y: 2,
        w: 48,
        h: 48
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 48,
        h: 48
      },
      sourceSize: {
        w: 48,
        h: 48
      }
    },
    "map-pot-05.img": {
      frame: {
        x: 1989,
        y: 54,
        w: 48,
        h: 48
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 48,
        h: 48
      },
      sourceSize: {
        w: 48,
        h: 48
      }
    },
    "map-pot-03.img": {
      frame: {
        x: 1989,
        y: 106,
        w: 48,
        h: 48
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 48,
        h: 48
      },
      sourceSize: {
        w: 48,
        h: 48
      }
    },
    "map-tree-res-02.img": {
      frame: {
        x: 1989,
        y: 158,
        w: 48,
        h: 48
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 48,
        h: 48
      },
      sourceSize: {
        w: 48,
        h: 48
      }
    },
    "map-pot-02.img": {
      frame: {
        x: 1989,
        y: 210,
        w: 48,
        h: 48
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 48,
        h: 48
      },
      sourceSize: {
        w: 48,
        h: 48
      }
    },
    "map-recorder-01.img": {
      frame: {
        x: 1989,
        y: 262,
        w: 32,
        h: 48
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 48
      },
      sourceSize: {
        w: 32,
        h: 48
      }
    },
    "map-recorder-02.img": {
      frame: {
        x: 1989,
        y: 314,
        w: 32,
        h: 48
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 32,
        h: 48
      },
      sourceSize: {
        w: 32,
        h: 48
      }
    },
    "map-wall-03-rounded.img": {
      frame: {
        x: 1989,
        y: 366,
        w: 16,
        h: 48
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 48
      },
      sourceSize: {
        w: 16,
        h: 48
      }
    },
    "map-wall-03.img": {
      frame: {
        x: 2009,
        y: 366,
        w: 16,
        h: 48
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 16,
        h: 48
      },
      sourceSize: {
        w: 16,
        h: 48
      }
    },
    "map-control-panel-03.img": {
      frame: {
        x: 1989,
        y: 418,
        w: 48,
        h: 47
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 48,
        h: 47
      },
      sourceSize: {
        w: 48,
        h: 47
      }
    },
    "map-couch-res-01.img": {
      frame: {
        x: 1989,
        y: 469,
        w: 43,
        h: 46
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 1,
        w: 43,
        h: 46
      },
      sourceSize: {
        w: 48,
        h: 48
      }
    },
    "map-saloon-bar-02.img": {
      frame: {
        x: 1989,
        y: 519,
        w: 27,
        h: 46
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 27,
        h: 46
      },
      sourceSize: {
        w: 27,
        h: 46
      }
    },
    "map-stand-01.img": {
      frame: {
        x: 1989,
        y: 569,
        w: 40,
        h: 45
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 40,
        h: 45
      },
      sourceSize: {
        w: 40,
        h: 45
      }
    },
    "map-squash-res-01.img": {
      frame: {
        x: 1989,
        y: 618,
        w: 45,
        h: 44
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 4,
        w: 45,
        h: 44
      },
      sourceSize: {
        w: 48,
        h: 48
      }
    },
    "map-pot-res-01.img": {
      frame: {
        x: 1989,
        y: 666,
        w: 44,
        h: 44
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 14,
        y: 14,
        w: 44,
        h: 44
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-bunker-vent-01.img": {
      frame: {
        x: 1989,
        y: 714,
        w: 42,
        h: 42
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 42,
        h: 42
      },
      sourceSize: {
        w: 42,
        h: 42
      }
    },
    "map-wall-shack-top.img": {
      frame: {
        x: 970,
        y: 860,
        w: 180,
        h: 12
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 180,
        h: 12
      },
      sourceSize: {
        w: 180,
        h: 12
      }
    },
    "map-wall-shack-bot.img": {
      frame: {
        x: 1154,
        y: 860,
        w: 121,
        h: 12
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 121,
        h: 12
      },
      sourceSize: {
        w: 121,
        h: 12
      }
    },
    "map-tree-04.img": {
      frame: {
        x: 1929,
        y: 602,
        w: 56,
        h: 56
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 56,
        h: 56
      },
      sourceSize: {
        w: 56,
        h: 56
      }
    }
  }
}, {
  meta: {
    image: "shared-2-50-fcf3c569.png",
    size: {
      w: 2048,
      h: 2048
    },
    scale: 0.5
  },
  frames: {
    "map-building-club-ceiling-01a.img": {
      frame: {
        x: 476,
        y: 2,
        w: 369,
        h: 297
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 369,
        h: 297
      },
      sourceSize: {
        w: 369,
        h: 297
      }
    },
    "map-building-teahouse-ceiling-01.img": {
      frame: {
        x: 2,
        y: 2,
        w: 470,
        h: 308
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 6,
        w: 470,
        h: 308
      },
      sourceSize: {
        w: 480,
        h: 320
      }
    },
    "map-building-club-floor-01g.img": {
      frame: {
        x: 2,
        y: 314,
        w: 401,
        h: 289
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 401,
        h: 289
      },
      sourceSize: {
        w: 401,
        h: 289
      }
    },
    "map-building-cabin-ceiling-01a.img": {
      frame: {
        x: 849,
        y: 2,
        w: 456,
        h: 288
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 456,
        h: 288
      },
      sourceSize: {
        w: 456,
        h: 288
      }
    },
    "map-building-teahouse-floor-01.img": {
      frame: {
        x: 849,
        y: 294,
        w: 448,
        h: 288
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 448,
        h: 288
      },
      sourceSize: {
        w: 448,
        h: 288
      }
    },
    "map-bunker-conch-compartment-ceiling-01.img": {
      frame: {
        x: 407,
        y: 314,
        w: 244,
        h: 280
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 244,
        h: 280
      },
      sourceSize: {
        w: 244,
        h: 280
      }
    },
    "map-building-bank-ceiling-01.img": {
      frame: {
        x: 2,
        y: 607,
        w: 253,
        h: 277
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 23,
        w: 253,
        h: 277
      },
      sourceSize: {
        w: 253,
        h: 300
      }
    },
    "map-building-bridge-lg-ceiling.img": {
      frame: {
        x: 259,
        y: 607,
        w: 544,
        h: 274
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 7,
        w: 544,
        h: 274
      },
      sourceSize: {
        w: 544,
        h: 288
      }
    },
    "map-building-bathhouse-sideroom-01.img": {
      frame: {
        x: 807,
        y: 607,
        w: 268,
        h: 268
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 268,
        h: 268
      },
      sourceSize: {
        w: 268,
        h: 268
      }
    },
    "map-tree-08f.img": {
      frame: {
        x: 2,
        y: 888,
        w: 256,
        h: 256
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 256,
        h: 256
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-tree-08su.img": {
      frame: {
        x: 262,
        y: 888,
        w: 256,
        h: 256
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 256,
        h: 256
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-silo-01.img": {
      frame: {
        x: 522,
        y: 888,
        w: 252,
        h: 254
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 1,
        w: 252,
        h: 254
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-building-police-ceiling-01.img": {
      frame: {
        x: 778,
        y: 888,
        w: 504,
        h: 240
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 504,
        h: 240
      },
      sourceSize: {
        w: 504,
        h: 240
      }
    },
    "map-building-police-ceiling-03.img": {
      frame: {
        x: 1309,
        y: 2,
        w: 252,
        h: 240
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 252,
        h: 240
      },
      sourceSize: {
        w: 252,
        h: 240
      }
    },
    "map-building-barn-basement-floor-01.img": {
      frame: {
        x: 2,
        y: 1148,
        w: 332,
        h: 236
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 332,
        h: 236
      },
      sourceSize: {
        w: 332,
        h: 236
      }
    },
    "map-building-barn-basement-floor-02.img": {
      frame: {
        x: 1309,
        y: 246,
        w: 188,
        h: 236
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 188,
        h: 236
      },
      sourceSize: {
        w: 188,
        h: 236
      }
    },
    "map-building-hut-floor-01.img": {
      frame: {
        x: 1309,
        y: 486,
        w: 228,
        h: 228
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 14,
        y: 14,
        w: 228,
        h: 228
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-building-bank-floor-02.img": {
      frame: {
        x: 338,
        y: 1148,
        w: 434,
        h: 224
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 434,
        h: 224
      },
      sourceSize: {
        w: 544,
        h: 224
      }
    },
    "map-building-club-ceiling-01c.img": {
      frame: {
        x: 1309,
        y: 718,
        w: 201,
        h: 217
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 201,
        h: 217
      },
      sourceSize: {
        w: 201,
        h: 217
      }
    },
    "map-building-warehouse-ceiling-01.img": {
      frame: {
        x: 776,
        y: 1148,
        w: 416,
        h: 216
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 416,
        h: 216
      },
      sourceSize: {
        w: 416,
        h: 216
      }
    },
    "map-building-warehouse-ceiling-02.img": {
      frame: {
        x: 1196,
        y: 1148,
        w: 360,
        h: 216
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 360,
        h: 216
      },
      sourceSize: {
        w: 360,
        h: 216
      }
    },
    "map-bunker-conch-compartment-floor-01b.img": {
      frame: {
        x: 1079,
        y: 607,
        w: 200,
        h: 216
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 200,
        h: 216
      },
      sourceSize: {
        w: 200,
        h: 224
      }
    },
    "map-bunker-conch-chamber-floor-02.img": {
      frame: {
        x: 2,
        y: 1388,
        w: 621,
        h: 206
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 13,
        w: 621,
        h: 206
      },
      sourceSize: {
        w: 653,
        h: 232
      }
    },
    "map-building-shack-floor-03.img": {
      frame: {
        x: 627,
        y: 1388,
        w: 286,
        h: 206
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 286,
        h: 206
      },
      sourceSize: {
        w: 288,
        h: 224
      }
    },
    "map-building-hut-ceiling-01.img": {
      frame: {
        x: 1309,
        y: 939,
        w: 192,
        h: 198
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 6,
        w: 192,
        h: 198
      },
      sourceSize: {
        w: 204,
        h: 204
      }
    },
    "map-building-hut-ceiling-03.img": {
      frame: {
        x: 917,
        y: 1388,
        w: 192,
        h: 198
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 6,
        w: 192,
        h: 198
      },
      sourceSize: {
        w: 204,
        h: 204
      }
    },
    "map-building-hut-ceiling-02.img": {
      frame: {
        x: 1113,
        y: 1388,
        w: 192,
        h: 198
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 6,
        w: 192,
        h: 198
      },
      sourceSize: {
        w: 204,
        h: 204
      }
    },
    "map-bunker-conch-chamber-floor-01.img": {
      frame: {
        x: 2,
        y: 1598,
        w: 699,
        h: 192
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 21,
        y: 21,
        w: 699,
        h: 192
      },
      sourceSize: {
        w: 760,
        h: 216
      }
    },
    "map-bunker-storm-floor-02.img": {
      frame: {
        x: 655,
        y: 314,
        w: 160,
        h: 192
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 192
      },
      sourceSize: {
        w: 160,
        h: 192
      }
    },
    "map-building-panicroom-floor.img": {
      frame: {
        x: 1309,
        y: 1388,
        w: 144,
        h: 192
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 192
      },
      sourceSize: {
        w: 144,
        h: 192
      }
    },
    "map-building-panicroom-ceiling.img": {
      frame: {
        x: 705,
        y: 1598,
        w: 144,
        h: 192
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 192
      },
      sourceSize: {
        w: 144,
        h: 192
      }
    },
    "map-building-barn-basement-stairs.img": {
      frame: {
        x: 853,
        y: 1598,
        w: 144,
        h: 192
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 192
      },
      sourceSize: {
        w: 144,
        h: 192
      }
    },
    "map-building-bridge-md-floor.img": {
      frame: {
        x: 1001,
        y: 1598,
        w: 448,
        h: 184
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 448,
        h: 184
      },
      sourceSize: {
        w: 448,
        h: 184
      }
    },
    "map-building-bank-ceiling-03.img": {
      frame: {
        x: 1453,
        y: 1598,
        w: 108,
        h: 181
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 95,
        w: 108,
        h: 181
      },
      sourceSize: {
        w: 108,
        h: 276
      }
    },
    "map-building-bathhouse-basement-01c.img": {
      frame: {
        x: 1565,
        y: 2,
        w: 284,
        h: 172
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 284,
        h: 172
      },
      sourceSize: {
        w: 284,
        h: 172
      }
    },
    "map-building-vault-ceiling.img": {
      frame: {
        x: 1565,
        y: 178,
        w: 162,
        h: 169
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 162,
        h: 169
      },
      sourceSize: {
        w: 216,
        h: 169
      }
    },
    "map-building-bathhouse-sideroom-ceiling-02.img": {
      frame: {
        x: 1565,
        y: 351,
        w: 256,
        h: 168
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 256,
        h: 168
      },
      sourceSize: {
        w: 256,
        h: 168
      }
    },
    "map-building-shack-floor-01.img": {
      frame: {
        x: 1565,
        y: 523,
        w: 194,
        h: 162
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 8,
        w: 194,
        h: 162
      },
      sourceSize: {
        w: 210,
        h: 170
      }
    },
    "map-building-mansion-floor-01a.img": {
      frame: {
        x: 2,
        y: 1794,
        w: 401,
        h: 160
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 401,
        h: 160
      },
      sourceSize: {
        w: 401,
        h: 161
      }
    },
    "map-building-shack-floor-02.img": {
      frame: {
        x: 1565,
        y: 689,
        w: 160,
        h: 160
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 160
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "map-building-outhouse-floor.img": {
      frame: {
        x: 1565,
        y: 853,
        w: 124,
        h: 157
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 38,
        y: 0,
        w: 124,
        h: 157
      },
      sourceSize: {
        w: 200,
        h: 158
      }
    },
    "map-bunker-storm-chamber-ceiling-01.img": {
      frame: {
        x: 407,
        y: 1794,
        w: 296,
        h: 154
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 54,
        w: 296,
        h: 154
      },
      sourceSize: {
        w: 296,
        h: 208
      }
    },
    "map-building-shack-ceiling-03.img": {
      frame: {
        x: 1565,
        y: 1014,
        w: 206,
        h: 146
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 10,
        y: 0,
        w: 206,
        h: 146
      },
      sourceSize: {
        w: 216,
        h: 168
      }
    },
    "map-building-club-floor-01h.img": {
      frame: {
        x: 1565,
        y: 1164,
        w: 161,
        h: 145
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 161,
        h: 145
      },
      sourceSize: {
        w: 161,
        h: 145
      }
    },
    "map-building-bathhouse-basement-01a.img": {
      frame: {
        x: 1731,
        y: 178,
        w: 113,
        h: 145
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 113,
        h: 145
      },
      sourceSize: {
        w: 113,
        h: 145
      }
    },
    "map-bunker-generic-floor-01.img": {
      frame: {
        x: 1693,
        y: 853,
        w: 150,
        h: 142
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 0,
        w: 150,
        h: 142
      },
      sourceSize: {
        w: 160,
        h: 144
      }
    },
    "map-bunker-generic-floor-02.img": {
      frame: {
        x: 1565,
        y: 1313,
        w: 150,
        h: 142
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 0,
        w: 150,
        h: 142
      },
      sourceSize: {
        w: 160,
        h: 144
      }
    },
    "map-stone-03.img": {
      frame: {
        x: 1565,
        y: 1459,
        w: 141,
        h: 140
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 2,
        w: 141,
        h: 140
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-bunker-conch-floor-01.img": {
      frame: {
        x: 707,
        y: 1794,
        w: 294,
        h: 128
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 0,
        w: 294,
        h: 128
      },
      sourceSize: {
        w: 300,
        h: 128
      }
    },
    "map-tree-03.img": {
      frame: {
        x: 1719,
        y: 1313,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-tree-07su.img": {
      frame: {
        x: 1710,
        y: 1459,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-hut-res-01.img": {
      frame: {
        x: 1565,
        y: 1603,
        w: 121,
        h: 121
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 63,
        y: 67,
        w: 121,
        h: 121
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-building-club-ceiling-01b.img": {
      frame: {
        x: 1729,
        y: 689,
        w: 89,
        h: 121
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 89,
        h: 121
      },
      sourceSize: {
        w: 89,
        h: 121
      }
    },
    "map-chute-01.img": {
      frame: {
        x: 1690,
        y: 1603,
        w: 120,
        h: 120
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 4,
        w: 120,
        h: 120
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-pipes-03.img": {
      frame: {
        x: 1005,
        y: 1794,
        w: 342,
        h: 118
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 342,
        h: 118
      },
      sourceSize: {
        w: 342,
        h: 118
      }
    },
    "map-bunker-generic-ceiling-01.img": {
      frame: {
        x: 1730,
        y: 1164,
        w: 100,
        h: 117
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 30,
        y: 0,
        w: 100,
        h: 117
      },
      sourceSize: {
        w: 160,
        h: 144
      }
    },
    "map-building-mansion-cellar-01b.img": {
      frame: {
        x: 1351,
        y: 1794,
        w: 113,
        h: 115
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 113,
        h: 115
      },
      sourceSize: {
        w: 113,
        h: 115
      }
    },
    "map-building-outhouse-ceiling.img": {
      frame: {
        x: 1468,
        y: 1794,
        w: 140,
        h: 114
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 30,
        y: 0,
        w: 140,
        h: 114
      },
      sourceSize: {
        w: 200,
        h: 158
      }
    },
    "map-building-mansion-floor-01c.img": {
      frame: {
        x: 1612,
        y: 1794,
        w: 113,
        h: 114
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 113,
        h: 114
      },
      sourceSize: {
        w: 113,
        h: 114
      }
    },
    "map-building-club-floor-01a.img": {
      frame: {
        x: 1729,
        y: 1794,
        w: 113,
        h: 113
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 113,
        h: 113
      },
      sourceSize: {
        w: 113,
        h: 113
      }
    },
    "map-building-saferoom-floor.img": {
      frame: {
        x: 1853,
        y: 2,
        w: 176,
        h: 112
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 176,
        h: 112
      },
      sourceSize: {
        w: 176,
        h: 112
      }
    },
    "map-building-saferoom-ceiling.img": {
      frame: {
        x: 1853,
        y: 118,
        w: 176,
        h: 112
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 176,
        h: 112
      },
      sourceSize: {
        w: 176,
        h: 112
      }
    },
    "map-building-bathhouse-sideroom-ceiling-01.img": {
      frame: {
        x: 1853,
        y: 234,
        w: 128,
        h: 112
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 112
      },
      sourceSize: {
        w: 128,
        h: 112
      }
    },
    "map-vending-res.img": {
      frame: {
        x: 1977,
        y: 1245,
        w: 50,
        h: 44
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 1,
        w: 50,
        h: 44
      },
      sourceSize: {
        w: 54,
        h: 47
      }
    },
    "map-bed-02.img": {
      frame: {
        x: 1853,
        y: 462,
        w: 88,
        h: 108
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 88,
        h: 108
      },
      sourceSize: {
        w: 88,
        h: 108
      }
    },
    "map-building-shack-ceiling-01.img": {
      frame: {
        x: 1853,
        y: 574,
        w: 158,
        h: 105
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 158,
        h: 105
      },
      sourceSize: {
        w: 158,
        h: 128
      }
    },
    "map-vat-02.img": {
      frame: {
        x: 1853,
        y: 683,
        w: 100,
        h: 100
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 100,
        h: 100
      },
      sourceSize: {
        w: 100,
        h: 100
      }
    },
    "map-stone-res-02.img": {
      frame: {
        x: 1853,
        y: 787,
        w: 100,
        h: 100
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 100,
        h: 100
      },
      sourceSize: {
        w: 100,
        h: 100
      }
    },
    "map-building-barn-basement-ceiling-01.img": {
      frame: {
        x: 1853,
        y: 891,
        w: 152,
        h: 98
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 6,
        w: 152,
        h: 98
      },
      sourceSize: {
        w: 152,
        h: 104
      }
    },
    "map-building-club-floor-01d.img": {
      frame: {
        x: 1853,
        y: 993,
        w: 161,
        h: 97
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 161,
        h: 97
      },
      sourceSize: {
        w: 161,
        h: 97
      }
    },
    "map-building-bathhouse-basement-01d.img": {
      frame: {
        x: 1853,
        y: 1094,
        w: 129,
        h: 97
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 129,
        h: 97
      },
      sourceSize: {
        w: 129,
        h: 97
      }
    },
    "map-building-shack-ceiling-02.img": {
      frame: {
        x: 1853,
        y: 1195,
        w: 120,
        h: 97
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 120,
        h: 97
      },
      sourceSize: {
        w: 120,
        h: 120
      }
    },
    "map-building-club-floor-01b.img": {
      frame: {
        x: 1853,
        y: 1296,
        w: 97,
        h: 97
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 97,
        h: 97
      },
      sourceSize: {
        w: 97,
        h: 97
      }
    },
    "map-building-crossing-bathroom-ceiling.img": {
      frame: {
        x: 1853,
        y: 1397,
        w: 144,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 96
      },
      sourceSize: {
        w: 144,
        h: 96
      }
    },
    "map-hedgehog-01.img": {
      frame: {
        x: 1853,
        y: 1497,
        w: 96,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 96,
        h: 96
      },
      sourceSize: {
        w: 96,
        h: 96
      }
    },
    "map-shack-res-01.img": {
      frame: {
        x: 1853,
        y: 1597,
        w: 156,
        h: 94
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 28,
        y: 23,
        w: 156,
        h: 94
      },
      sourceSize: {
        w: 210,
        h: 170
      }
    },
    "map-bunker-egg-chamber-floor-01b.img": {
      frame: {
        x: 1853,
        y: 1695,
        w: 97,
        h: 90
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 97,
        h: 90
      },
      sourceSize: {
        w: 97,
        h: 90
      }
    },
    "map-smoke-res.img": {
      frame: {
        x: 1853,
        y: 1789,
        w: 86,
        h: 90
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 23,
        y: 19,
        w: 86,
        h: 90
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-bunker-storm-chamber-floor-01b.img": {
      frame: {
        x: 1457,
        y: 1388,
        w: 97,
        h: 89
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 97,
        h: 89
      },
      sourceSize: {
        w: 97,
        h: 89
      }
    },
    "map-bunker-conch-chamber-ceiling-02.img": {
      frame: {
        x: 2,
        y: 1958,
        w: 244,
        h: 88
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 244,
        h: 88
      },
      sourceSize: {
        w: 244,
        h: 88
      }
    },
    "map-crate-res-01.img": {
      frame: {
        x: 1945,
        y: 462,
        w: 72,
        h: 68
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 3,
        w: 72,
        h: 68
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-bunker-vent-02.img": {
      frame: {
        x: 1957,
        y: 683,
        w: 68,
        h: 68
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 68,
        h: 68
      },
      sourceSize: {
        w: 68,
        h: 68
      }
    },
    "pass-level-bg.img": {
      frame: {
        x: 1954,
        y: 1296,
        w: 73,
        h: 67
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 3,
        w: 73,
        h: 67
      },
      sourceSize: {
        w: 73,
        h: 73
      }
    },
    "map-vat-01.img": {
      frame: {
        x: 1957,
        y: 787,
        w: 68,
        h: 67
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 68,
        h: 67
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-barrel-res-02.img": {
      frame: {
        x: 1953,
        y: 1497,
        w: 68,
        h: 66
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 68,
        h: 66
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-building-mansion-cellar-01c.img": {
      frame: {
        x: 655,
        y: 510,
        w: 177,
        h: 65
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 177,
        h: 65
      },
      sourceSize: {
        w: 177,
        h: 65
      }
    },
    "map-building-club-floor-01f.img": {
      frame: {
        x: 1853,
        y: 1883,
        w: 97,
        h: 65
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 97,
        h: 65
      },
      sourceSize: {
        w: 97,
        h: 65
      }
    },
    "map-stone-res-06.img": {
      frame: {
        x: 250,
        y: 1958,
        w: 144,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 64
      },
      sourceSize: {
        w: 144,
        h: 64
      }
    },
    "map-stairs-broken-01.img": {
      frame: {
        x: 1943,
        y: 1789,
        w: 80,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 64
      },
      sourceSize: {
        w: 80,
        h: 64
      }
    },
    "map-table-01.img": {
      frame: {
        x: 1763,
        y: 523,
        w: 80,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 64
      },
      sourceSize: {
        w: 80,
        h: 64
      }
    },
    "map-bathhouse-column-01.img": {
      frame: {
        x: 1954,
        y: 1695,
        w: 64,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 64
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "proj-martyrdom-01.img": {
      frame: {
        x: 1954,
        y: 1883,
        w: 64,
        h: 63
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 63
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "timer.img": {
      frame: {
        x: 1763,
        y: 591,
        w: 64,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 64,
        h: 62
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "map-crate-05.img": {
      frame: {
        x: 1775,
        y: 1014,
        w: 62,
        h: 62
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 62,
        h: 62
      },
      sourceSize: {
        w: 62,
        h: 62
      }
    },
    "player-medic.img": {
      frame: {
        x: 1775,
        y: 1080,
        w: 62,
        h: 62
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 5,
        w: 62,
        h: 62
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-case-basement-01.img": {
      frame: {
        x: 1565,
        y: 1728,
        w: 74,
        h: 56
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 74,
        h: 56
      },
      sourceSize: {
        w: 74,
        h: 56
      }
    },
    "map-control-panel-05.img": {
      frame: {
        x: 1643,
        y: 1728,
        w: 72,
        h: 55
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 55
      },
      sourceSize: {
        w: 72,
        h: 55
      }
    },
    "map-control-panel-02.img": {
      frame: {
        x: 1719,
        y: 1728,
        w: 72,
        h: 55
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 55
      },
      sourceSize: {
        w: 72,
        h: 55
      }
    },
    "map-control-panel-01.img": {
      frame: {
        x: 1457,
        y: 1481,
        w: 72,
        h: 55
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 55
      },
      sourceSize: {
        w: 72,
        h: 55
      }
    },
    "map-control-panel-04.img": {
      frame: {
        x: 398,
        y: 1958,
        w: 72,
        h: 55
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 55
      },
      sourceSize: {
        w: 72,
        h: 55
      }
    },
    "map-case-deagle-01.img": {
      frame: {
        x: 474,
        y: 1958,
        w: 72,
        h: 54
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 54
      },
      sourceSize: {
        w: 72,
        h: 54
      }
    },
    "map-case-deagle-02.img": {
      frame: {
        x: 550,
        y: 1958,
        w: 72,
        h: 54
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 54
      },
      sourceSize: {
        w: 72,
        h: 54
      }
    },
    "emote-medical-healthkit.img": {
      frame: {
        x: 626,
        y: 1958,
        w: 62,
        h: 54
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 5,
        w: 62,
        h: 54
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "part-takedown-01.img": {
      frame: {
        x: 692,
        y: 1958,
        w: 64,
        h: 53
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 6,
        w: 64,
        h: 53
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "map-grill-01.img": {
      frame: {
        x: 760,
        y: 1958,
        w: 64,
        h: 53
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 5,
        w: 64,
        h: 53
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "map-chest-02.img": {
      frame: {
        x: 828,
        y: 1958,
        w: 70,
        h: 51
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 70,
        h: 51
      },
      sourceSize: {
        w: 70,
        h: 51
      }
    },
    "map-chest-03.img": {
      frame: {
        x: 902,
        y: 1958,
        w: 70,
        h: 51
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 70,
        h: 51
      },
      sourceSize: {
        w: 70,
        h: 51
      }
    },
    "map-case-flare-01.img": {
      frame: {
        x: 976,
        y: 1958,
        w: 70,
        h: 51
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 70,
        h: 51
      },
      sourceSize: {
        w: 70,
        h: 51
      }
    },
    "map-case-hatchet-01.img": {
      frame: {
        x: 1050,
        y: 1958,
        w: 70,
        h: 51
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 70,
        h: 51
      },
      sourceSize: {
        w: 70,
        h: 51
      }
    },
    "map-chest-01.img": {
      frame: {
        x: 1124,
        y: 1958,
        w: 70,
        h: 51
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 70,
        h: 51
      },
      sourceSize: {
        w: 70,
        h: 51
      }
    },
    "map-couch-01.img": {
      frame: {
        x: 1079,
        y: 827,
        w: 144,
        h: 48
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 48
      },
      sourceSize: {
        w: 144,
        h: 48
      }
    },
    "map-couch-02.img": {
      frame: {
        x: 1198,
        y: 1958,
        w: 96,
        h: 48
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 96,
        h: 48
      },
      sourceSize: {
        w: 96,
        h: 48
      }
    },
    "map-control-panel-06.img": {
      frame: {
        x: 1298,
        y: 1958,
        w: 96,
        h: 47
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 96,
        h: 47
      },
      sourceSize: {
        w: 96,
        h: 47
      }
    },
    "map-oven-01.img": {
      frame: {
        x: 1795,
        y: 1728,
        w: 54,
        h: 47
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 54,
        h: 47
      },
      sourceSize: {
        w: 54,
        h: 47
      }
    },
    "map-refrigerator-01.img": {
      frame: {
        x: 1501,
        y: 246,
        w: 54,
        h: 47
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 54,
        h: 47
      },
      sourceSize: {
        w: 54,
        h: 47
      }
    },
    "map-vending-soda-01.img": {
      frame: {
        x: 1501,
        y: 297,
        w: 54,
        h: 47
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 54,
        h: 47
      },
      sourceSize: {
        w: 54,
        h: 47
      }
    },
    "map-decal-oil-06.img": {
      frame: {
        x: 1977,
        y: 1195,
        w: 50,
        h: 46
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 9,
        w: 50,
        h: 46
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "map-crate-mil-05.img": {
      frame: {
        x: 1398,
        y: 1958,
        w: 86,
        h: 45
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 86,
        h: 45
      },
      sourceSize: {
        w: 86,
        h: 45
      }
    },
    "map-crate-mil-01.img": {
      frame: {
        x: 1488,
        y: 1958,
        w: 86,
        h: 45
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 86,
        h: 45
      },
      sourceSize: {
        w: 86,
        h: 45
      }
    },
    "map-crate-mil-04.img": {
      frame: {
        x: 1578,
        y: 1958,
        w: 86,
        h: 45
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 86,
        h: 45
      },
      sourceSize: {
        w: 86,
        h: 45
      }
    },
    "map-crate-mil-02.img": {
      frame: {
        x: 1668,
        y: 1958,
        w: 86,
        h: 45
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 86,
        h: 45
      },
      sourceSize: {
        w: 86,
        h: 45
      }
    },
    "map-crate-mil-03.img": {
      frame: {
        x: 1758,
        y: 1958,
        w: 86,
        h: 45
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 86,
        h: 45
      },
      sourceSize: {
        w: 86,
        h: 45
      }
    },
    "map-drawers-02.img": {
      frame: {
        x: 1848,
        y: 1958,
        w: 80,
        h: 45
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 45
      },
      sourceSize: {
        w: 80,
        h: 45
      }
    },
    "map-drawers-01.img": {
      frame: {
        x: 1932,
        y: 1958,
        w: 80,
        h: 45
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 45
      },
      sourceSize: {
        w: 80,
        h: 45
      }
    },
    "map-building-teahouse-floor-02.img": {
      frame: {
        x: 1227,
        y: 827,
        w: 64,
        h: 44
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 44
      },
      sourceSize: {
        w: 64,
        h: 44
      }
    },
    "map-building-teahouse-res-01.img": {
      frame: {
        x: 1853,
        y: 350,
        w: 144,
        h: 108
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 56,
        y: 74,
        w: 144,
        h: 108
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    }
  }
}, {
  meta: {
    image: "shared-3-50-b073dcf4.png",
    size: {
      w: 1024,
      h: 128
    },
    scale: 0.5
  },
  frames: {
    "map-bunker-conch-chamber-ceiling-01.img": {
      frame: {
        x: 2,
        y: 2,
        w: 248,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 248,
        h: 96
      },
      sourceSize: {
        w: 248,
        h: 96
      }
    },
    "map-building-mansion-floor-01d.img": {
      frame: {
        x: 254,
        y: 2,
        w: 545,
        h: 95
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 545,
        h: 95
      },
      sourceSize: {
        w: 545,
        h: 97
      }
    }
  }
}];
const Qs = [{
  meta: {
    image: "halloween-0-50-f68b39c5.png",
    size: {
      w: 1024,
      h: 1024
    },
    scale: 0.5
  },
  frames: {
    "map-bunker-eye-compartment-floor-01.img": {
      frame: {
        x: 358,
        y: 2,
        w: 352,
        h: 352
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 352,
        h: 352
      },
      sourceSize: {
        w: 352,
        h: 352
      }
    },
    "map-bunker-eye-chamber-floor-01a.img": {
      frame: {
        x: 2,
        y: 2,
        w: 352,
        h: 674
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 14,
        w: 352,
        h: 674
      },
      sourceSize: {
        w: 352,
        h: 688
      }
    },
    "map-bunker-eye-chamber-ceiling-01.img": {
      frame: {
        x: 358,
        y: 358,
        w: 160,
        h: 272
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 272
      },
      sourceSize: {
        w: 160,
        h: 272
      }
    },
    "map-tree-08.img": {
      frame: {
        x: 714,
        y: 2,
        w: 256,
        h: 256
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 256,
        h: 256
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-tree-08sp.img": {
      frame: {
        x: 714,
        y: 262,
        w: 256,
        h: 256
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 256,
        h: 256
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-tree-05.img": {
      frame: {
        x: 2,
        y: 680,
        w: 248,
        h: 243
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 7,
        w: 248,
        h: 243
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-bunker-eye-compartment-ceiling-01.img": {
      frame: {
        x: 522,
        y: 358,
        w: 160,
        h: 160
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 160
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "map-tree-07sp.img": {
      frame: {
        x: 714,
        y: 522,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-tree-07.img": {
      frame: {
        x: 254,
        y: 680,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-bunker-eye-chamber-floor-01b.img": {
      frame: {
        x: 846,
        y: 522,
        w: 96,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 96,
        h: 128
      },
      sourceSize: {
        w: 96,
        h: 128
      }
    },
    "map-bush-06.img": {
      frame: {
        x: 522,
        y: 522,
        w: 96,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 96,
        h: 96
      },
      sourceSize: {
        w: 96,
        h: 96
      }
    },
    "map-airdrop-01h.img": {
      frame: {
        x: 622,
        y: 522,
        w: 80,
        h: 80
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 80
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "map-bush-res-06.img": {
      frame: {
        x: 402,
        y: 634,
        w: 28,
        h: 27
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 22,
        y: 23,
        w: 28,
        h: 27
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-web-01.img": {
      frame: {
        x: 470,
        y: 680,
        w: 76,
        h: 80
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 76,
        h: 80
      },
      sourceSize: {
        w: 76,
        h: 80
      }
    },
    "map-crate-11h.img": {
      frame: {
        x: 550,
        y: 680,
        w: 74,
        h: 74
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 74,
        h: 74
      },
      sourceSize: {
        w: 74,
        h: 74
      }
    },
    "map-pumpkin-01.img": {
      frame: {
        x: 628,
        y: 680,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-pumpkin-02.img": {
      frame: {
        x: 704,
        y: 680,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-bush-07sp.img": {
      frame: {
        x: 780,
        y: 680,
        w: 71,
        h: 72
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 0,
        w: 71,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-pumpkin-res-01.img": {
      frame: {
        x: 855,
        y: 680,
        w: 71,
        h: 69
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 3,
        w: 71,
        h: 69
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-tree-04h.img": {
      frame: {
        x: 254,
        y: 812,
        w: 56,
        h: 56
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 56,
        h: 56
      },
      sourceSize: {
        w: 56,
        h: 56
      }
    },
    "map-pumpkin-03.img": {
      frame: {
        x: 314,
        y: 812,
        w: 51,
        h: 52
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 11,
        w: 51,
        h: 52
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "part-airdrop-01h.img": {
      frame: {
        x: 369,
        y: 812,
        w: 48,
        h: 48
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 48,
        h: 48
      },
      sourceSize: {
        w: 48,
        h: 48
      }
    },
    "map-pumpkin-res-03.img": {
      frame: {
        x: 386,
        y: 764,
        w: 46,
        h: 44
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 3,
        w: 46,
        h: 44
      },
      sourceSize: {
        w: 48,
        h: 48
      }
    },
    "part-airdrop-02h.img": {
      frame: {
        x: 358,
        y: 634,
        w: 40,
        h: 40
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 40,
        h: 40
      },
      sourceSize: {
        w: 40,
        h: 40
      }
    },
    "map-airdrop-02h.img": {
      frame: {
        x: 386,
        y: 680,
        w: 80,
        h: 80
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 80
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    }
  }
}];
const Zs = [{
  meta: {
    image: "snow-0-50-351b3383.png",
    size: {
      w: 2048,
      h: 2048
    },
    scale: 0.5
  },
  frames: {
    "map-bunker-chrys-compartment-floor-03a.img": {
      frame: {
        x: 854,
        y: 2,
        w: 384,
        h: 432
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 384,
        h: 432
      },
      sourceSize: {
        w: 384,
        h: 432
      }
    },
    "map-bunker-hydra-compartment-floor-02.img": {
      frame: {
        x: 2,
        y: 2,
        w: 848,
        h: 724
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 0,
        w: 848,
        h: 724
      },
      sourceSize: {
        w: 852,
        h: 724
      }
    },
    "map-bunker-hydra-chamber-floor-03.img": {
      frame: {
        x: 2,
        y: 730,
        w: 352,
        h: 402
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 14,
        w: 352,
        h: 402
      },
      sourceSize: {
        w: 352,
        h: 416
      }
    },
    "map-bunker-chrys-compartment-floor-01c.img": {
      frame: {
        x: 358,
        y: 730,
        w: 401,
        h: 387
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 401,
        h: 387
      },
      sourceSize: {
        w: 402,
        h: 402
      }
    },
    "map-bunker-hydra-chamber-floor-02.img": {
      frame: {
        x: 763,
        y: 730,
        w: 170,
        h: 372
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 21,
        y: 0,
        w: 170,
        h: 372
      },
      sourceSize: {
        w: 196,
        h: 372
      }
    },
    "map-bunker-hydra-chamber-floor-01b.img": {
      frame: {
        x: 1242,
        y: 2,
        w: 353,
        h: 369
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 353,
        h: 369
      },
      sourceSize: {
        w: 353,
        h: 369
      }
    },
    "map-bunker-hydra-compartment-ceiling-02.img": {
      frame: {
        x: 2,
        y: 1136,
        w: 370,
        h: 330
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 370,
        h: 330
      },
      sourceSize: {
        w: 408,
        h: 360
      }
    },
    "map-building-greenhouse-floor-02.img": {
      frame: {
        x: 376,
        y: 1136,
        w: 417,
        h: 321
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 417,
        h: 321
      },
      sourceSize: {
        w: 417,
        h: 321
      }
    },
    "map-bunker-hydra-compartment-floor-01.img": {
      frame: {
        x: 1242,
        y: 375,
        w: 352,
        h: 320
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 352,
        h: 320
      },
      sourceSize: {
        w: 352,
        h: 320
      }
    },
    "map-bunker-chrys-chamber-floor-01b.img": {
      frame: {
        x: 797,
        y: 1136,
        w: 466,
        h: 314
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 466,
        h: 314
      },
      sourceSize: {
        w: 466,
        h: 314
      }
    },
    "map-bunker-chrys-compartment-floor-02a.img": {
      frame: {
        x: 1599,
        y: 2,
        w: 386,
        h: 314
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 386,
        h: 314
      },
      sourceSize: {
        w: 386,
        h: 314
      }
    },
    "map-building-greenhouse-ceiling-02.img": {
      frame: {
        x: 1599,
        y: 320,
        w: 200,
        h: 312
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 200,
        h: 312
      },
      sourceSize: {
        w: 200,
        h: 312
      }
    },
    "map-bunker-chrys-compartment-floor-01a.img": {
      frame: {
        x: 1803,
        y: 320,
        w: 114,
        h: 306
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 16,
        w: 114,
        h: 306
      },
      sourceSize: {
        w: 114,
        h: 322
      }
    },
    "map-bunker-hydra-floor-01.img": {
      frame: {
        x: 2,
        y: 1470,
        w: 432,
        h: 304
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 432,
        h: 304
      },
      sourceSize: {
        w: 432,
        h: 304
      }
    },
    "map-complex-warehouse-floor-02.img": {
      frame: {
        x: 1921,
        y: 320,
        w: 30,
        h: 264
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 30,
        h: 264
      },
      sourceSize: {
        w: 30,
        h: 264
      }
    },
    "map-bunker-hydra-compartment-floor-03.img": {
      frame: {
        x: 1599,
        y: 636,
        w: 352,
        h: 254
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 352,
        h: 254
      },
      sourceSize: {
        w: 352,
        h: 256
      }
    },
    "map-bunker-chrys-compartment-ceiling-01b.img": {
      frame: {
        x: 1599,
        y: 894,
        w: 178,
        h: 186
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 178,
        h: 186
      },
      sourceSize: {
        w: 178,
        h: 186
      }
    },
    "map-bunker-hydra-compartment-ceiling-01.img": {
      frame: {
        x: 1781,
        y: 894,
        w: 160,
        h: 180
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 180
      },
      sourceSize: {
        w: 160,
        h: 180
      }
    },
    "map-bunker-hydra-chamber-ceiling-02.img": {
      frame: {
        x: 1599,
        y: 1084,
        w: 96,
        h: 175
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 96,
        h: 175
      },
      sourceSize: {
        w: 96,
        h: 175
      }
    },
    "map-bunker-hydra-chamber-ceiling-01.img": {
      frame: {
        x: 1699,
        y: 1084,
        w: 162,
        h: 174
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 162,
        h: 174
      },
      sourceSize: {
        w: 216,
        h: 176
      }
    },
    "map-bunker-chrys-compartment-ceiling-03b.img": {
      frame: {
        x: 1599,
        y: 1263,
        w: 178,
        h: 154
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 178,
        h: 154
      },
      sourceSize: {
        w: 178,
        h: 154
      }
    },
    "map-bunker-hydra-ceiling-01.img": {
      frame: {
        x: 1242,
        y: 699,
        w: 216,
        h: 152
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 216,
        h: 152
      },
      sourceSize: {
        w: 216,
        h: 152
      }
    },
    "map-stone-03x.img": {
      frame: {
        x: 1781,
        y: 1263,
        w: 141,
        h: 140
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 2,
        w: 141,
        h: 140
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-bunker-chrys-chamber-ceiling-01.img": {
      frame: {
        x: 1242,
        y: 855,
        w: 224,
        h: 136
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 224,
        h: 136
      },
      sourceSize: {
        w: 224,
        h: 136
      }
    },
    "map-bunker-hydra-chamber-ceiling-03.img": {
      frame: {
        x: 1242,
        y: 995,
        w: 200,
        h: 136
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 200,
        h: 136
      },
      sourceSize: {
        w: 200,
        h: 136
      }
    },
    "map-planter-06.img": {
      frame: {
        x: 1865,
        y: 1084,
        w: 72,
        h: 136
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 136
      },
      sourceSize: {
        w: 72,
        h: 136
      }
    },
    "map-bunker-hydra-compartment-ceiling-03.img": {
      frame: {
        x: 854,
        y: 438,
        w: 160,
        h: 135
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 135
      },
      sourceSize: {
        w: 160,
        h: 135
      }
    },
    "map-bunker-chrys-compartment-ceiling-02b.img": {
      frame: {
        x: 1018,
        y: 438,
        w: 178,
        h: 130
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 178,
        h: 130
      },
      sourceSize: {
        w: 178,
        h: 130
      }
    },
    "map-tree-11.img": {
      frame: {
        x: 1462,
        y: 699,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-tree-10.img": {
      frame: {
        x: 1446,
        y: 995,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-chute-01x.img": {
      frame: {
        x: 1470,
        y: 855,
        w: 120,
        h: 120
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 4,
        w: 120,
        h: 120
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-bunker-generic-floor-03.img": {
      frame: {
        x: 854,
        y: 577,
        w: 80,
        h: 115
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 115
      },
      sourceSize: {
        w: 80,
        h: 115
      }
    },
    "map-snowball-res.img": {
      frame: {
        x: 1921,
        y: 588,
        w: 35,
        h: 35
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 6,
        w: 35,
        h: 35
      },
      sourceSize: {
        w: 48,
        h: 48
      }
    },
    "map-complex-warehouse-floor-03.img": {
      frame: {
        x: 1955,
        y: 320,
        w: 30,
        h: 112
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 30,
        h: 112
      },
      sourceSize: {
        w: 30,
        h: 112
      }
    },
    "map-complex-warehouse-floor-01.img": {
      frame: {
        x: 1955,
        y: 436,
        w: 30,
        h: 112
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 30,
        h: 112
      },
      sourceSize: {
        w: 30,
        h: 112
      }
    },
    "map-snow-02.img": {
      frame: {
        x: 1022,
        y: 577,
        w: 106,
        h: 106
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 11,
        y: 11,
        w: 106,
        h: 106
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-stone-res-02x.img": {
      frame: {
        x: 1132,
        y: 577,
        w: 100,
        h: 100
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 100,
        h: 100
      },
      sourceSize: {
        w: 100,
        h: 100
      }
    },
    "map-bunker-hydra-floor-04.img": {
      frame: {
        x: 937,
        y: 730,
        w: 100,
        h: 100
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 100,
        h: 100
      },
      sourceSize: {
        w: 100,
        h: 100
      }
    },
    "map-bunker-hydra-chamber-floor-01a.img": {
      frame: {
        x: 1041,
        y: 730,
        w: 97,
        h: 97
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 97,
        h: 97
      },
      sourceSize: {
        w: 97,
        h: 97
      }
    },
    "map-bunker-chrys-compartment-ceiling-01a.img": {
      frame: {
        x: 1926,
        y: 1263,
        w: 56,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 56,
        h: 96
      },
      sourceSize: {
        w: 56,
        h: 96
      }
    },
    "map-bunker-chrys-compartment-floor-02c.img": {
      frame: {
        x: 937,
        y: 834,
        w: 258,
        h: 90
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 0,
        w: 258,
        h: 90
      },
      sourceSize: {
        w: 274,
        h: 90
      }
    },
    "map-snow-03.img": {
      frame: {
        x: 937,
        y: 928,
        w: 158,
        h: 90
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 11,
        y: 3,
        w: 158,
        h: 90
      },
      sourceSize: {
        w: 180,
        h: 96
      }
    },
    "map-snow-01.img": {
      frame: {
        x: 1099,
        y: 928,
        w: 108,
        h: 88
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 10,
        y: 20,
        w: 108,
        h: 88
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-table-02x.img": {
      frame: {
        x: 937,
        y: 1022,
        w: 144,
        h: 80
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 80
      },
      sourceSize: {
        w: 144,
        h: 80
      }
    },
    "map-airdrop-01x.img": {
      frame: {
        x: 1142,
        y: 730,
        w: 80,
        h: 80
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 80
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "map-table-03x.img": {
      frame: {
        x: 1085,
        y: 1022,
        w: 80,
        h: 80
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 80
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "map-airdrop-02x.img": {
      frame: {
        x: 1267,
        y: 1136,
        w: 80,
        h: 80
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 80
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "map-crate-01x.img": {
      frame: {
        x: 1351,
        y: 1136,
        w: 78,
        h: 78
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 78,
        h: 78
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "map-stone-01x.img": {
      frame: {
        x: 1433,
        y: 1136,
        w: 76,
        h: 77
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 76,
        h: 77
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "map-bunker-chrys-chamber-floor-01a.img": {
      frame: {
        x: 1267,
        y: 1220,
        w: 84,
        h: 76
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 15,
        y: 14,
        w: 84,
        h: 76
      },
      sourceSize: {
        w: 114,
        h: 90
      }
    },
    "map-crate-03x.img": {
      frame: {
        x: 1513,
        y: 1136,
        w: 74,
        h: 74
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 74,
        h: 74
      },
      sourceSize: {
        w: 74,
        h: 74
      }
    },
    "map-crate-02x.img": {
      frame: {
        x: 1355,
        y: 1220,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-bush-01x.img": {
      frame: {
        x: 1169,
        y: 1022,
        w: 66,
        h: 68
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 2,
        w: 66,
        h: 68
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-planter-res-02.img": {
      frame: {
        x: 1941,
        y: 1084,
        w: 41,
        h: 68
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 0,
        w: 41,
        h: 68
      },
      sourceSize: {
        w: 43,
        h: 68
      }
    },
    "map-table-01x.img": {
      frame: {
        x: 1431,
        y: 1220,
        w: 80,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 64
      },
      sourceSize: {
        w: 80,
        h: 64
      }
    },
    "map-stone-res-01x.img": {
      frame: {
        x: 1515,
        y: 1220,
        w: 60,
        h: 60
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 60,
        h: 60
      },
      sourceSize: {
        w: 60,
        h: 60
      }
    },
    "map-snow-06.img": {
      frame: {
        x: 1267,
        y: 1300,
        w: 90,
        h: 58
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 3,
        w: 90,
        h: 58
      },
      sourceSize: {
        w: 96,
        h: 64
      }
    },
    "map-snow-05.img": {
      frame: {
        x: 1361,
        y: 1300,
        w: 46,
        h: 54
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 5,
        w: 46,
        h: 54
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "map-chest-03x.img": {
      frame: {
        x: 1411,
        y: 1300,
        w: 70,
        h: 51
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 70,
        h: 51
      },
      sourceSize: {
        w: 70,
        h: 51
      }
    },
    "map-snow-04.img": {
      frame: {
        x: 1485,
        y: 1300,
        w: 51,
        h: 50
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 7,
        w: 51,
        h: 50
      },
      sourceSize: {
        w: 64,
        h: 64
      }
    },
    "map-planter-07.img": {
      frame: {
        x: 1540,
        y: 1300,
        w: 50,
        h: 50
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 50,
        h: 50
      },
      sourceSize: {
        w: 50,
        h: 50
      }
    },
    "map-bunker-chrys-compartment-ceiling-02a.img": {
      frame: {
        x: 1267,
        y: 1362,
        w: 112,
        h: 48
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 112,
        h: 48
      },
      sourceSize: {
        w: 112,
        h: 48
      }
    },
    "map-bunker-chrys-compartment-ceiling-03a.img": {
      frame: {
        x: 1383,
        y: 1362,
        w: 112,
        h: 48
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 112,
        h: 48
      },
      sourceSize: {
        w: 112,
        h: 48
      }
    },
    "map-planter-res-03.img": {
      frame: {
        x: 1941,
        y: 1156,
        w: 43,
        h: 40
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 2,
        w: 43,
        h: 40
      },
      sourceSize: {
        w: 43,
        h: 43
      }
    },
    "map-bunker-generic-ceiling-02.img": {
      frame: {
        x: 938,
        y: 577,
        w: 80,
        h: 115
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 115
      },
      sourceSize: {
        w: 80,
        h: 115
      }
    }
  }
}];
const Ys = [{
  meta: {
    image: "faction-0-50-b6447309.png",
    size: {
      w: 2048,
      h: 2048
    },
    scale: 0.5
  },
  frames: {
    "map-building-bridge-xlg-floor.img": {
      frame: {
        x: 654,
        y: 2,
        w: 1232,
        h: 480
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 1232,
        h: 480
      },
      sourceSize: {
        w: 1232,
        h: 480
      }
    },
    "map-complex-warehouse-floor-04.img": {
      frame: {
        x: 2,
        y: 2,
        w: 648,
        h: 1024
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 648,
        h: 1024
      },
      sourceSize: {
        w: 648,
        h: 1024
      }
    },
    "map-bunker-chrys-compartment-floor-03a.img": {
      frame: {
        x: 654,
        y: 486,
        w: 384,
        h: 432
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 384,
        h: 432
      },
      sourceSize: {
        w: 384,
        h: 432
      }
    },
    "map-bunker-chrys-compartment-floor-01b.img": {
      frame: {
        x: 1042,
        y: 486,
        w: 401,
        h: 387
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 401,
        h: 387
      },
      sourceSize: {
        w: 402,
        h: 402
      }
    },
    "map-building-greenhouse-floor-01.img": {
      frame: {
        x: 1447,
        y: 486,
        w: 417,
        h: 321
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 417,
        h: 321
      },
      sourceSize: {
        w: 417,
        h: 321
      }
    },
    "map-bunker-chrys-chamber-floor-01b.img": {
      frame: {
        x: 2,
        y: 1030,
        w: 466,
        h: 314
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 466,
        h: 314
      },
      sourceSize: {
        w: 466,
        h: 314
      }
    },
    "map-bunker-chrys-compartment-floor-02a.img": {
      frame: {
        x: 472,
        y: 1030,
        w: 386,
        h: 314
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 386,
        h: 314
      },
      sourceSize: {
        w: 386,
        h: 314
      }
    },
    "map-bunker-chrys-compartment-floor-01a.img": {
      frame: {
        x: 862,
        y: 1030,
        w: 114,
        h: 306
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 16,
        w: 114,
        h: 306
      },
      sourceSize: {
        w: 114,
        h: 322
      }
    },
    "map-complex-warehouse-floor-02.img": {
      frame: {
        x: 980,
        y: 1030,
        w: 30,
        h: 264
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 30,
        h: 264
      },
      sourceSize: {
        w: 30,
        h: 264
      }
    },
    "map-bunker-chrys-compartment-ceiling-01b.img": {
      frame: {
        x: 1014,
        y: 1030,
        w: 178,
        h: 186
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 178,
        h: 186
      },
      sourceSize: {
        w: 178,
        h: 186
      }
    },
    "map-building-greenhouse-ceiling-01.img": {
      frame: {
        x: 1196,
        y: 1030,
        w: 202,
        h: 158
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 202,
        h: 158
      },
      sourceSize: {
        w: 202,
        h: 158
      }
    },
    "map-bunker-chrys-compartment-ceiling-03b.img": {
      frame: {
        x: 1402,
        y: 1030,
        w: 178,
        h: 154
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 178,
        h: 154
      },
      sourceSize: {
        w: 178,
        h: 154
      }
    },
    "map-statue-01.img": {
      frame: {
        x: 1584,
        y: 1030,
        w: 144,
        h: 144
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 32,
        y: 32,
        w: 144,
        h: 144
      },
      sourceSize: {
        w: 208,
        h: 208
      }
    },
    "map-stone-03f.img": {
      frame: {
        x: 1732,
        y: 1030,
        w: 141,
        h: 140
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 2,
        w: 141,
        h: 140
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-bunker-chrys-chamber-ceiling-01.img": {
      frame: {
        x: 2,
        y: 1348,
        w: 224,
        h: 136
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 224,
        h: 136
      },
      sourceSize: {
        w: 224,
        h: 136
      }
    },
    "map-planter-03.img": {
      frame: {
        x: 230,
        y: 1348,
        w: 72,
        h: 136
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 136
      },
      sourceSize: {
        w: 72,
        h: 136
      }
    },
    "map-planter-01.img": {
      frame: {
        x: 306,
        y: 1348,
        w: 72,
        h: 136
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 136
      },
      sourceSize: {
        w: 72,
        h: 136
      }
    },
    "map-planter-02.img": {
      frame: {
        x: 382,
        y: 1348,
        w: 72,
        h: 136
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 136
      },
      sourceSize: {
        w: 72,
        h: 136
      }
    },
    "map-bunker-chrys-compartment-ceiling-02b.img": {
      frame: {
        x: 458,
        y: 1348,
        w: 178,
        h: 130
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 178,
        h: 130
      },
      sourceSize: {
        w: 178,
        h: 130
      }
    },
    "map-airdrop-04.img": {
      frame: {
        x: 640,
        y: 1348,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-bunker-chrys-compartment-ceiling-03a.img": {
      frame: {
        x: 1745,
        y: 811,
        w: 112,
        h: 48
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 112,
        h: 48
      },
      sourceSize: {
        w: 112,
        h: 48
      }
    },
    "map-crate-13.img": {
      frame: {
        x: 904,
        y: 1348,
        w: 120,
        h: 120
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 120,
        h: 120
      },
      sourceSize: {
        w: 120,
        h: 120
      }
    },
    "map-crate-12.img": {
      frame: {
        x: 1028,
        y: 1348,
        w: 120,
        h: 120
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 120,
        h: 120
      },
      sourceSize: {
        w: 120,
        h: 120
      }
    },
    "map-bunker-generic-ceiling-02.img": {
      frame: {
        x: 1152,
        y: 1348,
        w: 80,
        h: 115
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 115
      },
      sourceSize: {
        w: 80,
        h: 115
      }
    },
    "map-bunker-generic-floor-03.img": {
      frame: {
        x: 1236,
        y: 1348,
        w: 80,
        h: 115
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 115
      },
      sourceSize: {
        w: 80,
        h: 115
      }
    },
    "map-complex-warehouse-floor-03.img": {
      frame: {
        x: 1320,
        y: 1348,
        w: 30,
        h: 112
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 30,
        h: 112
      },
      sourceSize: {
        w: 30,
        h: 112
      }
    },
    "map-complex-warehouse-floor-01.img": {
      frame: {
        x: 1354,
        y: 1348,
        w: 30,
        h: 112
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 30,
        h: 112
      },
      sourceSize: {
        w: 30,
        h: 112
      }
    },
    "map-stone-res-02f.img": {
      frame: {
        x: 654,
        y: 922,
        w: 100,
        h: 100
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 100,
        h: 100
      },
      sourceSize: {
        w: 100,
        h: 100
      }
    },
    "map-bunker-chrys-compartment-ceiling-01a.img": {
      frame: {
        x: 758,
        y: 922,
        w: 56,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 56,
        h: 96
      },
      sourceSize: {
        w: 56,
        h: 96
      }
    },
    "map-bunker-chrys-compartment-floor-02b.img": {
      frame: {
        x: 818,
        y: 922,
        w: 258,
        h: 90
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 0,
        w: 258,
        h: 90
      },
      sourceSize: {
        w: 274,
        h: 90
      }
    },
    "map-bunker-chrys-chamber-floor-01a.img": {
      frame: {
        x: 1080,
        y: 922,
        w: 84,
        h: 76
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 15,
        y: 14,
        w: 84,
        h: 76
      },
      sourceSize: {
        w: 114,
        h: 90
      }
    },
    "map-statue-top-02.img": {
      frame: {
        x: 1168,
        y: 922,
        w: 143,
        h: 74
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 64,
        y: 65,
        w: 143,
        h: 74
      },
      sourceSize: {
        w: 208,
        h: 208
      }
    },
    "map-statue-top-01.img": {
      frame: {
        x: 1315,
        y: 922,
        w: 143,
        h: 74
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 64,
        y: 65,
        w: 143,
        h: 74
      },
      sourceSize: {
        w: 208,
        h: 208
      }
    },
    "map-crate-02f.img": {
      frame: {
        x: 1462,
        y: 922,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-crate-22.img": {
      frame: {
        x: 1538,
        y: 922,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-planter-res-01.img": {
      frame: {
        x: 1614,
        y: 922,
        w: 41,
        h: 68
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 0,
        w: 41,
        h: 68
      },
      sourceSize: {
        w: 43,
        h: 68
      }
    },
    "map-chest-03f.img": {
      frame: {
        x: 1447,
        y: 811,
        w: 70,
        h: 51
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 70,
        h: 51
      },
      sourceSize: {
        w: 70,
        h: 51
      }
    },
    "map-planter-04.img": {
      frame: {
        x: 1521,
        y: 811,
        w: 50,
        h: 50
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 50,
        h: 50
      },
      sourceSize: {
        w: 50,
        h: 50
      }
    },
    "map-planter-05.img": {
      frame: {
        x: 1575,
        y: 811,
        w: 50,
        h: 50
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 50,
        h: 50
      },
      sourceSize: {
        w: 50,
        h: 50
      }
    },
    "map-bunker-chrys-compartment-ceiling-02a.img": {
      frame: {
        x: 1629,
        y: 811,
        w: 112,
        h: 48
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 112,
        h: 48
      },
      sourceSize: {
        w: 112,
        h: 48
      }
    },
    "map-airdrop-03.img": {
      frame: {
        x: 772,
        y: 1348,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    }
  }
}];
const Js = [{
  meta: {
    image: "desert-0-50-978893d6.png",
    size: {
      w: 2048,
      h: 2048
    },
    scale: 0.5
  },
  frames: {
    "map-complex-warehouse-floor-05.img": {
      frame: {
        x: 662,
        y: 2,
        w: 262,
        h: 470
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 502,
        w: 262,
        h: 470
      },
      sourceSize: {
        w: 648,
        h: 1024
      }
    },
    "map-building-saloon-floor-01.img": {
      frame: {
        x: 2,
        y: 2,
        w: 656,
        h: 656
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 656,
        h: 656
      },
      sourceSize: {
        w: 656,
        h: 656
      }
    },
    "map-bunker-chrys-compartment-floor-03a.img": {
      frame: {
        x: 928,
        y: 2,
        w: 384,
        h: 432
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 384,
        h: 432
      },
      sourceSize: {
        w: 384,
        h: 432
      }
    },
    "map-bunker-chrys-compartment-floor-01c.img": {
      frame: {
        x: 2,
        y: 662,
        w: 401,
        h: 387
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 401,
        h: 387
      },
      sourceSize: {
        w: 402,
        h: 402
      }
    },
    "map-building-saloon-cellar-01.img": {
      frame: {
        x: 407,
        y: 662,
        w: 528,
        h: 336
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 528,
        h: 336
      },
      sourceSize: {
        w: 528,
        h: 336
      }
    },
    "map-building-greenhouse-floor-02.img": {
      frame: {
        x: 1316,
        y: 2,
        w: 417,
        h: 321
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 417,
        h: 321
      },
      sourceSize: {
        w: 417,
        h: 321
      }
    },
    "map-bunker-chrys-chamber-floor-01b.img": {
      frame: {
        x: 2,
        y: 1053,
        w: 466,
        h: 314
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 466,
        h: 314
      },
      sourceSize: {
        w: 466,
        h: 314
      }
    },
    "map-bunker-chrys-compartment-floor-02a.img": {
      frame: {
        x: 1316,
        y: 327,
        w: 386,
        h: 314
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 386,
        h: 314
      },
      sourceSize: {
        w: 386,
        h: 314
      }
    },
    "map-building-saloon-ceiling-01.img": {
      frame: {
        x: 1316,
        y: 645,
        w: 314,
        h: 313
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 314,
        h: 313
      },
      sourceSize: {
        w: 328,
        h: 328
      }
    },
    "map-building-greenhouse-ceiling-02.img": {
      frame: {
        x: 939,
        y: 662,
        w: 200,
        h: 312
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 200,
        h: 312
      },
      sourceSize: {
        w: 200,
        h: 312
      }
    },
    "map-bunker-chrys-compartment-floor-01a.img": {
      frame: {
        x: 1143,
        y: 662,
        w: 114,
        h: 306
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 16,
        w: 114,
        h: 306
      },
      sourceSize: {
        w: 114,
        h: 322
      }
    },
    "map-bunker-statue-chamber-floor-01.img": {
      frame: {
        x: 472,
        y: 1053,
        w: 126,
        h: 273
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 14,
        w: 126,
        h: 273
      },
      sourceSize: {
        w: 128,
        h: 288
      }
    },
    "map-tree-05c.img": {
      frame: {
        x: 602,
        y: 1053,
        w: 238,
        h: 250
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 3,
        w: 238,
        h: 250
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-bunker-chrys-compartment-ceiling-01b.img": {
      frame: {
        x: 928,
        y: 438,
        w: 178,
        h: 186
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 178,
        h: 186
      },
      sourceSize: {
        w: 178,
        h: 186
      }
    },
    "map-bunker-chrys-compartment-ceiling-03b.img": {
      frame: {
        x: 1110,
        y: 438,
        w: 178,
        h: 154
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 178,
        h: 154
      },
      sourceSize: {
        w: 178,
        h: 154
      }
    },
    "map-statue-03.img": {
      frame: {
        x: 662,
        y: 476,
        w: 147,
        h: 144
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 32,
        y: 32,
        w: 147,
        h: 144
      },
      sourceSize: {
        w: 208,
        h: 208
      }
    },
    "map-statue-04.img": {
      frame: {
        x: 844,
        y: 1053,
        w: 147,
        h: 144
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 32,
        y: 32,
        w: 147,
        h: 144
      },
      sourceSize: {
        w: 208,
        h: 208
      }
    },
    "map-stone-03b.img": {
      frame: {
        x: 995,
        y: 1053,
        w: 141,
        h: 140
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 2,
        w: 141,
        h: 140
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-bunker-chrys-chamber-ceiling-01.img": {
      frame: {
        x: 1140,
        y: 1053,
        w: 224,
        h: 136
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 224,
        h: 136
      },
      sourceSize: {
        w: 224,
        h: 136
      }
    },
    "map-planter-06.img": {
      frame: {
        x: 1634,
        y: 645,
        w: 72,
        h: 136
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 136
      },
      sourceSize: {
        w: 72,
        h: 136
      }
    },
    "map-bunker-chrys-compartment-ceiling-02b.img": {
      frame: {
        x: 1368,
        y: 1053,
        w: 178,
        h: 130
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 178,
        h: 130
      },
      sourceSize: {
        w: 178,
        h: 130
      }
    },
    "map-tree-06.img": {
      frame: {
        x: 1550,
        y: 1053,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-bush-res-05.img": {
      frame: {
        x: 1110,
        y: 596,
        w: 32,
        h: 28
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 20,
        y: 22,
        w: 32,
        h: 28
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-bunker-generic-floor-03.img": {
      frame: {
        x: 813,
        y: 476,
        w: 80,
        h: 115
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 115
      },
      sourceSize: {
        w: 80,
        h: 115
      }
    },
    "map-bunker-chrys-compartment-ceiling-01a.img": {
      frame: {
        x: 844,
        y: 1201,
        w: 56,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 56,
        h: 96
      },
      sourceSize: {
        w: 56,
        h: 96
      }
    },
    "map-bunker-chrys-compartment-floor-02c.img": {
      frame: {
        x: 904,
        y: 1201,
        w: 258,
        h: 90
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 0,
        w: 258,
        h: 90
      },
      sourceSize: {
        w: 274,
        h: 90
      }
    },
    "map-building-saloon-ceiling-02.img": {
      frame: {
        x: 1316,
        y: 962,
        w: 96,
        h: 80
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 96,
        h: 80
      },
      sourceSize: {
        w: 96,
        h: 80
      }
    },
    "map-bunker-chrys-chamber-floor-01a.img": {
      frame: {
        x: 1416,
        y: 962,
        w: 84,
        h: 76
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 15,
        y: 14,
        w: 84,
        h: 76
      },
      sourceSize: {
        w: 114,
        h: 90
      }
    },
    "map-crate-22.img": {
      frame: {
        x: 1504,
        y: 962,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-bush-05.img": {
      frame: {
        x: 1580,
        y: 962,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-crate-02f.img": {
      frame: {
        x: 1656,
        y: 962,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-crate-18.img": {
      frame: {
        x: 1166,
        y: 1201,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-planter-res-02.img": {
      frame: {
        x: 1261,
        y: 662,
        w: 41,
        h: 68
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 0,
        w: 41,
        h: 68
      },
      sourceSize: {
        w: 43,
        h: 68
      }
    },
    "map-building-archway-ceiling-01.img": {
      frame: {
        x: 1242,
        y: 1201,
        w: 336,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 336,
        h: 64
      },
      sourceSize: {
        w: 336,
        h: 64
      }
    },
    "map-stone-06.img": {
      frame: {
        x: 1582,
        y: 1201,
        w: 144,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 64
      },
      sourceSize: {
        w: 144,
        h: 64
      }
    },
    "map-case-meteor-res-01.img": {
      frame: {
        x: 2,
        y: 1371,
        w: 67,
        h: 60
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 4,
        w: 67,
        h: 60
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-stone-res-01b.img": {
      frame: {
        x: 73,
        y: 1371,
        w: 60,
        h: 60
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 60,
        h: 60
      },
      sourceSize: {
        w: 60,
        h: 60
      }
    },
    "map-chest-03d.img": {
      frame: {
        x: 1634,
        y: 904,
        w: 70,
        h: 51
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 70,
        h: 51
      },
      sourceSize: {
        w: 70,
        h: 51
      }
    },
    "map-case-meteor-01.img": {
      frame: {
        x: 137,
        y: 1371,
        w: 70,
        h: 51
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 70,
        h: 51
      },
      sourceSize: {
        w: 70,
        h: 51
      }
    },
    "map-planter-07.img": {
      frame: {
        x: 1261,
        y: 734,
        w: 50,
        h: 50
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 50,
        h: 50
      },
      sourceSize: {
        w: 50,
        h: 50
      }
    },
    "map-archway-res-01.img": {
      frame: {
        x: 211,
        y: 1371,
        w: 180,
        h: 48
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 180,
        h: 48
      },
      sourceSize: {
        w: 180,
        h: 48
      }
    },
    "map-bunker-chrys-compartment-ceiling-02a.img": {
      frame: {
        x: 395,
        y: 1371,
        w: 112,
        h: 48
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 112,
        h: 48
      },
      sourceSize: {
        w: 112,
        h: 48
      }
    },
    "map-bunker-chrys-compartment-ceiling-03a.img": {
      frame: {
        x: 511,
        y: 1371,
        w: 112,
        h: 48
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 112,
        h: 48
      },
      sourceSize: {
        w: 112,
        h: 48
      }
    },
    "map-planter-res-03.img": {
      frame: {
        x: 1261,
        y: 788,
        w: 43,
        h: 40
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 2,
        w: 43,
        h: 40
      },
      sourceSize: {
        w: 43,
        h: 43
      }
    },
    "map-bunker-generic-ceiling-02.img": {
      frame: {
        x: 1634,
        y: 785,
        w: 80,
        h: 115
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 115
      },
      sourceSize: {
        w: 80,
        h: 115
      }
    }
  }
}];
const Ks = [{
  meta: {
    image: "gradient-0-50-6480bd5e.png",
    size: {
      w: 512,
      h: 512
    },
    scale: 0.5
  },
  frames: {
    "map-barrel-res-01.img": {
      frame: {
        x: 124,
        y: 2,
        w: 114,
        h: 109
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 10,
        w: 114,
        h: 109
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-building-club-gradient-01.img": {
      frame: {
        x: 2,
        y: 2,
        w: 118,
        h: 130
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 16,
        y: 4,
        w: 118,
        h: 130
      },
      sourceSize: {
        w: 146,
        h: 140
      }
    },
    "map-building-mansion-gradient-01.img": {
      frame: {
        x: 2,
        y: 136,
        w: 118,
        h: 102
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 4,
        w: 118,
        h: 102
      },
      sourceSize: {
        w: 124,
        h: 110
      }
    },
    "map-plane-01.img": {
      frame: {
        x: 124,
        y: 136,
        w: 92,
        h: 102
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 18,
        y: 5,
        w: 92,
        h: 102
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-plane-02.img": {
      frame: {
        x: 242,
        y: 2,
        w: 42,
        h: 85
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 43,
        y: 1,
        w: 42,
        h: 85
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-bush-04cb.img": {
      frame: {
        x: 147,
        y: 242,
        w: 71,
        h: 67
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 4,
        w: 71,
        h: 67
      },
      sourceSize: {
        w: 75,
        h: 75
      }
    },
    "map-bush-01cb.img": {
      frame: {
        x: 288,
        y: 82,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-light-01.img": {
      frame: {
        x: 288,
        y: 158,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-bush-04.img": {
      frame: {
        x: 2,
        y: 242,
        w: 71,
        h: 68
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 3,
        w: 71,
        h: 68
      },
      sourceSize: {
        w: 75,
        h: 75
      }
    },
    "map-bush-01.img": {
      frame: {
        x: 77,
        y: 242,
        w: 66,
        h: 68
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 2,
        w: 66,
        h: 68
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-bush-03.img": {
      frame: {
        x: 288,
        y: 2,
        w: 76,
        h: 76
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 76,
        h: 76
      },
      sourceSize: {
        w: 76,
        h: 76
      }
    }
  }
}];
const Xs = [{
  meta: {
    image: "savannah-0-50-d5ec1868.png",
    size: {
      w: 1024,
      h: 1024
    },
    scale: 0.5
  },
  frames: {
    "map-tree-12.img": {
      frame: {
        x: 36,
        y: 2,
        w: 256,
        h: 256
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 256,
        h: 256
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-complex-warehouse-floor-02.img": {
      frame: {
        x: 2,
        y: 2,
        w: 30,
        h: 264
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 30,
        h: 264
      },
      sourceSize: {
        w: 30,
        h: 264
      }
    },
    "map-stone-07.img": {
      frame: {
        x: 296,
        y: 2,
        w: 256,
        h: 256
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 256,
        h: 256
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-stone-res-07.img": {
      frame: {
        x: 2,
        y: 270,
        w: 206,
        h: 206
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 206,
        h: 206
      },
      sourceSize: {
        w: 210,
        h: 210
      }
    },
    "map-building-perch-ceiling.img": {
      frame: {
        x: 212,
        y: 270,
        w: 185,
        h: 176
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 5,
        y: 10,
        w: 185,
        h: 176
      },
      sourceSize: {
        w: 200,
        h: 192
      }
    },
    "map-building-perch-floor.img": {
      frame: {
        x: 556,
        y: 2,
        w: 200,
        h: 160
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 200,
        h: 160
      },
      sourceSize: {
        w: 200,
        h: 160
      }
    },
    "map-tree-03sv.img": {
      frame: {
        x: 556,
        y: 166,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-wall-08-grassy.img": {
      frame: {
        x: 688,
        y: 166,
        w: 26,
        h: 128
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 26,
        h: 128
      },
      sourceSize: {
        w: 32,
        h: 128
      }
    },
    "map-wall-08-grassy-res.img": {
      frame: {
        x: 718,
        y: 166,
        w: 14,
        h: 128
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 0,
        w: 14,
        h: 128
      },
      sourceSize: {
        w: 32,
        h: 128
      }
    },
    "map-bunker-generic-ceiling-02.img": {
      frame: {
        x: 556,
        y: 298,
        w: 80,
        h: 115
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 115
      },
      sourceSize: {
        w: 80,
        h: 115
      }
    },
    "map-bunker-generic-floor-03.img": {
      frame: {
        x: 640,
        y: 298,
        w: 80,
        h: 115
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 115
      },
      sourceSize: {
        w: 80,
        h: 115
      }
    },
    "map-complex-warehouse-floor-01.img": {
      frame: {
        x: 724,
        y: 298,
        w: 30,
        h: 112
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 30,
        h: 112
      },
      sourceSize: {
        w: 30,
        h: 112
      }
    },
    "map-bush-res-01sv.img": {
      frame: {
        x: 690,
        y: 417,
        w: 26,
        h: 20
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 23,
        y: 26,
        w: 26,
        h: 20
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-brush-01sv.img": {
      frame: {
        x: 435,
        y: 270,
        w: 96,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 96,
        h: 96
      },
      sourceSize: {
        w: 96,
        h: 96
      }
    },
    "map-brush-02sv.img": {
      frame: {
        x: 2,
        y: 480,
        w: 94,
        h: 94
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 1,
        w: 94,
        h: 94
      },
      sourceSize: {
        w: 96,
        h: 96
      }
    },
    "map-perch-res-01.img": {
      frame: {
        x: 100,
        y: 480,
        w: 92,
        h: 82
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 18,
        y: 23,
        w: 92,
        h: 82
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-bush-01sv.img": {
      frame: {
        x: 196,
        y: 480,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-crate-21.img": {
      frame: {
        x: 272,
        y: 480,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-propane-01.img": {
      frame: {
        x: 556,
        y: 417,
        w: 48,
        h: 48
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 48,
        h: 48
      },
      sourceSize: {
        w: 48,
        h: 48
      }
    },
    "map-wall-03-grassy.img": {
      frame: {
        x: 736,
        y: 166,
        w: 20,
        h: 48
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 6,
        y: 0,
        w: 20,
        h: 48
      },
      sourceSize: {
        w: 32,
        h: 48
      }
    },
    "map-wall-03-grassy-res.img": {
      frame: {
        x: 736,
        y: 218,
        w: 14,
        h: 48
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 0,
        w: 14,
        h: 48
      },
      sourceSize: {
        w: 32,
        h: 48
      }
    },
    "map-tree-res-12.img": {
      frame: {
        x: 608,
        y: 417,
        w: 42,
        h: 38
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 5,
        w: 42,
        h: 38
      },
      sourceSize: {
        w: 48,
        h: 48
      }
    },
    "map-brush-res-02sv.img": {
      frame: {
        x: 654,
        y: 417,
        w: 32,
        h: 33
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 7,
        w: 32,
        h: 33
      },
      sourceSize: {
        w: 48,
        h: 48
      }
    },
    "map-complex-warehouse-floor-03.img": {
      frame: {
        x: 401,
        y: 270,
        w: 30,
        h: 112
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 30,
        h: 112
      },
      sourceSize: {
        w: 30,
        h: 112
      }
    }
  }
}];
const eo = [{
  meta: {
    image: "main-0-50-ce7d0d26.png",
    size: {
      w: 2048,
      h: 2048
    },
    scale: 0.5
  },
  frames: {
    "map-bunker-crossing-compartment-floor-01.img": {
      frame: {
        x: 854,
        y: 2,
        w: 752,
        h: 464
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 752,
        h: 464
      },
      sourceSize: {
        w: 752,
        h: 464
      }
    },
    "map-bunker-hydra-compartment-floor-02.img": {
      frame: {
        x: 2,
        y: 2,
        w: 848,
        h: 724
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 0,
        w: 848,
        h: 724
      },
      sourceSize: {
        w: 852,
        h: 724
      }
    },
    "map-bunker-chrys-compartment-floor-03a.img": {
      frame: {
        x: 2,
        y: 730,
        w: 384,
        h: 432
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 384,
        h: 432
      },
      sourceSize: {
        w: 384,
        h: 432
      }
    },
    "map-bunker-hydra-chamber-floor-03.img": {
      frame: {
        x: 390,
        y: 730,
        w: 352,
        h: 402
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 14,
        w: 352,
        h: 402
      },
      sourceSize: {
        w: 352,
        h: 416
      }
    },
    "map-bunker-chrys-compartment-floor-01b.img": {
      frame: {
        x: 746,
        y: 730,
        w: 401,
        h: 387
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 401,
        h: 387
      },
      sourceSize: {
        w: 402,
        h: 402
      }
    },
    "map-bunker-hydra-chamber-floor-02.img": {
      frame: {
        x: 1151,
        y: 730,
        w: 170,
        h: 372
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 21,
        y: 0,
        w: 170,
        h: 372
      },
      sourceSize: {
        w: 196,
        h: 372
      }
    },
    "map-bunker-hydra-chamber-floor-01b.img": {
      frame: {
        x: 2,
        y: 1166,
        w: 353,
        h: 369
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 353,
        h: 369
      },
      sourceSize: {
        w: 353,
        h: 369
      }
    },
    "map-bunker-hydra-compartment-ceiling-02.img": {
      frame: {
        x: 359,
        y: 1166,
        w: 370,
        h: 330
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 370,
        h: 330
      },
      sourceSize: {
        w: 408,
        h: 360
      }
    },
    "map-building-greenhouse-floor-01.img": {
      frame: {
        x: 733,
        y: 1166,
        w: 417,
        h: 321
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 417,
        h: 321
      },
      sourceSize: {
        w: 417,
        h: 321
      }
    },
    "map-bunker-hydra-compartment-floor-01.img": {
      frame: {
        x: 1154,
        y: 1166,
        w: 352,
        h: 320
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 352,
        h: 320
      },
      sourceSize: {
        w: 352,
        h: 320
      }
    },
    "map-bunker-chrys-chamber-floor-01b.img": {
      frame: {
        x: 2,
        y: 1539,
        w: 466,
        h: 314
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 466,
        h: 314
      },
      sourceSize: {
        w: 466,
        h: 314
      }
    },
    "map-bunker-chrys-compartment-floor-02a.img": {
      frame: {
        x: 472,
        y: 1539,
        w: 386,
        h: 314
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 386,
        h: 314
      },
      sourceSize: {
        w: 386,
        h: 314
      }
    },
    "map-bunker-chrys-compartment-floor-01a.img": {
      frame: {
        x: 1325,
        y: 730,
        w: 114,
        h: 306
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 16,
        w: 114,
        h: 306
      },
      sourceSize: {
        w: 114,
        h: 322
      }
    },
    "map-bunker-hydra-floor-01.img": {
      frame: {
        x: 862,
        y: 1539,
        w: 432,
        h: 304
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 432,
        h: 304
      },
      sourceSize: {
        w: 432,
        h: 304
      }
    },
    "map-bunker-crossing-compartment-floor-02.img": {
      frame: {
        x: 1443,
        y: 730,
        w: 160,
        h: 304
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 304
      },
      sourceSize: {
        w: 160,
        h: 304
      }
    },
    "map-complex-warehouse-floor-02.img": {
      frame: {
        x: 1510,
        y: 1166,
        w: 30,
        h: 264
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 30,
        h: 264
      },
      sourceSize: {
        w: 30,
        h: 264
      }
    },
    "map-bunker-hydra-compartment-floor-03.img": {
      frame: {
        x: 854,
        y: 470,
        w: 352,
        h: 254
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 352,
        h: 254
      },
      sourceSize: {
        w: 352,
        h: 256
      }
    },
    "map-bunker-crossing-compartment-ceiling-01b.img": {
      frame: {
        x: 1210,
        y: 470,
        w: 360,
        h: 248
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 360,
        h: 248
      },
      sourceSize: {
        w: 360,
        h: 248
      }
    },
    "map-bunker-chrys-compartment-ceiling-01b.img": {
      frame: {
        x: 1298,
        y: 1539,
        w: 178,
        h: 186
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 178,
        h: 186
      },
      sourceSize: {
        w: 178,
        h: 186
      }
    },
    "map-bunker-hydra-compartment-ceiling-01.img": {
      frame: {
        x: 1610,
        y: 2,
        w: 160,
        h: 180
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 180
      },
      sourceSize: {
        w: 160,
        h: 180
      }
    },
    "map-bunker-crossing-chamber-floor-01a.img": {
      frame: {
        x: 2,
        y: 1857,
        w: 915,
        h: 177
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 915,
        h: 177
      },
      sourceSize: {
        w: 915,
        h: 177
      }
    },
    "map-bunker-hydra-chamber-ceiling-02.img": {
      frame: {
        x: 1610,
        y: 186,
        w: 96,
        h: 175
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 96,
        h: 175
      },
      sourceSize: {
        w: 96,
        h: 175
      }
    },
    "map-bunker-hydra-chamber-ceiling-01.img": {
      frame: {
        x: 921,
        y: 1857,
        w: 162,
        h: 174
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 162,
        h: 174
      },
      sourceSize: {
        w: 216,
        h: 176
      }
    },
    "map-bunker-crossing-floor-01.img": {
      frame: {
        x: 1610,
        y: 365,
        w: 160,
        h: 160
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 160
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "map-building-greenhouse-ceiling-01.img": {
      frame: {
        x: 1087,
        y: 1857,
        w: 202,
        h: 158
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 202,
        h: 158
      },
      sourceSize: {
        w: 202,
        h: 158
      }
    },
    "map-bunker-chrys-compartment-ceiling-03a.img": {
      frame: {
        x: 1774,
        y: 1190,
        w: 112,
        h: 48
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 112,
        h: 48
      },
      sourceSize: {
        w: 112,
        h: 48
      }
    },
    "map-bunker-hydra-ceiling-01.img": {
      frame: {
        x: 1475,
        y: 1857,
        w: 216,
        h: 152
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 216,
        h: 152
      },
      sourceSize: {
        w: 216,
        h: 152
      }
    },
    "map-bunker-crossing-compartment-ceiling-01a.img": {
      frame: {
        x: 1610,
        y: 529,
        w: 64,
        h: 152
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 152
      },
      sourceSize: {
        w: 64,
        h: 152
      }
    },
    "map-bunker-chrys-chamber-ceiling-01.img": {
      frame: {
        x: 1774,
        y: 2,
        w: 224,
        h: 136
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 224,
        h: 136
      },
      sourceSize: {
        w: 224,
        h: 136
      }
    },
    "map-bunker-hydra-chamber-ceiling-03.img": {
      frame: {
        x: 1774,
        y: 142,
        w: 200,
        h: 136
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 200,
        h: 136
      },
      sourceSize: {
        w: 200,
        h: 136
      }
    },
    "map-planter-03.img": {
      frame: {
        x: 1774,
        y: 282,
        w: 72,
        h: 136
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 136
      },
      sourceSize: {
        w: 72,
        h: 136
      }
    },
    "map-planter-02.img": {
      frame: {
        x: 1850,
        y: 282,
        w: 72,
        h: 136
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 136
      },
      sourceSize: {
        w: 72,
        h: 136
      }
    },
    "map-planter-01.img": {
      frame: {
        x: 1926,
        y: 282,
        w: 72,
        h: 136
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 136
      },
      sourceSize: {
        w: 72,
        h: 136
      }
    },
    "map-bunker-hydra-compartment-ceiling-03.img": {
      frame: {
        x: 1774,
        y: 422,
        w: 160,
        h: 135
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 135
      },
      sourceSize: {
        w: 160,
        h: 135
      }
    },
    "map-bunker-chrys-compartment-ceiling-02b.img": {
      frame: {
        x: 1774,
        y: 561,
        w: 178,
        h: 130
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 178,
        h: 130
      },
      sourceSize: {
        w: 178,
        h: 130
      }
    },
    "map-bunker-crossing-ceiling-01.img": {
      frame: {
        x: 1774,
        y: 695,
        w: 100,
        h: 117
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 30,
        y: 0,
        w: 100,
        h: 117
      },
      sourceSize: {
        w: 160,
        h: 144
      }
    },
    "map-bunker-generic-ceiling-02.img": {
      frame: {
        x: 1878,
        y: 695,
        w: 80,
        h: 115
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 115
      },
      sourceSize: {
        w: 80,
        h: 115
      }
    },
    "map-bunker-generic-floor-03.img": {
      frame: {
        x: 1774,
        y: 816,
        w: 80,
        h: 115
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 115
      },
      sourceSize: {
        w: 80,
        h: 115
      }
    },
    "map-complex-warehouse-floor-01.img": {
      frame: {
        x: 1938,
        y: 422,
        w: 30,
        h: 112
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 30,
        h: 112
      },
      sourceSize: {
        w: 30,
        h: 112
      }
    },
    "map-complex-warehouse-floor-03.img": {
      frame: {
        x: 1956,
        y: 561,
        w: 30,
        h: 112
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 30,
        h: 112
      },
      sourceSize: {
        w: 30,
        h: 112
      }
    },
    "map-bunker-hydra-floor-04.img": {
      frame: {
        x: 1858,
        y: 816,
        w: 100,
        h: 100
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 100,
        h: 100
      },
      sourceSize: {
        w: 100,
        h: 100
      }
    },
    "map-bunker-crossing-chamber-floor-01b.img": {
      frame: {
        x: 1298,
        y: 1729,
        w: 289,
        h: 97
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 289,
        h: 97
      },
      sourceSize: {
        w: 305,
        h: 97
      }
    },
    "map-bunker-crossing-chamber-floor-01c.img": {
      frame: {
        x: 1774,
        y: 935,
        w: 97,
        h: 97
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 97,
        h: 97
      },
      sourceSize: {
        w: 115,
        h: 97
      }
    },
    "map-bunker-hydra-chamber-floor-01a.img": {
      frame: {
        x: 1875,
        y: 935,
        w: 97,
        h: 97
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 97,
        h: 97
      },
      sourceSize: {
        w: 97,
        h: 97
      }
    },
    "map-bunker-chrys-compartment-ceiling-01a.img": {
      frame: {
        x: 1774,
        y: 1036,
        w: 56,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 56,
        h: 96
      },
      sourceSize: {
        w: 56,
        h: 96
      }
    },
    "map-bunker-chrys-chamber-floor-01a.img": {
      frame: {
        x: 1834,
        y: 1036,
        w: 84,
        h: 76
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 15,
        y: 14,
        w: 84,
        h: 76
      },
      sourceSize: {
        w: 114,
        h: 90
      }
    },
    "map-planter-res-01.img": {
      frame: {
        x: 1922,
        y: 1036,
        w: 41,
        h: 68
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 0,
        w: 41,
        h: 68
      },
      sourceSize: {
        w: 43,
        h: 68
      }
    },
    "map-planter-04.img": {
      frame: {
        x: 1774,
        y: 1136,
        w: 50,
        h: 50
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 50,
        h: 50
      },
      sourceSize: {
        w: 50,
        h: 50
      }
    },
    "map-planter-05.img": {
      frame: {
        x: 1828,
        y: 1136,
        w: 50,
        h: 50
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 50,
        h: 50
      },
      sourceSize: {
        w: 50,
        h: 50
      }
    },
    "map-bunker-chrys-compartment-ceiling-02a.img": {
      frame: {
        x: 1882,
        y: 1136,
        w: 112,
        h: 48
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 112,
        h: 48
      },
      sourceSize: {
        w: 112,
        h: 48
      }
    },
    "map-bunker-chrys-compartment-ceiling-03b.img": {
      frame: {
        x: 1293,
        y: 1857,
        w: 178,
        h: 154
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 178,
        h: 154
      },
      sourceSize: {
        w: 178,
        h: 154
      }
    }
  }
}, {
  meta: {
    image: "main-1-50-8d63890d.png",
    size: {
      w: 1024,
      h: 512
    },
    scale: 0.5
  },
  frames: {
    "map-bunker-crossing-chamber-floor-02.img": {
      frame: {
        x: 2,
        y: 2,
        w: 354,
        h: 129
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 14,
        y: 158,
        w: 354,
        h: 129
      },
      sourceSize: {
        w: 368,
        h: 288
      }
    },
    "map-bunker-crossing-chamber-floor-03.img": {
      frame: {
        x: 2,
        y: 135,
        w: 354,
        h: 126
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 14,
        y: 161,
        w: 354,
        h: 126
      },
      sourceSize: {
        w: 368,
        h: 288
      }
    },
    "map-bunker-crossing-chamber-ceiling-01.img": {
      frame: {
        x: 360,
        y: 2,
        w: 568,
        h: 120
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 568,
        h: 120
      },
      sourceSize: {
        w: 568,
        h: 120
      }
    },
    "map-bunker-chrys-compartment-floor-02b.img": {
      frame: {
        x: 360,
        y: 126,
        w: 258,
        h: 90
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 0,
        w: 258,
        h: 90
      },
      sourceSize: {
        w: 274,
        h: 90
      }
    }
  }
}];
const to = [{
  meta: {
    image: "potato-0-50-85f694d4.png",
    size: {
      w: 2048,
      h: 2048
    },
    scale: 0.5
  },
  frames: {
    "map-bunker-crossing-compartment-floor-01.img": {
      frame: {
        x: 854,
        y: 2,
        w: 752,
        h: 464
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 752,
        h: 464
      },
      sourceSize: {
        w: 752,
        h: 464
      }
    },
    "map-bunker-hydra-compartment-floor-02.img": {
      frame: {
        x: 2,
        y: 2,
        w: 848,
        h: 724
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 0,
        w: 848,
        h: 724
      },
      sourceSize: {
        w: 852,
        h: 724
      }
    },
    "map-bunker-chrys-compartment-floor-03a.img": {
      frame: {
        x: 2,
        y: 730,
        w: 384,
        h: 432
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 384,
        h: 432
      },
      sourceSize: {
        w: 384,
        h: 432
      }
    },
    "map-bunker-hydra-chamber-floor-03.img": {
      frame: {
        x: 390,
        y: 730,
        w: 352,
        h: 402
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 14,
        w: 352,
        h: 402
      },
      sourceSize: {
        w: 352,
        h: 416
      }
    },
    "map-bunker-chrys-compartment-floor-01b.img": {
      frame: {
        x: 746,
        y: 730,
        w: 401,
        h: 387
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 401,
        h: 387
      },
      sourceSize: {
        w: 402,
        h: 402
      }
    },
    "map-bunker-hydra-chamber-floor-02.img": {
      frame: {
        x: 1151,
        y: 730,
        w: 170,
        h: 372
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 21,
        y: 0,
        w: 170,
        h: 372
      },
      sourceSize: {
        w: 196,
        h: 372
      }
    },
    "map-bunker-hydra-chamber-floor-01b.img": {
      frame: {
        x: 2,
        y: 1166,
        w: 353,
        h: 369
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 353,
        h: 369
      },
      sourceSize: {
        w: 353,
        h: 369
      }
    },
    "map-bunker-hydra-compartment-ceiling-02.img": {
      frame: {
        x: 359,
        y: 1166,
        w: 370,
        h: 330
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 370,
        h: 330
      },
      sourceSize: {
        w: 408,
        h: 360
      }
    },
    "map-building-greenhouse-floor-01.img": {
      frame: {
        x: 733,
        y: 1166,
        w: 417,
        h: 321
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 417,
        h: 321
      },
      sourceSize: {
        w: 417,
        h: 321
      }
    },
    "map-bunker-hydra-compartment-floor-01.img": {
      frame: {
        x: 1154,
        y: 1166,
        w: 352,
        h: 320
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 352,
        h: 320
      },
      sourceSize: {
        w: 352,
        h: 320
      }
    },
    "map-bunker-chrys-chamber-floor-01b.img": {
      frame: {
        x: 2,
        y: 1539,
        w: 466,
        h: 314
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 466,
        h: 314
      },
      sourceSize: {
        w: 466,
        h: 314
      }
    },
    "map-bunker-chrys-compartment-floor-02a.img": {
      frame: {
        x: 472,
        y: 1539,
        w: 386,
        h: 314
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 386,
        h: 314
      },
      sourceSize: {
        w: 386,
        h: 314
      }
    },
    "map-bunker-chrys-compartment-floor-01a.img": {
      frame: {
        x: 1325,
        y: 730,
        w: 114,
        h: 306
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 16,
        w: 114,
        h: 306
      },
      sourceSize: {
        w: 114,
        h: 322
      }
    },
    "map-bunker-hydra-floor-01.img": {
      frame: {
        x: 862,
        y: 1539,
        w: 432,
        h: 304
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 432,
        h: 304
      },
      sourceSize: {
        w: 432,
        h: 304
      }
    },
    "map-bunker-crossing-compartment-floor-02.img": {
      frame: {
        x: 1443,
        y: 730,
        w: 160,
        h: 304
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 304
      },
      sourceSize: {
        w: 160,
        h: 304
      }
    },
    "map-complex-warehouse-floor-02.img": {
      frame: {
        x: 1510,
        y: 1166,
        w: 30,
        h: 264
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 30,
        h: 264
      },
      sourceSize: {
        w: 30,
        h: 264
      }
    },
    "map-bunker-hydra-compartment-floor-03.img": {
      frame: {
        x: 854,
        y: 470,
        w: 352,
        h: 254
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 352,
        h: 254
      },
      sourceSize: {
        w: 352,
        h: 256
      }
    },
    "map-bunker-crossing-compartment-ceiling-01b.img": {
      frame: {
        x: 1210,
        y: 470,
        w: 360,
        h: 248
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 360,
        h: 248
      },
      sourceSize: {
        w: 360,
        h: 248
      }
    },
    "map-bunker-chrys-compartment-ceiling-01b.img": {
      frame: {
        x: 1298,
        y: 1539,
        w: 178,
        h: 186
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 178,
        h: 186
      },
      sourceSize: {
        w: 178,
        h: 186
      }
    },
    "map-bunker-hydra-compartment-ceiling-01.img": {
      frame: {
        x: 1610,
        y: 2,
        w: 160,
        h: 180
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 180
      },
      sourceSize: {
        w: 160,
        h: 180
      }
    },
    "map-bunker-crossing-chamber-floor-01a.img": {
      frame: {
        x: 2,
        y: 1857,
        w: 915,
        h: 177
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 915,
        h: 177
      },
      sourceSize: {
        w: 915,
        h: 177
      }
    },
    "map-bunker-hydra-chamber-ceiling-02.img": {
      frame: {
        x: 1610,
        y: 186,
        w: 96,
        h: 175
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 96,
        h: 175
      },
      sourceSize: {
        w: 96,
        h: 175
      }
    },
    "map-bunker-hydra-chamber-ceiling-01.img": {
      frame: {
        x: 921,
        y: 1857,
        w: 162,
        h: 174
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 162,
        h: 174
      },
      sourceSize: {
        w: 216,
        h: 176
      }
    },
    "map-bunker-crossing-floor-01.img": {
      frame: {
        x: 1610,
        y: 365,
        w: 160,
        h: 160
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 160
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "map-building-greenhouse-ceiling-01.img": {
      frame: {
        x: 1087,
        y: 1857,
        w: 202,
        h: 158
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 202,
        h: 158
      },
      sourceSize: {
        w: 202,
        h: 158
      }
    },
    "map-bunker-chrys-compartment-ceiling-03b.img": {
      frame: {
        x: 1293,
        y: 1857,
        w: 178,
        h: 154
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 178,
        h: 154
      },
      sourceSize: {
        w: 178,
        h: 154
      }
    },
    "map-bunker-hydra-ceiling-01.img": {
      frame: {
        x: 1475,
        y: 1857,
        w: 216,
        h: 152
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 216,
        h: 152
      },
      sourceSize: {
        w: 216,
        h: 152
      }
    },
    "map-potato-03.img": {
      frame: {
        x: 1962,
        y: 816,
        w: 36,
        h: 36
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 36,
        h: 36
      },
      sourceSize: {
        w: 36,
        h: 36
      }
    },
    "map-bunker-chrys-chamber-ceiling-01.img": {
      frame: {
        x: 1774,
        y: 2,
        w: 224,
        h: 136
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 224,
        h: 136
      },
      sourceSize: {
        w: 224,
        h: 136
      }
    },
    "map-bunker-hydra-chamber-ceiling-03.img": {
      frame: {
        x: 1774,
        y: 142,
        w: 200,
        h: 136
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 200,
        h: 136
      },
      sourceSize: {
        w: 200,
        h: 136
      }
    },
    "map-planter-03.img": {
      frame: {
        x: 1774,
        y: 282,
        w: 72,
        h: 136
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 136
      },
      sourceSize: {
        w: 72,
        h: 136
      }
    },
    "map-planter-02.img": {
      frame: {
        x: 1850,
        y: 282,
        w: 72,
        h: 136
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 136
      },
      sourceSize: {
        w: 72,
        h: 136
      }
    },
    "map-planter-01.img": {
      frame: {
        x: 1926,
        y: 282,
        w: 72,
        h: 136
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 136
      },
      sourceSize: {
        w: 72,
        h: 136
      }
    },
    "map-bunker-hydra-compartment-ceiling-03.img": {
      frame: {
        x: 1774,
        y: 422,
        w: 160,
        h: 135
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 135
      },
      sourceSize: {
        w: 160,
        h: 135
      }
    },
    "map-bunker-chrys-compartment-ceiling-02b.img": {
      frame: {
        x: 1774,
        y: 561,
        w: 178,
        h: 130
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 178,
        h: 130
      },
      sourceSize: {
        w: 178,
        h: 130
      }
    },
    "map-bunker-crossing-ceiling-01.img": {
      frame: {
        x: 1774,
        y: 695,
        w: 100,
        h: 117
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 30,
        y: 0,
        w: 100,
        h: 117
      },
      sourceSize: {
        w: 160,
        h: 144
      }
    },
    "map-bunker-generic-floor-03.img": {
      frame: {
        x: 1878,
        y: 695,
        w: 80,
        h: 115
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 115
      },
      sourceSize: {
        w: 80,
        h: 115
      }
    },
    "map-bunker-generic-ceiling-02.img": {
      frame: {
        x: 1774,
        y: 816,
        w: 80,
        h: 115
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 115
      },
      sourceSize: {
        w: 80,
        h: 115
      }
    },
    "map-complex-warehouse-floor-01.img": {
      frame: {
        x: 1938,
        y: 422,
        w: 30,
        h: 112
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 30,
        h: 112
      },
      sourceSize: {
        w: 30,
        h: 112
      }
    },
    "map-complex-warehouse-floor-03.img": {
      frame: {
        x: 1956,
        y: 561,
        w: 30,
        h: 112
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 30,
        h: 112
      },
      sourceSize: {
        w: 30,
        h: 112
      }
    },
    "map-bunker-hydra-floor-04.img": {
      frame: {
        x: 1858,
        y: 816,
        w: 100,
        h: 100
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 100,
        h: 100
      },
      sourceSize: {
        w: 100,
        h: 100
      }
    },
    "map-bunker-crossing-chamber-floor-01b.img": {
      frame: {
        x: 1298,
        y: 1729,
        w: 289,
        h: 97
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 289,
        h: 97
      },
      sourceSize: {
        w: 305,
        h: 97
      }
    },
    "map-bunker-hydra-chamber-floor-01a.img": {
      frame: {
        x: 1774,
        y: 935,
        w: 97,
        h: 97
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 97,
        h: 97
      },
      sourceSize: {
        w: 97,
        h: 97
      }
    },
    "map-bunker-crossing-chamber-floor-01c.img": {
      frame: {
        x: 1875,
        y: 935,
        w: 97,
        h: 97
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 97,
        h: 97
      },
      sourceSize: {
        w: 115,
        h: 97
      }
    },
    "map-bunker-chrys-compartment-ceiling-01a.img": {
      frame: {
        x: 1774,
        y: 1036,
        w: 56,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 56,
        h: 96
      },
      sourceSize: {
        w: 56,
        h: 96
      }
    },
    "map-bunker-chrys-chamber-floor-01a.img": {
      frame: {
        x: 1834,
        y: 1036,
        w: 84,
        h: 76
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 15,
        y: 14,
        w: 84,
        h: 76
      },
      sourceSize: {
        w: 114,
        h: 90
      }
    },
    "map-planter-res-01.img": {
      frame: {
        x: 1922,
        y: 1036,
        w: 41,
        h: 68
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 0,
        w: 41,
        h: 68
      },
      sourceSize: {
        w: 43,
        h: 68
      }
    },
    "map-planter-05.img": {
      frame: {
        x: 1774,
        y: 1136,
        w: 50,
        h: 50
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 50,
        h: 50
      },
      sourceSize: {
        w: 50,
        h: 50
      }
    },
    "map-planter-04.img": {
      frame: {
        x: 1828,
        y: 1136,
        w: 50,
        h: 50
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 50,
        h: 50
      },
      sourceSize: {
        w: 50,
        h: 50
      }
    },
    "map-bunker-chrys-compartment-ceiling-02a.img": {
      frame: {
        x: 1882,
        y: 1136,
        w: 112,
        h: 48
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 112,
        h: 48
      },
      sourceSize: {
        w: 112,
        h: 48
      }
    },
    "map-bunker-chrys-compartment-ceiling-03a.img": {
      frame: {
        x: 1774,
        y: 1190,
        w: 112,
        h: 48
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 112,
        h: 48
      },
      sourceSize: {
        w: 112,
        h: 48
      }
    },
    "map-potato-res-01.img": {
      frame: {
        x: 1890,
        y: 1190,
        w: 46,
        h: 45
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 13,
        y: 16,
        w: 46,
        h: 45
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-potato-01.img": {
      frame: {
        x: 1962,
        y: 695,
        w: 36,
        h: 36
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 36,
        h: 36
      },
      sourceSize: {
        w: 36,
        h: 36
      }
    },
    "map-potato-02.img": {
      frame: {
        x: 1962,
        y: 735,
        w: 36,
        h: 36
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 36,
        h: 36
      },
      sourceSize: {
        w: 36,
        h: 36
      }
    },
    "map-bunker-crossing-compartment-ceiling-01a.img": {
      frame: {
        x: 1610,
        y: 529,
        w: 64,
        h: 152
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 152
      },
      sourceSize: {
        w: 64,
        h: 152
      }
    }
  }
}, {
  meta: {
    image: "potato-1-50-8d63890d.png",
    size: {
      w: 1024,
      h: 512
    },
    scale: 0.5
  },
  frames: {
    "map-bunker-crossing-chamber-floor-02.img": {
      frame: {
        x: 2,
        y: 2,
        w: 354,
        h: 129
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 14,
        y: 158,
        w: 354,
        h: 129
      },
      sourceSize: {
        w: 368,
        h: 288
      }
    },
    "map-bunker-crossing-chamber-floor-03.img": {
      frame: {
        x: 2,
        y: 135,
        w: 354,
        h: 126
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 14,
        y: 161,
        w: 354,
        h: 126
      },
      sourceSize: {
        w: 368,
        h: 288
      }
    },
    "map-bunker-crossing-chamber-ceiling-01.img": {
      frame: {
        x: 360,
        y: 2,
        w: 568,
        h: 120
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 568,
        h: 120
      },
      sourceSize: {
        w: 568,
        h: 120
      }
    },
    "map-bunker-chrys-compartment-floor-02b.img": {
      frame: {
        x: 360,
        y: 126,
        w: 258,
        h: 90
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 8,
        y: 0,
        w: 258,
        h: 90
      },
      sourceSize: {
        w: 274,
        h: 90
      }
    }
  }
}];
const io = [{
  meta: {
    image: "woods-0-50-8fe970b8.png",
    size: {
      w: 2048,
      h: 2048
    },
    scale: 0.5
  },
  frames: {
    "map-bunker-hatchet-compartment-floor-01.img": {
      frame: {
        x: 358,
        y: 2,
        w: 592,
        h: 463
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 592,
        h: 463
      },
      sourceSize: {
        w: 592,
        h: 464
      }
    },
    "map-bunker-eye-chamber-floor-01a.img": {
      frame: {
        x: 2,
        y: 2,
        w: 352,
        h: 674
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 14,
        w: 352,
        h: 674
      },
      sourceSize: {
        w: 352,
        h: 688
      }
    },
    "map-bunker-eye-compartment-floor-01.img": {
      frame: {
        x: 954,
        y: 2,
        w: 352,
        h: 352
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 352,
        h: 352
      },
      sourceSize: {
        w: 352,
        h: 352
      }
    },
    "map-bunker-hatchet-chamber-floor-01a.img": {
      frame: {
        x: 2,
        y: 680,
        w: 365,
        h: 349
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 365,
        h: 349
      },
      sourceSize: {
        w: 369,
        h: 353
      }
    },
    "map-bunker-hatchet-compartment-floor-02c.img": {
      frame: {
        x: 371,
        y: 680,
        w: 128,
        h: 328
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 0,
        w: 128,
        h: 328
      },
      sourceSize: {
        w: 129,
        h: 337
      }
    },
    "map-building-pavilion-ceiling-01.img": {
      frame: {
        x: 954,
        y: 358,
        w: 315,
        h: 308
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 6,
        w: 315,
        h: 308
      },
      sourceSize: {
        w: 320,
        h: 320
      }
    },
    "map-bunker-hatchet-compartment-floor-02a.img": {
      frame: {
        x: 503,
        y: 680,
        w: 449,
        h: 296
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 449,
        h: 296
      },
      sourceSize: {
        w: 449,
        h: 297
      }
    },
    "map-building-pavilion-floor-01.img": {
      frame: {
        x: 956,
        y: 680,
        w: 288,
        h: 288
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 288,
        h: 288
      },
      sourceSize: {
        w: 288,
        h: 288
      }
    },
    "map-bunker-eye-chamber-ceiling-01.img": {
      frame: {
        x: 2,
        y: 1033,
        w: 160,
        h: 272
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 272
      },
      sourceSize: {
        w: 160,
        h: 272
      }
    },
    "map-tree-08.img": {
      frame: {
        x: 166,
        y: 1033,
        w: 256,
        h: 256
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 256,
        h: 256
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-bunker-hatchet-compartment-floor-03b.img": {
      frame: {
        x: 426,
        y: 1033,
        w: 367,
        h: 255
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 367,
        h: 255
      },
      sourceSize: {
        w: 369,
        h: 257
      }
    },
    "map-bunker-hatchet-compartment-floor-03d.img": {
      frame: {
        x: 797,
        y: 1033,
        w: 191,
        h: 255
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 10,
        w: 191,
        h: 255
      },
      sourceSize: {
        w: 193,
        h: 265
      }
    },
    "map-bunker-hatchet-compartment-ceiling-02.img": {
      frame: {
        x: 992,
        y: 1033,
        w: 256,
        h: 248
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 256,
        h: 248
      },
      sourceSize: {
        w: 256,
        h: 248
      }
    },
    "map-tree-05.img": {
      frame: {
        x: 1310,
        y: 2,
        w: 248,
        h: 243
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 7,
        w: 248,
        h: 243
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-bunker-hatchet-compartment-ceiling-01.img": {
      frame: {
        x: 358,
        y: 469,
        w: 256,
        h: 200
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 256,
        h: 200
      },
      sourceSize: {
        w: 256,
        h: 200
      }
    },
    "map-bunker-hatchet-chamber-floor-01c.img": {
      frame: {
        x: 1310,
        y: 249,
        w: 113,
        h: 185
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 4,
        w: 113,
        h: 185
      },
      sourceSize: {
        w: 113,
        h: 193
      }
    },
    "map-bunker-hatchet-compartment-floor-02b.img": {
      frame: {
        x: 2,
        y: 1309,
        w: 336,
        h: 161
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 336,
        h: 161
      },
      sourceSize: {
        w: 345,
        h: 161
      }
    },
    "map-bunker-eye-compartment-ceiling-01.img": {
      frame: {
        x: 1310,
        y: 438,
        w: 160,
        h: 160
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 160
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "map-bunker-hatchet-compartment-ceiling-03.img": {
      frame: {
        x: 618,
        y: 469,
        w: 304,
        h: 152
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 304,
        h: 152
      },
      sourceSize: {
        w: 304,
        h: 152
      }
    },
    "map-bunker-hatchet-chamber-ceiling-01.img": {
      frame: {
        x: 1310,
        y: 602,
        w: 208,
        h: 152
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 208,
        h: 152
      },
      sourceSize: {
        w: 208,
        h: 152
      }
    },
    "map-bunker-hatchet-compartment-floor-03c.img": {
      frame: {
        x: 1427,
        y: 249,
        w: 97,
        h: 141
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 10,
        w: 97,
        h: 141
      },
      sourceSize: {
        w: 97,
        h: 153
      }
    },
    "map-stone-03x.img": {
      frame: {
        x: 1310,
        y: 758,
        w: 141,
        h: 140
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 2,
        w: 141,
        h: 140
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-planter-06.img": {
      frame: {
        x: 1474,
        y: 438,
        w: 72,
        h: 136
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 136
      },
      sourceSize: {
        w: 72,
        h: 136
      }
    },
    "map-tree-07.img": {
      frame: {
        x: 1310,
        y: 902,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-tree-10.img": {
      frame: {
        x: 1310,
        y: 1034,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-tree-11.img": {
      frame: {
        x: 1310,
        y: 1166,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-bunker-eye-chamber-floor-01b.img": {
      frame: {
        x: 1455,
        y: 758,
        w: 96,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 96,
        h: 128
      },
      sourceSize: {
        w: 96,
        h: 128
      }
    },
    "map-woodpile-res-02.img": {
      frame: {
        x: 618,
        y: 625,
        w: 64,
        h: 31
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 1,
        w: 64,
        h: 31
      },
      sourceSize: {
        w: 64,
        h: 32
      }
    },
    "map-bunker-hatchet-compartment-floor-02d.img": {
      frame: {
        x: 535,
        y: 1309,
        w: 191,
        h: 105
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 9,
        y: 0,
        w: 191,
        h: 105
      },
      sourceSize: {
        w: 201,
        h: 105
      }
    },
    "map-stone-res-02x.img": {
      frame: {
        x: 1442,
        y: 902,
        w: 100,
        h: 100
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 100,
        h: 100
      },
      sourceSize: {
        w: 100,
        h: 100
      }
    },
    "map-building-pavilion-res-01.img": {
      frame: {
        x: 1442,
        y: 1034,
        w: 92,
        h: 98
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 82,
        y: 79,
        w: 92,
        h: 98
      },
      sourceSize: {
        w: 256,
        h: 256
      }
    },
    "map-woodpile-02.img": {
      frame: {
        x: 730,
        y: 1309,
        w: 192,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 192,
        h: 96
      },
      sourceSize: {
        w: 192,
        h: 96
      }
    },
    "map-bush-06.img": {
      frame: {
        x: 1442,
        y: 1166,
        w: 96,
        h: 96
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 96,
        h: 96
      },
      sourceSize: {
        w: 96,
        h: 96
      }
    },
    "map-bunker-hatchet-chamber-floor-01b.img": {
      frame: {
        x: 926,
        y: 1309,
        w: 97,
        h: 89
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 97,
        h: 89
      },
      sourceSize: {
        w: 97,
        h: 89
      }
    },
    "map-table-02x.img": {
      frame: {
        x: 1027,
        y: 1309,
        w: 144,
        h: 80
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 144,
        h: 80
      },
      sourceSize: {
        w: 144,
        h: 80
      }
    },
    "map-table-03x.img": {
      frame: {
        x: 1175,
        y: 1309,
        w: 80,
        h: 80
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 80
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "map-crate-01x.img": {
      frame: {
        x: 1259,
        y: 1309,
        w: 78,
        h: 78
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 78,
        h: 78
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "map-stone-01x.img": {
      frame: {
        x: 1341,
        y: 1309,
        w: 76,
        h: 77
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 76,
        h: 77
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "map-crate-03x.img": {
      frame: {
        x: 1421,
        y: 1309,
        w: 74,
        h: 74
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 74,
        h: 74
      },
      sourceSize: {
        w: 74,
        h: 74
      }
    },
    "map-crate-19.img": {
      frame: {
        x: 2,
        y: 1474,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-crate-02x.img": {
      frame: {
        x: 78,
        y: 1474,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-bush-07sp.img": {
      frame: {
        x: 154,
        y: 1474,
        w: 71,
        h: 72
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 0,
        w: 71,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-bush-01x.img": {
      frame: {
        x: 229,
        y: 1474,
        w: 66,
        h: 68
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 3,
        y: 2,
        w: 66,
        h: 68
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-planter-res-02.img": {
      frame: {
        x: 1248,
        y: 680,
        w: 41,
        h: 68
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 0,
        w: 41,
        h: 68
      },
      sourceSize: {
        w: 43,
        h: 68
      }
    },
    "map-table-01x.img": {
      frame: {
        x: 299,
        y: 1474,
        w: 80,
        h: 64
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 64
      },
      sourceSize: {
        w: 80,
        h: 64
      }
    },
    "map-stone-res-01x.img": {
      frame: {
        x: 383,
        y: 1474,
        w: 60,
        h: 60
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 60,
        h: 60
      },
      sourceSize: {
        w: 60,
        h: 60
      }
    },
    "map-tree-switch-03.img": {
      frame: {
        x: 1248,
        y: 752,
        w: 56,
        h: 56
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 56,
        h: 56
      },
      sourceSize: {
        w: 56,
        h: 56
      }
    },
    "map-tree-switch-04.img": {
      frame: {
        x: 1248,
        y: 812,
        w: 56,
        h: 56
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 56,
        h: 56
      },
      sourceSize: {
        w: 56,
        h: 56
      }
    },
    "map-tree-switch-01.img": {
      frame: {
        x: 1248,
        y: 872,
        w: 56,
        h: 56
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 56,
        h: 56
      },
      sourceSize: {
        w: 56,
        h: 56
      }
    },
    "map-tree-switch-02.img": {
      frame: {
        x: 1499,
        y: 1309,
        w: 56,
        h: 56
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 56,
        h: 56
      },
      sourceSize: {
        w: 56,
        h: 56
      }
    },
    "map-chest-03x.img": {
      frame: {
        x: 447,
        y: 1474,
        w: 70,
        h: 51
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 70,
        h: 51
      },
      sourceSize: {
        w: 70,
        h: 51
      }
    },
    "map-planter-07.img": {
      frame: {
        x: 1252,
        y: 1033,
        w: 50,
        h: 50
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 50,
        h: 50
      },
      sourceSize: {
        w: 50,
        h: 50
      }
    },
    "map-planter-res-03.img": {
      frame: {
        x: 1427,
        y: 394,
        w: 43,
        h: 40
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 2,
        w: 43,
        h: 40
      },
      sourceSize: {
        w: 43,
        h: 43
      }
    },
    "map-snowball-res.img": {
      frame: {
        x: 1474,
        y: 394,
        w: 35,
        h: 35
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 7,
        y: 6,
        w: 35,
        h: 35
      },
      sourceSize: {
        w: 48,
        h: 48
      }
    },
    "map-bunker-hatchet-compartment-floor-03a.img": {
      frame: {
        x: 342,
        y: 1309,
        w: 189,
        h: 113
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 189,
        h: 113
      },
      sourceSize: {
        w: 193,
        h: 113
      }
    }
  }
}];
const ro = [{
  meta: {
    image: "cobalt-0-50-1bced975.png",
    size: {
      w: 2048,
      h: 2048
    },
    scale: 0.5
  },
  frames: {
    "map-bunker-twins-chamber-floor-01.img": {
      frame: {
        x: 854,
        y: 2,
        w: 740,
        h: 580
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 46,
        y: 62,
        w: 740,
        h: 580
      },
      sourceSize: {
        w: 832,
        h: 704
      }
    },
    "map-bunker-hydra-compartment-floor-02.img": {
      frame: {
        x: 2,
        y: 2,
        w: 848,
        h: 724
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 0,
        w: 848,
        h: 724
      },
      sourceSize: {
        w: 852,
        h: 724
      }
    },
    "map-bunker-crossing-compartment-floor-01.img": {
      frame: {
        x: 2,
        y: 730,
        w: 752,
        h: 464
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 752,
        h: 464
      },
      sourceSize: {
        w: 752,
        h: 464
      }
    },
    "map-bunker-hydra-chamber-floor-03.img": {
      frame: {
        x: 758,
        y: 730,
        w: 352,
        h: 402
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 14,
        w: 352,
        h: 402
      },
      sourceSize: {
        w: 352,
        h: 416
      }
    },
    "map-bunker-hydra-chamber-floor-02.img": {
      frame: {
        x: 1114,
        y: 730,
        w: 170,
        h: 372
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 21,
        y: 0,
        w: 170,
        h: 372
      },
      sourceSize: {
        w: 196,
        h: 372
      }
    },
    "map-bunker-hydra-chamber-floor-01b.img": {
      frame: {
        x: 2,
        y: 1198,
        w: 353,
        h: 369
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 353,
        h: 369
      },
      sourceSize: {
        w: 353,
        h: 369
      }
    },
    "map-bunker-hydra-compartment-ceiling-02.img": {
      frame: {
        x: 359,
        y: 1198,
        w: 370,
        h: 330
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 370,
        h: 330
      },
      sourceSize: {
        w: 408,
        h: 360
      }
    },
    "map-bunker-hydra-compartment-floor-01.img": {
      frame: {
        x: 733,
        y: 1198,
        w: 352,
        h: 320
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 352,
        h: 320
      },
      sourceSize: {
        w: 352,
        h: 320
      }
    },
    "map-bunker-hydra-floor-01.img": {
      frame: {
        x: 1089,
        y: 1198,
        w: 432,
        h: 304
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 432,
        h: 304
      },
      sourceSize: {
        w: 432,
        h: 304
      }
    },
    "map-bunker-crossing-compartment-floor-02.img": {
      frame: {
        x: 1288,
        y: 730,
        w: 160,
        h: 304
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 304
      },
      sourceSize: {
        w: 160,
        h: 304
      }
    },
    "map-complex-warehouse-floor-02.img": {
      frame: {
        x: 1452,
        y: 730,
        w: 30,
        h: 264
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 30,
        h: 264
      },
      sourceSize: {
        w: 30,
        h: 264
      }
    },
    "map-bunker-hydra-compartment-floor-03.img": {
      frame: {
        x: 1598,
        y: 2,
        w: 352,
        h: 254
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 352,
        h: 254
      },
      sourceSize: {
        w: 352,
        h: 256
      }
    },
    "map-bunker-crossing-compartment-ceiling-01b.img": {
      frame: {
        x: 2,
        y: 1571,
        w: 360,
        h: 248
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 360,
        h: 248
      },
      sourceSize: {
        w: 360,
        h: 248
      }
    },
    "map-bunker-hydra-compartment-ceiling-01.img": {
      frame: {
        x: 1598,
        y: 260,
        w: 160,
        h: 180
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 180
      },
      sourceSize: {
        w: 160,
        h: 180
      }
    },
    "map-bunker-crossing-chamber-floor-01a.img": {
      frame: {
        x: 366,
        y: 1571,
        w: 915,
        h: 177
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 915,
        h: 177
      },
      sourceSize: {
        w: 915,
        h: 177
      }
    },
    "map-bunker-twins-chamber-ceiling-01.img": {
      frame: {
        x: 1598,
        y: 444,
        w: 256,
        h: 176
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 256,
        h: 176
      },
      sourceSize: {
        w: 256,
        h: 176
      }
    },
    "map-bunker-hydra-chamber-ceiling-02.img": {
      frame: {
        x: 1762,
        y: 260,
        w: 96,
        h: 175
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 96,
        h: 175
      },
      sourceSize: {
        w: 96,
        h: 175
      }
    },
    "map-bunker-hydra-chamber-ceiling-01.img": {
      frame: {
        x: 1598,
        y: 624,
        w: 162,
        h: 174
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 162,
        h: 174
      },
      sourceSize: {
        w: 216,
        h: 176
      }
    },
    "map-bunker-crossing-floor-01.img": {
      frame: {
        x: 1764,
        y: 624,
        w: 160,
        h: 160
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 160
      },
      sourceSize: {
        w: 160,
        h: 160
      }
    },
    "map-bunker-hydra-ceiling-01.img": {
      frame: {
        x: 1598,
        y: 802,
        w: 216,
        h: 152
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 216,
        h: 152
      },
      sourceSize: {
        w: 216,
        h: 152
      }
    },
    "map-bunker-crossing-compartment-ceiling-01a.img": {
      frame: {
        x: 1862,
        y: 260,
        w: 64,
        h: 152
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 64,
        h: 152
      },
      sourceSize: {
        w: 64,
        h: 152
      }
    },
    "map-stone-03cb.img": {
      frame: {
        x: 1598,
        y: 958,
        w: 142,
        h: 141
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 1,
        y: 2,
        w: 142,
        h: 141
      },
      sourceSize: {
        w: 144,
        h: 144
      }
    },
    "map-bunker-hydra-chamber-ceiling-03.img": {
      frame: {
        x: 1744,
        y: 958,
        w: 200,
        h: 136
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 200,
        h: 136
      },
      sourceSize: {
        w: 200,
        h: 136
      }
    },
    "map-bunker-hydra-compartment-ceiling-03.img": {
      frame: {
        x: 1598,
        y: 1103,
        w: 160,
        h: 135
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 160,
        h: 135
      },
      sourceSize: {
        w: 160,
        h: 135
      }
    },
    "map-bunker-crossing-chamber-floor-02.img": {
      frame: {
        x: 854,
        y: 586,
        w: 354,
        h: 129
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 14,
        y: 158,
        w: 354,
        h: 129
      },
      sourceSize: {
        w: 368,
        h: 288
      }
    },
    "map-tree-03cb.img": {
      frame: {
        x: 1818,
        y: 802,
        w: 128,
        h: 128
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 128,
        h: 128
      },
      sourceSize: {
        w: 128,
        h: 128
      }
    },
    "map-bunker-crossing-chamber-floor-03.img": {
      frame: {
        x: 1212,
        y: 586,
        w: 354,
        h: 126
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 14,
        y: 161,
        w: 354,
        h: 126
      },
      sourceSize: {
        w: 368,
        h: 288
      }
    },
    "map-bunker-crossing-chamber-ceiling-01.img": {
      frame: {
        x: 1285,
        y: 1571,
        w: 568,
        h: 120
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 568,
        h: 120
      },
      sourceSize: {
        w: 568,
        h: 120
      }
    },
    "map-bunker-twins-ceiling-01.img": {
      frame: {
        x: 1762,
        y: 1103,
        w: 100,
        h: 117
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 30,
        y: 0,
        w: 100,
        h: 117
      },
      sourceSize: {
        w: 160,
        h: 144
      }
    },
    "map-bunker-crossing-ceiling-01.img": {
      frame: {
        x: 1598,
        y: 1242,
        w: 100,
        h: 117
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 30,
        y: 0,
        w: 100,
        h: 117
      },
      sourceSize: {
        w: 160,
        h: 144
      }
    },
    "part-class-shell-03b.img": {
      frame: {
        x: 1904,
        y: 1399,
        w: 26,
        h: 32
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 26,
        h: 32
      },
      sourceSize: {
        w: 26,
        h: 32
      }
    },
    "map-bunker-generic-ceiling-02.img": {
      frame: {
        x: 1866,
        y: 1103,
        w: 80,
        h: 115
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 115
      },
      sourceSize: {
        w: 80,
        h: 115
      }
    },
    "map-complex-warehouse-floor-03.img": {
      frame: {
        x: 1702,
        y: 1242,
        w: 30,
        h: 112
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 30,
        h: 112
      },
      sourceSize: {
        w: 30,
        h: 112
      }
    },
    "map-complex-warehouse-floor-01.img": {
      frame: {
        x: 1736,
        y: 1242,
        w: 30,
        h: 112
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 30,
        h: 112
      },
      sourceSize: {
        w: 30,
        h: 112
      }
    },
    "map-bunker-hydra-floor-04.img": {
      frame: {
        x: 1770,
        y: 1242,
        w: 100,
        h: 100
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 100,
        h: 100
      },
      sourceSize: {
        w: 100,
        h: 100
      }
    },
    "map-stone-res-02cb.img": {
      frame: {
        x: 1598,
        y: 1363,
        w: 100,
        h: 100
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 100,
        h: 100
      },
      sourceSize: {
        w: 100,
        h: 100
      }
    },
    "map-bunker-crossing-chamber-floor-01b.img": {
      frame: {
        x: 1598,
        y: 1467,
        w: 289,
        h: 97
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 289,
        h: 97
      },
      sourceSize: {
        w: 305,
        h: 97
      }
    },
    "map-bunker-crossing-chamber-floor-01c.img": {
      frame: {
        x: 1702,
        y: 1363,
        w: 97,
        h: 97
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 0,
        w: 97,
        h: 97
      },
      sourceSize: {
        w: 115,
        h: 97
      }
    },
    "map-bunker-hydra-chamber-floor-01a.img": {
      frame: {
        x: 1803,
        y: 1363,
        w: 97,
        h: 97
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 97,
        h: 97
      },
      sourceSize: {
        w: 97,
        h: 97
      }
    },
    "map-class-shell-03b.img": {
      frame: {
        x: 1874,
        y: 1242,
        w: 76,
        h: 76
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 76,
        h: 76
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "map-class-shell-03a.img": {
      frame: {
        x: 1486,
        y: 730,
        w: 76,
        h: 76
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 76,
        h: 76
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "map-class-shell-01a.img": {
      frame: {
        x: 1486,
        y: 810,
        w: 76,
        h: 76
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 76,
        h: 76
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "map-class-shell-01b.img": {
      frame: {
        x: 1486,
        y: 890,
        w: 76,
        h: 76
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 76,
        h: 76
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "map-class-shell-02a.img": {
      frame: {
        x: 1857,
        y: 1571,
        w: 76,
        h: 76
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 76,
        h: 76
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "map-class-shell-02b.img": {
      frame: {
        x: 2,
        y: 1823,
        w: 76,
        h: 76
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 76,
        h: 76
      },
      sourceSize: {
        w: 80,
        h: 80
      }
    },
    "map-class-crate-assault.img": {
      frame: {
        x: 82,
        y: 1823,
        w: 74,
        h: 73
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 74,
        h: 73
      },
      sourceSize: {
        w: 74,
        h: 74
      }
    },
    "map-class-crate-tank.img": {
      frame: {
        x: 160,
        y: 1823,
        w: 74,
        h: 73
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 74,
        h: 73
      },
      sourceSize: {
        w: 74,
        h: 74
      }
    },
    "map-class-crate-scout.img": {
      frame: {
        x: 238,
        y: 1823,
        w: 74,
        h: 73
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 74,
        h: 73
      },
      sourceSize: {
        w: 74,
        h: 74
      }
    },
    "map-class-crate-sniper.img": {
      frame: {
        x: 316,
        y: 1823,
        w: 74,
        h: 73
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 74,
        h: 73
      },
      sourceSize: {
        w: 74,
        h: 74
      }
    },
    "map-class-crate-healer.img": {
      frame: {
        x: 394,
        y: 1823,
        w: 74,
        h: 73
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 74,
        h: 73
      },
      sourceSize: {
        w: 74,
        h: 74
      }
    },
    "map-class-crate-demo.img": {
      frame: {
        x: 472,
        y: 1823,
        w: 74,
        h: 73
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 74,
        h: 73
      },
      sourceSize: {
        w: 74,
        h: 74
      }
    },
    "map-stone-01cb.img": {
      frame: {
        x: 550,
        y: 1823,
        w: 72,
        h: 72
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 72,
        h: 72
      },
      sourceSize: {
        w: 72,
        h: 72
      }
    },
    "map-class-crate-03.img": {
      frame: {
        x: 626,
        y: 1823,
        w: 70,
        h: 70
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 2,
        y: 2,
        w: 70,
        h: 70
      },
      sourceSize: {
        w: 74,
        h: 74
      }
    },
    "map-class-crate-res-01.img": {
      frame: {
        x: 1525,
        y: 1198,
        w: 66,
        h: 67
      },
      rotated: false,
      trimmed: true,
      spriteSourceSize: {
        x: 4,
        y: 6,
        w: 66,
        h: 67
      },
      sourceSize: {
        w: 74,
        h: 74
      }
    },
    "map-stone-res-01cb.img": {
      frame: {
        x: 1288,
        y: 1038,
        w: 60,
        h: 60
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 60,
        h: 60
      },
      sourceSize: {
        w: 60,
        h: 60
      }
    },
    "part-class-shell-01a.img": {
      frame: {
        x: 1858,
        y: 563,
        w: 48,
        h: 48
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 48,
        h: 48
      },
      sourceSize: {
        w: 48,
        h: 48
      }
    },
    "part-class-shell-02a.img": {
      frame: {
        x: 1891,
        y: 1467,
        w: 48,
        h: 48
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 48,
        h: 48
      },
      sourceSize: {
        w: 48,
        h: 48
      }
    },
    "part-class-shell-03a.img": {
      frame: {
        x: 1352,
        y: 1038,
        w: 48,
        h: 48
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 48,
        h: 48
      },
      sourceSize: {
        w: 48,
        h: 48
      }
    },
    "part-class-shell-01b.img": {
      frame: {
        x: 1910,
        y: 563,
        w: 26,
        h: 32
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 26,
        h: 32
      },
      sourceSize: {
        w: 26,
        h: 32
      }
    },
    "part-class-shell-02b.img": {
      frame: {
        x: 1904,
        y: 1363,
        w: 26,
        h: 32
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 26,
        h: 32
      },
      sourceSize: {
        w: 26,
        h: 32
      }
    },
    "map-bunker-generic-floor-03.img": {
      frame: {
        x: 1858,
        y: 444,
        w: 80,
        h: 115
      },
      rotated: false,
      trimmed: false,
      spriteSourceSize: {
        x: 0,
        y: 0,
        w: 80,
        h: 115
      },
      sourceSize: {
        w: 80,
        h: 115
      }
    }
  }
}];
const ao = {
  loadout: Ws,
  shared: $s,
  halloween: Qs,
  snow: Zs,
  faction: Ys,
  desert: Js,
  gradient: Ks,
  savannah: Xs,
  main: eo,
  potato: to,
  woods: io,
  cobalt: ro
};
const xt = {
  low: ao,
  high: Hs
};
function so(p, b) {
  const XT = x.from(b).baseTexture;
  let XY = 0;
  if (!XT.valid) {
    XT.on("loaded", XC => {
      console.log("Loaded texture", b);
      p.prepare.upload(XC);
    });
    XT.on("error", XC => {
      console.log("BaseTex load error, retrying", b);
      if (XY++ <= 3) {
        setTimeout(() => {
          if (XC.source) {
            XC.updateSourceImage("");
            XC.updateSourceImage(b.substring(5, b.length));
          }
        }, (XY - 1) * 1000);
      }
    });
  }
  return XT;
}
function oo(p, b) {
  const XT = so(p, "assets/" + b.meta.image);
  const XY = new S(XT, b);
  XY.resolution = XT.resolution;
  XY.parse();
  return XY;
}
function lo(p, b) {
  let XT = Math.min(window.screen.width, window.screen.height);
  let XY = Math.max(window.screen.width, window.screen.height);
  XT *= window.devicePixelRatio;
  XY *= window.devicePixelRatio;
  const XC = XY < 1366 && XT < 768;
  let Xl = b.get("highResTex") ? "high" : "low";
  if (XC || k.mobile && !k.tablet || p.type == R.CANVAS) {
    Xl = "low";
  }
  if (p.type == R.WEBGL) {
    const Xd = p.gl;
    if (Xd.getParameter(Xd.MAX_TEXTURE_SIZE) < 4096) {
      Xl = "low";
    }
  }
  console.log("TextureRes", Xl, "screenDims", window.screen.width, window.screen.height);
  return Xl;
}
class mo {
  constructor(p, b, XT) {
    this.renderer = p;
    this.audioManager = b;
    this.config = XT;
    this.textureRes = lo(this.renderer, this.config);
    p.prepare.limiter.maxItemsPerFrame = 1;
  }
  atlases = {};
  loadTicker = 0;
  loaded = false;
  textureRes;
  mapName;
  preloadMap;
  isAtlasLoaded(p) {
    return this.atlases[p]?.loaded;
  }
  atlasTexturesLoaded(p) {
    if (!this.isAtlasLoaded(p)) {
      return false;
    }
    const b = this.atlases[p];
    for (let XT = 0; XT < b.spritesheets.length; XT++) {
      if (!b.spritesheets[XT].baseTexture.valid) {
        return false;
      }
    }
    return true;
  }
  loadAtlas(p) {
    if (this.isAtlasLoaded(p)) {
      return;
    }
    console.log("Load atlas", p);
    this.atlases[p] = this.atlases[p] || {
      loaded: false,
      spritesheets: []
    };
    let b = xt[this.textureRes] || xt.low;
    if (!X4.main.assets.atlases.includes(p)) {
      b = xt.high;
    }
    const XT = b[p];
    for (let XY = 0; XY < XT.length; XY++) {
      const XC = oo(this.renderer, XT[XY]);
      this.atlases[p].spritesheets.push(XC);
    }
    this.atlases[p].loaded = true;
  }
  unloadAtlas(p) {
    if (!this.isAtlasLoaded(p)) {
      return;
    }
    console.log("Unload atlas", p);
    const b = this.atlases[p];
    for (let XT = 0; XT < b.spritesheets.length; XT++) {
      b.spritesheets[XT].destroy(true);
    }
    b.loaded = false;
    b.spritesheets = [];
  }
  loadMapAssets(p) {
    console.log("Load map", p);
    const b = X4[p];
    if (!b) {
      throw new Error("Failed loading mapDef " + this.mapName);
    }
    const XT = b.assets.atlases;
    const XY = Object.keys(this.atlases);
    for (let XC = 0; XC < XY.length; XC++) {
      const Xl = XY[XC];
      if (!XT.includes(Xl)) {
        this.unloadAtlas(Xl);
      }
    }
    for (let Xd = 0; Xd < XT.length; Xd++) {
      const Xk = XT[Xd];
      if (!this.isAtlasLoaded(Xk)) {
        this.loadAtlas(Xk);
      }
    }
    setTimeout(() => {
      this.audioManager.preloadSounds();
      const XU = b.assets.audio;
      for (let XW = 0; XW < XU.length; XW++) {
        const XD = XU[XW];
        let XG = fe.Sounds[XD.channel];
        if (!XG) {
          const p0 = fe.Channels[XD.channel];
          XG = fe.Sounds[p0.list];
        }
        const XF = XG[XD.name];
        const XH = {
          canCoalesce: XF.canCoalesce,
          channels: XF.maxInstances,
          volume: XF.volume
        };
        this.audioManager.loadSound({
          name: XD.name,
          channel: XD.channel,
          path: XF.path,
          options: XH
        });
      }
    }, 0);
  }
  update(p) {
    if (!this.loaded) {
      this.loadTicker += p;
      let b = !this.preloadMap;
      const XT = Object.keys(this.atlases);
      for (let XY = 0; XY < XT.length; XY++) {
        const XC = XT[XY];
        if (!this.atlasTexturesLoaded(XC)) {
          b = false;
        }
      }
      if (!this.audioManager.allLoaded()) {
        b = false;
      }
      if (b) {
        console.log("Resource load complete", this.loadTicker.toFixed(2));
        this.loaded = true;
      }
    }
  }
}
var Ii = {
  na: {
    https: true,
    address: "usr.mathsiscoolfun.com:8001",
    l10n: "index-north-america"
  },
  eu: {
    https: true,
    address: "eur.mathsiscoolfun.com:8001",
    l10n: "index-europe"
  },
  asia: {
    https: true,
    address: "asr.mathsiscoolfun.com:8001",
    l10n: "index-asia"
  },
  sa: {
    https: true,
    address: "sa.mathsiscoolfun.com:8001",
    l10n: "index-south-america"
  }
};
class no {
  constructor(p, b) {
    this.config = p;
    this.localization = b;
    this.config = p;
    this.localization = b;
  }
  info = {};
  loaded = false;
  load() {
    const p = this.localization.getLocale();
    const b = Qe.resolveUrl("/api/site_info?language=" + p);
    const XT = j("#server-opts");
    const XY = j("#team-server-opts");
    for (const XC in Ii) {
      const Xl = Ii[XC];
      const Xd = this.localization.translate(Xl.l10n);
      const Xk = "<option value='" + XC + "' data-l10n='" + Xl.l10n + "' data-label='" + Xd + "'>" + Xd + "</option>";
      XT.append(Xk);
      XY.append(Xk);
    }
    j.ajax(b).done((XU, XW) => {
      this.info = XU || {};
      this.loaded = true;
      this.updatePageFromInfo();
    });
  }
  getGameModeStyles() {
    const p = {
      [Xj.Solo]: "solo",
      [Xj.Duo]: "duo",
      [Xj.Squad]: "squad"
    };
    const b = [];
    const XT = this.info.modes || [];
    for (let XY = 0; XY < XT.length; XY++) {
      const XC = XT[XY];
      const Xl = (X4[XC.mapName] || X4.main).desc;
      const Xd = Xl.buttonText ? Xl.buttonText : p[XC.teamMode];
      b.push({
        icon: Xl.icon,
        buttonCss: Xl.buttonCss,
        buttonText: Xd,
        enabled: XC.enabled
      });
    }
    return b;
  }
  updatePageFromInfo() {
    if (this.loaded) {
      const b = this.getGameModeStyles();
      for (let XU = 0; XU < b.length; XU++) {
        const XW = b[XU];
        const XD = "index-play-" + XW.buttonText;
        const XG = j("#btn-start-mode-" + XU);
        XG.data("l10n", XD);
        XG.html(this.localization.translate(XD));
        if (XW.icon || XW.buttonCss) {
          if (XU == 0) {
            XG.addClass("btn-custom-mode-no-indent");
          } else {
            XG.addClass("btn-custom-mode-main");
          }
          XG.addClass(XW.buttonCss);
          XG.css({
            "background-image": "url(" + XW.icon + ")"
          });
        }
        const XF = j("#btn-team-queue-mode-" + XU);
        if (XF.length) {
          const XH = "index-" + XW.buttonText;
          XF.data("l10n", XH);
          XF.html(this.localization.translate(XH));
          if (XW.icon) {
            XF.addClass("btn-custom-mode-select");
            XF.css({
              "background-image": "url(" + XW.icon + ")"
            });
          }
        }
        if (!XW.enabled) {
          XG.addClass("btn-disabled-main");
        }
      }
      const XT = this.info.pops;
      if (XT) {
        const p0 = Object.keys(XT);
        for (let p1 = 0; p1 < p0.length; p1++) {
          const p2 = p0[p1];
          const p3 = XT[p2];
          const p4 = j("#server-opts").children("option[value=\"" + p2 + "\"]");
          const p5 = this.localization.translate("index-players");
          p4.text(p4.data("label") + " [" + p3.playerCount + " " + p5 + "]");
        }
      }
      let XY = false;
      const XC = j("#featured-streamers");
      const Xl = j(".streamer-list");
      if (!k.mobile && this.info.twitch) {
        Xl.empty();
        for (let p6 = 0; p6 < this.info.twitch.length; p6++) {
          const p7 = this.info.twitch[p6];
          const p8 = j("#featured-streamer-template").clone();
          p8.attr("class", "featured-streamer streamer-tooltip").attr("id", "");
          const p9 = p8.find("a");
          const pX = this.localization.translate(p7.viewers == 1 ? "index-viewer" : "index-viewers");
          p9.html(p7.name + " <span>" + p7.viewers + " " + pX + "</span>");
          p9.css("background-image", "url(" + p7.img + ")");
          p9.attr("href", p7.url);
          Xl.append(p8);
          XY = true;
        }
      }
      XC.css("visibility", XY ? "visible" : "hidden");
      const Xd = j("#featured-youtuber");
      const Xk = this.info.youtube;
      if (Xk) {
        j(".btn-youtuber").attr("href", this.info.youtube.link).html(this.info.youtube.name);
      }
      Xd.css("display", Xk ? "block" : "none");
    }
  }
}
function mr(p) {
  const b = {
    width: 64,
    height: 64
  };
  return {
    width: Math.round(b.width * Number(p.size) / 4) * 4,
    height: Math.round(b.height * Number(p.size) / 4) * 4
  };
}
function nr(p) {
  const b = XL[p.type];
  const XT = mr(p);
  const XY = t.rgbToHex(t.intToRgb(p.color));
  const XC = p.stroke;
  let Xl = b.code.replace(/white/g, XY);
  Xl = Xl.replace(/stroke-width=".5"/g, "stroke-width=\"" + XC + "\"");
  Xl = Xl.replace(/width="64"/g, "width=\"" + XT.width + "\"");
  Xl = Xl.replace(/height="64"/g, "height=\"" + XT.height + "\"");
  return "url('data:image/svg+xml;utf8," + (Xl = Xl.replace(/#/g, "%23")) + "')";
}
function ho(p) {
  const b = mr(p);
  return nr(p) + " " + b.width / 2 + " " + b.height / 2 + ", crosshair";
}
const Ge = {
  getCursorURL: function (p) {
    return nr(p);
  },
  setElemCrosshair: function (p, b) {
    let XT = "crosshair";
    const XY = XL[b.type];
    if (XY) {
      XT = XY.cursor ? XY.cursor : ho(b);
    }
    p.css({
      cursor: XT
    });
  },
  setGameCrosshair: function (p) {
    Ge.setElemCrosshair(j("#game-area-wrapper"), p);
    const b = XL[p.type];
    const XT = !b || b.cursor ? "pointer" : "inherit";
    j(".ui-zoom, .ui-medical, .ui-settings-button, .ui-weapon-switch").css({
      cursor: XT
    });
  }
};
class de {
  constructor(p) {
    this.selector = p;
    p.find(".close").click(b => {
      this.hide();
    });
    this.modalCloseListener = b => {
      if (j(b.target).closest(".modal-close").length == 0 && (j(b.target).is(this.selector) || !this.checkSelector)) {
        b.stopPropagation();
        this.hide();
      }
    };
  }
  checkSelector = true;
  skipFade = false;
  visible = false;
  onShowFn = function () {};
  onHideFn = function () {};
  modalCloseListener;
  onShow(p) {
    this.onShowFn = p;
  }
  onHide(p) {
    this.onHideFn = p;
  }
  isVisible() {
    return this.visible;
  }
  show(p) {
    if (!this.visible) {
      this.visible = true;
      this.selector.finish();
      this.selector.css("display", "block");
      this.onShowFn();
      if (!p) {
        j(document).on("click touchend", this.modalCloseListener);
      }
    }
  }
  hide() {
    if (this.visible) {
      this.visible = false;
      if (this.skipFade) {
        this.selector.css("display", "none");
      } else {
        this.selector.fadeOut(200);
      }
      this.onHideFn();
      j(document).off("click touchend", this.modalCloseListener);
    }
  }
}
function Mi(p) {
  const b = {
    [l.Top]: "customize-emote-top",
    [l.Right]: "customize-emote-right",
    [l.Bottom]: "customize-emote-bottom",
    [l.Left]: "customize-emote-left",
    [l.Win]: "customize-emote-win",
    [l.Death]: "customize-emote-death"
  };
  const XT = b[p] || b[l.Top];
  return j("#" + XT);
}
function tt(p) {
  return function (b, XT) {
    const XY = w[b.type].rarity || 0;
    const XC = w[XT.type].rarity || 0;
    if (XY == 0 && XC == 0) {
      return ht(b, XT);
    } else if (XY == 0) {
      return -1;
    } else if (XC == 0) {
      return 1;
    } else {
      return p(b, XT);
    }
  };
}
function co(p, b) {
  if (b.timeAcquired == p.timeAcquired) {
    return hr(p, b);
  } else {
    return b.timeAcquired - p.timeAcquired;
  }
}
function ht(p, b) {
  const XT = w[p.type];
  const XY = w[b.type];
  if (XT.name < XY.name) {
    return -1;
  } else if (XT.name > XY.name) {
    return 1;
  } else {
    return 0;
  }
}
function uo(p, b) {
  const XT = w[p.type].rarity || 0;
  const XY = w[b.type].rarity || 0;
  if (XT == XY) {
    return ht(p, b);
  } else {
    return XY - XT;
  }
}
function hr(p, b) {
  const XT = w[p.type];
  const XY = w[b.type];
  if (!XT.category || !XY.category || XT.category == XY.category) {
    return ht(p, b);
  } else {
    return XT.category - XY.category;
  }
}
const Ti = {
  newest: tt(co),
  alpha: tt(ht),
  rarity: tt(uo),
  subcat: tt(hr)
};
class po {
  constructor(p, b) {
    this.account = p;
    this.localization = b;
    if (!k.touch) {
      this.categories.push({
        loadoutType: "crosshair",
        gameType: "crosshair",
        categoryImage: "img/gui/loadout-crosshair.svg"
      });
    }
    this.categories.push({
      loadoutType: "player_icon",
      gameType: "emote",
      categoryImage: "img/gui/loadout-emote.svg"
    });
    this.modalCustomize = j("#modal-customize");
    this.modalCustomizeList = j("#modal-customize-list");
    this.modalCustomizeItemRarity = j("#modal-customize-item-rarity");
    this.modalCustomizeItemName = j("#modal-customize-item-name");
    this.modalCustomizeItemLore = j("#modal-customize-item-lore");
    this.modalCustomizeItemSource = j("#modal-customize-item-source");
    this.modal = new de(this.modalCustomize);
    this.modal.onShow(() => {
      this.onShow();
    });
    this.modal.onHide(() => {
      this.onHide();
    });
    const XT = function () {
      j("#modal-screen-block").fadeIn(200);
    };
    const XY = () => {
      this.confirmNextItem();
    };
    this.confirmItemModal = new de(j("#modal-item-confirm"));
    this.confirmItemModal.onShow(XT);
    this.confirmItemModal.onHide(XY);
    p.addEventListener("request", this.onRequest.bind(this));
    p.addEventListener("loadout", this.onLoadout.bind(this));
    p.addEventListener("items", this.onItems.bind(this));
    p.addEventListener("pass", this.onPass.bind(this));
  }
  initialized = false;
  active = false;
  items = [];
  loadoutDisplay = null;
  loadout = le.defaultLoadout();
  localPendingConfirm = [];
  localConfirmed = [];
  confirmingItems = false;
  localAckItems = [];
  categories = [{
    loadoutType: "outfit",
    gameType: "outfit",
    categoryImage: "img/gui/loadout-outfit.svg"
  }, {
    loadoutType: "melee",
    gameType: "melee",
    categoryImage: "img/gui/loadout-melee.svg"
  }, {
    loadoutType: "emote",
    gameType: "emote",
    categoryImage: "img/gui/loadout-emote.svg"
  }, {
    loadoutType: "heal",
    gameType: "heal_effect",
    categoryImage: "img/gui/loadout-heal.svg"
  }, {
    loadoutType: "boost",
    gameType: "boost_effect",
    categoryImage: "img/gui/loadout-boost.svg"
  }];
  selectedItem = {
    prevSlot: null,
    img: "",
    type: ""
  };
  emotesLoaded = false;
  selectedCatIdx = 0;
  selectedCatItems = [];
  equippedItems = [];
  modalCustomize;
  modalCustomizeList;
  modalCustomizeItemRarity;
  modalCustomizeItemName;
  modalCustomizeItemLore;
  modalCustomizeItemSource;
  picker;
  modal;
  confirmItemModal;
  itemSort;
  selectableCats;
  selectableCatConnects;
  selectableCatImages;
  selectableSlots;
  droppableSlots;
  highlightedSlots;
  itemSelected;
  highlightOpacityMin;
  init() {
    if (!this.initialized) {
      for (let XY = 0; XY < this.categories.length; XY++) {
        const XC = j("<div/>", {
          class: "modal-customize-cat",
          "data-idx": XY
        });
        if (XY == this.categories.length - 1) {
          XC.attr("id", "modal-customize-cat-standalone");
        }
        XC.append(j("<div/>", {
          class: "modal-customize-cat-image",
          css: {
            "background-image": "url(" + this.categories[XY].categoryImage + ")"
          }
        }));
        XC.append(j("<div/>", {
          class: "modal-customize-cat-connect"
        }));
        XC.append(j("<div/>", {
          class: "account-alert account-alert-cat"
        }));
        j("#modal-customize-header").append(XC);
      }
      this.selectableCats = j(".modal-customize-cat");
      this.selectableCatConnects = j(".modal-customize-cat-connect");
      this.selectableCatImages = j(".modal-customize-cat-image");
      this.selectableCats.on("mouseup", Xl => {
        const Xd = j(Xl.currentTarget).data("idx");
        if (this.selectedCatIdx != Xd) {
          this.selectCat(Xd);
        }
      });
      this.itemSort = j("#modal-customize-sort");
      this.itemSort.on("change", Xl => {
        this.sortItems(Xl.target.value);
      });
      this.modalCustomizeItemName.on("click", () => {
        const Xl = document.getElementsByClassName("customize-list-item-selected");
        if (Xl.length > 0) {
          Xl[0].scrollIntoView({
            behavior: "smooth",
            block: "start",
            inline: "nearest"
          });
        }
      });
      j("#crosshair-size").on("input", () => {
        this.updateLoadoutFromDOM();
      });
      j("#crosshair-stroke").on("input", () => {
        this.updateLoadoutFromDOM();
      });
      const p = document.getElementById("color-picker");
      this.picker = new window.CP(p, false, p);
      this.picker.self.classList.add("static");
      this.picker.on("change", Xl => {
        j("#color-picker-hex").val(Xl);
        if (this.loadout?.crosshair) {
          this.updateLoadoutFromDOM();
        }
      });
      const b = document.querySelector("#color-picker-hex");
      const XT = () => {
        const Xl = b.value;
        if (Xl.length) {
          if (Xl.length == 6) {
            this.picker.set("#" + Xl);
            this.picker.fire("change", [Xl]);
          } else if (Xl.length == 7 && Xl[0] == "#") {
            this.picker.set(Xl);
            this.picker.fire("change", [Xl.slice(1)]);
          } else {
            return;
          }
        }
      };
      b.oncut = XT;
      b.onpaste = XT;
      b.onkeyup = XT;
      b.oninput = XT;
      this.initialized = true;
    }
  }
  show() {
    this.init();
    this.modal.show();
  }
  hide() {
    this.modal.hide();
  }
  onShow() {
    this.active = true;
    this.localAckItems = [];
    for (let p = 0; p < this.items.length; p++) {
      const b = this.items[p];
      if (b.status < le.ItemStatus.Ackd) {
        this.localAckItems.push(b);
      }
    }
    this.selectCat(0);
    this.tryBeginConfirmingItems();
    j("#start-bottom-right, #start-main").fadeOut(200);
    j("#background").hide();
  }
  onHide() {
    this.active = false;
    if (le.modified(this.loadout, this.account.loadout)) {
      this.account.setLoadout(this.loadout);
    }
    this.clearConfirmItemModal();
    this.modalCustomize.css({
      cursor: "initial"
    });
    j("#start-bottom-right, #start-main").fadeIn(200);
    j("#background").show();
  }
  onResize() {
    if (k.mobile) {
      if (this.categories[this.selectedCatIdx].loadoutType == "emote") {
        j("#modal-customize-list").attr("style", "");
      } else {
        j("#modal-customize-list").attr("style", k.isLandscape ? "" : "height: 380px");
      }
    }
  }
  onRequest() {
    j("#modal-customize-loading").css("opacity", this.account.requestsInFlight > 0 ? 1 : 0);
  }
  onLoadout(p) {
    this.loadout = le.validate(p);
    Ge.setGameCrosshair(p.crosshair);
    if (this.active) {
      this.selectCat(this.selectedCatIdx);
    }
  }
  onItems(p) {
    this.items = le.getUserAvailableItems(p);
    for (let b = 0; b < this.items.length; b++) {
      const XT = this.items[b];
      if (XT.status < le.ItemStatus.Confirmed && !this.localPendingConfirm.find(XY => XY.type == XT.type) && !this.localConfirmed.find(XY => XY.type == XT.type)) {
        this.localPendingConfirm.push(XT);
      }
      if (XT.status < le.ItemStatus.Ackd && !this.localAckItems.find(XY => XY.type == XT.type)) {
        this.localAckItems.push(XT);
      }
    }
    if (this.active) {
      this.tryBeginConfirmingItems();
      this.selectCat(this.selectedCatIdx);
    }
    if (this.account.loggedIn) {
      if (!this.items.find(XY => XY.type == "unlock_new_account")) {
        this.account.unlock("unlock_new_account");
      }
    }
  }
  onPass(p) {
    const b = ["facebook", "instagram", "youtube", "twitter"];
    for (let XT = 0; XT < b.length; XT++) {
      const XY = b[XT];
      const XC = !!p.unlocks[XY];
      const Xl = j(".customize-social-unlock[data-lock-reason='" + XY + "']");
      Xl.css({
        display: XC ? "none" : "inline-block"
      });
      Xl.off("click").on("click", () => {
        this.account.setPassUnlock(XY);
      });
    }
  }
  getCategory(p) {
    for (let b = 0; b < this.categories.length; b++) {
      const XT = this.categories[b];
      if (XT.gameType == p) {
        return XT;
      }
    }
    return null;
  }
  clearConfirmItemModal() {
    this.localPendingConfirm = [];
    this.localConfirmed = [];
    this.confirmingItems = false;
    this.confirmItemModal.hide();
  }
  setItemsConfirmed() {
    const p = [];
    for (let b = 0; b < this.items.length; b++) {
      const XT = this.items[b];
      if (XT.status < le.ItemStatus.Confirmed) {
        p.push(XT.type);
      }
    }
    if (p.length > 0) {
      this.account.setItemStatus(le.ItemStatus.Confirmed, p);
    }
  }
  setItemsAckd(p) {
    const b = this.categories[p];
    const XT = [];
    for (let XY = 0; XY < this.items.length; XY++) {
      const XC = this.items[XY];
      const Xl = w[XC.type];
      if (Xl && Xl.type == b.gameType && XC?.status < le.ItemStatus.Ackd) {
        XT.push(XC.type);
      }
    }
    if (XT.length > 0) {
      this.account.setItemStatus(le.ItemStatus.Ackd, XT);
    }
  }
  tryBeginConfirmingItems() {
    if (this.active && !this.confirmingItems) {
      this.confirmingItems = true;
      this.confirmNextItem();
    }
  }
  confirmNextItem() {
    this.setItemsConfirmed();
    const p = this.localPendingConfirm.shift();
    if (p) {
      this.localConfirmed.push(p);
      const b = w[p.type];
      const XT = {
        type: p.type,
        rarity: b.rarity || 0,
        displayName: b.name,
        category: b.type
      };
      const XY = "url(" + Q.getSvgFromGameType(p.type) + ")";
      const XC = Q.getCssTransformFromGameType(p.type);
      setTimeout(() => {
        j("#modal-item-confirm-name").html(XT.displayName);
        j("#modal-item-confirm-image-inner").css({
          "background-image": XY,
          transform: XC
        });
        this.confirmItemModal.show();
      }, 200);
    } else {
      this.confirmingItems = false;
      j("#modal-screen-block").fadeOut(300);
    }
  }
  sortItems(p) {
    this.selectedCatItems.sort(Ti[p]);
    const b = this.categories[this.selectedCatIdx];
    const XT = j("<div/>");
    for (let XY = 0; XY < this.selectedCatItems.length; XY++) {
      const XC = this.selectedCatItems[XY];
      XC.outerDiv?.data("idx", XY);
      XT.append(XC.outerDiv);
    }
    this.modalCustomizeList.html("");
    this.modalCustomizeList.append(XT);
    this.selectableSlots.off("mouseup");
    this.setItemListeners(b.loadoutType);
  }
  setItemListeners(p) {
    this.selectableSlots.on("mouseup", b => {
      const XT = b.currentTarget;
      if (!j(XT).hasClass("customize-list-item-locked")) {
        if (this.itemSelected && !j(XT).hasClass("customize-list-item")) {
          this.itemSelected = false;
          return;
        }
        this.selectItem(j(XT));
        this.updateLoadoutFromDOM();
      }
    });
    if (p == "emote") {
      this.setEmoteDraggable(this.selectableSlots, this);
      if (!this.emotesLoaded) {
        this.setEmoteDraggable(this.droppableSlots, this);
        this.droppableSlots.on("mouseup", b => {
          const XT = b.currentTarget;
          if (!j(XT).hasClass("customize-list-item-locked")) {
            if (this.itemSelected && !j(XT).hasClass("customize-list-item")) {
              this.deselectItem();
              return;
            }
            this.selectItem(j(XT));
            this.updateLoadoutFromDOM();
          }
        });
        this.droppableSlots.on("drop", b => {
          b.originalEvent?.preventDefault();
          const XT = b.currentTarget;
          const XY = j(XT).parent();
          this.updateSlot(XY, this.selectedItem.img, this.selectedItem.type);
          this.updateLoadoutFromDOM();
          this.deselectItem();
        });
        this.droppableSlots.on("mousedown", b => {
          if (this.itemSelected) {
            b.stopPropagation();
            const XT = j(b.currentTarget).parent();
            this.updateSlot(XT, this.selectedItem.img, this.selectedItem.type);
            this.updateLoadoutFromDOM();
          }
        });
        this.droppableSlots.on("dragover", function (b) {
          b.originalEvent?.preventDefault();
          j(this).parent().find(".ui-emote-hl").css("opacity", 1);
        });
        this.droppableSlots.on("dragleave", b => {
          b.originalEvent?.preventDefault();
          j(b.currentTarget).parent().find(".ui-emote-hl").css("opacity", this.highlightOpacityMin);
        });
        this.droppableSlots.on("dragend", b => {
          b.originalEvent?.preventDefault();
          this.deselectItem();
        });
        j(".ui-emote-auto-trash").click(b => {
          const XT = j(b.currentTarget).parent();
          this.updateSlot(XT, "", "");
          this.updateLoadoutFromDOM();
        });
        this.emotesLoaded = true;
      }
    } else if (p == "crosshair") {
      const b = t.intToHex(this.loadout.crosshair.color);
      const XT = [b.slice(1)];
      this.picker.set(b);
      j("#color-picker-hex").val(XT);
      j("#crosshair-size").val(this.loadout.crosshair.size);
      j("#crosshair-stroke").val(this.loadout.crosshair.stroke);
    }
  }
  updateLoadoutFromDOM() {
    const p = this.categories[this.selectedCatIdx].loadoutType;
    if (p == "emote") {
      for (let b = 0; b < l.Count; b++) {
        const XT = Mi(b).data("idx");
        const XY = this.equippedItems[XT];
        if (XY?.type) {
          this.loadout.emotes[b] = XY.type;
        } else {
          this.loadout.emotes[b] = "";
        }
      }
    } else if (p == "crosshair") {
      const XC = parseFloat(j("#crosshair-size").val());
      const Xl = j("#color-picker-hex").val();
      const Xd = parseFloat(j("#crosshair-stroke").val());
      this.loadout.crosshair = {
        type: this.selectedItem.type,
        color: t.hexToInt(Xl),
        size: Number(XC.toFixed(2)),
        stroke: Number(Xd.toFixed(2))
      };
    } else {
      this.loadout[p] = this.selectedItem.type;
    }
    this.loadout = le.validate(this.loadout);
    if (this.loadoutDisplay?.initialized) {
      this.loadoutDisplay.setLoadout(this.loadout);
    }
    if (this.selectedItem.loadoutType == "crosshair") {
      this.setSelectedCrosshair();
    }
  }
  selectItem(b, XT = true) {
    const XY = b.hasClass("customize-list-item");
    const XC = XY ? b : b.parent();
    const Xl = XC.find(".customize-item-image");
    const Xd = XC.data("idx");
    const Xk = XC.data("slot") ? this.equippedItems[Xd] : this.selectedCatItems[Xd];
    if (!Xk) {
      this.itemSelected = false;
      this.selectedItem = {
        prevSlot: null,
        img: "",
        type: ""
      };
      return;
    }
    if (Xk.type == this.selectedItem.type && Xk.loadoutType == "emote" && this.selectedItem.loadoutType == "emote" && XT) {
      this.deselectItem();
      return;
    }
    this.itemSelected = true;
    this.selectedItem = {
      prevSlot: XY ? null : XC,
      img: Xl.data("img"),
      type: Xk.type,
      rarity: Xk.rarity,
      displayName: Xk.displayName || "",
      displaySource: Xk.displaySource || "Unknown",
      displayLore: Xk.displayLore || "",
      loadoutType: Xk.loadoutType,
      subcat: Xk.subcat
    };
    this.modalCustomizeItemName.html(this.selectedItem.displayName);
    const XU = this.localization.translate("loadout-" + Xk.displaySource) || this.localization.translate("" + Xk.displaySource) || this.selectedItem.displaySource;
    const XW = this.localization.translate("loadout-acquired") + ": " + XU;
    this.modalCustomizeItemSource.html(XW);
    const XD = {
      [Xv.Locked]: "Locked",
      [Xv.Faces]: "Faces",
      [Xv.Food]: "Food",
      [Xv.Animals]: "Animals",
      [Xv.Logos]: "Logos",
      [Xv.Other]: "Other",
      [Xv.Flags]: "Flags",
      [Xv.Default]: "Default"
    };
    const XG = Xk.loadoutType == "emote" ? this.localization.translate("loadout-category") + ": " + XD[Xk.subcat] : this.selectedItem.displayLore;
    this.modalCustomizeItemLore.html(XG);
    const XF = ["stock", "common", "uncommon", "rare", "epic", "mythic"];
    const XH = ["#c5c5c5", "#c5c5c5", "#12ff00", "#00deff", "#f600ff", "#d96100"];
    const p0 = this.localization.translate("loadout-" + XF[this.selectedItem.rarity]);
    this.modalCustomizeItemRarity.html(p0);
    this.modalCustomizeItemRarity.css({
      color: XH[this.selectedItem.rarity]
    });
    if (this.selectedItem.loadoutType == "emote") {
      this.highlightedSlots.css({
        display: "block",
        opacity: this.highlightOpacityMin
      });
    }
    this.selectableSlots.removeClass("customize-list-item-selected");
    if (XY) {
      b.addClass("customize-list-item-selected");
    } else {
      XC.find(".ui-emote-hl").css("opacity", 1);
    }
    if (this.selectedItem.loadoutType == "crosshair") {
      const p2 = w[this.selectedItem.type];
      if (p2 && p2.type == "crosshair" && p2.cursor) {
        j("#modal-content-right-crosshair").css("display", "none");
      } else {
        j("#modal-content-right-crosshair").css("display", "block");
        this.picker.exit();
        this.picker.enter();
      }
    }
    const p1 = this.localAckItems.findIndex(p3 => p3.type == this.selectedItem.type);
    if (p1 !== -1) {
      b.find(".account-alert").removeClass("account-alert account-alert-cat");
      this.localAckItems.splice(p1, 1);
      this.setCategoryAlerts();
    }
  }
  updateSlot(p, b, XT) {
    const XY = this.selectedItem.prevSlot;
    this.selectedItem = {};
    if (XY) {
      const XC = p.find(".customize-item-image");
      const Xl = p.data("idx");
      const Xd = this.equippedItems[Xl];
      let Xk = "";
      if (Xd.type) {
        Xk = Xd.type;
      }
      this.updateSlot(XY, XC.data("img"), Xk);
    }
    this.updateSlotData(p, b, XT);
  }
  deselectItem() {
    this.itemSelected = false;
    this.selectedItem = {};
    this.selectableSlots.removeClass("customize-list-item-selected");
    this.highlightedSlots.css({
      display: "none",
      opacity: 0
    });
    this.modalCustomizeItemName.html("");
    this.modalCustomizeItemSource.html("");
    this.modalCustomizeItemLore.html("");
    this.modalCustomizeItemRarity.html("");
  }
  updateSlotData(p, b, XT) {
    const XY = p.find(".customize-emote-slot");
    XY.css("background-image", b || "none");
    XY.data("img", b || "none");
    const XC = w[XT];
    const Xl = p.data("idx");
    if (XC) {
      const Xd = {
        loadoutType: "emote",
        type: XT,
        rarity: XC.rarity || 0,
        displayName: XC.name,
        displayLore: XC.lore,
        subcat: XC.category
      };
      this.equippedItems[Xl] = Xd;
    } else {
      this.equippedItems[Xl] = {};
    }
  }
  selectCat(XT) {
    const XY = this.selectedCatIdx;
    this.selectedCatIdx = XT;
    this.setItemsAckd(this.selectedCatIdx);
    if (XY != this.selectedCatIdx) {
      const p2 = this.categories[XY];
      for (let p3 = this.localAckItems.length - 1; p3 >= 0; p3--) {
        const p4 = this.localAckItems[p3];
        if (w[p4.type].type == p2.gameType) {
          this.localAckItems.splice(p3, 1);
        }
      }
    }
    const XC = this.categories[this.selectedCatIdx];
    const Xl = this.items.filter(p5 => {
      const p6 = w[p5.type];
      return p6 && p6.type == XC.gameType;
    });
    const Xd = XC.loadoutType == "emote" || XC.loadoutType == "player_icon";
    j("#customize-sort-subcat").css("display", Xd ? "block" : "none");
    let Xk = this.itemSort.val();
    if (!Xd && Xk == "subcat") {
      Xk = "newest";
      this.itemSort.val(Xk);
    }
    Xl.sort(Ti[Xk]);
    const XU = XC.loadoutType == "emote";
    const XW = XC.loadoutType == "crosshair";
    const XD = XC.loadoutType == "emote";
    this.loadoutDisplay?.setView(XC.loadoutType);
    const XG = j(".modal-customize-cat[data-idx='" + this.selectedCatIdx + "']");
    this.selectableCats.removeClass("modal-customize-cat-selected");
    this.selectableCatConnects.removeClass("modal-customize-cat-connect-selected");
    this.selectableCatImages.removeClass("modal-customize-cat-image-selected");
    XG.addClass("modal-customize-cat-selected");
    XG.find(".modal-customize-cat-connect").addClass("modal-customize-cat-connect-selected");
    XG.find(".modal-customize-cat-image").addClass("modal-customize-cat-image-selected");
    const XF = this.localization.translate("loadout-title-" + XC.loadoutType).toUpperCase();
    j("#modal-customize-cat-title").html(XF);
    j("#modal-content-right-crosshair").css("display", XC.loadoutType == "crosshair" ? "block" : "none");
    j("#modal-content-right-emote").css("display", XC.loadoutType == "emote" ? "block" : "none");
    j("#customize-emote-parent").css("display", XU ? "block" : "none");
    j("#customize-crosshair-parent").css("display", XW ? "block" : "none");
    this.modalCustomizeItemName.html("");
    this.modalCustomizeItemSource.html("");
    this.modalCustomizeItemLore.html("");
    this.modalCustomizeItemRarity.html("");
    const XH = function (p5) {
      const p6 = w[p5];
      if (p6?.name) {
        return p6.name;
      } else {
        return p5;
      }
    };
    this.selectedCatItems = [];
    let p0 = "";
    const p1 = j("<div/>");
    for (let p5 = 0; p5 < Xl.length; p5++) {
      const p6 = Xl[p5];
      const p7 = w[p6.type];
      const p8 = {
        loadoutType: XC.loadoutType,
        type: p6.type,
        rarity: p7.rarity || 0,
        displayName: p7.name,
        displaySource: XH(p6.source),
        displayLore: p7.lore,
        timeAcquired: p6.timeAcquired,
        idx: p5,
        subcat: p7.category,
        outerDiv: null
      };
      const p9 = j("<div/>", {
        class: "customize-list-item customize-list-item-unlocked",
        "data-idx": p5
      });
      const pX = Q.getSvgFromGameType(p6.type);
      const pp = Q.getCssTransformFromGameType(p6.type);
      const pb = j("<div/>", {
        class: "customize-item-image",
        css: {
          "background-image": "url(" + pX + ")",
          transform: pp
        },
        "data-img": "url(" + pX + ")",
        draggable: XD
      });
      p9.append(pb);
      if (this.localAckItems.findIndex(pI => pI.type == p6.type) !== -1) {
        const pI = j("<div/>", {
          class: "account-alert account-alert-cat",
          css: {
            display: "block"
          }
        });
        p9.append(pI);
      }
      if (XC.gameType == "crosshair") {
        const pj = {
          type: p8.type,
          color: 16777215,
          size: 1,
          stroke: 0
        };
        Ge.setElemCrosshair(p9, pj);
      }
      p1.append(p9);
      p8.outerDiv = p9;
      this.selectedCatItems.push(p8);
      if (!p0) {
        if (XC.loadoutType == "crosshair" && p8.type == this.loadout.crosshair.type || XC.loadoutType != "emote" && p8.type == this.loadout[XC.loadoutType]) {
          p0 = p8.outerDiv;
        }
      }
    }
    this.modalCustomizeList.html("");
    this.modalCustomizeList.append(p1);
    this.modalCustomizeList.scrollTop(0);
    if (XC.loadoutType == "emote") {
      this.equippedItems = [];
      for (let pf = 0; pf < this.loadout.emotes.length; pf++) {
        this.equippedItems.push({});
        const px = this.loadout.emotes[pf];
        if (w[px]) {
          const py = "url(" + Q.getSvgFromGameType(px) + ")";
          const pg = Mi(pf);
          this.updateSlotData(pg, py, px);
        }
      }
    }
    this.selectableSlots = j(".customize-list-item");
    this.droppableSlots = j(".customize-col");
    this.highlightedSlots = this.droppableSlots.siblings(".ui-emote-hl");
    this.highlightOpacityMin = 0.4;
    this.itemSelected = false;
    this.setItemListeners(XC.loadoutType);
    this.setCategoryAlerts();
    this.deselectItem();
    if (p0 != "") {
      this.selectItem(p0);
      if (XC.loadoutType == "crosshair") {
        this.setSelectedCrosshair();
      }
      this.modalCustomizeItemName.click();
    }
    if (k.browser == "edge") {
      if (XC.loadoutType == "crosshair") {
        const pQ = function (pZ, pq) {
          const pM = pZ.height() + parseInt(pZ.css("padding-top")) + parseInt(pZ.css("padding-bottom"));
          pq.css("height", pM);
        };
        pQ(j("#modal-customize-body"), j("#modal-content-left").find(".modal-disabled"));
        pQ(j("#modal-content-right-crosshair"), j("#modal-content-right-crosshair").find(".modal-disabled"));
        j(".modal-disabled").css("display", "block");
      } else {
        j(".modal-disabled").css("display", "none");
      }
    }
    this.onResize();
  }
  setCategoryAlerts() {
    for (let p = 0; p < this.categories.length; p++) {
      const b = this.categories[p];
      const XT = this.localAckItems.filter(XY => {
        const XC = w[XY.type];
        return XC && XC.type == b.gameType;
      });
      j(".modal-customize-cat[data-idx='" + p + "']").find(".account-alert-cat").css("display", XT.length > 0 ? "block" : "none");
    }
  }
  setEmoteDraggable(p, b) {
    p.on("dragstart", function (XT) {
      if (!j(this).hasClass("customize-list-item-locked") && (b.selectItem(j(this), false), k.browser != "edge")) {
        const XY = document.createElement("img");
        XY.src = b.selectedItem.img ? b.selectedItem.img.replace("url(", "").replace(")", "").replace(/\'/gi, "") : "";
        XT.originalEvent?.dataTransfer?.setDragImage(XY, 64, 64);
      }
    });
  }
  setSelectedCrosshair() {
    const p = this.loadout.crosshair;
    j("#customize-crosshair-selected").find(".customize-item-image").css({
      "background-image": Ge.getCursorURL(p)
    });
    Ge.setElemCrosshair(j("#customize-crosshair-selected"), p);
  }
}
const fo = "Survivr Pass 1";
const wo = "Top 10 in solos";
const go = "Top 8 in duos";
const So = "Top 5 in squads";
const yo = "Kill enemies";
const xo = "Kill enemies";
const zo = "Damage enemies";
const bo = "Damage enemies";
const ko = "Survived time";
const vo = "9mm damage";
const _o = "7.62mm damage";
const Io = "5.56mm damage";
const Mo = "12 gauge damage";
const To = "Grenade damage";
const Po = "Melee damage";
const Co = "Use healing items";
const Do = "Use adrenaline items";
const Lo = "Unlock air drops";
const Ao = "Destroy crates";
const Ro = "Destroy toilets";
const No = "Destroy furniture";
const Eo = "Destroy barrels";
const Oo = "Destroy lockers";
const Bo = "Destroy pots";
const qo = "Destroy soda machines";
const jo = "Kill enemies at: club";
const Fo = {
  "word-order": "svo",
  "index-create-account": "Create Account",
  "index-create-account-prompt-1": "Log in to access this feature!",
  "index-set-account-name": "Set your account name",
  "index-enter-name": "Enter name",
  "index-finish": "Finish",
  "index-reset-stats": "Reset Stats",
  "index-reset-stats-desc": "Enter \"RESET STATS\" to reset your stats:",
  "index-reset-stats-desc-2": "(This does not reset pass progress.)",
  "index-delete-account": "Delete Account",
  "index-delete-account-desc": "Enter \"DELETE\" to delete your account:",
  "index-confirm": "Confirm",
  "index-customize-avatar": "Customize Avatar",
  "index-done": "Done",
  "index-account": "Account",
  "index-log-in-with": "Log in with",
  "index-google": "Google",
  "index-twitch": "Twitch",
  "index-discord": "Discord",
  "index-my-stats": "My Stats",
  "index-link-account": "Link Account",
  "index-log-out": "Log Out",
  "index-change-avatar": "Change Avatar",
  "index-change-account-name": "Change Account Name",
  "index-back": "Back",
  "index-link-account-to": "Link account to",
  "index-log-in-desc": "Log In / Create Account",
  "index-logging-in": "Logging in",
  "index-leaderboards": "Leaderboards",
  "index-slogan": "2d Battle Royale",
  "index-region": "Region",
  "index-local": "Local",
  "index-north-america": "North America",
  "index-europe": "Europe",
  "index-asia": "Asia",
  "index-south-america": "South America",
  "index-korea": "South Korea",
  "index-players": "players",
  "index-play-solo": "Play Solo",
  "index-play-duo": "Play Duo",
  "index-play-squad": "Play Squad",
  "index-join-team": "Join Team",
  "index-create-team": "Create Team",
  "index-leave-team": "Leave Team",
  "index-joining-team": "Joining Team",
  "index-creating-team": "Creating Team",
  "index-invite-link": "Invite link",
  "index-invite-code": "Invite code",
  "index-join-team-help": "Got a team link or code? Paste it here:",
  "index-solo": "Solo",
  "index-duo": "Duo",
  "index-squad": "Squad",
  "index-auto-fill": "Auto Fill",
  "index-no-fill": "No Fill",
  "index-waiting-for-leader": "Waiting for leader to start game",
  "index-joining-game": "Joining game",
  "index-game-in-progress": "Game in progress",
  "index-play": "Play",
  "index-customize-loadout": "Customize Emotes",
  "index-twitter-follow": "Twitter Follow",
  "index-youtube-subscribe": "YouTube Subscribe",
  "index-facebook-like": "Facebook Like",
  "index-featured-youtuber": "Featured YouTuber",
  "index-streaming-live": "Streaming Live!",
  "index-viewer": "viewer",
  "index-viewers": "viewers",
  "index-settings": "Settings",
  "index-high-resolution": "High resolution (check to increase visual quality)",
  "index-screen-shake": "Screen shake",
  "index-anon-player-names": "Anonymize player names",
  "index-master-volume": "Master Volume",
  "index-sfx-volume": "SFX Volume",
  "index-music-volume": "Music Volume",
  "index-mobile-announce": "Now available on mobile!",
  "index-mobile-tooltip": "Visit <span>survev.io</span> on your mobile device to play on the go!",
  "index-version": "ver",
  "index-privacy": "privacy",
  "index-attributions": "attributions",
  "index-team-is-full": "Team is full!",
  "index-team-kicked": "You were kicked from the team!",
  "index-failed-joining-team": "Failed joining team.",
  "index-failed-creating-team": "Failed creating team.",
  "index-failed-finding-game": "Failed finding game.",
  "index-failed-joining-game": "Failed joining game.",
  "index-lost-connection": "Lost connection to team.",
  "index-host-closed": "Host closed the connection.",
  "index-invalid-protocol": "Old client version.",
  "index-view-more": "View More",
  "index-back-to-main": "Back to Main Menu",
  "index-most-kills": "Most kills",
  "index-total-kills": "Total kills",
  "index-total-wins": "Total wins",
  "index-top-5-percent": "Top 5 percent",
  "index-kill-death-ratio": "Kill-death ratio",
  "index-mode": "Mode",
  "index-for": "For",
  "index-today": "Today",
  "index-this-week": "This week",
  "index-all-time": "All time",
  "index-top-100": "TOP 100",
  "index-rank": "Rank",
  "index-player": "Player",
  "index-total-games": "Total Games",
  "index-controls": "Controls",
  "index-movement": "Movement",
  "index-movement-ctrl": "W, A, S, D",
  "index-aim": "Aim",
  "index-aim-ctrl": "Mouse",
  "index-punch": "Melee",
  "index-shoot": "Shoot",
  "index-shoot-ctrl": "Left-Click",
  "index-change-weapons": "Change Weapons",
  "index-change-weapons-ctrl": "1 through 4 or Scroll Wheel",
  "index-stow-weapons": "Stow Weapons (Melee Mode)",
  "index-stow-weapons-ctrl": "3 or E",
  "index-swap-weapons": "Swap to Previous Weapon",
  "index-swap-weapons-ctrl": "Q",
  "index-swap-weapon-slots": "Switch Gun Slots",
  "index-swap-weapon-slots-ctrl": "T or drag gun to other slot",
  "index-reload": "Reload",
  "index-reload-ctrl": "R",
  "index-scope-zoom": "Scope Zoom",
  "index-scope-zoom-ctrl": "Left-Click on Zoom",
  "index-pickup": "Pickup",
  "index-loot": "Loot",
  "index-revive": "Revive",
  "index-pickup-ctrl": "F",
  "index-use-medical": "Use Medical Item",
  "index-use-medical-ctrl": "Left-Click on Item or 7 through 0",
  "index-drop-item": "Drop Item",
  "index-drop-item-ctrl": "Right-Click on Item",
  "index-cancel-action": "Cancel Action",
  "index-cancel-action-ctrl": "X",
  "index-view-map": "View Map",
  "index-view-map-ctrl": "M or G",
  "index-toggle-minimap": "Toggle Minimap",
  "index-toggle-minimap-ctrl": "V",
  "index-use-ping": "Use Team Ping Wheel",
  "index-use-ping-ctrl": "Hold C, then hold Right-Click and drag mouse, then release Right-Click",
  "index-use-emote": "Use Emote Wheel",
  "index-use-emote-ctrl": "Hold Right-Click and drag mouse, then release Right-Click",
  "index-how-to-play": "How to Play",
  "index-tips-1-desc": "The goal of survev.io is to be the last player standing. You only live once per game - there is no respawn!",
  "index-tips-2": "2D PUBG",
  "index-tips-2-desc": "If you've played other battle royale games like PUBG, Fortnite or Apex Legends, then you're already halfway there! Think of survev.io as 2D PUBG (with slightly less desync and more chicken).",
  "index-tips-3": "Loot and Kill",
  "index-tips-3-desc": "You'll begin the game with no items other than a simple backpack. Move around the map to find loot: weapons, ammo, scopes, and medical items. Eliminate other players and you can take their loot!",
  "index-tips-4": "Red = Bad!",
  "index-tips-4-desc": "Players aren't the only thing that can hurt you. The deadly red zone will move in from the sides of the map and deal increasingly greater damage if you stand in it. Keep an eye on the map and stay safe.",
  "index-movement-ctrl-touch": "Left stick",
  "index-aim-ctrl-touch": "Right stick",
  "index-shoot-ctrl-touch": "Drag right stick outside stick border",
  "index-change-weapons-ctrl-touch": "Tap weapon slot",
  "index-reload-ctrl-touch": "Tap equipped ammo counter",
  "index-scope-zoom-ctrl-touch": "Tap zoom item",
  "index-pickup-ctrl-touch": "Tap interaction button or loot name",
  "index-use-medical-ctrl-touch": "Tap medical item",
  "index-drop-item-ctrl-touch": "Touch and hold item",
  "index-cancel-action-ctrl-touch": "Tap interaction button",
  "index-view-map-ctrl-touch": "Tap minimap",
  "index-use-ping-ctrl-touch": "View map and tap anywhere on map",
  "index-use-emote-ctrl-touch": "Tap surviv icon",
  "index-loadout": "Loadout",
  "loadout-title-outfit": "Outfit Skin",
  "loadout-title-melee": "Melee Skin",
  "loadout-title-emote": "Emotes",
  "loadout-title-heal": "Heal Particles",
  "loadout-title-boost": "Boost Particles",
  "loadout-title-crosshair": "Crosshair",
  "loadout-title-player_icon": "Player Icon",
  "loadout-newest": "Newest",
  "loadout-alpha": "Alpha",
  "loadout-rarity": "Rarity",
  "loadout-size": "Size",
  "loadout-stroked": "Stroked",
  "loadout-stock": "Stock",
  "loadout-common": "Common",
  "loadout-uncommon": "Uncommon",
  "loadout-rare": "Rare",
  "loadout-epic": "Epic",
  "loadout-mythic": "Mythic",
  "loadout-acquired": "Acquired",
  "loadout-category": "Category",
  "loadout-standard-issue": "Standard Issue",
  "loadout-new-account": "Account Created",
  "quest-login-prompt": "Log in to get quests!",
  "quest-refresh-prompt": "Get a new quest?",
  pass_survivr1: fo,
  quest_top_solo: wo,
  quest_top_duo: go,
  quest_top_squad: So,
  quest_kills: yo,
  quest_kills_hard: xo,
  quest_damage: zo,
  quest_damage_hard: bo,
  quest_survived: ko,
  quest_damage_9mm: vo,
  quest_damage_762mm: _o,
  quest_damage_556mm: Io,
  quest_damage_12gauge: Mo,
  quest_damage_grenade: To,
  quest_damage_melee: Po,
  quest_heal: Co,
  quest_boost: Do,
  quest_airdrop: Lo,
  quest_crates: Ao,
  quest_toilets: Ro,
  quest_furniture: No,
  quest_barrels: Eo,
  quest_lockers: Oo,
  quest_pots: Bo,
  quest_vending: qo,
  quest_club_kills: jo,
  "game-alive": "Alive",
  "game-reloading": "Reloading",
  "game-use": "Use",
  "game-using": "Using",
  "game-reviving": "Reviving",
  "game-revive-teammate": "Revive Teammate",
  "game-revive-self": "Revive Self",
  "game-equip": "Equip",
  "game-cancel": "Cancel",
  "game-open-door": "Open Door",
  "game-close-door": "Close Door",
  "game-unlock": "Unlock",
  "game-You": "You",
  "game-you": "you",
  "game-themselves": "themselves",
  "game-yourself": "yourself",
  "game-you-died": "died",
  "game-player-died": "died",
  "game-with": "with",
  "game-knocked-out": "knocked out",
  "game-killed": "killed",
  "game-finally-killed": "finally killed",
  "game-finally-bled-out": "finally bled out",
  "game-died-outside": "died outside the safe zone",
  "game-the-red-zone": "The red zone",
  "game-crushed": "crushed",
  "game-the-air-drop": "The air drop",
  "game-the-air-strike": "The air strike",
  "game-an-air-strike": "an air strike",
  "game-waiting-for-players": "Waiting for players",
  "game-spectating": "Spectating",
  "game-red-zone-advances": "Red zone advances in",
  "game-red-zone-advancing": "Red zone advancing! Move to the safe zone",
  "game-seconds": "seconds",
  "game-minutes": "minutes",
  "game-minute": "minute",
  "game-m": "m",
  "game-s": "s",
  "game-not-enough-space": "Not enough space!",
  "game-item-already-owned": "Item already owned!",
  "game-item-already-equipped": "Item already equipped!",
  "game-better-item-equipped": "Better item equipped!",
  "game-gun-cannot-fire": "Gun cannot be fired here!",
  "game-waiting-for-new-leader": "Waiting for new leader",
  "game-waiting-for-hunted": "Searching for the Hunted",
  "game-play-new-game": "Play New Game",
  "game-spectate": "Spectate",
  "game-full-screen": "Full Screen",
  "game-aim-line": "Aim Line",
  "game-sound": "Sound",
  "game-quit-game": "Quit Game",
  "game-return-to-game": "Return to Game",
  "game-hide-match-stats": "Hide Match Stats",
  "game-view-match-stats": "View Match Stats",
  "game-previous-teammate": "Previous Teammate",
  "game-next-teammate": "Next Teammate",
  "game-spectate-previous": "Previous Player",
  "game-spectate-next": "Next Player",
  "game-leave-game": "Leave Game",
  "game-your-results": "Your Results",
  "game-chicken": "Winner winner chicken dinner!",
  "game-turkey": "Winner winner turkey dinner!",
  "game-won-the-game": "won the game.",
  "game-team-eliminated": "Your team was eliminated.",
  "game-solo-rank": "Solo Rank",
  "game-duo-rank": "Duo Rank",
  "game-squad-rank": "Squad Rank",
  "game-rank": "Rank",
  "game-team-rank": "Team Rank",
  "game-team-kills": "Team Kills",
  "game-kill": "Kill",
  "game-kills": "Kills",
  "game-damage-dealt": "Damage Dealt",
  "game-damage-taken": "Damage Taken",
  "game-survived": "Survived",
  "game-backpack00": "Pouch",
  "game-backpack01": "Small Pack",
  "game-backpack02": "Regular Pack",
  "game-backpack03": "Military Pack",
  "game-bandage": "Bandage",
  "game-bandage-tooltip": "Left-click to restore 15 health.",
  "game-healing-tooltip": "Cannot heal past 75 health.",
  "game-healthkit": "Med Kit",
  "game-healthkit-tooltip": "Left-click to restore 100 health.",
  "game-soda": "Soda",
  "game-soda-tooltip": "Left-click to boost adrenaline by 25.",
  "game-adrenaline-tooltip": "Adrenaline restores health over time.",
  "game-painkiller": "Pills",
  "game-painkiller-tooltip": "Left-click to boost adrenaline by 50.",
  "game-9mm": "9mm",
  "game-9mm-tooltip": "Ammo for M9, G18C, M93R, P30L, MP5, MAC-10, UMP9, CZ-3A1 and Vector.",
  "game-12gauge": "12 gauge",
  "game-12gauge-tooltip": "Ammo for M870, M1100, SPAS-12, Saiga-12, USAS-12, Super 90 and MP220.",
  "game-762mm": "7.62mm",
  "game-762mm-tooltip": "Ammo for AK-47, SCAR-H, M39, Mosin, SV-98, M1, BAR, AN-94, PKP, Groza, OT-38 and DP-28.",
  "game-556mm": "5.56mm",
  "game-556mm-tooltip": "Ammo for FAMAS, M416, M4A1-S, QBB-97, Mk 12, Scout Elite, and M249.",
  "game-50AE": ".50 AE",
  "game-50AE-tooltip": "Ammo for DEagle 50.",
  "game-308sub": ".308 Subsonic",
  "game-308sub-tooltip": "Ammo for AWM-S.",
  "game-flare": "Flare",
  "game-flare-tooltip": "Ammo for Flare Gun.",
  "game-45acp": ".45 ACP",
  "game-45acp-tooltip": "Ammo for M1911, M1A1, Model 94, Vector and Peacemaker.",
  "game-chest01": "Level 1 Vest",
  "game-chest02": "Level 2 Vest",
  "game-chest03": "Level 3 Vest",
  "game-chest04": "Level 4 Vest",
  "game-helmet01": "Level 1 Helmet",
  "game-helmet02": "Level 2 Helmet",
  "game-helmet03": "Level 3 Helmet",
  "game-helmet03_leader": "Commander Helmet",
  "game-helmet03_forest": "Shishigami no Kabuto",
  "game-helmet03_moon": "Tsukuyomi no Kabuto",
  "game-helmet03_lt": "Lieutenant Helmet",
  "game-helmet03_lt_aged": "Lieutenant Helmet",
  "game-helmet03_potato": "K-pot-ato",
  "game-helmet03_marksman": "Marksman Helmet",
  "game-helmet04_lone_survivr": "Lone Survivr Helmet",
  "game-helmet04_leader": "Commander Helmet",
  "game-1xscope": "1x Scope",
  "game-2xscope": "2x Scope",
  "game-4xscope": "4x Scope",
  "game-8xscope": "8x Scope",
  "game-15xscope": "15x Scope",
  "game-level-1": "Lvl. 1",
  "game-level-2": "Lvl. 2",
  "game-level-3": "Lvl. 3",
  "game-level-4": "Lvl. 4",
  "game-outfitBase": "Basic Outfit",
  "game-outfitRoyalFortune": "Royal Fortune",
  "game-outfitKeyLime": "Key Lime",
  "game-outfitCobaltShell": "Cobalt Shell",
  "game-outfitCarbonFiber": "Carbon Fiber",
  "game-outfitDarkGloves": "The Professional",
  "game-outfitDarkShirt": "The Semi-Pro",
  "game-outfitGhillie": "Ghillie Suit",
  "game-outfitCamo": "Forest Camo",
  "game-outfitRed": "Target Practice",
  "game-outfitWhite": "Arctic Avenger",
  "game-outfitWoodland": "Woodland Combat",
  "game-outfitJester": "Jester's Folly",
  "game-outfitPrisoner": "The New Black",
  "game-outfitCasanova": "Casanova Silks",
  "game-outfitKhaki": "The Initiative",
  "game-outfitCoral": "Coral Guise",
  "game-outfitAqua": "Aquatic Avenger",
  "game-outfitIslander": "Island Time",
  "game-outfitMeteor": "Falling Star",
  "game-outfitHeaven": "Celestial Garb",
  "game-outfitWaterElem": "Water Elemental",
  "game-outfitVerde": "Poncho Verde",
  "game-outfitLumber": "Woodcutter's Wrap",
  "game-outfitImperial": "Imperial Seal",
  "game-outfitPineapple": "Valiant Pineapple",
  "game-outfitTarkhany": "Tarkhany Regal",
  "game-outfitDesertCamo": "Desert Camo",
  "game-outfitDesertGhillie": "Desert Ghillie",
  "game-outfitElf": "Tallow's Little Helper",
  "game-outfitSpetsnaz": "Siberian Assault",
  "game-outfitDarkGhillie": "Incursion Ghillie",
  "game-outfitRedLeaderAged": "Red Victorious",
  "game-outfitBlueLeaderAged": "Stifled Blue",
  "game-outfitWoodsCloak": "Greencloak",
  "game-outfitSpringGhillie": "Vernal Ghillie",
  "game-outfitNoir": "Neo Noir",
  "game-outfitSummerGhillie": "Verdant Ghillie",
  "game-outfitWheat": "Splintered Wheat",
  "game-outfitDev": "Developer Swag",
  "game-outfitMod": "Discord Moderatr",
  "game-outfitParma": "PARMA Jumpsuit",
  "game-outfitParmaPrestige": "The Core Jumpsuit",
  "game-outfitTurkey": "Fowl Facade",
  "game-outfitBarrel": "Fish in a Barrel",
  "game-outfitWoodBarrel": "Fish in a Wood Barrel",
  "game-outfitStone": "Stoneskin",
  "game-outfitTree": "Barkskin",
  "game-outfitTreeSpooky": "Spoopy Barkskin",
  "game-outfitStump": "Dead Wood",
  "game-outfitBush": "Bush Wookie",
  "game-outfitLeafPile": "Sneaky Leaf",
  "game-outfitCrate": "Guy in a Box",
  "game-outfitTable": "Yard Sale",
  "game-outfitSoviet": "Comrade in a Box",
  "game-outfitAirdrop": "Hot Drop",
  "game-outfitOven": "Half-baked",
  "game-outfitRefrigerator": "Cold Fusion",
  "game-outfitVending": "OKAMI Cola Machine",
  "game-outfitPumpkin": "Pumpkin Head",
  "game-outfitWoodpile": "Deader Wood",
  "game-outfitToilet": "Size Two",
  "game-outfitBushRiver": "Lilyveil",
  "game-outfitCrab": "Crabby Camo",
  "game-outfitStumpAxe": "Axe-querade",
  "game-fists": "Fists",
  "game-knuckles_rusted": "Knuckles Rusted",
  "game-hud-knuckles_rusted": "Knuckles",
  "game-knuckles_heroic": "Knuckles Heroic",
  "game-hud-knuckles_heroic": "Knuckles",
  "game-karambit_rugged": "Karambit Rugged",
  "game-hud-karambit_rugged": "Karambit",
  "game-karambit_prismatic": "Karambit Prismatic",
  "game-hud-karambit_prismatic": "Karambit",
  "game-karambit_drowned": "Karambit Drowned",
  "game-hud-karambit_drowned": "Karambit",
  "game-bayonet_rugged": "Bayonet Rugged",
  "game-hud-bayonet_rugged": "Bayonet",
  "game-bayonet_woodland": "Bayonet Woodland",
  "game-hud-bayonet_woodland": "Bayonet",
  "game-huntsman_rugged": "Huntsman Rugged",
  "game-hud-huntsman_rugged": "Huntsman",
  "game-huntsman_burnished": "Huntsman Burnished",
  "game-hud-huntsman_burnished": "Huntsman",
  "game-bowie_vintage": "Bowie Vintage",
  "game-hud-bowie_vintage": "Bowie",
  "game-bowie_frontier": "Bowie Frontier",
  "game-hud-bowie_frontier": "Bowie",
  "game-woodaxe": "Wood Axe",
  "game-woodaxe_bloody": "Wood Axe Bloodstained",
  "game-hud-woodaxe_bloody": "Wood Axe",
  "game-fireaxe": "Fire Axe",
  "game-katana": "Katana",
  "game-katana_rusted": "Katana Rusted",
  "game-hud-katana_rusted": "Katana",
  "game-katana_orchid": "Katana Orchid",
  "game-hud-katana_orchid": "Katana",
  "game-naginata": "Naginata",
  "game-hud-naginata": "Naginata",
  "game-machete_taiga": "Machete Taiga",
  "game-hud-machete_taiga": "Machete",
  "game-kukri_trad": "Tallow's Kukri",
  "game-hud-kukri_trad": "Kukri",
  "game-bonesaw_rusted": "Bonesaw Rusted",
  "game-hud-bonesaw_rusted": "Bonesaw",
  "game-crowbar_recon": "Crowbar Carbon",
  "game-hud-crowbar_recon": "Crowbar",
  "game-stonehammer": "Stone Hammer",
  "game-sledgehammer": "Sledgehammer",
  "game-hook": "Hook",
  "game-pan": "Pan",
  "game-crowbar_scout": "Scouting Crowbar",
  "game-hud-crowbar_scout": "Crowbar",
  "game-bonesaw_healer": "The Separator",
  "game-hud-bonesaw_healer": "Bonesaw",
  "game-kukri_sniper": "Marksman's Recurve",
  "game-hud-kukri_sniper": "Kukri",
  "game-katana_demo": "Hakai no Katana",
  "game-hud-katana_demo": "Katana",
  "game-spade_assault": "Trench Spade",
  "game-hud-spade_assault": "Spade",
  "game-warhammer_tank": "Panzerhammer",
  "game-hud-warhammer_tank": "War Hammer",
  "game-ak47": "AK-47",
  "game-scar": "SCAR-H",
  "game-an94": "AN-94",
  "game-groza": "Groza",
  "game-grozas": "Groza-S",
  "game-dp28": "DP-28",
  "game-mosin": "Mosin-Nagant",
  "game-sv98": "SV-98",
  "game-m39": "M39 EMR",
  "game-garand": "M1 Garand",
  "game-svd": "SVD-63",
  "game-blr": "BLR 81",
  "game-mp5": "MP5",
  "game-mac10": "MAC-10",
  "game-ump9": "UMP9",
  "game-vector": "Vector",
  "game-vector45": "Vector",
  "game-scorpion": "CZ-3A1",
  "game-vss": "VSS",
  "game-m870": "M870",
  "game-m1100": "M1100",
  "game-m1014": "Super 90",
  "game-mp220": "MP220",
  "game-usas": "USAS-12",
  "game-saiga": "Saiga-12",
  "game-spas12": "SPAS-12",
  "game-m9": "M9",
  "game-m9_dual": "Dual M9",
  "game-hud-m9_dual": "M9",
  "game-m9_cursed": "M9 Cursed",
  "game-m93r": "M93R",
  "game-m93r_dual": "Dual M93R",
  "game-hud-m93r_dual": "M93R",
  "game-glock": "G18C",
  "game-glock_dual": "Dual G18C",
  "game-hud-glock_dual": "G18C",
  "game-p30l": "P30L",
  "game-p30l_dual": "Dual P30L",
  "game-ot38": "OT-38",
  "game-ot38_dual": "Dual OT-38",
  "game-hud-ot38_dual": "OT-38",
  "game-ots38": "OTs-38",
  "game-ots38_dual": "Dual OTs-38",
  "game-hud-ots38_dual": "OTs-38",
  "game-deagle": "DEagle 50",
  "game-deagle_dual": "Dual DEagle 50",
  "game-hud-deagle_dual": "DEagle 50",
  "game-flare_gun": "Flare Gun",
  "game-flare_gun_dual": "Dual Flare Gun",
  "game-hud-flare_gun_dual": "Flare Gun",
  "game-famas": "FAMAS",
  "game-hk416": "M416",
  "game-m4a1": "M4A1-S",
  "game-mk12": "Mk 12 SPR",
  "game-m249": "M249",
  "game-qbb97": "QBB-97",
  "game-scout_elite": "Scout Elite",
  "game-l86": "L86A2",
  "game-awc": "AWM-S",
  "game-scarssr": "Mk 20 SSR",
  "game-model94": "Model 94",
  "game-colt45": "Peacemaker",
  "game-colt45_dual": "Dual Peacemaker",
  "game-hud-colt45_dual": "Peacemaker",
  "game-mkg45": "Mk45G",
  "game-m1911": "M1911",
  "game-m1911_dual": "Dual M1911",
  "game-hud-m1911_dual": "M1911",
  "game-m1a1": "M1A1",
  "game-bar": "BAR M1918",
  "game-pkp": "PKP Pecheneg",
  "game-frag": "Frag Grenade",
  "game-hud-frag": "Frag",
  "game-smoke": "Smoke Grenade",
  "game-hud-smoke": "Smoke",
  "game-mirv": "MIRV Grenade",
  "game-hud-mirv": "MIRV",
  "game-mirv_mini": "MIRV Grenade",
  "game-martyr_nade": "Martyrdom",
  "game-strobe": "Strobe",
  "game-hud-strobe": "Strobe",
  "game-snowball": "Snowball",
  "game-hud-snowball": "Snowball",
  "game-snowball_heavy": "Snowball",
  "game-potato": "Potato",
  "game-hud-potato": "Potato",
  "game-potato_heavy": "Potato",
  "game-potato_cannon": "Potato Cannon",
  "game-potato_cannonball": "Potato Cannon",
  "game-potato_smg": "Spud Gun",
  "game-potato_smgshot": "Spud Gun",
  "game-bugle": "Bugle",
  "game-barrel_01": "a barrel",
  "game-barrel_01b": "a barrel",
  "game-silo_01": "a silo",
  "game-oven_01": "an oven",
  "game-control_panel_01": "Control Panel",
  "game-control_panel_02": "Control Panel",
  "game-control_panel_03": "a computer terminal",
  "game-control_panel_04": "a computer terminal",
  "game-control_panel_06": "a computer terminal",
  "game-power_box_01": "a power box",
  "game-airdrop_crate_01": "Air Drop",
  "game-airdrop_crate_02": "Air Drop",
  "game-stove_01": "a stove",
  "game-grill_01": "a grill",
  "game-propane_01": "a propane tank",
  "index-play-50v50": "Play 50v50",
  "index-50v50": "50v50",
  "game-red-team": "Red Team",
  "game-blue-team": "Blue Team",
  "game-red-leader": "Red Commander",
  "game-blue-leader": "Blue Commander",
  "game-is-down": "is down",
  "game-is-dead": "is dead",
  "game-promoted-to": "promoted to",
  "game-youve-been-promoted-to": "You've been promoted to",
  "game-leader": "Commander",
  "game-lieutenant": "Lieutenant",
  "game-medic": "Medic",
  "game-marksman": "Marksman",
  "game-recon": "Recon",
  "game-grenadier": "Grenadier",
  "game-bugler": "Bugler",
  "game-kill_leader": "Kill Leader",
  "game-the_hunted": "The Hunted",
  "game-last_man": "Lone Survivr",
  "game-woods_king": "The Woods King",
  "game-healer": "Medic",
  "game-demo": "Demo",
  "game-tank": "Tank",
  "game-scout": "Scout",
  "game-sniper": "Sniper",
  "game-assault": "Assault",
  "game-select-class": "SELECT A CLASS",
  "game-enter-game": "ENTER GAME",
  "game-leadership": "Leadership",
  "game-leadership-desc": "Max adrenaline.</br>Increased size.",
  "game-firepower": "Firepower",
  "game-firepower-desc": "High-capacity magazines.",
  "game-gotw": "Gift of the Woods",
  "game-gotw-desc": "Restore health over time.</br>Increased size.",
  "game-windwalk": "Windwalk",
  "game-windwalk-desc": "When taking fire, gain a short burst of speed.",
  "game-rare_potato": "Rare Potato",
  "game-rare_potato-desc": "Always rotate to a high quality weapon.",
  "game-aoe_heal": "Mass Medicate",
  "game-aoe_heal-desc": "Reviving and using medical items affects all nearby players.",
  "game-endless_ammo": "Endless Ammo",
  "game-endless_ammo-desc": "Guns always reload to full.",
  "game-steelskin": "Cast Ironskin",
  "game-steelskin-desc": "Take reduced damage and reflect enemy bullets.</br>Increased size.",
  "game-splinter": "Splinter Rounds",
  "game-splinter-desc": "Rounds fragment into three less powerful bullets.",
  "game-small_arms": "Small Arms",
  "game-small_arms-desc": "Move faster with weapons deployed.</br>Decreased size.",
  "game-takedown": "Takedown",
  "game-takedown-desc": "Kills grant health, boost and a short burst of speed.",
  "game-field_medic": "Combat Medic",
  "game-field_medic-desc": "Move quickly while healing.",
  "game-tree_climbing": "One With Nature",
  "game-tree_climbing-desc": "Move through trees. Move faster in water.",
  "game-scavenger": "Scavenger",
  "game-scavenger-desc": "Obstacles drop additional items when destroyed.",
  "game-scavenger_adv": "Master Scavenger",
  "game-scavenger_adv-desc": "Obstacles drop additional high-quality items when destroyed.",
  "game-hunted": "The Hunted",
  "game-hunted-desc": "Your location is revealed to all enemies.",
  "game-chambered": "One In The Chamber",
  "game-chambered-desc": "First and last round in each magazine deal bonus damage.</br>Does not apply to shotguns.",
  "game-martyrdom": "Martyrdom",
  "game-martyrdom-desc": "Release several live grenades upon death.",
  "game-targeting": "High-Value Targets",
  "game-targeting-desc": "Bullets deal bonus damage to players with perks.",
  "game-bonus_45": ".45 In The Chamber",
  "game-bonus_45-desc": ".45 ACP bullets deal bonus damage.",
  "game-broken_arrow": "Broken Arrow",
  "game-broken_arrow-desc": "Air strikes call in two additional fighters.",
  "game-fabricate": "Fabricate",
  "game-fabricate-desc": "Periodically fill your pack with frag grenades.",
  "game-self_revive": "Revivify",
  "game-self_revive-desc": "You can revive yourself when downed.",
  "game-bonus_9mm": "9mm Overpressure",
  "game-bonus_9mm-desc": "9mm bullets have increased speed, range, damage and spread.",
  "game-flak_jacket": "Flak Jacket",
  "game-flak_jacket-desc": "Greatly reduces damage from explosions and shrapnel.",
  "game-explosive": "Explosive Rounds",
  "game-explosive-desc": "Bullets explode on impact.",
  "game-bonus_assault": "Hollow-points",
  "game-bonus_assault-desc": "All your bullets deal bonus damage.",
  "game-inspiration": "Inspiration",
  "game-inspiration-desc": "Your bugle call grants nearby allies a short burst of speed.",
  "game-final_bugle": "Last Breath",
  "game-final_bugle-desc": "When you die, nearby allies are bloodlusted for a short period of time.",
  "game-halloween_mystery": "Trick or Treat?",
  "game-halloween_mystery-desc": "Could be either.",
  "game-trick_nothing": "One With Nothing",
  "game-trick_nothing-desc": "Tricked! This perk does absolutely nothing!",
  "game-trick_size": "Feedership",
  "game-trick_size-desc": "Tricked! You ate too much chicken and grew in size!",
  "game-trick_m9": "Dev Troll Special",
  "game-trick_m9-desc": "Tricked! You've been cursed with a developer 'treat'!",
  "game-trick_chatty": "Gabby Ghost",
  "game-trick_chatty-desc": "Tricked! You're emoting randomly!",
  "game-trick_drain": "That Sucks",
  "game-trick_drain-desc": "Tricked! You're bleeding very, very, VERY slowly!",
  "game-treat_9mm": "Candy Corn",
  "game-treat_9mm-desc": "Treat! 9mm bullets are darker and deadlier.",
  "game-treat_12g": "Red Jelly Beans",
  "game-treat_12g-desc": "Treat! 12 gauge pellets are darker and deadlier.",
  "game-treat_556": "Sour Apple Belt",
  "game-treat_556-desc": "Treat! 5.56mm bullets are darker and deadlier.",
  "game-treat_762": "Blueberry Taffy",
  "game-treat_762-desc": "Treat! 7.62mm bullets are darker and deadlier.",
  "game-treat_super": "Full Size OKAMI Bar",
  "game-treat_super-desc": "Super Treat! ALL your bullets are darker and deadlier.",
  "game-turkey_shoot": "Perky Shoot",
  "game-turkey_shoot-desc": "Gobble, gobble!",
  "game-xp-drop-desc": "Pass XP",
  "game-xp_book_tallow": "Tallow's Journal",
  "game-xp_book_greene": "Greene's Infinite Wisdom",
  "game-xp_book_parma": "The PARMA Papers",
  "game-xp_book_nevelskoy": "The Nevelskoy Report",
  "game-xp_book_rinzo": "RinzÅ's Log",
  "game-xp_book_kuga": "Memoirs of Kuga KairyÅ«",
  "game-xp_glasses": "Lenz's Spectacles",
  "game-xp_compass": "AmÃ©lie's True Compass",
  "game-xp_stump": "Ravenstone's Bloody Stump",
  "game-xp_bone": "Bone of Gordon",
  "game-xp_donut": "Cake Donut"
};
function Go(p, b) {
  const XT = {
    url: p,
    type: "GET"
  };
  j.ajax(XT).done(XY => {
    b(null, XY);
  }).fail(XY => {
    b(XY);
  });
}
const Pi = {
  da: "Dansk",
  de: "Deutsch",
  en: "English",
  es: "EspaÃ±ol",
  fr: "FranÃ§ais",
  it: "Italiano",
  nl: "Nederlands",
  pl: "Polski",
  pt: "PortuguÃªs",
  ru: "Ð ÑƒÑÑÐºÐ¸Ð¹",
  sv: "Svenska",
  vn: "Tiáº¿ng Viá»‡t",
  tr: "TÃ¼rkÃ§e",
  jp: "æ—¥æœ¬èªž",
  ko: "í•œêµ­ì–´",
  th: "à¸ à¸²à¸©à¸²à¹„à¸—à¸¢",
  "zh-cn": "ä¸­æ–‡ç®€ä½“",
  "zh-tw": "ä¸­æ–‡ç¹é«”"
};
class Vo {
  acceptedLocales = Object.keys(Pi);
  translations = {
    en: Fo
  };
  locale = "en";
  constructor() {
    this.locale = "en";
  }
  detectLocale() {
    let p = (navigator.language || navigator.userLanguage).toLowerCase();
    const b = ["pt", "de", "es", "fr", "ko", "ru", "en"];
    for (let XT = 0; XT < b.length; XT++) {
      if (p.includes(b[XT])) {
        p = b[XT];
        break;
      }
    }
    for (let XY = 0; XY < this.acceptedLocales.length; XY++) {
      if (p.includes(this.acceptedLocales[XY])) {
        return this.acceptedLocales[XY];
      }
    }
    return "en";
  }
  setLocale(p) {
    const b = this.acceptedLocales.includes(p) ? p : "en";
    if (b != this.locale) {
      if (this.translations[p] === undefined) {
        Go("/l10n/" + p + ".json", (XT, XY) => {
          if (XT) {
            console.error("Failed loading translation data for locale " + p);
            return;
          }
          this.translations[p] = XY;
          this.setLocale(p);
        });
      } else {
        this.locale = b;
        this.localizeIndex();
      }
    }
  }
  getLocale() {
    return this.locale;
  }
  translate(p) {
    return this.translations[this.locale][p] || this.translations.en[p] || "";
  }
  localizeIndex() {
    j("*[data-l10n]").each((p, b) => {
      const XT = j(b);
      let XY = XT.attr("data-l10n");
      if (XT.hasClass("help-control") && k.touch) {
        XY += "-touch";
      }
      const XC = this.translate(XY);
      if (XC) {
        if (XT.attr("label")) {
          XT.attr("label", XC);
        } else {
          XT.html(XC);
          if (XT.attr("data-label")) {
            XT.attr("data-label", XC);
          }
        }
      }
    });
  }
  populateLanguageSelect() {
    const p = j(".language-select");
    p.empty();
    for (let b = 0; b < this.acceptedLocales.length; b++) {
      const XT = this.acceptedLocales[b];
      const XY = Pi[XT];
      p.append(j("<option>", {
        value: XT,
        text: XY
      }));
    }
  }
}
function Ci(p, b, XT, XY) {
  const XC = j("<div/>", {
    class: "copy-toast",
    html: p
  });
  b.append(XC);
  XC.css({
    left: XY.pageX - parseInt(XC.css("width")) / 2,
    top: XT.offset().top
  });
  XC.animate({
    top: "-=25",
    opacity: 1
  }, {
    queue: false,
    duration: 300,
    complete: function () {
      j(this).fadeOut(250, function () {
        j(this).remove();
      });
    }
  });
}
function Uo(b, XT) {
  const XY = j("#start-menu");
  j("#btn-help").click(() => {
    const p2 = j("#start-help");
    XY.addClass("display-help");
    const p3 = XY.css("height");
    p2.css("display", "block");
    XY.animate({
      scrollTop: p3
    }, 1000);
    return false;
  });
  const XC = j("#team-mobile-link");
  const Xl = j("#team-mobile-link-desc");
  const Xd = j("#team-mobile-link-warning");
  const Xk = j("#team-link-input");
  const XU = j("#social-share-block");
  const XW = j("#news-block");
  j("#btn-join-team").click(() => {
    j("#server-warning").css("display", "none");
    Xk.val("");
    XC.css("display", "block");
    Xl.css("display", "block");
    Xd.css("display", "none");
    XY.css("display", "none");
    XW.css("display", "none");
    XU.css("display", "none");
    j("#right-column").css("display", "none");
    return false;
  });
  j("#btn-team-mobile-link-leave").click(() => {
    XC.css("display", "none");
    Xk.val("");
    XY.css("display", "block");
    XW.css("display", "block");
    XU.css("display", "block");
    j("#right-column").css("display", "block");
    return false;
  });
  j("#team-link-input").on("keypress", function (p2) {
    if ((p2.which || p2.keyCode) === 13) {
      j("#btn-team-mobile-link-join").trigger("click");
      j(this).blur();
    }
  });
  j("#player-name-input-solo").on("keypress", function (p2) {
    if ((p2.which || p2.keyCode) === 13) {
      j(this).blur();
    }
  });
  if (k.mobile && k.os != "ios") {
    j("#player-name-input-solo").on("focus", function () {
      if (k.isLandscape) {
        const p2 = k.screenHeight <= 282 ? 18 : 36;
        document.body.scrollTop = j(this).offset().top - p2;
      }
    });
    j("#player-name-input-solo").on("blur", () => {
      document.body.scrollTop = 0;
    });
  }
  const XD = j("#start-bottom-right");
  const XG = j("#start-top-left");
  const XF = j("#start-top-right");
  const XH = new de(j("#ui-modal-keybind"));
  XH.onShow(() => {
    XD.fadeOut(200);
    XF.fadeOut(200);
    j("#ui-modal-keybind-share").css("display", "none");
    j("#keybind-warning").css("display", "none");
    j("#ui-modal-keybind-list").css("height", "420px");
    j("#keybind-code-input").html("");
    XT.refresh();
  });
  XH.onHide(() => {
    XD.fadeIn(200);
    XF.fadeIn(200);
    XT.cancelBind();
  });
  j(".btn-keybind").click(() => {
    XH.show();
    return false;
  });
  j(".js-btn-keybind-share").click(() => {
    if (j("#ui-modal-keybind-share").css("display") == "block") {
      j("#ui-modal-keybind-share").css("display", "none");
      j("#ui-modal-keybind-list").css("height", "420px");
    } else {
      j("#ui-modal-keybind-share").css("display", "block");
      j("#ui-modal-keybind-list").css("height", "275px");
    }
  });
  j("#keybind-link, #keybind-copy").click(p2 => {
    Ci("Copied!", XH.selector, j("#keybind-link"), p2);
    const p3 = j("#keybind-link").html();
    Q.copyTextToClipboard(p3);
  });
  j("#btn-keybind-code-load").on("click", p2 => {
    const p3 = j("#keybind-code-input").val();
    j("#keybind-code-input").val("");
    const p4 = b.fromBase64(String(p3));
    j("#keybind-warning").css("display", p4 ? "none" : "block");
    if (p4) {
      Ci("Loaded!", XH.selector, j("#btn-keybind-code-load"), p2);
      b.saveBinds();
    }
    XT.refresh();
  });
  const p0 = new de(j("#modal-settings"));
  p0.onShow(() => {
    XD.fadeOut(200);
    XF.fadeOut(200);
  });
  p0.onHide(() => {
    XD.fadeIn(200);
    XF.fadeIn(200);
  });
  j(".btn-settings").click(() => {
    p0.show();
    return false;
  });
  j(".modal-settings-text").click(function (p2) {
    const p3 = j(this).siblings("input:checkbox");
    p3.prop("checked", !p3.is(":checked"));
    p3.trigger("change");
  });
  const p1 = new de(j("#modal-hamburger"));
  p1.onShow(() => {
    XG.fadeOut(200);
  });
  p1.onHide(() => {
    XG.fadeIn(200);
  });
  j("#btn-hamburger").click(() => {
    p1.show();
    return false;
  });
  j(".modal-body-text").click(function () {
    const p2 = j(this).siblings("input:checkbox");
    p2.prop("checked", !p2.is(":checked"));
    p2.trigger("change");
  });
  j("#force-refresh").click(() => {
    window.location.href = "/?t=" + Date.now();
  });
}
function Ho() {
  if (k.os == "ios") {
    if (k.model == "iphonex") {
      if (k.isLandscape) {
        j(".main-volume-slider").css("width", "90%");
      } else {
        j(".main-volume-slider").css("width", "");
      }
    } else if (!window.navigator.standalone) {
      if (k.isLandscape) {
        j("#start-main-center").attr("style", "");
        j("#modal-customize .modal-content").attr("style", "");
      } else {
        j("#modal-customize .modal-content").css({
          transform: "translate(-50%, -50%) scale(0.45)",
          top: "38%"
        });
      }
    }
  }
  if (k.tablet) {
    j("#featured-youtuber").remove();
    j(".btn-youtube").remove();
  }
  if (k.touch) {
    j(".btn-start-fullscreen").css("display", "none");
  } else {
    j(".btn-start-fullscreen").css("display", "block");
  }
  j(".btn-keybind").css("display", k.mobile ? "none" : "inline-block");
}
function Wo(p) {
  j("#team-hide-url").css("display", "none");
  if (p) {
    j("#start-bottom-middle").addClass("start-bottom-middle-tablet");
  }
}
const zt = {
  setupModals: Uo,
  onResize: Ho,
  applyMobileBrowserStyling: Wo
};
class $o {
  constructor(p, b, XT, XY, XC) {
    this.pixi = p;
    this.audioManager = b;
    this.config = XT;
    this.inputBinds = XY;
    this.account = XC;
  }
  active = false;
  initialized = false;
  canvasMode;
  camera;
  renderer;
  particleBarn;
  decalBarn;
  map;
  playerBarn;
  smokeBarn;
  objectCreator;
  debugDisplay;
  loadout;
  view;
  viewOld;
  cameraOffset = v.create(0, 0);
  q = 1;
  debugZoom = 1;
  useDebugZoom = false;
  outfitOld;
  animIdleTicker;
  animSeq;
  actionSeq;
  activeId = 98;
  activePlayer;
  init() {
    this.canvasMode = this.pixi.renderer.type == R.CANVAS;
    this.camera = new Ui();
    this.renderer = new ar(this, this.canvasMode);
    this.particleBarn = new Ji(this.renderer);
    this.decalBarn = new Yi();
    this.map = new Zi(this.decalBarn);
    this.playerBarn = new ir();
    this.smokeBarn = new rr();
    const p = {
      [X2.Player]: this.playerBarn.playerPool,
      [X2.Obstacle]: this.map.NmwMZ,
      [X2.Building]: this.map.nNUjss,
      [X2.Structure]: this.map.JCfHy,
      [X2.Decal]: this.decalBarn.decalPool,
      [X2.Smoke]: this.smokeBarn.LbSzdS
    };
    this.objectCreator = new Qi();
    for (const XT in p) {
      if (p.hasOwnProperty(XT)) {
        this.objectCreator.ACE(XT, p[XT]);
      }
    }
    this.debugDisplay = new r();
    const b = [this.map.display.ground, this.renderer.layers[0], this.renderer.ground, this.renderer.layers[1], this.renderer.layers[2], this.renderer.layers[3], this.debugDisplay];
    for (let XY = 0; XY < b.length; XY++) {
      const XC = b[XY];
      if (XC) {
        XC.interactiveChildren = false;
        this.pixi.stage.addChild(XC);
      }
    }
    this.loadout = le.defaultLoadout();
    this.setLoadout(this.loadout);
    this.view = "outfit";
    this.viewOld = this.view;
    this.outfitOld = this.loadout.outfit;
    this.map.loadMap({
      grassInset: 18,
      groundPatches: [],
      height: 720,
      mapName: "main",
      objects: [],
      places: [],
      rivers: [],
      seed: 218051654,
      shoreInset: 48,
      width: 720
    }, this.camera, this.canvasMode, this.particleBarn);
    this.activePlayer = this.playerBarn.getPlayerById(this.activeId);
    this.activePlayer.BOCg({
      boost: 100,
      boostDirty: true,
      hasAction: false,
      health: 100,
      inventoryDirty: false,
      scopedIn: false,
      spectatorCountDirty: false,
      weapsDirty: true,
      curWeapIdx: 2,
      weapons: [{
        name: "",
        ammo: 0
      }, {
        name: "",
        ammo: 0
      }, {
        name: "bayonet_rugged",
        ammo: 0
      }, {
        name: "",
        ammo: 0
      }]
    }, this.playerBarn);
    this.activePlayer.layer = this.activePlayer.QDvlP.fgCE;
    this.activePlayer.isLoadoutAvatar = true;
    this.renderer.setActiveLayer(this.activePlayer.layer);
    this.audioManager.activeLayer = this.activePlayer.layer;
    this.animIdleTicker = 3;
    this.animSeq = 0;
    this.actionSeq = 0;
    this.hide();
    this.account.addEventListener("loadout", Xl => {
      this.setLoadout(Xl, true);
    });
    this.setLoadout(this.account.loadout, true);
    this.initialized = true;
    this.resize();
  }
  free() {
    if (this.initialized) {
      this.map.dphRtI();
      this.particleBarn.dphRtI();
      this.renderer.dphRtI();
      while (this.pixi.stage.children.length > 0) {
        const p = this.pixi.stage.children[0];
        this.pixi.stage.removeChild(p);
        p.destroy({
          children: true
        });
      }
    }
    this.initialized = false;
  }
  setLoadout(p, b) {
    this.loadout = le.validate(p);
    this.updateCharDisplay();
    if (b) {
      this.outfitOld = this.loadout.outfit;
    }
    if (this.activePlayer) {
      this.activePlayer.playActionStartSfx = true;
    }
    this.animIdleTicker = 0;
  }
  setView(p) {
    this.viewOld = this.view;
    this.view = p;
  }
  updateCharDisplay(p = {}) {
    const b = {
      audioManager: this.audioManager,
      renderer: this.renderer,
      particleBarn: this.particleBarn,
      map: this.map,
      smokeBarn: this.smokeBarn,
      decalBarn: this.decalBarn
    };
    if (this.activePlayer?.useItemEmitter) {
      this.activePlayer.useItemEmitter.stop();
      this.activePlayer.useItemEmitter = null;
      this.animIdleTicker = 0;
    }
    const XT = {
      outfit: this.loadout.outfit,
      backpack: "backpack02",
      helmet: "helmet01",
      chest: "chest03",
      activeWeapon: this.loadout.melee,
      layer: 0,
      dead: false,
      downed: false,
      animType: p.animType || 0,
      animSeq: p.animSeq || 0,
      actionSeq: p.actionSeq || 0,
      actionType: p.actionType || 0,
      actionItem: p.actionItem || "",
      wearingPan: false,
      healEffect: false,
      frozen: false,
      frozenOri: 0,
      hasteType: 0,
      hasteSeq: 0,
      scale: 1,
      role: "",
      perks: [],
      $r: false,
      pos: v.create(50, 50),
      dir: v.create(0, -1)
    };
    this.objectCreator.gLpEK(X2.Player, 98, XT, b);
    this.playerBarn.setPlayerInfo({
      playerId: 98,
      teamId: 0,
      groupId: 0,
      name: "",
      loadout: {
        heal: this.loadout.heal,
        boost: this.loadout.boost
      }
    });
  }
  getCameraTargetZoom() {
    return document.getElementById("modal-content-left").getBoundingClientRect().height / this.camera.lZjK * 0.2 * this.camera.lZjK * 0.5 / this.camera.xQaJqu;
  }
  getCameraLoadoutOffset() {
    const b = this.camera.BsPd;
    const XT = this.getCameraTargetZoom();
    this.camera.BsPd = XT;
    const XY = document.getElementById("modal-content-left").getBoundingClientRect();
    const XC = T.createAabb(this.camera.vrnvjL(v.create(XY.left, XY.top + XY.height)), this.camera.vrnvjL(v.create(XY.left + XY.width, XY.top)));
    const Xl = v.mul(v.sub(XC.max, XC.min), 0.5);
    const Xd = v.add(XC.min, Xl);
    const Xk = T.createAabb(this.camera.vrnvjL(v.create(0, this.camera.lZjK)), this.camera.vrnvjL(v.create(this.camera.pmhI, 0)));
    const XU = v.mul(v.sub(Xk.max, Xk.min), 0.5);
    const XW = v.add(Xk.min, XU);
    const XD = v.sub(Xd, XW);
    const XG = XU.x - XD.x - Xl.x;
    const XF = e.clamp(XG * 0.5, 2.5, 6);
    const XH = v.create(XD.x + Xl.x + XF, XD.y + 0.33);
    this.camera.BsPd = b;
    return XH;
  }
  show() {
    if (!this.active) {
      this.active = true;
      this.resize();
    }
  }
  hide() {
    if (this.active) {
      this.active = false;
      this.camera.BsPd = 2;
    }
  }
  update(p, b) {
    const XT = {};
    this.camera.NLYJ = v.sub(this.activePlayer.NLYJ, this.cameraOffset);
    this.camera.BsPd = e.lerp(p * 5, this.camera.BsPd, this.camera.QwZT);
    this.audioManager.cameraPos = v.copy(this.camera.NLYJ);
    if (b && (this.view == this.viewOld || this.view != "heal" && this.view != "boost" || (this.animIdleTicker = 0), this.viewOld = this.view, this.animIdleTicker -= p, this.animIdleTicker < 0)) {
      if (this.view == "heal") {
        this.actionSeq = (this.actionSeq + 1) % 8;
        const XC = {
          actionType: L.Action.UseItem,
          actionItem: "bandage",
          actionSeq: this.actionSeq
        };
        this.updateCharDisplay(XC);
        this.animIdleTicker = 2 + Math.random();
      } else if (this.view == "boost") {
        this.actionSeq = (this.actionSeq + 1) % 8;
        const Xl = {
          actionType: L.Action.UseItem,
          actionItem: "soda",
          actionSeq: this.actionSeq
        };
        this.updateCharDisplay(Xl);
        this.animIdleTicker = 2 + Math.random();
      } else if (this.view != "emote" && this.view != "crosshair") {
        this.animSeq = (this.animSeq + 1) % 8;
        const Xd = {
          animType: L.Anim.Melee,
          animSeq: this.animSeq
        };
        this.updateCharDisplay(Xd);
        this.animIdleTicker = 1.5 + Math.random();
      }
    }
    const XY = this.loadout.outfit != this.outfitOld;
    this.outfitOld = this.loadout.outfit;
    if (b && XY) {
      const Xk = w[this.loadout.outfit];
      if (Xk) {
        this.audioManager.playSound(Xk.sound.pickup, {
          channel: "ui"
        });
      }
    }
    this.playerBarn.Gxhh(p, this.activeId, this.teamMode, this.renderer, this.particleBarn, this.camera, this.map, this.inputBinds, this.audioManager, false, false, false);
    this.smokeBarn.Gxhh(p, this.camera, this.activePlayer, this.map, this.renderer);
    this.particleBarn.Gxhh(p, this.camera, XT);
    this.decalBarn.Gxhh(p, this.camera, this.renderer, XT);
    this.renderer.Gxhh(p, this.camera, this.map, XT);
    this.activePlayer.playActionStartSfx = false;
    this.render(p, XT);
  }
  render(p, b) {
    const XT = this.map.mapLoaded ? this.map.getMapDef().biome.colors.grass : 8433481;
    this.pixi.renderer.background.color = XT;
    this.playerBarn.Dgc(this.camera, b);
    this.map.Dgc(this.camera);
    he.Dgc(this.camera, this.debugDisplay);
    he.flush();
  }
  resize() {
    if (this.initialized) {
      this.camera.pmhI = k.screenWidth;
      this.camera.lZjK = k.screenHeight;
      this.map.resize(this.pixi.renderer, this.canvasMode);
      this.renderer.resize(this.map, this.camera);
      this.camera.QwZT = this.getCameraTargetZoom();
      this.cameraOffset = this.getCameraLoadoutOffset();
    }
  }
}
const Di = 99;
const Ae = {
  getPassMaxLevel: function () {
    return Di;
  },
  getPassLevelXp: function (p, b) {
    const XT = XK[p];
    const XY = b - 1;
    if (XY < XT.xp.length) {
      return XT.xp[XY];
    } else {
      return XT.xp[XT.xp.length - 1];
    }
  },
  getPassLevelAndXp: function (p, b) {
    let XT = b;
    let XY = 1;
    while (XY < Di) {
      const XC = Ae.getPassLevelXp(p, XY);
      if (XT < XC) {
        break;
      }
      XT -= XC;
      XY++;
    }
    return {
      level: XY,
      xp: XT,
      nextLevelXp: Ae.getPassLevelXp(p, XY)
    };
  },
  timeUntilQuestRefresh: function (p) {
    return Math.floor((p - 25200000 + 86400000 - 1) / 86400000) * 86400000 + 25200000 - Date.now();
  }
};
function Li(p, b) {
  for (let XT = XK[p], XY = 0; XY < XT.items.length; XY++) {
    if (XT.items[XY].level == b + 1) {
      return XT.items[XY].item;
    }
  }
  return "";
}
function bt(p, b = false) {
  const XT = Math.floor(Math.ceil(p / 60) / 60);
  const XY = b ? Math.floor(p / 60) % 60 : Math.ceil(p / 60) % 60;
  let XC = "";
  if (XT > 0) {
    XC += XT + "h ";
  }
  return XC += XY + "m";
}
class Qo {
  constructor(p, b, XT) {
    this.account = p;
    this.loadoutMenu = b;
    this.localization = XT;
    this.account = p;
    this.loadoutMenu = b;
    this.localization = XT;
    this.account.addEventListener("request", this.onRequest.bind(this));
    this.account.addEventListener("pass", this.onPass.bind(this));
    this.loadPlaceholders();
    j("#pass-progress-unlock-wrapper").hover(() => {
      j("#pass-unlock-tooltip").fadeIn(50);
    }, () => {
      j("#pass-unlock-tooltip").fadeOut(50);
    });
  }
  pass = {
    data: {
      type: "pass_survivr1"
    },
    currentXp: 0,
    currentLevel: 1,
    levelXp: 0,
    ticker: 0,
    animSteps: [],
    elems: {}
  };
  quests = [];
  loaded = false;
  lockDisplayed = false;
  updatePass = false;
  updatePassTicker = 0;
  onPass(b, XT, XY) {
    const XC = [];
    let Xl = 0;
    for (let XF = 0; XF < XT.length; XF++) {
      (XH => {
        const p0 = XT[XH];
        const p1 = {
          data: p0,
          start: 0,
          current: 0,
          ticker: 0,
          delay: Xl * 0.5,
          playCompleteAnim: false,
          progressAnimFinished: false,
          completeAnimFinished: false,
          shouldRequestRefresh: XY,
          refreshTime: Date.now() + p0.timeToRefresh + 5000,
          refreshSet: false,
          refreshEnabled: false,
          timer: {
            enabled: false,
            str: ""
          }
        };
        const p2 = this.quests.find(p8 => p8.data.idx == p1.data.idx && p8.data.type == p1.data.type);
        if (p2) {
          p1.start = p2.current;
          p1.current = p2.current;
          if (!p2.data.complete && p1.data.complete) {
            p1.playCompleteAnim = true;
          }
        }
        p1.data.progress = e.min(p1.data.progress, p1.data.target);
        if (p1.data.progress > p1.current) {
          Xl++;
        }
        const p3 = j("#pass-quest-" + p1.data.idx);
        p1.elems = {
          main: p3,
          xp: p3.find(".pass-quest-xp"),
          info: p3.find(".pass-quest-info"),
          desc: p3.find(".pass-quest-desc"),
          cur: p3.find(".pass-quest-counter-current"),
          target: p3.find(".pass-quest-counter-target"),
          refresh: p3.find(".pass-quest-refresh"),
          refreshPrompt: p3.find(".pass-quest-refresh-prompt"),
          refreshConfirm: p3.find(".pass-quest-refresh-confirm"),
          refreshCancel: p3.find(".pass-quest-refresh-cancel"),
          counter: p3.find(".pass-quest-counter"),
          barFill: p3.find(".pass-quest-bar-fill"),
          timer: p3.find(".pass-quest-timer"),
          loading: p3.find(".pass-quest-spinner")
        };
        p1.elems.barFill.clearQueue();
        p1.elems.main.removeClass("pass-bg-pulse");
        p1.elems.main.stop().css({
          opacity: 1
        });
        p1.elems.xp.removeClass("pass-text-pulse");
        p1.elems.refresh.stop().css({
          opacity: 1
        });
        p1.elems.counter.stop().css({
          opacity: 1
        });
        const p4 = Xm[p1.data.type];
        const p5 = this.localization.translate("" + p1.data.type) || p1.data.type;
        const p6 = p1.current / p1.data.target * 100;
        p1.elems.main.css("display", "block");
        p1.elems.desc.html(p5);
        p1.elems.cur.html(Math.round(p1.current));
        p1.elems.xp.html(p4.xp + " XP");
        p1.elems.barFill.css({
          width: p6 + "%"
        });
        p1.elems.loading.css("display", "none");
        let p7 = p1.data.target;
        if (p4.timed) {
          p7 = bt(p7);
        }
        p1.elems.target.html(p7);
        if (p4.icon) {
          p1.elems.desc.addClass("pass-quest-desc-icon");
          p1.elems.desc.css({
            "background-image": "url(" + p4.icon + ")"
          });
        } else {
          p1.elems.desc.removeClass("pass-quest-desc-icon");
          p1.elems.desc.attr("style", "");
        }
        this.setQuestRefreshEnabled(p1);
        XC.push(p1);
      })(XF);
    }
    this.quests = XC;
    this.pass.data = b;
    this.pass.animSteps = [];
    this.pass.currentXp = Math.round(this.pass.currentXp);
    this.pass.levelXp = Ae.getPassLevelXp(b.type, this.pass.currentLevel);
    if (!this.loaded) {
      const XH = Ae.getPassLevelXp(b.type, b.level);
      this.pass.currentXp = 0;
      this.pass.currentLevel = b.level;
      this.pass.levelXp = XH;
      this.pass.ticker = 0;
    }
    let Xd = this.pass.currentLevel;
    let Xk = this.pass.currentXp;
    if (this.loaded) {
      while (Xd < b.level) {
        const p1 = Ae.getPassLevelXp(b.type, Xd);
        this.pass.animSteps.push({
          startXp: Xk,
          targetXp: p1,
          levelXp: p1,
          targetLevel: Xd + 1
        });
        Xd++;
        Xk = 0;
      }
      const p0 = Xl > 0 ? 2 : 0;
      this.pass.ticker = -p0;
    }
    const XU = Ae.getPassLevelXp(b.type, Xd);
    this.pass.animSteps.push({
      startXp: Xk,
      targetXp: b.xp,
      levelXp: XU,
      targetLevel: Xd
    });
    j("#pass-block").css("z-index", "1");
    j("#pass-locked").css("display", "none");
    j("#pass-loading").css("display", "none");
    const XW = Li(this.pass.data.type, this.pass.currentLevel);
    this.setPassUnlockImage(XW);
    const XD = this.localization.translate(b.type).toUpperCase();
    j("#pass-name-text").html(XD);
    j("#pass-progress-level").html(this.pass.currentLevel);
    j("#pass-progress-xp-current").html(this.pass.currentXp);
    j("#pass-progress-xp-target").html(this.pass.levelXp);
    const XG = this.pass.currentXp / this.pass.levelXp * 100;
    j("#pass-progress-bar-fill").css({
      width: XG + "%"
    });
    this.loaded = true;
  }
  onRequest(p) {
    j("#pass-loading").css("display", p.loggingIn ? "block" : "none");
  }
  scheduleUpdatePass(p) {
    this.updatePass = true;
    this.updatePassTicker = p;
  }
  setQuestRefreshEnabled(p) {
    const b = !p.data.rerolled && !p.data.complete || p.refreshTime - Date.now() < 0;
    if (b != p.refreshEnabled || !p.refreshSet) {
      p.refreshEnabled = b;
      p.refreshSet = true;
      p.elems.refresh.off("click");
      p.elems.refreshConfirm.off("click");
      p.elems.refreshCancel.off("click");
      if (p.refreshEnabled) {
        p.elems.refreshConfirm.on("click", () => {
          p.elems.loading.css("display", "block");
          p.elems.refreshPrompt.css("display", "none");
          this.account.refreshQuest(p.data.idx);
        });
        p.elems.refreshCancel.on("click", () => {
          p.elems.refreshPrompt.css("display", "none");
          p.elems.info.css("display", "block");
        });
        p.elems.refresh.on("click", () => {
          p.elems.refreshPrompt.css("display", "block");
          p.elems.info.css("display", "none");
        });
        p.elems.refresh.removeClass("pass-quest-refresh-disabled");
      } else {
        p.elems.refresh.addClass("pass-quest-refresh-disabled");
      }
    }
  }
  setPassUnlockImage(p) {
    const b = w[p];
    const XT = "url(" + (b ? Q.getSvgFromGameType(p) : "img/emotes/surviv.svg") + ")";
    const XY = Q.getCssTransformFromGameType(p);
    j("#pass-progress-unlock").css({
      opacity: b ? 1 : 0.15,
      transform: "translate(-50%, -50%) " + XY
    });
    j("#pass-progress-unlock-image").css({
      "background-image": XT
    });
    const XC = b ? this.localization.translate("loadout-title-" + this.loadoutMenu.getCategory(b.type).loadoutType).toUpperCase() : "";
    const Xl = j("#pass-unlock-tooltip");
    Xl.css("opacity", b ? 1 : 0);
    Xl.find(".tooltip-pass-title").html(XC);
    Xl.find(".tooltip-pass-desc").html(b ? b.name : "");
    const Xd = b ? "url(" + this.loadoutMenu.getCategory(b.type).categoryImage + ")" : "";
    j("#pass-progress-unlock-type-image").css({
      "background-image": Xd
    });
    j("#pass-progress-unlock-type-wrapper").css({
      display: b ? "block" : "none"
    });
  }
  animatePassLevelUp() {
    const p = j("#pass-progress-bar-fill");
    const b = j("#pass-progress-level");
    const XT = j("#pass-progress-unlock-wrapper");
    const XY = j("#pass-progress-unlock-image");
    const XC = j("#pass-progress-unlock-type-image");
    b.html(this.pass.currentLevel);
    p.queue(Xl => {
      XT.addClass("pass-unlock-pulse");
      j(Xl).dequeue();
    }).delay(750).queue(Xl => {
      XY.animate({
        opacity: 0
      }, 250);
      XC.animate({
        opacity: 0
      }, 250);
      j(Xl).dequeue();
    }).delay(250).queue(Xl => {
      const Xd = Li(this.pass.data.type, this.pass.currentLevel);
      this.setPassUnlockImage(Xd);
      XT.removeClass("pass-unlock-pulse");
      XY.animate({
        opacity: 1
      }, 250);
      XC.animate({
        opacity: 1
      }, 250);
      j(Xl).dequeue();
    });
  }
  animateQuestComplete(p) {
    p.elems.barFill.queue(b => {
      p.elems.main.addClass("pass-bg-pulse");
      p.elems.xp.addClass("pass-text-pulse");
      p.elems.refresh.animate({
        opacity: 0.25
      }, 250);
      p.elems.refresh.removeClass("pass-quest-refresh-disabled");
      p.elems.refresh.animate({
        opacity: 0
      }, 250);
      p.elems.counter.animate({
        opacity: 0
      }, 250);
      p.elems.desc.html("QUEST COMPLETE!");
      j(b).dequeue();
    }).delay(1000).queue(b => {
      p.elems.main.animate({
        opacity: 0
      }, 750);
      j(b).dequeue();
    });
  }
  update(p) {
    this.updatePassTicker -= p;
    if (this.updatePass && this.updatePassTicker < 0) {
      this.updatePass = false;
      this.account.getPass(false);
    }
    for (let b = 0; b < this.quests.length; b++) {
      const XT = this.quests[b];
      this.setQuestRefreshEnabled(XT);
      XT.ticker += p;
      if (!XT.progressAnimFinished) {
        const Xl = e.clamp((XT.ticker - XT.delay) / 1, 0, 1);
        XT.current = e.lerp(e.easeOutExpo(Xl), XT.start, XT.data.progress);
        const Xd = XT.current / XT.data.target * 100;
        const Xk = Xm[XT.data.type];
        let XU = Math.round(XT.current);
        if (Xk.timed) {
          XU = bt(XU, true);
        }
        XT.elems.cur.html(XU);
        XT.elems.barFill.css({
          width: Xd + "%"
        });
        if (Xl >= 1) {
          XT.progressAnimFinished = true;
        }
      }
      if (XT.playCompleteAnim && !XT.completeAnimFinished && XT.ticker - XT.delay > 1.25) {
        this.animateQuestComplete(XT);
        XT.completeAnimFinished = true;
      }
      const XY = !XT.playCompleteAnim || XT.completeAnimFinished && XT.ticker - XT.delay > 4.25;
      if (XT.data.complete && XY && XT.refreshEnabled && XT.shouldRequestRefresh) {
        XT.shouldRequestRefresh = false;
        this.account.refreshQuest(XT.data.idx);
      }
      const XC = XT.data.complete && XY;
      if (XC != XT.timer.displayed) {
        XT.timer.displayed = XC;
        XT.elems.main.removeClass("pass-bg-pulse");
        XT.elems.main.stop().animate({
          opacity: 1
        }, 250);
        const XW = XT.elems.refreshPrompt.css("display") == "block";
        XT.elems.info.css("display", XC || XW ? "none" : "block");
        XT.elems.timer.css("display", XC ? "block" : "none");
      }
      if (XC) {
        const XD = Math.max(XT.refreshTime - Date.now(), 0);
        const XG = bt(XD / 1000);
        if (XG != XT.timer.str) {
          XT.timer.str = XG;
          XT.elems.timer.html(XG);
        }
      }
    }
    this.pass.ticker += p;
    if (this.pass.animSteps.length > 0 && this.pass.ticker >= 0) {
      const XF = this.pass.animSteps[0];
      const XH = e.clamp(this.pass.ticker / 1.5, 0, 1);
      this.pass.currentXp = e.lerp(e.easeOutExpo(XH), XF.startXp, XF.targetXp);
      this.pass.levelXp = XF.levelXp;
      const p0 = this.pass.currentXp / XF.levelXp * 100;
      j("#pass-progress-xp-current").html(Math.round(this.pass.currentXp));
      j("#pass-progress-xp-target").html(this.pass.levelXp);
      j("#pass-progress-bar-fill").css({
        width: p0 + "%"
      });
      if (XH >= 1) {
        if (XF.targetLevel > this.pass.currentLevel) {
          this.pass.currentLevel = XF.targetLevel;
          this.animatePassLevelUp();
        }
        this.pass.animSteps.shift();
        this.pass.ticker -= 3;
      }
    }
    if (!this.account.loggingIn && !this.account.loggedIn && !this.lockDisplayed) {
      j("#pass-block").css("z-index", "1");
      j("#pass-loading").css("display", "none");
      j("#pass-locked").css("display", "block");
      this.lockDisplayed = true;
    }
  }
  onResize() {}
  loadPlaceholders() {
    const p = XK.pass_survivr1;
    const b = this.localization.translate("pass_survivr1").toUpperCase();
    j("#pass-name-text").html(b);
    j("#pass-progress-level").html(1);
    j("#pass-progress-xp-current").html(0);
    j("#pass-progress-xp-target").html(p.xp[0]);
    this.setPassUnlockImage(p.items[0].item);
  }
}
function Zo(p, b, XT, XY) {
  const XC = p.find(".login-options-content");
  XC.empty();
  if (b) {
    XC.append(j("<div/>", {
      class: "account-login-desc"
    }).append(j("<p/>", {
      html: XY.translate("index-link-account-to")
    })));
  }
  const Xl = j("<div/>", {
    class: "account-buttons"
  });
  XC.append(Xl);
  const Xd = function (Xk, XU, XW) {
    const XD = j("<div/>", {
      class: "menu-option btn-darken btn-standard btn-login-" + Xk
    });
    XD.append(j("<span/>", {
      class: "login-button-name"
    }).append(j("<span/>", {
      html: XY.translate("index-" + Xk)
    })).append(j("<div/>", {
      class: "icon"
    })));
    if (b && XU) {
      XD.addClass("btn-login-linked");
      XD.find("span.login-button-name").html("<div class=\"icon\"></div>");
    } else {
      XD.click(XG => {
        XW();
      });
    }
    Xl.append(XD);
  };
  Xd("twitch", XT.profile.linkedTwitch, () => {
    window.location.href = "/api/user/auth/twitch";
  });
  Xd("discord", XT.profile.linkedDiscord, () => {
    window.location.href = "/api/user/auth/discord";
  });
}
class Yo {
  constructor(p, b, XT, XY) {
    this.account = p;
    this.localization = b;
    this.loadoutMenu = XT;
    this.errorModal = XY;
    this.account = p;
    this.localization = b;
    this.loadoutMenu = XT;
    this.errorModal = XY;
    p.addEventListener("error", this.onError.bind(this));
    p.addEventListener("login", this.onLogin.bind(this));
    p.addEventListener("loadout", this.onLoadoutUpdated.bind(this));
    p.addEventListener("items", this.onItemsUpdated.bind(this));
    p.addEventListener("request", this.render.bind(this));
    this.initUi();
    this.render();
  }
  setNameModal = null;
  resetStatsModal = null;
  deleteAccountModal = null;
  userSettingsModal = null;
  loginOptionsModal = null;
  createAccountModal = null;
  loginOptionsModalMobile;
  modalMobileAccount;
  initUi() {
    const p = function () {
      j("#modal-body-warning").css("display", "none");
      j("#modal-account-name-input").val("");
    };
    this.setNameModal = new de(j("#modal-account-name-change"));
    this.setNameModal.onShow(p);
    this.setNameModal.onHide(p);
    j("#modal-account-name-finish").click(b => {
      b.stopPropagation();
      const XT = j("#modal-account-name-input").val();
      this.account.setUsername(XT, XY => {
        if (XY) {
          const XC = {
            failed: "Failed setting username.",
            invalid: "Invalid username.",
            taken: "Name already taken!",
            change_time_not_expired: "Username has already been set recently."
          };
          const Xl = XC[XY] || XC.failed;
          j("#modal-body-warning").hide();
          j("#modal-body-warning").html(Xl);
          j("#modal-body-warning").fadeIn();
        } else {
          this.setNameModal.hide();
        }
      });
    });
    j("#modal-account-name-input").on("keypress", b => {
      if ((b.which || b.keyCode) === 13) {
        j("#modal-account-name-finish").trigger("click");
      }
    });
    this.resetStatsModal = new de(j("#modal-account-reset-stats"));
    this.resetStatsModal.onShow(() => {
      j("#modal-account-reset-stats-input").val("");
      this.modalMobileAccount.hide();
    });
    j("#modal-account-reset-stats-finish").click(b => {
      b.stopPropagation();
      if (j("#modal-account-reset-stats-input").val() == "RESET STATS") {
        this.account.resetStats();
        this.resetStatsModal.hide();
      }
    });
    j("#modal-account-reset-stats-input").on("keypress", b => {
      if ((b.which || b.keyCode) === 13) {
        j("#modal-account-reset-stats-finish").trigger("click");
      }
    });
    this.deleteAccountModal = new de(j("#modal-account-delete"));
    this.deleteAccountModal.onShow(() => {
      j("#modal-account-delete-input").val("");
      this.modalMobileAccount.hide();
    });
    j("#modal-account-delete-finish").click(b => {
      b.stopPropagation();
      if (j("#modal-account-delete-input").val() == "DELETE") {
        this.account.deleteAccount();
        this.deleteAccountModal.hide();
      }
    });
    j("#modal-account-delete-input").on("keypress", b => {
      if ((b.which || b.keyCode) === 13) {
        j("#modal-account-delete-finish").trigger("click");
      }
    });
    this.userSettingsModal = new de(j(".account-buttons-settings"));
    this.userSettingsModal.checkSelector = false;
    this.userSettingsModal.skipFade = true;
    this.userSettingsModal.onShow(() => {
      j(".account-details-top").css("display", "none");
    });
    this.userSettingsModal.onHide(() => {
      j(".account-details-top").css("display", "block");
    });
    this.loginOptionsModal = new de(j("#account-login-options"));
    this.loginOptionsModal.checkSelector = false;
    this.loginOptionsModal.skipFade = true;
    this.loginOptionsModal.onShow(() => {
      j(".account-details-top").css("display", "none");
    });
    this.loginOptionsModal.onHide(() => {
      j(".account-details-top").css("display", "block");
    });
    this.loginOptionsModalMobile = new de(j("#account-login-options-mobile"));
    this.loginOptionsModalMobile.checkSelector = false;
    this.loginOptionsModalMobile.skipFade = true;
    this.loginOptionsModalMobile.onShow(() => {
      j(".account-details-top").css("display", "none");
    });
    this.loginOptionsModalMobile.onHide(() => {
      j(".account-details-top").css("display", "block");
    });
    this.createAccountModal = new de(j("#modal-create-account-INVALID_ID"));
    this.createAccountModal.onHide(() => {
      this.loadoutMenu.hide();
    });
    this.modalMobileAccount = new de(j("#modal-mobile-account"));
    this.modalMobileAccount.onShow(() => {
      j("#start-top-right").css("display", "none");
      j(".account-details-top").css("display", "none");
    });
    this.modalMobileAccount.onHide(() => {
      j("#start-top-right").css("display", "block");
      j(".account-details-top").css("display", "block");
      this.userSettingsModal.hide();
    });
    j(".account-leaderboard-link").click(b => {
      window.open(Qe.resolveUrl("/stats"), "_blank");
      return false;
    });
    j(".account-stats-link").click(() => {
      this.waitOnLogin(() => {
        if (this.account.loggedIn) {
          if (this.account.profile.usernameSet) {
            const b = this.account.profile.slug || "";
            window.open("/stats/" + b, "_blank");
          } else {
            this.setNameModal.show(true);
          }
        } else {
          this.showLoginMenu({
            modal: true
          });
        }
      });
      return false;
    });
    j(".account-loadout-link, #btn-customize").click(() => {
      this.loadoutMenu.show();
      this.waitOnLogin(() => {
        if (!this.account.loggedIn) {
          this.showLoginMenu({
            modal: true
          });
        }
      });
      return false;
    });
    j(".account-details-user").click(() => {
      if (this.userSettingsModal.isVisible() || this.loginOptionsModal.isVisible()) {
        this.userSettingsModal.hide();
        this.loginOptionsModal.hide();
      } else {
        this.waitOnLogin(() => {
          if (k.mobile) {
            this.modalMobileAccount.show();
          }
          if (this.account.loggedIn) {
            this.loginOptionsModal.hide();
            this.userSettingsModal.show();
          } else {
            this.showLoginMenu({
              modal: false
            });
          }
        });
      }
      return false;
    });
    j(".btn-account-link").click(() => {
      this.userSettingsModal.hide();
      this.showLoginMenu({
        modal: false,
        link: true
      });
      return false;
    });
    j(".btn-account-change-name").click(() => {
      if (this.account.profile.usernameChangeTime <= 0) {
        this.userSettingsModal.hide();
        this.modalMobileAccount.hide();
        j("#modal-account-name-title").html(this.localization.translate("index-change-account-name"));
        this.setNameModal.show();
      }
      return false;
    });
    j(".btn-account-reset-stats").click(() => {
      this.userSettingsModal.hide();
      this.resetStatsModal.show();
      return false;
    });
    j(".btn-account-delete").click(() => {
      this.userSettingsModal.hide();
      this.deleteAccountModal.show();
      return false;
    });
    j(".btn-account-logout").click(() => {
      this.account.logout();
      return false;
    });
    j("#btn-pass-locked").click(() => {
      this.showLoginMenu({
        modal: true
      });
      return false;
    });
  }
  onError(p, b) {
    const XT = {
      server_error: "Operation failed, please try again later.",
      facebook_account_in_use: "Failed linking Facebook account.<br/>Account already in use!",
      google_account_in_use: "Failed linking Google account.<br/>Account already in use!",
      twitch_account_in_use: "Failed linking Twitch account.<br/>Account already in use!",
      discord_account_in_use: "Failed linking Discord account.<br/>Account already in use!",
      account_banned: "Account banned: " + b,
      login_failed: "Login failed."
    }[p];
    if (XT) {
      this.errorModal.selector.find(".modal-body-text").html(XT);
      this.errorModal.show();
    }
  }
  onLogin() {
    this.createAccountModal.hide();
    this.loginOptionsModalMobile.hide();
    this.loginOptionsModal.hide();
    if (!this.account.profile.usernameSet) {
      this.setNameModal.show(true);
    }
  }
  onLoadoutUpdated(p) {
    this.updateUserIcon();
  }
  onItemsUpdated(p) {
    let b = 0;
    let XT = 0;
    for (let XC = 0; XC < p.length; XC++) {
      const Xl = p[XC];
      if (Xl.status < le.ItemStatus.Confirmed) {
        b++;
      }
      if (Xl.status < le.ItemStatus.Ackd) {
        XT++;
      }
    }
    p.filter(Xd => Xd.status < le.ItemStatus.Confirmed);
    p.filter(Xd => Xd.status < le.ItemStatus.Ackd);
    const XY = b > 0 || XT > 0;
    j("#loadout-alert-main").css({
      display: XY ? "block" : "none"
    });
  }
  waitOnLogin(p) {
    if (this.account.loggingIn && !this.account.loggedIn) {
      const b = () => {
        p();
        this.account.removeEventListener("requestsComplete", b);
      };
      this.account.addEventListener("requestsComplete", b);
    } else {
      p();
    }
  }
  showLoginMenu(p) {
    p = Object.assign({
      modal: false,
      link: false
    }, p);
    const b = p.modal ? this.createAccountModal : k.mobile ? this.loginOptionsModalMobile : this.loginOptionsModal;
    Zo(b.selector, p.link, this.account, this.localization);
    b.show();
  }
  updateUserIcon() {
    const p = Q.getSvgFromGameType(this.account.loadout.player_icon) || "img/gui/player-gui.svg";
    j(".account-details-user .account-avatar").css("background-image", "url(" + p + ")");
  }
  render() {
    const p = this.account.requestsInFlight > 0;
    j(".account-loading").css("opacity", p ? 1 : 0);
    let b = Q.htmlEscape(this.account.profile.username || "");
    if (!this.account.loggedIn) {
      b = this.account.loggingIn ? this.localization.translate("index-logging-in") + "..." : this.localization.translate("index-log-in-desc");
    }
    j("#account-player-name").html(b);
    j("#account-player-name").css("display", this.account.loggedIn ? "block" : "none");
    j("#account-login").css("display", this.account.loggedIn ? "none" : "block");
    this.updateUserIcon();
    if (this.account.profile.usernameChangeTime <= 0) {
      j(".btn-account-change-name").removeClass("btn-account-disabled");
    } else {
      j(".btn-account-change-name").addClass("btn-account-disabled");
    }
  }
}
function Ai(p, b) {
  const XT = {
    join_full: b.translate("index-team-is-full"),
    join_not_found: b.translate("index-failed-joining-team"),
    create_failed: b.translate("index-failed-creating-team"),
    join_failed: b.translate("index-failed-joining-team"),
    join_game_failed: b.translate("index-failed-joining-game"),
    lost_conn: b.translate("index-lost-connection"),
    find_game_error: b.translate("index-failed-finding-game"),
    find_game_full: b.translate("index-failed-finding-game"),
    find_game_invalid_protocol: b.translate("index-invalid-protocol"),
    kicked: b.translate("index-team-kicked")
  };
  return XT[p] || XT.lost_conn;
}
class Jo {
  constructor(p, b, XT, XY, XC, Xl, Xd) {
    this.config = p;
    this.pingTest = b;
    this.siteInfo = XT;
    this.localization = XY;
    this.audioManager = XC;
    this.joinGameCb = Xl;
    this.leaveCb = Xd;
    this.serverSelect.change(() => {
      const Xk = this.serverSelect.find(":selected").val();
      this.pingTest.start([Xk]);
      this.setRoomProperty("region", Xk);
    });
    this.queueMode1.click(() => {
      this.setRoomProperty("gameModeIdx", 1);
    });
    this.queueMode2.click(() => {
      this.setRoomProperty("gameModeIdx", 2);
    });
    this.fillAuto.click(() => {
      this.setRoomProperty("autoFill", true);
    });
    this.fillNone.click(() => {
      this.setRoomProperty("autoFill", false);
    });
    this.playBtn.on("click", () => {
      if (this.config.get("ENV") === "CrazyGames") {
        rt(() => {
          this.tryStartGame();
        });
      } else if (this.config.get("ENV") === "POKI") {
        st(() => {
          this.tryStartGame();
        });
      } else if (this.config.get("ENV") === "GameMonetize") {
        at(() => {
          this.tryStartGame();
        });
      } else {
        this.tryStartGame();
      }
    });
    j("#team-copy-url, #team-desc-text").click(Xk => {
      const XU = j("<div/>", {
        class: "copy-toast",
        html: "Copied!"
      });
      j("#start-menu-wrapper").append(XU);
      XU.css({
        left: Xk.pageX - parseInt(XU.css("width")) / 2,
        top: j("#team-copy-url").offset().top
      });
      XU.animate({
        top: "-=20",
        opacity: 1
      }, {
        queue: false,
        duration: 300,
        complete: function () {
          j(this).fadeOut(250, function () {
            j(this).remove();
          });
        }
      });
      let XW = j("#team-url").html();
      if (window !== window.top) {
        XW = this.roomData.roomUrl.substring(1);
      }
      Q.copyTextToClipboard(XW);
    });
    if (window !== window.top) {
      j("#team-desc-text").hide();
    }
    if (!k.mobile) {
      this.hideUrl = false;
      j("#team-hide-url").click(Xk => {
        const XU = Xk.currentTarget;
        this.hideUrl = !this.hideUrl;
        j("#team-desc-text, #team-code-text").css({
          opacity: this.hideUrl ? 0 : 1
        });
        j(XU).css({
          "background-image": this.hideUrl ? "url(../img/gui/hide.svg)" : "url(../img/gui/eye.svg)"
        });
      });
    }
  }
  playBtn = j("#btn-start-team");
  serverWarning = j("#server-warning");
  teamOptions = j("#btn-team-queue-mode-1, #btn-team-queue-mode-2, #btn-team-fill-auto, #btn-team-fill-none");
  serverSelect = j("#team-server-select");
  queueMode1 = j("#btn-team-queue-mode-1");
  queueMode2 = j("#btn-team-queue-mode-2");
  fillAuto = j("#btn-team-fill-auto");
  fillNone = j("#btn-team-fill-none");
  active = false;
  joined = false;
  create = false;
  joiningGame = false;
  ws = null;
  keepAliveTimeout = 0;
  playerData = {};
  roomData = {};
  players = [];
  prevPlayerCount = 0;
  localPlayerId = 0;
  isLeader = true;
  editingName = false;
  displayedInvalidProtocolModal = false;
  hideUrl;
  getPlayerById(p) {
    return this.players.find(b => b.playerId == p);
  }
  update(p) {
    if (this.joined) {
      this.keepAliveTimeout -= p;
      if (this.keepAliveTimeout < 0) {
        this.keepAliveTimeout = 45;
        this.sendMessage("keepAlive", {});
      }
    }
  }
  connect(p, b) {
    if (!this.active || b !== this.roomData.roomUrl) {
      const XT = Qe.resolveRoomHost();
      const XY = "w" + (window.location.protocol === "https:" ? "ss" : "s") + "://" + XT + "/team_v2";
      this.active = true;
      this.joined = false;
      this.create = p;
      this.joiningGame = false;
      this.editingName = false;
      this.playerData = {
        name: this.config.get("playerName")
      };
      this.roomData = {
        roomUrl: b,
        region: this.config.get("region"),
        gameModeIdx: this.config.get("gameModeIdx"),
        autoFill: this.config.get("teamAutoFill"),
        findingGame: false,
        lastError: ""
      };
      this.displayedInvalidProtocolModal = false;
      this.refreshUi();
      if (this.ws) {
        this.ws.onclose = function () {};
        this.ws.close();
        this.ws = null;
      }
      try {
        this.ws = new WebSocket(XY);
        this.ws.onerror = XC => {
          this.ws?.close();
        };
        this.ws.onclose = () => {
          let XC = "";
          if (!this.joiningGame) {
            XC = this.joined ? "lost_conn" : this.create ? "create_failed" : "join_failed";
          }
          this.leave(XC);
        };
        this.ws.onopen = () => {
          if (this.create) {
            if (this.siteInfo.info.captchaEnabled) {
              window.turnstile.render("#start-turnstile-container", {
                sitekey: "0x4AAAAAAAxkDXmFwymMPT0B",
                appearance: "interaction-only",
                callback: XC => {
                  this.sendMessage("create", {
                    roomData: this.roomData,
                    playerData: this.playerData,
                    token: XC
                  });
                  window.turnstile.remove("#start-turnstile-container");
                }
              });
            } else {
              this.sendMessage("create", {
                roomData: this.roomData,
                playerData: this.playerData
              });
            }
          } else {
            this.sendMessage("join", {
              roomUrl: this.roomData.roomUrl,
              playerData: this.playerData
            });
          }
        };
        this.ws.onmessage = XC => {
          if (this.active) {
            const Xl = JSON.parse(XC.data);
            this.onMessage(Xl.type, Xl.data);
          }
        };
      } catch {
        this.leave(this.create ? "create_failed" : "join_failed");
      }
    }
  }
  leave(p = "") {
    if (this.active) {
      this.ws?.close();
      this.ws = null;
      this.active = false;
      this.joined = false;
      this.joiningGame = false;
      this.refreshUi();
      this.config.set("gameModeIdx", this.roomData.gameModeIdx);
      this.config.set("teamAutoFill", this.roomData.autoFill);
      if (this.isLeader) {
        this.config.set("region", this.roomData.region);
      }
      let b = "";
      if (p && p != "") {
        b = Ai(p, this.localization);
      }
      this.leaveCb(b);
      if (this.config.get("ENV") === "CrazyGames") {
        window.CrazyGames.SDK.game.hideInviteButton();
      }
    }
  }
  onGameComplete() {
    if (this.active) {
      this.joiningGame = false;
      this.sendMessage("gameComplete");
    }
  }
  onMessage(p, b) {
    switch (p) {
      case "state":
        {
          let XT = b;
          this.joined = true;
          const XY = this.roomData;
          this.roomData = XT.room;
          this.players = XT.players;
          this.localPlayerId = XT.localPlayerId;
          this.isLeader = this.getPlayerById(this.localPlayerId).isLeader;
          if (this.isLeader) {
            this.roomData.region = XY.region;
            this.roomData.autoFill = XY.autoFill;
          }
          this.refreshUi();
          if (this.config.get("ENV") === "CrazyGames") {
            window.CrazyGames.SDK.game.showInviteButton({
              roomID: XT.room.roomUrl.replace("#", "")
            });
          }
          break;
        }
      case "joinGame":
        this.joiningGame = true;
        this.joinGameCb(b);
        break;
      case "keepAlive":
        break;
      case "kicked":
        this.leave("kicked");
        break;
      case "error":
        this.leave(b.type);
    }
  }
  sendMessage(p, b) {
    if (this.ws) {
      if (this.ws.readyState === this.ws.OPEN) {
        const XT = JSON.stringify({
          type: p,
          data: b
        });
        this.ws.send(XT);
      } else {
        this.ws.close();
      }
    }
  }
  setRoomProperty(p, b) {
    if (this.isLeader && this.roomData[p] != b) {
      this.roomData[p] = b;
      this.sendMessage("setRoomProps", this.roomData);
    }
  }
  tryStartGame() {
    if (this.isLeader && !this.roomData.findingGame) {
      const p = L.protocolVersion;
      let b = this.roomData.region;
      const XT = Q.getParameterByName("region");
      if (XT !== undefined && XT.length > 0) {
        b = XT;
      }
      let XY = this.pingTest.getZones(b);
      const XC = Q.getParameterByName("zone");
      if (XC !== undefined && XC.length > 0) {
        XY = [XC];
      }
      const Xl = {
        version: p,
        region: b,
        zones: XY
      };
      this.sendMessage("playGame", Xl);
      this.roomData.findingGame = true;
      this.refreshUi();
    }
  }
  refreshUi() {
    const XT = function (Xl, Xd, Xk) {
      Xl.removeClass("btn-darken btn-disabled btn-opaque btn-hollow-selected");
      if (Xk) {
        Xl.addClass("btn-darken");
      } else {
        Xl.addClass("btn-disabled");
        if (!Xd) {
          Xl.addClass("btn-opaque");
        }
      }
      if (Xd) {
        Xl.addClass("btn-hollow-selected");
      }
      Xl.prop("disabled", !Xk);
    };
    j("#team-menu").css("display", this.active ? "block" : "none");
    j("#start-menu").css("display", this.active ? "none" : "block");
    j("#right-column").css("display", this.active ? "none" : "block");
    j("#social-share-block").css("display", this.active ? "none" : "block");
    const XY = this.roomData.lastError != "";
    const XC = Ai(this.roomData.lastError, this.localization);
    this.serverWarning.css("opacity", XY ? 1 : 0);
    this.serverWarning.html(XC);
    if (this.roomData.lastError == "find_game_invalid_protocol" && !this.displayedInvalidProtocolModal) {
      j("#modal-refresh").fadeIn(200);
      this.displayedInvalidProtocolModal = true;
    }
    if (this.active) {
      j("#team-menu-joining-text").css("display", this.create ? "none" : "block");
      j("#team-menu-creating-text").css("display", this.create ? "block" : "none");
      j("#team-menu-connecting").css("display", this.joined ? "none" : "block");
      j("#team-menu-contents").css("display", this.joined ? "block" : "none");
      j("#btn-team-leave").css("display", this.joined ? "block" : "none");
    }
    if (this.joined) {
      const Xl = this.siteInfo.info.pops || {};
      const Xd = Object.keys(Xl);
      for (let p0 = 0; p0 < Xd.length; p0++) {
        const p1 = Xd[p0];
        const p2 = Xl[p1].playerCount;
        const p3 = this.localization.translate("index-players");
        const p4 = j("#team-server-opts").children("option[value=\"" + p1 + "\"]");
        p4.html(p4.attr("data-label") + " [" + p2 + " " + p3 + "]");
      }
      this.serverSelect.find("option").each((p5, p6) => {
        p6.selected = p6.value == this.roomData.region;
      });
      XT(this.queueMode1, this.roomData.gameModeIdx == 1, this.isLeader && this.roomData.enabledGameModeIdxs.includes(1));
      XT(this.queueMode2, this.roomData.gameModeIdx == 2, this.isLeader && this.roomData.enabledGameModeIdxs.includes(2));
      XT(this.fillAuto, this.roomData.autoFill, this.isLeader);
      XT(this.fillNone, !this.roomData.autoFill, this.isLeader);
      this.serverSelect.prop("disabled", !this.isLeader);
      if (this.roomData.roomUrl) {
        const p5 = this.roomData.roomUrl.substring(1);
        if (this.config.get("ENV") === "CrazyGames") {
          const p6 = window.CrazyGames.SDK.game.inviteLink({
            roomID: p5
          });
          j("#team-url").html(p6);
        } else {
          const p7 = "" + window.location.href.replace(window.location.hash, "") + this.roomData.roomUrl;
          j("#team-url").html(p7);
          if (window.history) {
            window.history.replaceState("", "", this.roomData.roomUrl);
          }
        }
        j("#team-code").html(p5);
      }
      this.playBtn.html(this.roomData.findingGame || this.joiningGame ? "<div class=\"ui-spinner\"></div>" : this.playBtn.attr("data-label"));
      const Xk = this.siteInfo.getGameModeStyles();
      for (let p8 = 0; p8 < Xk.length; p8++) {
        this.playBtn.removeClass(Xk[p8].buttonCss);
      }
      const XU = Xk[this.roomData.gameModeIdx];
      if (XU) {
        this.playBtn.addClass("btn-custom-mode-no-indent");
        this.playBtn.addClass(XU.buttonCss);
        this.playBtn.css({
          "background-image": "url(" + XU.icon + ")"
        });
      } else {
        this.playBtn.css({
          "background-image": ""
        });
      }
      let XW = false;
      for (let p9 = 0; p9 < this.players.length; p9++) {
        XW = XW || this.players[p9].inGame;
      }
      const XD = j("#msg-wait-reason");
      if (this.isLeader) {
        XD.html(this.localization.translate("index-game-in-progress") + "<span> ...</span>");
        const pX = XW && !this.joiningGame;
        XD.css("display", pX ? "block" : "none");
        this.playBtn.css("display", pX ? "none" : "block");
      } else {
        if (this.roomData.findingGame || this.joiningGame) {
          XD.html("<div class=\"ui-spinner\" style=\"margin-right:16px\"></div>" + this.localization.translate("index-joining-game") + "<span> ...</span>");
        } else if (XW) {
          XD.html(this.localization.translate("index-game-in-progress") + "<span> ...</span>");
        } else {
          XD.html(this.localization.translate("index-waiting-for-leader") + "<span> ...</span>");
        }
        XD.css("display", "block");
        this.playBtn.css("display", "none");
      }
      const XG = j("#team-menu-member-list");
      XG.empty();
      for (let pp = 0; pp < this.roomData.maxPlayers; pp++) {
        let pb = {
          name: "",
          playerId: 0,
          isLeader: false,
          inGame: false,
          self: false
        };
        if (pp < this.players.length) {
          const py = this.players[pp];
          pb = {
            name: py.name,
            playerId: py.playerId,
            isLeader: py.isLeader,
            inGame: py.inGame,
            self: py.playerId == this.localPlayerId
          };
        }
        const pI = j("<div/>", {
          class: "team-menu-member"
        });
        let pj = "";
        if (pb.isLeader) {
          pj = " icon-leader";
        } else if (this.isLeader && pb.playerId != 0) {
          pj = " icon-kick";
        }
        pI.append(j("<div/>", {
          class: "icon" + pj,
          "data-playerid": pb.playerId
        }));
        let pf = null;
        let px = null;
        if (this.editingName && pb.self) {
          pf = j("<input/>", {
            type: "text",
            tabindex: 0,
            class: "name menu-option name-text name-self-input",
            maxLength: m.PlayerNameMaxLen
          });
          pf.val(pb.name);
          const pg = () => {
            const pZ = Q.sanitizeNameInput(pf?.val());
            pb.name = pZ;
            this.config.set("playerName", pZ);
            this.sendMessage("changeName", {
              name: pZ
            });
            this.editingName = false;
            this.refreshUi();
          };
          const pQ = () => {
            this.editingName = false;
            this.refreshUi();
          };
          pf.keypress(pZ => {
            if (pZ.which === 13) {
              pg();
              return false;
            }
          });
          pf.on("blur", pQ);
          pI.append(pf);
          px = j("<div/>", {
            class: "icon icon-submit-name-change"
          });
          px.on("click", pg);
          px.on("mousedown", pZ => {
            pZ.preventDefault();
            pZ.stopPropagation();
          });
        } else {
          let pZ = "name-text";
          if (pb.self) {
            pZ += " name-self";
          }
          if (pb.inGame) {
            pZ += " name-in-game";
          }
          const pq = j("<div/>", {
            class: "name menu-option " + pZ,
            html: Q.htmlEscape(pb.name)
          });
          if (pb.self) {
            pq.on("click", () => {
              this.editingName = true;
              this.refreshUi();
            });
          }
          pI.append(pq);
        }
        if (px) {
          pI.append(px);
        } else {
          pI.append(j("<div/>", {
            class: "icon " + (pb.inGame ? "icon-in-game" : "")
          }));
        }
        XG.append(pI);
        pf?.focus();
      }
      j(".icon-kick", XG).click(pM => {
        const pE = Number(j(pM.currentTarget).attr("data-playerid"));
        this.sendMessage("kick", {
          playerId: pE
        });
      });
      const XF = this.players.find(pM => pM.playerId == this.localPlayerId);
      const XH = XF && !XF.inGame;
      if (!document.hasFocus() && this.prevPlayerCount < this.players.length && this.players.length > 1 && XH) {
        this.audioManager.playSound("notification_join_01", {
          channel: "ui"
        });
      }
      this.prevPlayerCount = this.players.length;
    }
  }
}
class Ko {
  nameInput = j("#player-name-input-solo");
  serverSelect = j("#server-select-main");
  playMode0Btn = j("#btn-start-mode-0");
  playMode1Btn = j("#btn-start-mode-1");
  playMode2Btn = j("#btn-start-mode-2");
  muteBtns = j(".btn-sound-toggle");
  aimLineBtn = j("#btn-game-aim-line");
  masterSliders = j(".sl-master-volume");
  soundSliders = j(".sl-sound-volume");
  musicSliders = j(".sl-music-volume");
  serverWarning = j("#server-warning");
  languageSelect = j(".language-select");
  startMenuWrapper = j("#start-menu-wrapper");
  gameAreaWrapper = j("#game-area-wrapper");
  playButtons = j(".play-button-container");
  playLoading = j(".play-loading-outer");
  errorModal = new de(j("#modal-notification"));
  refreshModal = new de(j("#modal-refresh"));
  config = new oa();
  localization = new Vo();
  account;
  loadoutMenu;
  pass;
  profileUi;
  pingTest = new Ls();
  audioManager = new aa();
  ambience = new Yr();
  siteInfo;
  teamMenu;
  pixi = null;
  resourceManager = null;
  input = null;
  inputBinds = null;
  inputBindUi = null;
  game = null;
  loadoutDisplay = null;
  domContentLoaded = false;
  configLoaded = false;
  initialized = false;
  active = false;
  sessionId = Q.random64();
  contextListener = function (p) {
    p.preventDefault();
  };
  errorMessage = "";
  quickPlayPendingModeIdx = -1;
  findGameAttempts = 0;
  findGameTime = 0;
  pauseTime = 0;
  wasPlayingVideo = false;
  checkedPingTest = false;
  hasFocus = true;
  newsDisplayed = true;
  respawns = [];
  constructor() {
    this.account = new Zr(this.config);
    this.loadoutMenu = new po(this.account, this.localization);
    this.pass = new Qo(this.account, this.loadoutMenu, this.localization);
    this.profileUi = new Yo(this.account, this.localization, this.loadoutMenu, this.errorModal);
    this.siteInfo = new no(this.config, this.localization);
    this.teamMenu = new Jo(this.config, this.pingTest, this.siteInfo, this.localization, this.audioManager, this.onTeamMenuJoinGame.bind(this), this.onTeamMenuLeave.bind(this));
    const p = () => {
      this.config.load(() => {
        this.configLoaded = true;
        this.tryLoad();
      });
    };
    this.loadBrowserDeps(p);
  }
  loadBrowserDeps(p) {
    p();
  }
  tryLoad() {
    if (this.domContentLoaded && this.configLoaded && !this.initialized) {
      this.initialized = true;
      if (k.mobile) {
        zt.applyMobileBrowserStyling(k.tablet);
      }
      const p = this.config.get("language") || this.localization.detectLocale();
      this.config.set("language", p);
      this.localization.setLocale(p);
      this.localization.populateLanguageSelect();
      this.startPingTest();
      this.siteInfo.load();
      this.localization.localizeIndex();
      this.account.init();
      this.nameInput.maxLength = m.PlayerNameMaxLen;
      this.playMode0Btn.on("click", () => {
        if (this.config.get("ENV") === "CrazyGames") {
          rt(() => {
            this.tryQuickStartGame(0);
          });
        } else if (this.config.get("ENV") === "POKI" && this.respawns.length > 0) {
          st(() => {
            this.tryQuickStartGame(0);
          });
        } else if (this.config.get("ENV") === "GameMonetize") {
          at(() => {
            this.tryQuickStartGame(0);
          });
        } else {
          this.tryQuickStartGame(0);
        }
      });
      this.playMode1Btn.on("click", () => {
        if (this.config.get("ENV") === "CrazyGames") {
          rt(() => {
            this.tryQuickStartGame(1);
          });
        } else if (this.config.get("ENV") === "POKI" && this.respawns.length > 0) {
          st(() => {
            this.tryQuickStartGame(1);
          });
        } else if (this.config.get("ENV") === "GameMonetize") {
          at(() => {
            this.tryQuickStartGame(1);
          });
        } else {
          this.tryQuickStartGame(1);
        }
      });
      this.playMode2Btn.on("click", () => {
        if (this.config.get("ENV") === "CrazyGames") {
          rt(() => {
            this.tryQuickStartGame(2);
          });
        } else if (this.config.get("ENV") === "POKI" && this.respawns.length > 0) {
          st(() => {
            this.tryQuickStartGame(2);
          });
        } else if (this.config.get("ENV") === "GameMonetize" && this.respawns.length > 0) {
          at(() => {
            this.tryQuickStartGame(2);
          });
        } else {
          this.tryQuickStartGame(2);
        }
      });
      this.serverSelect.change(() => {
        const XD = this.serverSelect.find(":selected").val();
        this.config.set("region", XD);
      });
      this.nameInput.on("blur", XD => {
        this.setConfigFromDOM();
      });
      this.muteBtns.on("click", XD => {
        this.config.set("muteAudio", !this.config.get("muteAudio"));
      });
      this.muteBtns.on("mousedown", XD => {
        XD.stopPropagation();
      });
      j(this.masterSliders).on("mousedown", XD => {
        XD.stopPropagation();
      });
      j(this.soundSliders).on("mousedown", XD => {
        XD.stopPropagation();
      });
      j(this.musicSliders).on("mousedown", XD => {
        XD.stopPropagation();
      });
      this.masterSliders.on("input", XD => {
        const XG = Number(j(XD.target).val()) / 100;
        this.audioManager.setMasterVolume(XG);
        this.config.set("masterVolume", XG);
      });
      this.soundSliders.on("input", XD => {
        const XG = Number(j(XD.target).val()) / 100;
        this.audioManager.setSoundVolume(XG);
        this.config.set("soundVolume", XG);
      });
      this.musicSliders.on("input", XD => {
        const XG = Number(j(XD.target).val()) / 100;
        this.audioManager.setMusicVolume(XG);
        this.config.set("musicVolume", XG);
      });
      j(".modal-settings-item").children("input").each((XD, XG) => {
        const XF = j(XG);
        XF.prop("checked", this.config.get(XF.prop("id")));
      });
      j(".modal-settings-item > input:checkbox").change(XD => {
        const XG = j(XD.target);
        this.config.set(XG.prop("id"), XG.is(":checked"));
      });
      j(".btn-fullscreen-toggle").on("click", () => {
        Q.toggleFullScreen();
      });
      this.languageSelect.on("change", XD => {
        const XG = XD.target.value;
        if (XG) {
          this.config.set("language", XG);
        }
      });
      j("#btn-create-team").on("click", () => {
        this.tryJoinTeam(true);
      });
      j("#btn-team-mobile-link-join").on("click", () => {
        let XD = j("#team-link-input").val()?.trim();
        const XG = XD.indexOf("#");
        if (XG >= 0) {
          XD = XD.slice(XG + 1);
        }
        if (XD.length > 0) {
          j("#team-mobile-link").css("display", "none");
          this.tryJoinTeam(false, XD);
        } else {
          j("#team-mobile-link-desc").css("display", "none");
          j("#team-mobile-link-warning").css("display", "none").fadeIn(100);
        }
      });
      j("#btn-team-leave").on("click", () => {
        if (window.history) {
          window.history.replaceState("", "", "/");
        }
        j("#news-block").css("display", "block");
        this.game?.free();
        this.teamMenu.leave();
      });
      const b = j("#news-current").data("date");
      const XT = new Date(b).getTime();
      j(".right-column-toggle").on("click", () => {
        if (this.newsDisplayed) {
          j("#news-wrapper").fadeOut(250);
          j("#pass-wrapper").fadeIn(250);
        } else {
          this.config.set("lastNewsTimestamp", XT);
          j(".news-toggle").find(".account-alert").css("display", "none");
          j("#news-wrapper").fadeIn(250);
          j("#pass-wrapper").fadeOut(250);
        }
        this.newsDisplayed = !this.newsDisplayed;
      });
      const XY = this.config.get("lastNewsTimestamp");
      if (XT > XY) {
        j(".news-toggle").find(".account-alert").css("display", "block");
      }
      this.setDOMFromConfig();
      this.setAppActive(true);
      const XC = document.querySelector("#cvs");
      const Xl = window.devicePixelRatio > 1 ? 2 : 1;
      if (k.os == "ios") {
        u.PRECISION_FRAGMENT = B.HIGH;
      }
      const Xd = XD => new V({
        width: window.innerWidth,
        height: window.innerHeight,
        view: XC,
        antialias: false,
        resolution: Xl,
        hello: true,
        forceCanvas: XD
      });
      let Xk = null;
      try {
        Xk = Xd(false);
      } catch {
        Xk = Xd(true);
      }
      this.pixi = Xk;
      this.pixi.renderer.events.destroy();
      this.pixi.ticker.add(this.update, this);
      this.pixi.renderer.background.color = 7378501;
      this.resourceManager = new mo(this.pixi.renderer, this.audioManager, this.config);
      this.resourceManager.loadMapAssets("main");
      this.input = new Ia(document.getElementById("game-touch-area"));
      this.inputBinds = new Cs(this.input, this.config);
      this.inputBindUi = new Ds(this.input, this.inputBinds);
      const XU = () => {
        this.loadoutDisplay.free();
        this.game.init();
        this.onResize();
        this.findGameAttempts = 0;
        this.ambience.onGameStart();
      };
      const XW = XD => {
        if (this.game.OSRLcj) {
          this.pass.scheduleUpdatePass(this.game.HTzAB);
        }
        this.game.free();
        this.errorMessage = this.localization.translate(XD || "");
        this.teamMenu.onGameComplete();
        this.ambience.onGameComplete(this.audioManager);
        this.setAppActive(true);
        this.setPlayLockout(false);
        if (XD == "index-invalid-protocol") {
          this.showInvalidProtocolModal();
        }
        if (this.config.get("ENV") === "CrazyGames") {
          window.CrazyGames.SDK.game.gameplayStop();
        } else if (this.config.get("ENV") === "POKI") {
          window.PokiSDK.gameplayStop();
        }
      };
      this.game = new Ts(this.pixi, this.audioManager, this.localization, this.config, this.input, this.inputBinds, this.inputBindUi, this.ambience, this.resourceManager, this.respawns, XU, XW);
      this.loadoutDisplay = new $o(this.pixi, this.audioManager, this.config, this.inputBinds, this.account);
      this.loadoutMenu.loadoutDisplay = this.loadoutDisplay;
      this.onResize();
      this.tryJoinTeam(this.config.get("ENV") === "CrazyGames" && window.CrazyGames.SDK.game.isInstantJoin);
      zt.setupModals(this.inputBinds, this.inputBindUi);
      this.onConfigModified();
      this.config.addModifiedListener(this.onConfigModified.bind(this));
      Ms();
    }
  }
  onUnload() {
    this.teamMenu.leave();
  }
  onResize() {
    k.onResize();
    zt.onResize();
    this.loadoutMenu.onResize();
    this.pixi?.renderer.resize(k.screenWidth, k.screenHeight);
    if (this.game?.initialized) {
      this.game.resize();
    }
    if (this.loadoutDisplay?.initialized) {
      this.loadoutDisplay.resize();
    }
    this.refreshUi();
  }
  startPingTest() {
    const p = this.config.get("regionSelected") ? [this.config.get("region")] : this.pingTest.getRegionList();
    this.pingTest.start(p);
  }
  setAppActive(p) {
    this.active = p;
    this.quickPlayPendingModeIdx = -1;
    this.refreshUi();
    if (p) {
      this.errorModal.hide();
    }
  }
  setPlayLockout(p) {
    const b = p ? 0 : 1000;
    this.playButtons.stop().delay(b).animate({
      opacity: p ? 0.5 : 1
    }, 250);
    this.playLoading.stop().delay(b).animate({
      opacity: p ? 1 : 0
    }, {
      duration: 250,
      start: () => {
        this.playLoading.css({
          "pointer-events": p ? "initial" : "none"
        });
      }
    });
  }
  onTeamMenuJoinGame(p) {
    this.waitOnAccount(() => {
      this.joinGame(p);
    });
  }
  onTeamMenuLeave(p = "") {
    if (p && p != "" && window.history) {
      window.history.replaceState("", "", "/");
    }
    this.errorMessage = p;
    this.setDOMFromConfig();
    this.refreshUi();
  }
  setConfigFromDOM() {
    const p = Q.sanitizeNameInput(this.nameInput.val());
    this.config.set("playerName", p);
    const b = this.serverSelect.find(":selected").val();
    this.config.set("region", b);
  }
  async setDOMFromConfig() {
    if (!this.config.get("playerName") && this.config.get("ENV") === "CrazyGames" && window.CrazyGames.SDK.user.isUserAccountAvailable) {
      const p = await window.CrazyGames.SDK.user.getUser();
      if (p) {
        const b = p.username;
        this.config.set("playerName", b);
      }
    }
    this.nameInput.val(this.config.get("playerName"));
    this.serverSelect.find("option").each((XT, XY) => {
      XY.selected = XY.value == this.config.get("region");
    });
    this.languageSelect.val(this.config.get("language"));
  }
  onConfigModified(p) {
    const b = this.config.get("muteAudio");
    if (b != this.audioManager.mute) {
      this.muteBtns.removeClass(b ? "audio-on-icon" : "audio-off-icon");
      this.muteBtns.addClass(b ? "audio-off-icon" : "audio-on-icon");
      this.audioManager.setMute(b);
    }
    const XT = this.config.get("masterVolume");
    this.masterSliders.val(XT * 100);
    this.audioManager.setMasterVolume(XT);
    const XY = this.config.get("soundVolume");
    this.soundSliders.val(XY * 100);
    this.audioManager.setSoundVolume(XY);
    const XC = this.config.get("musicVolume");
    this.musicSliders.val(XC * 100);
    this.audioManager.setMusicVolume(XC);
    if (p == "language") {
      const Xl = this.config.get("language");
      this.localization.setLocale(Xl);
    }
    if (p == "region") {
      this.config.set("regionSelected", true);
      this.startPingTest();
    }
    if (p == "highResTex") {
      location.reload();
    }
  }
  refreshUi() {
    this.startMenuWrapper.css("display", this.active ? "flex" : "none");
    this.gameAreaWrapper.css({
      display: this.active ? "none" : "block",
      opacity: this.active ? 0 : 1
    });
    if (this.active) {
      j("body").removeClass("user-select-none");
      document.removeEventListener("contextmenu", this.contextListener);
    } else {
      j("body").addClass("user-select-none");
      j("#start-main").stop(true);
      document.addEventListener("contextmenu", this.contextListener);
    }
    j("#ad-block-left").css("display", !k.isLandscape && this.teamMenu.active ? "none" : "block");
    const p = this.active && this.errorMessage != "";
    this.serverWarning.css({
      display: "block",
      opacity: p ? 1 : 0
    });
    this.serverWarning.html(this.errorMessage);
    const b = (XT, XY) => {
      XT.html(this.quickPlayPendingModeIdx === XY ? "<div class=\"ui-spinner\"></div>" : this.localization.translate(XT.data("l10n")));
    };
    b(this.playMode0Btn, 0);
    b(this.playMode1Btn, 1);
    b(this.playMode2Btn, 2);
  }
  waitOnAccount(p) {
    if (this.account.requestsInFlight == 0) {
      p();
    } else {
      const b = setTimeout(() => {
        XT();
      }, 2500);
      const XT = () => {
        p();
        clearTimeout(b);
        this.account.removeEventListener("requestsComplete", XT);
      };
      this.account.addEventListener("requestsComplete", XT);
    }
  }
  tryJoinTeam(p, b) {
    if (this.active && this.quickPlayPendingModeIdx === -1) {
      let XT = b || window.location.hash.slice(1);
      if (this.config.get("ENV") === "CrazyGames") {
        const XY = window.CrazyGames.SDK.game.getInviteParam("roomID");
        if (XY) {
          XT = XY;
          p = false;
        }
      }
      if (p || XT != "") {
        this.setConfigFromDOM();
        this.teamMenu.connect(p, XT);
        this.refreshUi();
        return true;
      }
    }
    return false;
  }
  tryQuickStartGame(p) {
    if (this.quickPlayPendingModeIdx === -1) {
      this.errorMessage = "";
      this.quickPlayPendingModeIdx = p;
      this.setConfigFromDOM();
      this.refreshUi();
      let b = 0;
      if (this.findGameAttempts > 0 && Date.now() - this.findGameTime < 30000) {
        b = Math.min(this.findGameAttempts * 2.5 * 1000, 7500);
      } else {
        this.findGameAttempts = 0;
      }
      this.findGameTime = Date.now();
      this.findGameAttempts++;
      const XT = L.protocolVersion;
      let XY = this.config.get("region");
      const XC = Q.getParameterByName("region");
      if (XC !== undefined && XC.length > 0) {
        XY = XC;
      }
      let Xl = this.pingTest.getZones(XY);
      const Xd = Q.getParameterByName("zone");
      if (Xd !== undefined && Xd.length > 0) {
        Xl = [Xd];
      }
      const Xk = {
        version: XT,
        region: XY,
        zones: Xl,
        playerCount: 1,
        autoFill: true,
        gameModeIdx: p
      };
      const XU = () => {
        this.waitOnAccount(() => {
          this.findGame(Xk, (XW, XD) => {
            if (XW) {
              this.onJoinGameError(XW);
              return;
            }
            this.joinGame(XD);
          });
        });
      };
      if (b == 0) {
        XU();
      } else {
        setTimeout(() => {
          XU();
        }, b);
      }
    }
  }
  findGame(p, b) {
    const XT = (XY, XC) => {
      if (XY >= XC) {
        b("full");
        return;
      }
      const Xl = function () {
        setTimeout(() => {
          XT(XY + 1, XC);
        }, 500);
      };
      function Xd(Xk) {
        j.ajax({
          type: "POST",
          url: Qe.resolveUrl("/api/find_game"),
          data: JSON.stringify({
            ...p,
            token: Xk
          }),
          contentType: "application/json; charset=utf-8",
          timeout: 10000,
          success: function (XU) {
            if (XU?.err && XU.err != "full") {
              b(XU.err);
              return;
            }
            const XW = XU?.res ? XU.res[0] : null;
            if (XW?.hosts && XW.addrs) {
              b(null, XW);
            } else {
              Xl();
            }
          },
          error: function (XU) {
            Xl();
          }
        });
      }
      if (this.siteInfo.info.captchaEnabled) {
        window.turnstile.render("#start-turnstile-container", {
          sitekey: "0x4AAAAAAAxkDXmFwymMPT0B",
          appearance: "interaction-only",
          callback: Xk => {
            Xd(Xk);
            window.turnstile.remove("#start-turnstile-container");
          }
        });
      } else {
        Xd("");
      }
    };
    XT(0, 2);
  }
  joinGame(p) {
    if (!this.game) {
      setTimeout(() => {
        this.joinGame(p);
      }, 250);
      return;
    }
    const b = p.hosts || [];
    const XT = [];
    for (let XC = 0; XC < b.length; XC++) {
      XT.push("ws" + (p.useHttps ? "s" : "") + "://" + b[XC] + "/play?gameId=" + p.gameId);
    }
    const XY = (Xl, Xd) => {
      const Xk = Xl.shift();
      if (!Xk) {
        this.onJoinGameError("join_game_failed");
        return;
      }
      const XU = function () {
        XY(Xl, Xd);
      };
      this.game.tryJoinGame(Xk, Xd.data, this.account.loadoutPriv, this.account.questPriv, XU);
    };
    XY(XT, p);
  }
  onJoinGameError(p) {
    const b = {
      full: this.localization.translate("index-failed-finding-game"),
      invalid_protocol: this.localization.translate("index-invalid-protocol"),
      join_game_failed: this.localization.translate("index-failed-joining-game")
    };
    if (p == "invalid_protocol") {
      this.showInvalidProtocolModal();
    }
    this.errorMessage = b[p] || b.full;
    this.quickPlayPendingModeIdx = -1;
    this.teamMenu.leave("join_game_failed");
    this.refreshUi();
  }
  showInvalidProtocolModal() {
    this.refreshModal.show(true);
  }
  update() {
    const p = e.clamp(this.pixi.ticker.elapsedMS / 1000, 0.001, 0.125);
    this.pingTest.update(p);
    if (!this.checkedPingTest && this.pingTest.isComplete()) {
      if (!this.config.get("regionSelected")) {
        const b = this.pingTest.getRegion();
        if (b) {
          this.config.set("region", b);
          this.setDOMFromConfig();
        }
      }
      this.checkedPingTest = true;
    }
    this.resourceManager.update(p);
    this.audioManager.update(p);
    this.ambience.update(p, this.audioManager, !this.active);
    this.teamMenu.update(p);
    if (this.game?.initialized && this.game.ONPnmU) {
      if (this.active) {
        this.setAppActive(false);
        this.setPlayLockout(true);
      }
      this.game.update(p);
    }
    if (this.active && this.loadoutDisplay && this.game && !this.game.initialized) {
      if (this.loadoutMenu.active) {
        if (!this.loadoutDisplay.initialized) {
          this.loadoutDisplay.init();
        }
        this.loadoutDisplay.show();
        this.loadoutDisplay.update(p, this.hasFocus);
      } else {
        this.loadoutDisplay.hide();
      }
    }
    if (!this.active && this.loadoutMenu.active) {
      this.loadoutMenu.hide();
    }
    if (this.active) {
      this.pass?.update(p);
    }
    this.input.flush();
  }
}
const ze = new Ko();
function cr() {
  ze.domContentLoaded = true;
  ze.tryLoad();
}
document.addEventListener("DOMContentLoaded", cr);
window.addEventListener("load", cr);
window.addEventListener("unload", p => {
  ze.onUnload();
});
if (window.location.hash == "#_=_") {
  window.location.hash = "";
  history.pushState("", document.title, window.location.pathname);
}
window.addEventListener("resize", () => {
  ze.onResize();
});
window.addEventListener("orientationchange", () => {
  ze.onResize();
});
window.addEventListener("hashchange", () => {
  ze.tryJoinTeam(false);
});
window.addEventListener("beforeunload", p => {
  if (ze.game?.warnPageReload()) {
    const b = "Do you want to reload the game?";
    p.returnValue = b;
    return b;
  }
});
window.addEventListener("onfocus", () => {
  ze.hasFocus = true;
});
window.addEventListener("onblur", () => {
  ze.hasFocus = false;
});
const Ri = [];
window.onerror = function (p, b, XT, XY, XC) {
  p = p || "undefined_error_msg";
  const Xl = XC ? XC.stack : "";
  const Xd = {
    msg: p,
    id: ze.sessionId,
    url: b,
    line: XT,
    column: XY,
    stacktrace: Xl,
    browser: navigator.userAgent,
    protocol: L.protocolVersion,
    clientGitVersion: "2d886cd8e7e64efc5e9ce1504c823394c592f55e",
    serverGitVersion: ze.siteInfo.info.gitRevision
  };
  const Xk = JSON.stringify(Xd);
  if (!Ri.includes(Xk)) {
    Ri.push(Xk);
    console.error("windowOnError", Xk);
  }
};
navigator.serviceWorker?.getRegistrations().then(p => {
  for (const b of p) {
    b.unregister();
  }
});
